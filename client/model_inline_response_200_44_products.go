/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 07 February, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.43.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse20044Products The network devices to be updated
type InlineResponse20044Products struct {
	Switch *InlineResponse20044ProductsSwitch `json:"switch,omitempty"`
}

// NewInlineResponse20044Products instantiates a new InlineResponse20044Products object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20044Products() *InlineResponse20044Products {
	this := InlineResponse20044Products{}
	return &this
}

// NewInlineResponse20044ProductsWithDefaults instantiates a new InlineResponse20044Products object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20044ProductsWithDefaults() *InlineResponse20044Products {
	this := InlineResponse20044Products{}
	return &this
}

// GetSwitch returns the Switch field value if set, zero value otherwise.
func (o *InlineResponse20044Products) GetSwitch() InlineResponse20044ProductsSwitch {
	if o == nil || isNil(o.Switch) {
		var ret InlineResponse20044ProductsSwitch
		return ret
	}
	return *o.Switch
}

// GetSwitchOk returns a tuple with the Switch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20044Products) GetSwitchOk() (*InlineResponse20044ProductsSwitch, bool) {
	if o == nil || isNil(o.Switch) {
    return nil, false
	}
	return o.Switch, true
}

// HasSwitch returns a boolean if a field has been set.
func (o *InlineResponse20044Products) HasSwitch() bool {
	if o != nil && !isNil(o.Switch) {
		return true
	}

	return false
}

// SetSwitch gets a reference to the given InlineResponse20044ProductsSwitch and assigns it to the Switch field.
func (o *InlineResponse20044Products) SetSwitch(v InlineResponse20044ProductsSwitch) {
	o.Switch = &v
}

func (o InlineResponse20044Products) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Switch) {
		toSerialize["switch"] = o.Switch
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20044Products struct {
	value *InlineResponse20044Products
	isSet bool
}

func (v NullableInlineResponse20044Products) Get() *InlineResponse20044Products {
	return v.value
}

func (v *NullableInlineResponse20044Products) Set(val *InlineResponse20044Products) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20044Products) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20044Products) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20044Products(val *InlineResponse20044Products) *NullableInlineResponse20044Products {
	return &NullableInlineResponse20044Products{value: val, isSet: true}
}

func (v NullableInlineResponse20044Products) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20044Products) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


