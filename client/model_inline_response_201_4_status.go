/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 07 June, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.34.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse2014Status Status of action batch
type InlineResponse2014Status struct {
	// Flag describing whether all actions in the action batch have completed
	Completed *bool `json:"completed,omitempty"`
	// Flag describing whether any actions in the action batch failed
	Failed *bool `json:"failed,omitempty"`
	// List of errors encountered when running actions in the action batch
	Errors []string `json:"errors,omitempty"`
	// Resources created as a result of this action batch
	CreatedResources []InlineResponse2014StatusCreatedResources `json:"createdResources"`
}

// NewInlineResponse2014Status instantiates a new InlineResponse2014Status object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse2014Status(createdResources []InlineResponse2014StatusCreatedResources) *InlineResponse2014Status {
	this := InlineResponse2014Status{}
	this.CreatedResources = createdResources
	return &this
}

// NewInlineResponse2014StatusWithDefaults instantiates a new InlineResponse2014Status object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse2014StatusWithDefaults() *InlineResponse2014Status {
	this := InlineResponse2014Status{}
	return &this
}

// GetCompleted returns the Completed field value if set, zero value otherwise.
func (o *InlineResponse2014Status) GetCompleted() bool {
	if o == nil || isNil(o.Completed) {
		var ret bool
		return ret
	}
	return *o.Completed
}

// GetCompletedOk returns a tuple with the Completed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2014Status) GetCompletedOk() (*bool, bool) {
	if o == nil || isNil(o.Completed) {
    return nil, false
	}
	return o.Completed, true
}

// HasCompleted returns a boolean if a field has been set.
func (o *InlineResponse2014Status) HasCompleted() bool {
	if o != nil && !isNil(o.Completed) {
		return true
	}

	return false
}

// SetCompleted gets a reference to the given bool and assigns it to the Completed field.
func (o *InlineResponse2014Status) SetCompleted(v bool) {
	o.Completed = &v
}

// GetFailed returns the Failed field value if set, zero value otherwise.
func (o *InlineResponse2014Status) GetFailed() bool {
	if o == nil || isNil(o.Failed) {
		var ret bool
		return ret
	}
	return *o.Failed
}

// GetFailedOk returns a tuple with the Failed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2014Status) GetFailedOk() (*bool, bool) {
	if o == nil || isNil(o.Failed) {
    return nil, false
	}
	return o.Failed, true
}

// HasFailed returns a boolean if a field has been set.
func (o *InlineResponse2014Status) HasFailed() bool {
	if o != nil && !isNil(o.Failed) {
		return true
	}

	return false
}

// SetFailed gets a reference to the given bool and assigns it to the Failed field.
func (o *InlineResponse2014Status) SetFailed(v bool) {
	o.Failed = &v
}

// GetErrors returns the Errors field value if set, zero value otherwise.
func (o *InlineResponse2014Status) GetErrors() []string {
	if o == nil || isNil(o.Errors) {
		var ret []string
		return ret
	}
	return o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2014Status) GetErrorsOk() ([]string, bool) {
	if o == nil || isNil(o.Errors) {
    return nil, false
	}
	return o.Errors, true
}

// HasErrors returns a boolean if a field has been set.
func (o *InlineResponse2014Status) HasErrors() bool {
	if o != nil && !isNil(o.Errors) {
		return true
	}

	return false
}

// SetErrors gets a reference to the given []string and assigns it to the Errors field.
func (o *InlineResponse2014Status) SetErrors(v []string) {
	o.Errors = v
}

// GetCreatedResources returns the CreatedResources field value
func (o *InlineResponse2014Status) GetCreatedResources() []InlineResponse2014StatusCreatedResources {
	if o == nil {
		var ret []InlineResponse2014StatusCreatedResources
		return ret
	}

	return o.CreatedResources
}

// GetCreatedResourcesOk returns a tuple with the CreatedResources field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2014Status) GetCreatedResourcesOk() ([]InlineResponse2014StatusCreatedResources, bool) {
	if o == nil {
    return nil, false
	}
	return o.CreatedResources, true
}

// SetCreatedResources sets field value
func (o *InlineResponse2014Status) SetCreatedResources(v []InlineResponse2014StatusCreatedResources) {
	o.CreatedResources = v
}

func (o InlineResponse2014Status) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Completed) {
		toSerialize["completed"] = o.Completed
	}
	if !isNil(o.Failed) {
		toSerialize["failed"] = o.Failed
	}
	if !isNil(o.Errors) {
		toSerialize["errors"] = o.Errors
	}
	if true {
		toSerialize["createdResources"] = o.CreatedResources
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse2014Status struct {
	value *InlineResponse2014Status
	isSet bool
}

func (v NullableInlineResponse2014Status) Get() *InlineResponse2014Status {
	return v.value
}

func (v *NullableInlineResponse2014Status) Set(val *InlineResponse2014Status) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse2014Status) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse2014Status) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse2014Status(val *InlineResponse2014Status) *NullableInlineResponse2014Status {
	return &NullableInlineResponse2014Status{value: val, isSet: true}
}

func (v NullableInlineResponse2014Status) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse2014Status) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


