/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 03 April, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.45.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse207Devices The devices involved in the swap
type InlineResponse207Devices struct {
	Old InlineResponse207DevicesOld `json:"old"`
	New InlineResponse207DevicesNew `json:"new"`
}

// NewInlineResponse207Devices instantiates a new InlineResponse207Devices object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse207Devices(old InlineResponse207DevicesOld, new InlineResponse207DevicesNew) *InlineResponse207Devices {
	this := InlineResponse207Devices{}
	this.Old = old
	this.New = new
	return &this
}

// NewInlineResponse207DevicesWithDefaults instantiates a new InlineResponse207Devices object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse207DevicesWithDefaults() *InlineResponse207Devices {
	this := InlineResponse207Devices{}
	return &this
}

// GetOld returns the Old field value
func (o *InlineResponse207Devices) GetOld() InlineResponse207DevicesOld {
	if o == nil {
		var ret InlineResponse207DevicesOld
		return ret
	}

	return o.Old
}

// GetOldOk returns a tuple with the Old field value
// and a boolean to check if the value has been set.
func (o *InlineResponse207Devices) GetOldOk() (*InlineResponse207DevicesOld, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Old, true
}

// SetOld sets field value
func (o *InlineResponse207Devices) SetOld(v InlineResponse207DevicesOld) {
	o.Old = v
}

// GetNew returns the New field value
func (o *InlineResponse207Devices) GetNew() InlineResponse207DevicesNew {
	if o == nil {
		var ret InlineResponse207DevicesNew
		return ret
	}

	return o.New
}

// GetNewOk returns a tuple with the New field value
// and a boolean to check if the value has been set.
func (o *InlineResponse207Devices) GetNewOk() (*InlineResponse207DevicesNew, bool) {
	if o == nil {
    return nil, false
	}
	return &o.New, true
}

// SetNew sets field value
func (o *InlineResponse207Devices) SetNew(v InlineResponse207DevicesNew) {
	o.New = v
}

func (o InlineResponse207Devices) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["old"] = o.Old
	}
	if true {
		toSerialize["new"] = o.New
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse207Devices struct {
	value *InlineResponse207Devices
	isSet bool
}

func (v NullableInlineResponse207Devices) Get() *InlineResponse207Devices {
	return v.value
}

func (v *NullableInlineResponse207Devices) Set(val *InlineResponse207Devices) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse207Devices) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse207Devices) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse207Devices(val *InlineResponse207Devices) *NullableInlineResponse207Devices {
	return &NullableInlineResponse207Devices{value: val, isSet: true}
}

func (v NullableInlineResponse207Devices) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse207Devices) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


