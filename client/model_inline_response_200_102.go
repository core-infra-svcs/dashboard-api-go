/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 04 June, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.59.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200102 struct for InlineResponse200102
type InlineResponse200102 struct {
	// The newly created jobs
	Jobs []InlineResponse200102Jobs `json:"jobs,omitempty"`
}

// NewInlineResponse200102 instantiates a new InlineResponse200102 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200102() *InlineResponse200102 {
	this := InlineResponse200102{}
	return &this
}

// NewInlineResponse200102WithDefaults instantiates a new InlineResponse200102 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200102WithDefaults() *InlineResponse200102 {
	this := InlineResponse200102{}
	return &this
}

// GetJobs returns the Jobs field value if set, zero value otherwise.
func (o *InlineResponse200102) GetJobs() []InlineResponse200102Jobs {
	if o == nil || isNil(o.Jobs) {
		var ret []InlineResponse200102Jobs
		return ret
	}
	return o.Jobs
}

// GetJobsOk returns a tuple with the Jobs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200102) GetJobsOk() ([]InlineResponse200102Jobs, bool) {
	if o == nil || isNil(o.Jobs) {
    return nil, false
	}
	return o.Jobs, true
}

// HasJobs returns a boolean if a field has been set.
func (o *InlineResponse200102) HasJobs() bool {
	if o != nil && !isNil(o.Jobs) {
		return true
	}

	return false
}

// SetJobs gets a reference to the given []InlineResponse200102Jobs and assigns it to the Jobs field.
func (o *InlineResponse200102) SetJobs(v []InlineResponse200102Jobs) {
	o.Jobs = v
}

func (o InlineResponse200102) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Jobs) {
		toSerialize["jobs"] = o.Jobs
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200102 struct {
	value *InlineResponse200102
	isSet bool
}

func (v NullableInlineResponse200102) Get() *InlineResponse200102 {
	return v.value
}

func (v *NullableInlineResponse200102) Set(val *InlineResponse200102) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200102) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200102) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200102(val *InlineResponse200102) *NullableInlineResponse200102 {
	return &NullableInlineResponse200102{value: val, isSet: true}
}

func (v NullableInlineResponse200102) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200102) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


