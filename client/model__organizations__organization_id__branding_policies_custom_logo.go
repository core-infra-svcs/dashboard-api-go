/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 02 November, 2022 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.27.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// OrganizationsOrganizationIdBrandingPoliciesCustomLogo Properties describing the custom logo attached to the branding policy.
type OrganizationsOrganizationIdBrandingPoliciesCustomLogo struct {
	// Whether or not there is a custom logo enabled.
	Enabled *bool `json:"enabled,omitempty"`
	// Properties for setting the image.
	Image map[string]interface{} `json:"image,omitempty"`
	// The file contents (a base 64 encoded string) of your new logo.
	Contents *string `json:"contents,omitempty"`
	// The format of the encoded contents.  Supported formats are 'png', 'gif', and jpg'. Note that all images are saved as PNG files, regardless of the format they are uploaded in.
	Format *string `json:"format,omitempty"`
}

// NewOrganizationsOrganizationIdBrandingPoliciesCustomLogo instantiates a new OrganizationsOrganizationIdBrandingPoliciesCustomLogo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationsOrganizationIdBrandingPoliciesCustomLogo() *OrganizationsOrganizationIdBrandingPoliciesCustomLogo {
	this := OrganizationsOrganizationIdBrandingPoliciesCustomLogo{}
	return &this
}

// NewOrganizationsOrganizationIdBrandingPoliciesCustomLogoWithDefaults instantiates a new OrganizationsOrganizationIdBrandingPoliciesCustomLogo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationsOrganizationIdBrandingPoliciesCustomLogoWithDefaults() *OrganizationsOrganizationIdBrandingPoliciesCustomLogo {
	this := OrganizationsOrganizationIdBrandingPoliciesCustomLogo{}
	return &this
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *OrganizationsOrganizationIdBrandingPoliciesCustomLogo) GetEnabled() bool {
	if o == nil || isNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationsOrganizationIdBrandingPoliciesCustomLogo) GetEnabledOk() (*bool, bool) {
	if o == nil || isNil(o.Enabled) {
    return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *OrganizationsOrganizationIdBrandingPoliciesCustomLogo) HasEnabled() bool {
	if o != nil && !isNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *OrganizationsOrganizationIdBrandingPoliciesCustomLogo) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetImage returns the Image field value if set, zero value otherwise.
func (o *OrganizationsOrganizationIdBrandingPoliciesCustomLogo) GetImage() map[string]interface{} {
	if o == nil || isNil(o.Image) {
		var ret map[string]interface{}
		return ret
	}
	return o.Image
}

// GetImageOk returns a tuple with the Image field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationsOrganizationIdBrandingPoliciesCustomLogo) GetImageOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.Image) {
    return map[string]interface{}{}, false
	}
	return o.Image, true
}

// HasImage returns a boolean if a field has been set.
func (o *OrganizationsOrganizationIdBrandingPoliciesCustomLogo) HasImage() bool {
	if o != nil && !isNil(o.Image) {
		return true
	}

	return false
}

// SetImage gets a reference to the given map[string]interface{} and assigns it to the Image field.
func (o *OrganizationsOrganizationIdBrandingPoliciesCustomLogo) SetImage(v map[string]interface{}) {
	o.Image = v
}

// GetContents returns the Contents field value if set, zero value otherwise.
func (o *OrganizationsOrganizationIdBrandingPoliciesCustomLogo) GetContents() string {
	if o == nil || isNil(o.Contents) {
		var ret string
		return ret
	}
	return *o.Contents
}

// GetContentsOk returns a tuple with the Contents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationsOrganizationIdBrandingPoliciesCustomLogo) GetContentsOk() (*string, bool) {
	if o == nil || isNil(o.Contents) {
    return nil, false
	}
	return o.Contents, true
}

// HasContents returns a boolean if a field has been set.
func (o *OrganizationsOrganizationIdBrandingPoliciesCustomLogo) HasContents() bool {
	if o != nil && !isNil(o.Contents) {
		return true
	}

	return false
}

// SetContents gets a reference to the given string and assigns it to the Contents field.
func (o *OrganizationsOrganizationIdBrandingPoliciesCustomLogo) SetContents(v string) {
	o.Contents = &v
}

// GetFormat returns the Format field value if set, zero value otherwise.
func (o *OrganizationsOrganizationIdBrandingPoliciesCustomLogo) GetFormat() string {
	if o == nil || isNil(o.Format) {
		var ret string
		return ret
	}
	return *o.Format
}

// GetFormatOk returns a tuple with the Format field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationsOrganizationIdBrandingPoliciesCustomLogo) GetFormatOk() (*string, bool) {
	if o == nil || isNil(o.Format) {
    return nil, false
	}
	return o.Format, true
}

// HasFormat returns a boolean if a field has been set.
func (o *OrganizationsOrganizationIdBrandingPoliciesCustomLogo) HasFormat() bool {
	if o != nil && !isNil(o.Format) {
		return true
	}

	return false
}

// SetFormat gets a reference to the given string and assigns it to the Format field.
func (o *OrganizationsOrganizationIdBrandingPoliciesCustomLogo) SetFormat(v string) {
	o.Format = &v
}

func (o OrganizationsOrganizationIdBrandingPoliciesCustomLogo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !isNil(o.Image) {
		toSerialize["image"] = o.Image
	}
	if !isNil(o.Contents) {
		toSerialize["contents"] = o.Contents
	}
	if !isNil(o.Format) {
		toSerialize["format"] = o.Format
	}
	return json.Marshal(toSerialize)
}

type NullableOrganizationsOrganizationIdBrandingPoliciesCustomLogo struct {
	value *OrganizationsOrganizationIdBrandingPoliciesCustomLogo
	isSet bool
}

func (v NullableOrganizationsOrganizationIdBrandingPoliciesCustomLogo) Get() *OrganizationsOrganizationIdBrandingPoliciesCustomLogo {
	return v.value
}

func (v *NullableOrganizationsOrganizationIdBrandingPoliciesCustomLogo) Set(val *OrganizationsOrganizationIdBrandingPoliciesCustomLogo) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationsOrganizationIdBrandingPoliciesCustomLogo) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationsOrganizationIdBrandingPoliciesCustomLogo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationsOrganizationIdBrandingPoliciesCustomLogo(val *OrganizationsOrganizationIdBrandingPoliciesCustomLogo) *NullableOrganizationsOrganizationIdBrandingPoliciesCustomLogo {
	return &NullableOrganizationsOrganizationIdBrandingPoliciesCustomLogo{value: val, isSet: true}
}

func (v NullableOrganizationsOrganizationIdBrandingPoliciesCustomLogo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationsOrganizationIdBrandingPoliciesCustomLogo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


