/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 02 July, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.60.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// OrganizationsOrganizationIdWirelessDevicesRadsecCertificatesAuthoritiesItems struct for OrganizationsOrganizationIdWirelessDevicesRadsecCertificatesAuthoritiesItems
type OrganizationsOrganizationIdWirelessDevicesRadsecCertificatesAuthoritiesItems struct {
	// The ID of the Certificate Authority
	CertificateAuthorityId *string `json:"certificateAuthorityId,omitempty"`
	// The status of the Certificate Authority
	Status *string `json:"status,omitempty"`
	// The PEM encoded contents of the Certificate Authority - with newlines as \" \".           Contents can be null, if the cert has not yet been generated.
	Contents *string `json:"contents,omitempty"`
}

// NewOrganizationsOrganizationIdWirelessDevicesRadsecCertificatesAuthoritiesItems instantiates a new OrganizationsOrganizationIdWirelessDevicesRadsecCertificatesAuthoritiesItems object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationsOrganizationIdWirelessDevicesRadsecCertificatesAuthoritiesItems() *OrganizationsOrganizationIdWirelessDevicesRadsecCertificatesAuthoritiesItems {
	this := OrganizationsOrganizationIdWirelessDevicesRadsecCertificatesAuthoritiesItems{}
	return &this
}

// NewOrganizationsOrganizationIdWirelessDevicesRadsecCertificatesAuthoritiesItemsWithDefaults instantiates a new OrganizationsOrganizationIdWirelessDevicesRadsecCertificatesAuthoritiesItems object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationsOrganizationIdWirelessDevicesRadsecCertificatesAuthoritiesItemsWithDefaults() *OrganizationsOrganizationIdWirelessDevicesRadsecCertificatesAuthoritiesItems {
	this := OrganizationsOrganizationIdWirelessDevicesRadsecCertificatesAuthoritiesItems{}
	return &this
}

// GetCertificateAuthorityId returns the CertificateAuthorityId field value if set, zero value otherwise.
func (o *OrganizationsOrganizationIdWirelessDevicesRadsecCertificatesAuthoritiesItems) GetCertificateAuthorityId() string {
	if o == nil || isNil(o.CertificateAuthorityId) {
		var ret string
		return ret
	}
	return *o.CertificateAuthorityId
}

// GetCertificateAuthorityIdOk returns a tuple with the CertificateAuthorityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationsOrganizationIdWirelessDevicesRadsecCertificatesAuthoritiesItems) GetCertificateAuthorityIdOk() (*string, bool) {
	if o == nil || isNil(o.CertificateAuthorityId) {
    return nil, false
	}
	return o.CertificateAuthorityId, true
}

// HasCertificateAuthorityId returns a boolean if a field has been set.
func (o *OrganizationsOrganizationIdWirelessDevicesRadsecCertificatesAuthoritiesItems) HasCertificateAuthorityId() bool {
	if o != nil && !isNil(o.CertificateAuthorityId) {
		return true
	}

	return false
}

// SetCertificateAuthorityId gets a reference to the given string and assigns it to the CertificateAuthorityId field.
func (o *OrganizationsOrganizationIdWirelessDevicesRadsecCertificatesAuthoritiesItems) SetCertificateAuthorityId(v string) {
	o.CertificateAuthorityId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *OrganizationsOrganizationIdWirelessDevicesRadsecCertificatesAuthoritiesItems) GetStatus() string {
	if o == nil || isNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationsOrganizationIdWirelessDevicesRadsecCertificatesAuthoritiesItems) GetStatusOk() (*string, bool) {
	if o == nil || isNil(o.Status) {
    return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *OrganizationsOrganizationIdWirelessDevicesRadsecCertificatesAuthoritiesItems) HasStatus() bool {
	if o != nil && !isNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *OrganizationsOrganizationIdWirelessDevicesRadsecCertificatesAuthoritiesItems) SetStatus(v string) {
	o.Status = &v
}

// GetContents returns the Contents field value if set, zero value otherwise.
func (o *OrganizationsOrganizationIdWirelessDevicesRadsecCertificatesAuthoritiesItems) GetContents() string {
	if o == nil || isNil(o.Contents) {
		var ret string
		return ret
	}
	return *o.Contents
}

// GetContentsOk returns a tuple with the Contents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationsOrganizationIdWirelessDevicesRadsecCertificatesAuthoritiesItems) GetContentsOk() (*string, bool) {
	if o == nil || isNil(o.Contents) {
    return nil, false
	}
	return o.Contents, true
}

// HasContents returns a boolean if a field has been set.
func (o *OrganizationsOrganizationIdWirelessDevicesRadsecCertificatesAuthoritiesItems) HasContents() bool {
	if o != nil && !isNil(o.Contents) {
		return true
	}

	return false
}

// SetContents gets a reference to the given string and assigns it to the Contents field.
func (o *OrganizationsOrganizationIdWirelessDevicesRadsecCertificatesAuthoritiesItems) SetContents(v string) {
	o.Contents = &v
}

func (o OrganizationsOrganizationIdWirelessDevicesRadsecCertificatesAuthoritiesItems) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.CertificateAuthorityId) {
		toSerialize["certificateAuthorityId"] = o.CertificateAuthorityId
	}
	if !isNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !isNil(o.Contents) {
		toSerialize["contents"] = o.Contents
	}
	return json.Marshal(toSerialize)
}

type NullableOrganizationsOrganizationIdWirelessDevicesRadsecCertificatesAuthoritiesItems struct {
	value *OrganizationsOrganizationIdWirelessDevicesRadsecCertificatesAuthoritiesItems
	isSet bool
}

func (v NullableOrganizationsOrganizationIdWirelessDevicesRadsecCertificatesAuthoritiesItems) Get() *OrganizationsOrganizationIdWirelessDevicesRadsecCertificatesAuthoritiesItems {
	return v.value
}

func (v *NullableOrganizationsOrganizationIdWirelessDevicesRadsecCertificatesAuthoritiesItems) Set(val *OrganizationsOrganizationIdWirelessDevicesRadsecCertificatesAuthoritiesItems) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationsOrganizationIdWirelessDevicesRadsecCertificatesAuthoritiesItems) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationsOrganizationIdWirelessDevicesRadsecCertificatesAuthoritiesItems) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationsOrganizationIdWirelessDevicesRadsecCertificatesAuthoritiesItems(val *OrganizationsOrganizationIdWirelessDevicesRadsecCertificatesAuthoritiesItems) *NullableOrganizationsOrganizationIdWirelessDevicesRadsecCertificatesAuthoritiesItems {
	return &NullableOrganizationsOrganizationIdWirelessDevicesRadsecCertificatesAuthoritiesItems{value: val, isSet: true}
}

func (v NullableOrganizationsOrganizationIdWirelessDevicesRadsecCertificatesAuthoritiesItems) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationsOrganizationIdWirelessDevicesRadsecCertificatesAuthoritiesItems) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


