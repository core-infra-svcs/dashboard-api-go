/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 03 May, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.33.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineObject99 struct for InlineObject99
type InlineObject99 struct {
	// The ids of the devices to attempt activation lock bypass.
	Ids []string `json:"ids"`
}

// NewInlineObject99 instantiates a new InlineObject99 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject99(ids []string) *InlineObject99 {
	this := InlineObject99{}
	this.Ids = ids
	return &this
}

// NewInlineObject99WithDefaults instantiates a new InlineObject99 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject99WithDefaults() *InlineObject99 {
	this := InlineObject99{}
	return &this
}

// GetIds returns the Ids field value
func (o *InlineObject99) GetIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Ids
}

// GetIdsOk returns a tuple with the Ids field value
// and a boolean to check if the value has been set.
func (o *InlineObject99) GetIdsOk() ([]string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Ids, true
}

// SetIds sets field value
func (o *InlineObject99) SetIds(v []string) {
	o.Ids = v
}

func (o InlineObject99) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["ids"] = o.Ids
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject99 struct {
	value *InlineObject99
	isSet bool
}

func (v NullableInlineObject99) Get() *InlineObject99 {
	return v.value
}

func (v *NullableInlineObject99) Set(val *InlineObject99) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject99) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject99) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject99(val *InlineObject99) *NullableInlineObject99 {
	return &NullableInlineObject99{value: val, isSet: true}
}

func (v NullableInlineObject99) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject99) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


