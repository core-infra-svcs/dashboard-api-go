/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 04 September, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.50.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200303 struct for InlineResponse200303
type InlineResponse200303 struct {
	// List of rules
	Items []InlineResponse200303Items `json:"items,omitempty"`
	Meta *InlineResponse200303Meta `json:"meta,omitempty"`
}

// NewInlineResponse200303 instantiates a new InlineResponse200303 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200303() *InlineResponse200303 {
	this := InlineResponse200303{}
	return &this
}

// NewInlineResponse200303WithDefaults instantiates a new InlineResponse200303 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200303WithDefaults() *InlineResponse200303 {
	this := InlineResponse200303{}
	return &this
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *InlineResponse200303) GetItems() []InlineResponse200303Items {
	if o == nil || isNil(o.Items) {
		var ret []InlineResponse200303Items
		return ret
	}
	return o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200303) GetItemsOk() ([]InlineResponse200303Items, bool) {
	if o == nil || isNil(o.Items) {
    return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *InlineResponse200303) HasItems() bool {
	if o != nil && !isNil(o.Items) {
		return true
	}

	return false
}

// SetItems gets a reference to the given []InlineResponse200303Items and assigns it to the Items field.
func (o *InlineResponse200303) SetItems(v []InlineResponse200303Items) {
	o.Items = v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *InlineResponse200303) GetMeta() InlineResponse200303Meta {
	if o == nil || isNil(o.Meta) {
		var ret InlineResponse200303Meta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200303) GetMetaOk() (*InlineResponse200303Meta, bool) {
	if o == nil || isNil(o.Meta) {
    return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *InlineResponse200303) HasMeta() bool {
	if o != nil && !isNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given InlineResponse200303Meta and assigns it to the Meta field.
func (o *InlineResponse200303) SetMeta(v InlineResponse200303Meta) {
	o.Meta = &v
}

func (o InlineResponse200303) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Items) {
		toSerialize["items"] = o.Items
	}
	if !isNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200303 struct {
	value *InlineResponse200303
	isSet bool
}

func (v NullableInlineResponse200303) Get() *InlineResponse200303 {
	return v.value
}

func (v *NullableInlineResponse200303) Set(val *InlineResponse200303) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200303) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200303) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200303(val *InlineResponse200303) *NullableInlineResponse200303 {
	return &NullableInlineResponse200303{value: val, isSet: true}
}

func (v NullableInlineResponse200303) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200303) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


