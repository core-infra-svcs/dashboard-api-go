/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 03 July, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.48.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineObject230 struct for InlineObject230
type InlineObject230 struct {
	// Short name of the early access feature
	ShortName string `json:"shortName"`
	// A list of network IDs to apply the opt-in to
	LimitScopeToNetworks []string `json:"limitScopeToNetworks,omitempty"`
}

// NewInlineObject230 instantiates a new InlineObject230 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject230(shortName string) *InlineObject230 {
	this := InlineObject230{}
	this.ShortName = shortName
	return &this
}

// NewInlineObject230WithDefaults instantiates a new InlineObject230 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject230WithDefaults() *InlineObject230 {
	this := InlineObject230{}
	return &this
}

// GetShortName returns the ShortName field value
func (o *InlineObject230) GetShortName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ShortName
}

// GetShortNameOk returns a tuple with the ShortName field value
// and a boolean to check if the value has been set.
func (o *InlineObject230) GetShortNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.ShortName, true
}

// SetShortName sets field value
func (o *InlineObject230) SetShortName(v string) {
	o.ShortName = v
}

// GetLimitScopeToNetworks returns the LimitScopeToNetworks field value if set, zero value otherwise.
func (o *InlineObject230) GetLimitScopeToNetworks() []string {
	if o == nil || isNil(o.LimitScopeToNetworks) {
		var ret []string
		return ret
	}
	return o.LimitScopeToNetworks
}

// GetLimitScopeToNetworksOk returns a tuple with the LimitScopeToNetworks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject230) GetLimitScopeToNetworksOk() ([]string, bool) {
	if o == nil || isNil(o.LimitScopeToNetworks) {
    return nil, false
	}
	return o.LimitScopeToNetworks, true
}

// HasLimitScopeToNetworks returns a boolean if a field has been set.
func (o *InlineObject230) HasLimitScopeToNetworks() bool {
	if o != nil && !isNil(o.LimitScopeToNetworks) {
		return true
	}

	return false
}

// SetLimitScopeToNetworks gets a reference to the given []string and assigns it to the LimitScopeToNetworks field.
func (o *InlineObject230) SetLimitScopeToNetworks(v []string) {
	o.LimitScopeToNetworks = v
}

func (o InlineObject230) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["shortName"] = o.ShortName
	}
	if !isNil(o.LimitScopeToNetworks) {
		toSerialize["limitScopeToNetworks"] = o.LimitScopeToNetworks
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject230 struct {
	value *InlineObject230
	isSet bool
}

func (v NullableInlineObject230) Get() *InlineObject230 {
	return v.value
}

func (v *NullableInlineObject230) Set(val *InlineObject230) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject230) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject230) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject230(val *InlineObject230) *NullableInlineObject230 {
	return &NullableInlineObject230{value: val, isSet: true}
}

func (v NullableInlineObject230) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject230) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


