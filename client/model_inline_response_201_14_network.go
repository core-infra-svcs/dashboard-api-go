/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 06 August, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.61.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse20114Network Network details
type InlineResponse20114Network struct {
	// Network ID
	Id *string `json:"id,omitempty"`
	// Network name
	Name *string `json:"name,omitempty"`
}

// NewInlineResponse20114Network instantiates a new InlineResponse20114Network object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20114Network() *InlineResponse20114Network {
	this := InlineResponse20114Network{}
	return &this
}

// NewInlineResponse20114NetworkWithDefaults instantiates a new InlineResponse20114Network object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20114NetworkWithDefaults() *InlineResponse20114Network {
	this := InlineResponse20114Network{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *InlineResponse20114Network) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20114Network) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *InlineResponse20114Network) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *InlineResponse20114Network) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *InlineResponse20114Network) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20114Network) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
    return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *InlineResponse20114Network) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *InlineResponse20114Network) SetName(v string) {
	o.Name = &v
}

func (o InlineResponse20114Network) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20114Network struct {
	value *InlineResponse20114Network
	isSet bool
}

func (v NullableInlineResponse20114Network) Get() *InlineResponse20114Network {
	return v.value
}

func (v *NullableInlineResponse20114Network) Set(val *InlineResponse20114Network) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20114Network) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20114Network) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20114Network(val *InlineResponse20114Network) *NullableInlineResponse20114Network {
	return &NullableInlineResponse20114Network{value: val, isSet: true}
}

func (v NullableInlineResponse20114Network) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20114Network) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


