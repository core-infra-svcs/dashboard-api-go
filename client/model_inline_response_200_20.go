/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 October, 2022 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.26.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"time"
)

// InlineResponse20020 struct for InlineResponse20020
type InlineResponse20020 struct {
	// The start time of the query range
	StartTs *time.Time `json:"startTs,omitempty"`
	// The end time of the query range
	EndTs *time.Time `json:"endTs,omitempty"`
	// WAN goodput (Number of useful information bits delivered over a WAN per unit of time)
	WanGoodput *int32 `json:"wanGoodput,omitempty"`
	// LAN goodput (Number of useful information bits delivered over a LAN per unit of time)
	LanGoodput *int32 `json:"lanGoodput,omitempty"`
	// WAN latency in milliseconds
	WanLatencyMs *float32 `json:"wanLatencyMs,omitempty"`
	// LAN latency in milliseconds
	LanLatencyMs *float32 `json:"lanLatencyMs,omitempty"`
	// WAN loss percentage
	WanLossPercent *float32 `json:"wanLossPercent,omitempty"`
	// LAN loss percentage
	LanLossPercent *float32 `json:"lanLossPercent,omitempty"`
	// Duration of the response, in milliseconds
	ResponseDuration *int32 `json:"responseDuration,omitempty"`
	// Sent kilobytes-per-second
	Sent *int32 `json:"sent,omitempty"`
	// Received kilobytes-per-second
	Recv *int32 `json:"recv,omitempty"`
	// Number of clients
	NumClients *int32 `json:"numClients,omitempty"`
}

// NewInlineResponse20020 instantiates a new InlineResponse20020 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20020() *InlineResponse20020 {
	this := InlineResponse20020{}
	return &this
}

// NewInlineResponse20020WithDefaults instantiates a new InlineResponse20020 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20020WithDefaults() *InlineResponse20020 {
	this := InlineResponse20020{}
	return &this
}

// GetStartTs returns the StartTs field value if set, zero value otherwise.
func (o *InlineResponse20020) GetStartTs() time.Time {
	if o == nil || o.StartTs == nil {
		var ret time.Time
		return ret
	}
	return *o.StartTs
}

// GetStartTsOk returns a tuple with the StartTs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20020) GetStartTsOk() (*time.Time, bool) {
	if o == nil || o.StartTs == nil {
		return nil, false
	}
	return o.StartTs, true
}

// HasStartTs returns a boolean if a field has been set.
func (o *InlineResponse20020) HasStartTs() bool {
	if o != nil && o.StartTs != nil {
		return true
	}

	return false
}

// SetStartTs gets a reference to the given time.Time and assigns it to the StartTs field.
func (o *InlineResponse20020) SetStartTs(v time.Time) {
	o.StartTs = &v
}

// GetEndTs returns the EndTs field value if set, zero value otherwise.
func (o *InlineResponse20020) GetEndTs() time.Time {
	if o == nil || o.EndTs == nil {
		var ret time.Time
		return ret
	}
	return *o.EndTs
}

// GetEndTsOk returns a tuple with the EndTs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20020) GetEndTsOk() (*time.Time, bool) {
	if o == nil || o.EndTs == nil {
		return nil, false
	}
	return o.EndTs, true
}

// HasEndTs returns a boolean if a field has been set.
func (o *InlineResponse20020) HasEndTs() bool {
	if o != nil && o.EndTs != nil {
		return true
	}

	return false
}

// SetEndTs gets a reference to the given time.Time and assigns it to the EndTs field.
func (o *InlineResponse20020) SetEndTs(v time.Time) {
	o.EndTs = &v
}

// GetWanGoodput returns the WanGoodput field value if set, zero value otherwise.
func (o *InlineResponse20020) GetWanGoodput() int32 {
	if o == nil || o.WanGoodput == nil {
		var ret int32
		return ret
	}
	return *o.WanGoodput
}

// GetWanGoodputOk returns a tuple with the WanGoodput field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20020) GetWanGoodputOk() (*int32, bool) {
	if o == nil || o.WanGoodput == nil {
		return nil, false
	}
	return o.WanGoodput, true
}

// HasWanGoodput returns a boolean if a field has been set.
func (o *InlineResponse20020) HasWanGoodput() bool {
	if o != nil && o.WanGoodput != nil {
		return true
	}

	return false
}

// SetWanGoodput gets a reference to the given int32 and assigns it to the WanGoodput field.
func (o *InlineResponse20020) SetWanGoodput(v int32) {
	o.WanGoodput = &v
}

// GetLanGoodput returns the LanGoodput field value if set, zero value otherwise.
func (o *InlineResponse20020) GetLanGoodput() int32 {
	if o == nil || o.LanGoodput == nil {
		var ret int32
		return ret
	}
	return *o.LanGoodput
}

// GetLanGoodputOk returns a tuple with the LanGoodput field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20020) GetLanGoodputOk() (*int32, bool) {
	if o == nil || o.LanGoodput == nil {
		return nil, false
	}
	return o.LanGoodput, true
}

// HasLanGoodput returns a boolean if a field has been set.
func (o *InlineResponse20020) HasLanGoodput() bool {
	if o != nil && o.LanGoodput != nil {
		return true
	}

	return false
}

// SetLanGoodput gets a reference to the given int32 and assigns it to the LanGoodput field.
func (o *InlineResponse20020) SetLanGoodput(v int32) {
	o.LanGoodput = &v
}

// GetWanLatencyMs returns the WanLatencyMs field value if set, zero value otherwise.
func (o *InlineResponse20020) GetWanLatencyMs() float32 {
	if o == nil || o.WanLatencyMs == nil {
		var ret float32
		return ret
	}
	return *o.WanLatencyMs
}

// GetWanLatencyMsOk returns a tuple with the WanLatencyMs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20020) GetWanLatencyMsOk() (*float32, bool) {
	if o == nil || o.WanLatencyMs == nil {
		return nil, false
	}
	return o.WanLatencyMs, true
}

// HasWanLatencyMs returns a boolean if a field has been set.
func (o *InlineResponse20020) HasWanLatencyMs() bool {
	if o != nil && o.WanLatencyMs != nil {
		return true
	}

	return false
}

// SetWanLatencyMs gets a reference to the given float32 and assigns it to the WanLatencyMs field.
func (o *InlineResponse20020) SetWanLatencyMs(v float32) {
	o.WanLatencyMs = &v
}

// GetLanLatencyMs returns the LanLatencyMs field value if set, zero value otherwise.
func (o *InlineResponse20020) GetLanLatencyMs() float32 {
	if o == nil || o.LanLatencyMs == nil {
		var ret float32
		return ret
	}
	return *o.LanLatencyMs
}

// GetLanLatencyMsOk returns a tuple with the LanLatencyMs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20020) GetLanLatencyMsOk() (*float32, bool) {
	if o == nil || o.LanLatencyMs == nil {
		return nil, false
	}
	return o.LanLatencyMs, true
}

// HasLanLatencyMs returns a boolean if a field has been set.
func (o *InlineResponse20020) HasLanLatencyMs() bool {
	if o != nil && o.LanLatencyMs != nil {
		return true
	}

	return false
}

// SetLanLatencyMs gets a reference to the given float32 and assigns it to the LanLatencyMs field.
func (o *InlineResponse20020) SetLanLatencyMs(v float32) {
	o.LanLatencyMs = &v
}

// GetWanLossPercent returns the WanLossPercent field value if set, zero value otherwise.
func (o *InlineResponse20020) GetWanLossPercent() float32 {
	if o == nil || o.WanLossPercent == nil {
		var ret float32
		return ret
	}
	return *o.WanLossPercent
}

// GetWanLossPercentOk returns a tuple with the WanLossPercent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20020) GetWanLossPercentOk() (*float32, bool) {
	if o == nil || o.WanLossPercent == nil {
		return nil, false
	}
	return o.WanLossPercent, true
}

// HasWanLossPercent returns a boolean if a field has been set.
func (o *InlineResponse20020) HasWanLossPercent() bool {
	if o != nil && o.WanLossPercent != nil {
		return true
	}

	return false
}

// SetWanLossPercent gets a reference to the given float32 and assigns it to the WanLossPercent field.
func (o *InlineResponse20020) SetWanLossPercent(v float32) {
	o.WanLossPercent = &v
}

// GetLanLossPercent returns the LanLossPercent field value if set, zero value otherwise.
func (o *InlineResponse20020) GetLanLossPercent() float32 {
	if o == nil || o.LanLossPercent == nil {
		var ret float32
		return ret
	}
	return *o.LanLossPercent
}

// GetLanLossPercentOk returns a tuple with the LanLossPercent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20020) GetLanLossPercentOk() (*float32, bool) {
	if o == nil || o.LanLossPercent == nil {
		return nil, false
	}
	return o.LanLossPercent, true
}

// HasLanLossPercent returns a boolean if a field has been set.
func (o *InlineResponse20020) HasLanLossPercent() bool {
	if o != nil && o.LanLossPercent != nil {
		return true
	}

	return false
}

// SetLanLossPercent gets a reference to the given float32 and assigns it to the LanLossPercent field.
func (o *InlineResponse20020) SetLanLossPercent(v float32) {
	o.LanLossPercent = &v
}

// GetResponseDuration returns the ResponseDuration field value if set, zero value otherwise.
func (o *InlineResponse20020) GetResponseDuration() int32 {
	if o == nil || o.ResponseDuration == nil {
		var ret int32
		return ret
	}
	return *o.ResponseDuration
}

// GetResponseDurationOk returns a tuple with the ResponseDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20020) GetResponseDurationOk() (*int32, bool) {
	if o == nil || o.ResponseDuration == nil {
		return nil, false
	}
	return o.ResponseDuration, true
}

// HasResponseDuration returns a boolean if a field has been set.
func (o *InlineResponse20020) HasResponseDuration() bool {
	if o != nil && o.ResponseDuration != nil {
		return true
	}

	return false
}

// SetResponseDuration gets a reference to the given int32 and assigns it to the ResponseDuration field.
func (o *InlineResponse20020) SetResponseDuration(v int32) {
	o.ResponseDuration = &v
}

// GetSent returns the Sent field value if set, zero value otherwise.
func (o *InlineResponse20020) GetSent() int32 {
	if o == nil || o.Sent == nil {
		var ret int32
		return ret
	}
	return *o.Sent
}

// GetSentOk returns a tuple with the Sent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20020) GetSentOk() (*int32, bool) {
	if o == nil || o.Sent == nil {
		return nil, false
	}
	return o.Sent, true
}

// HasSent returns a boolean if a field has been set.
func (o *InlineResponse20020) HasSent() bool {
	if o != nil && o.Sent != nil {
		return true
	}

	return false
}

// SetSent gets a reference to the given int32 and assigns it to the Sent field.
func (o *InlineResponse20020) SetSent(v int32) {
	o.Sent = &v
}

// GetRecv returns the Recv field value if set, zero value otherwise.
func (o *InlineResponse20020) GetRecv() int32 {
	if o == nil || o.Recv == nil {
		var ret int32
		return ret
	}
	return *o.Recv
}

// GetRecvOk returns a tuple with the Recv field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20020) GetRecvOk() (*int32, bool) {
	if o == nil || o.Recv == nil {
		return nil, false
	}
	return o.Recv, true
}

// HasRecv returns a boolean if a field has been set.
func (o *InlineResponse20020) HasRecv() bool {
	if o != nil && o.Recv != nil {
		return true
	}

	return false
}

// SetRecv gets a reference to the given int32 and assigns it to the Recv field.
func (o *InlineResponse20020) SetRecv(v int32) {
	o.Recv = &v
}

// GetNumClients returns the NumClients field value if set, zero value otherwise.
func (o *InlineResponse20020) GetNumClients() int32 {
	if o == nil || o.NumClients == nil {
		var ret int32
		return ret
	}
	return *o.NumClients
}

// GetNumClientsOk returns a tuple with the NumClients field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20020) GetNumClientsOk() (*int32, bool) {
	if o == nil || o.NumClients == nil {
		return nil, false
	}
	return o.NumClients, true
}

// HasNumClients returns a boolean if a field has been set.
func (o *InlineResponse20020) HasNumClients() bool {
	if o != nil && o.NumClients != nil {
		return true
	}

	return false
}

// SetNumClients gets a reference to the given int32 and assigns it to the NumClients field.
func (o *InlineResponse20020) SetNumClients(v int32) {
	o.NumClients = &v
}

func (o InlineResponse20020) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.StartTs != nil {
		toSerialize["startTs"] = o.StartTs
	}
	if o.EndTs != nil {
		toSerialize["endTs"] = o.EndTs
	}
	if o.WanGoodput != nil {
		toSerialize["wanGoodput"] = o.WanGoodput
	}
	if o.LanGoodput != nil {
		toSerialize["lanGoodput"] = o.LanGoodput
	}
	if o.WanLatencyMs != nil {
		toSerialize["wanLatencyMs"] = o.WanLatencyMs
	}
	if o.LanLatencyMs != nil {
		toSerialize["lanLatencyMs"] = o.LanLatencyMs
	}
	if o.WanLossPercent != nil {
		toSerialize["wanLossPercent"] = o.WanLossPercent
	}
	if o.LanLossPercent != nil {
		toSerialize["lanLossPercent"] = o.LanLossPercent
	}
	if o.ResponseDuration != nil {
		toSerialize["responseDuration"] = o.ResponseDuration
	}
	if o.Sent != nil {
		toSerialize["sent"] = o.Sent
	}
	if o.Recv != nil {
		toSerialize["recv"] = o.Recv
	}
	if o.NumClients != nil {
		toSerialize["numClients"] = o.NumClients
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20020 struct {
	value *InlineResponse20020
	isSet bool
}

func (v NullableInlineResponse20020) Get() *InlineResponse20020 {
	return v.value
}

func (v *NullableInlineResponse20020) Set(val *InlineResponse20020) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20020) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20020) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20020(val *InlineResponse20020) *NullableInlineResponse20020 {
	return &NullableInlineResponse20020{value: val, isSet: true}
}

func (v NullableInlineResponse20020) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20020) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


