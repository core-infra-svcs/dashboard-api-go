/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 01 October, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.63.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200257Items struct for InlineResponse200257Items
type InlineResponse200257Items struct {
	// Serial number
	Serial *string `json:"serial,omitempty"`
	Uplink *InlineResponse200257Uplink `json:"uplink,omitempty"`
	Nameservers *InlineResponse20112Nameservers `json:"nameservers,omitempty"`
	// Infra Security Group Tag(sgt) value for Trustsec
	Sgt *int32 `json:"sgt,omitempty"`
}

// NewInlineResponse200257Items instantiates a new InlineResponse200257Items object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200257Items() *InlineResponse200257Items {
	this := InlineResponse200257Items{}
	return &this
}

// NewInlineResponse200257ItemsWithDefaults instantiates a new InlineResponse200257Items object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200257ItemsWithDefaults() *InlineResponse200257Items {
	this := InlineResponse200257Items{}
	return &this
}

// GetSerial returns the Serial field value if set, zero value otherwise.
func (o *InlineResponse200257Items) GetSerial() string {
	if o == nil || isNil(o.Serial) {
		var ret string
		return ret
	}
	return *o.Serial
}

// GetSerialOk returns a tuple with the Serial field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200257Items) GetSerialOk() (*string, bool) {
	if o == nil || isNil(o.Serial) {
    return nil, false
	}
	return o.Serial, true
}

// HasSerial returns a boolean if a field has been set.
func (o *InlineResponse200257Items) HasSerial() bool {
	if o != nil && !isNil(o.Serial) {
		return true
	}

	return false
}

// SetSerial gets a reference to the given string and assigns it to the Serial field.
func (o *InlineResponse200257Items) SetSerial(v string) {
	o.Serial = &v
}

// GetUplink returns the Uplink field value if set, zero value otherwise.
func (o *InlineResponse200257Items) GetUplink() InlineResponse200257Uplink {
	if o == nil || isNil(o.Uplink) {
		var ret InlineResponse200257Uplink
		return ret
	}
	return *o.Uplink
}

// GetUplinkOk returns a tuple with the Uplink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200257Items) GetUplinkOk() (*InlineResponse200257Uplink, bool) {
	if o == nil || isNil(o.Uplink) {
    return nil, false
	}
	return o.Uplink, true
}

// HasUplink returns a boolean if a field has been set.
func (o *InlineResponse200257Items) HasUplink() bool {
	if o != nil && !isNil(o.Uplink) {
		return true
	}

	return false
}

// SetUplink gets a reference to the given InlineResponse200257Uplink and assigns it to the Uplink field.
func (o *InlineResponse200257Items) SetUplink(v InlineResponse200257Uplink) {
	o.Uplink = &v
}

// GetNameservers returns the Nameservers field value if set, zero value otherwise.
func (o *InlineResponse200257Items) GetNameservers() InlineResponse20112Nameservers {
	if o == nil || isNil(o.Nameservers) {
		var ret InlineResponse20112Nameservers
		return ret
	}
	return *o.Nameservers
}

// GetNameserversOk returns a tuple with the Nameservers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200257Items) GetNameserversOk() (*InlineResponse20112Nameservers, bool) {
	if o == nil || isNil(o.Nameservers) {
    return nil, false
	}
	return o.Nameservers, true
}

// HasNameservers returns a boolean if a field has been set.
func (o *InlineResponse200257Items) HasNameservers() bool {
	if o != nil && !isNil(o.Nameservers) {
		return true
	}

	return false
}

// SetNameservers gets a reference to the given InlineResponse20112Nameservers and assigns it to the Nameservers field.
func (o *InlineResponse200257Items) SetNameservers(v InlineResponse20112Nameservers) {
	o.Nameservers = &v
}

// GetSgt returns the Sgt field value if set, zero value otherwise.
func (o *InlineResponse200257Items) GetSgt() int32 {
	if o == nil || isNil(o.Sgt) {
		var ret int32
		return ret
	}
	return *o.Sgt
}

// GetSgtOk returns a tuple with the Sgt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200257Items) GetSgtOk() (*int32, bool) {
	if o == nil || isNil(o.Sgt) {
    return nil, false
	}
	return o.Sgt, true
}

// HasSgt returns a boolean if a field has been set.
func (o *InlineResponse200257Items) HasSgt() bool {
	if o != nil && !isNil(o.Sgt) {
		return true
	}

	return false
}

// SetSgt gets a reference to the given int32 and assigns it to the Sgt field.
func (o *InlineResponse200257Items) SetSgt(v int32) {
	o.Sgt = &v
}

func (o InlineResponse200257Items) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Serial) {
		toSerialize["serial"] = o.Serial
	}
	if !isNil(o.Uplink) {
		toSerialize["uplink"] = o.Uplink
	}
	if !isNil(o.Nameservers) {
		toSerialize["nameservers"] = o.Nameservers
	}
	if !isNil(o.Sgt) {
		toSerialize["sgt"] = o.Sgt
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200257Items struct {
	value *InlineResponse200257Items
	isSet bool
}

func (v NullableInlineResponse200257Items) Get() *InlineResponse200257Items {
	return v.value
}

func (v *NullableInlineResponse200257Items) Set(val *InlineResponse200257Items) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200257Items) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200257Items) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200257Items(val *InlineResponse200257Items) *NullableInlineResponse200257Items {
	return &NullableInlineResponse200257Items{value: val, isSet: true}
}

func (v NullableInlineResponse200257Items) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200257Items) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


