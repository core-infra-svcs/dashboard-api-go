/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 07 May, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.58.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineObject115 struct for InlineObject115
type InlineObject115 struct {
	// Boolean indicating whether NetFlow traffic reporting is enabled (true) or disabled (false).
	ReportingEnabled *bool `json:"reportingEnabled,omitempty"`
	// The IPv4 address of the NetFlow collector.
	CollectorIp *string `json:"collectorIp,omitempty"`
	// The port that the NetFlow collector will be listening on.
	CollectorPort *int32 `json:"collectorPort,omitempty"`
	// Boolean indicating whether Encrypted Traffic Analytics is enabled (true) or disabled (false).
	EtaEnabled *bool `json:"etaEnabled,omitempty"`
	// The port that the Encrypted Traffic Analytics collector will be listening on.
	EtaDstPort *int32 `json:"etaDstPort,omitempty"`
}

// NewInlineObject115 instantiates a new InlineObject115 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject115() *InlineObject115 {
	this := InlineObject115{}
	return &this
}

// NewInlineObject115WithDefaults instantiates a new InlineObject115 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject115WithDefaults() *InlineObject115 {
	this := InlineObject115{}
	return &this
}

// GetReportingEnabled returns the ReportingEnabled field value if set, zero value otherwise.
func (o *InlineObject115) GetReportingEnabled() bool {
	if o == nil || isNil(o.ReportingEnabled) {
		var ret bool
		return ret
	}
	return *o.ReportingEnabled
}

// GetReportingEnabledOk returns a tuple with the ReportingEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject115) GetReportingEnabledOk() (*bool, bool) {
	if o == nil || isNil(o.ReportingEnabled) {
    return nil, false
	}
	return o.ReportingEnabled, true
}

// HasReportingEnabled returns a boolean if a field has been set.
func (o *InlineObject115) HasReportingEnabled() bool {
	if o != nil && !isNil(o.ReportingEnabled) {
		return true
	}

	return false
}

// SetReportingEnabled gets a reference to the given bool and assigns it to the ReportingEnabled field.
func (o *InlineObject115) SetReportingEnabled(v bool) {
	o.ReportingEnabled = &v
}

// GetCollectorIp returns the CollectorIp field value if set, zero value otherwise.
func (o *InlineObject115) GetCollectorIp() string {
	if o == nil || isNil(o.CollectorIp) {
		var ret string
		return ret
	}
	return *o.CollectorIp
}

// GetCollectorIpOk returns a tuple with the CollectorIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject115) GetCollectorIpOk() (*string, bool) {
	if o == nil || isNil(o.CollectorIp) {
    return nil, false
	}
	return o.CollectorIp, true
}

// HasCollectorIp returns a boolean if a field has been set.
func (o *InlineObject115) HasCollectorIp() bool {
	if o != nil && !isNil(o.CollectorIp) {
		return true
	}

	return false
}

// SetCollectorIp gets a reference to the given string and assigns it to the CollectorIp field.
func (o *InlineObject115) SetCollectorIp(v string) {
	o.CollectorIp = &v
}

// GetCollectorPort returns the CollectorPort field value if set, zero value otherwise.
func (o *InlineObject115) GetCollectorPort() int32 {
	if o == nil || isNil(o.CollectorPort) {
		var ret int32
		return ret
	}
	return *o.CollectorPort
}

// GetCollectorPortOk returns a tuple with the CollectorPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject115) GetCollectorPortOk() (*int32, bool) {
	if o == nil || isNil(o.CollectorPort) {
    return nil, false
	}
	return o.CollectorPort, true
}

// HasCollectorPort returns a boolean if a field has been set.
func (o *InlineObject115) HasCollectorPort() bool {
	if o != nil && !isNil(o.CollectorPort) {
		return true
	}

	return false
}

// SetCollectorPort gets a reference to the given int32 and assigns it to the CollectorPort field.
func (o *InlineObject115) SetCollectorPort(v int32) {
	o.CollectorPort = &v
}

// GetEtaEnabled returns the EtaEnabled field value if set, zero value otherwise.
func (o *InlineObject115) GetEtaEnabled() bool {
	if o == nil || isNil(o.EtaEnabled) {
		var ret bool
		return ret
	}
	return *o.EtaEnabled
}

// GetEtaEnabledOk returns a tuple with the EtaEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject115) GetEtaEnabledOk() (*bool, bool) {
	if o == nil || isNil(o.EtaEnabled) {
    return nil, false
	}
	return o.EtaEnabled, true
}

// HasEtaEnabled returns a boolean if a field has been set.
func (o *InlineObject115) HasEtaEnabled() bool {
	if o != nil && !isNil(o.EtaEnabled) {
		return true
	}

	return false
}

// SetEtaEnabled gets a reference to the given bool and assigns it to the EtaEnabled field.
func (o *InlineObject115) SetEtaEnabled(v bool) {
	o.EtaEnabled = &v
}

// GetEtaDstPort returns the EtaDstPort field value if set, zero value otherwise.
func (o *InlineObject115) GetEtaDstPort() int32 {
	if o == nil || isNil(o.EtaDstPort) {
		var ret int32
		return ret
	}
	return *o.EtaDstPort
}

// GetEtaDstPortOk returns a tuple with the EtaDstPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject115) GetEtaDstPortOk() (*int32, bool) {
	if o == nil || isNil(o.EtaDstPort) {
    return nil, false
	}
	return o.EtaDstPort, true
}

// HasEtaDstPort returns a boolean if a field has been set.
func (o *InlineObject115) HasEtaDstPort() bool {
	if o != nil && !isNil(o.EtaDstPort) {
		return true
	}

	return false
}

// SetEtaDstPort gets a reference to the given int32 and assigns it to the EtaDstPort field.
func (o *InlineObject115) SetEtaDstPort(v int32) {
	o.EtaDstPort = &v
}

func (o InlineObject115) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.ReportingEnabled) {
		toSerialize["reportingEnabled"] = o.ReportingEnabled
	}
	if !isNil(o.CollectorIp) {
		toSerialize["collectorIp"] = o.CollectorIp
	}
	if !isNil(o.CollectorPort) {
		toSerialize["collectorPort"] = o.CollectorPort
	}
	if !isNil(o.EtaEnabled) {
		toSerialize["etaEnabled"] = o.EtaEnabled
	}
	if !isNil(o.EtaDstPort) {
		toSerialize["etaDstPort"] = o.EtaDstPort
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject115 struct {
	value *InlineObject115
	isSet bool
}

func (v NullableInlineObject115) Get() *InlineObject115 {
	return v.value
}

func (v *NullableInlineObject115) Set(val *InlineObject115) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject115) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject115) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject115(val *InlineObject115) *NullableInlineObject115 {
	return &NullableInlineObject115{value: val, isSet: true}
}

func (v NullableInlineObject115) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject115) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


