/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 06 March, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.44.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200164Counts counts
type InlineResponse200164Counts struct {
	ByStatus *InlineResponse200164CountsByStatus `json:"byStatus,omitempty"`
}

// NewInlineResponse200164Counts instantiates a new InlineResponse200164Counts object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200164Counts() *InlineResponse200164Counts {
	this := InlineResponse200164Counts{}
	return &this
}

// NewInlineResponse200164CountsWithDefaults instantiates a new InlineResponse200164Counts object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200164CountsWithDefaults() *InlineResponse200164Counts {
	this := InlineResponse200164Counts{}
	return &this
}

// GetByStatus returns the ByStatus field value if set, zero value otherwise.
func (o *InlineResponse200164Counts) GetByStatus() InlineResponse200164CountsByStatus {
	if o == nil || isNil(o.ByStatus) {
		var ret InlineResponse200164CountsByStatus
		return ret
	}
	return *o.ByStatus
}

// GetByStatusOk returns a tuple with the ByStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200164Counts) GetByStatusOk() (*InlineResponse200164CountsByStatus, bool) {
	if o == nil || isNil(o.ByStatus) {
    return nil, false
	}
	return o.ByStatus, true
}

// HasByStatus returns a boolean if a field has been set.
func (o *InlineResponse200164Counts) HasByStatus() bool {
	if o != nil && !isNil(o.ByStatus) {
		return true
	}

	return false
}

// SetByStatus gets a reference to the given InlineResponse200164CountsByStatus and assigns it to the ByStatus field.
func (o *InlineResponse200164Counts) SetByStatus(v InlineResponse200164CountsByStatus) {
	o.ByStatus = &v
}

func (o InlineResponse200164Counts) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.ByStatus) {
		toSerialize["byStatus"] = o.ByStatus
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200164Counts struct {
	value *InlineResponse200164Counts
	isSet bool
}

func (v NullableInlineResponse200164Counts) Get() *InlineResponse200164Counts {
	return v.value
}

func (v *NullableInlineResponse200164Counts) Set(val *InlineResponse200164Counts) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200164Counts) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200164Counts) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200164Counts(val *InlineResponse200164Counts) *NullableInlineResponse200164Counts {
	return &NullableInlineResponse200164Counts{value: val, isSet: true}
}

func (v NullableInlineResponse200164Counts) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200164Counts) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


