/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 04 June, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.59.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200366Client The client of allowlist
type InlineResponse200366Client struct {
	// L2 Isolation mac address
	Mac string `json:"mac"`
}

// NewInlineResponse200366Client instantiates a new InlineResponse200366Client object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200366Client(mac string) *InlineResponse200366Client {
	this := InlineResponse200366Client{}
	this.Mac = mac
	return &this
}

// NewInlineResponse200366ClientWithDefaults instantiates a new InlineResponse200366Client object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200366ClientWithDefaults() *InlineResponse200366Client {
	this := InlineResponse200366Client{}
	return &this
}

// GetMac returns the Mac field value
func (o *InlineResponse200366Client) GetMac() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Mac
}

// GetMacOk returns a tuple with the Mac field value
// and a boolean to check if the value has been set.
func (o *InlineResponse200366Client) GetMacOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Mac, true
}

// SetMac sets field value
func (o *InlineResponse200366Client) SetMac(v string) {
	o.Mac = v
}

func (o InlineResponse200366Client) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["mac"] = o.Mac
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200366Client struct {
	value *InlineResponse200366Client
	isSet bool
}

func (v NullableInlineResponse200366Client) Get() *InlineResponse200366Client {
	return v.value
}

func (v *NullableInlineResponse200366Client) Set(val *InlineResponse200366Client) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200366Client) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200366Client) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200366Client(val *InlineResponse200366Client) *NullableInlineResponse200366Client {
	return &NullableInlineResponse200366Client{value: val, isSet: true}
}

func (v NullableInlineResponse200366Client) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200366Client) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


