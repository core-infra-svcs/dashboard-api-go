/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 04 June, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.59.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineObject94 struct for InlineObject94
type InlineObject94 struct {
	// A list of serials of devices to claim
	Serials []string `json:"serials"`
	// Optional details for claimed devices (currently only used for Catalyst devices)
	DetailsByDevice []NetworksNetworkIdDevicesClaimDetailsByDevice `json:"detailsByDevice,omitempty"`
}

// NewInlineObject94 instantiates a new InlineObject94 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject94(serials []string) *InlineObject94 {
	this := InlineObject94{}
	this.Serials = serials
	return &this
}

// NewInlineObject94WithDefaults instantiates a new InlineObject94 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject94WithDefaults() *InlineObject94 {
	this := InlineObject94{}
	return &this
}

// GetSerials returns the Serials field value
func (o *InlineObject94) GetSerials() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Serials
}

// GetSerialsOk returns a tuple with the Serials field value
// and a boolean to check if the value has been set.
func (o *InlineObject94) GetSerialsOk() ([]string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Serials, true
}

// SetSerials sets field value
func (o *InlineObject94) SetSerials(v []string) {
	o.Serials = v
}

// GetDetailsByDevice returns the DetailsByDevice field value if set, zero value otherwise.
func (o *InlineObject94) GetDetailsByDevice() []NetworksNetworkIdDevicesClaimDetailsByDevice {
	if o == nil || isNil(o.DetailsByDevice) {
		var ret []NetworksNetworkIdDevicesClaimDetailsByDevice
		return ret
	}
	return o.DetailsByDevice
}

// GetDetailsByDeviceOk returns a tuple with the DetailsByDevice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject94) GetDetailsByDeviceOk() ([]NetworksNetworkIdDevicesClaimDetailsByDevice, bool) {
	if o == nil || isNil(o.DetailsByDevice) {
    return nil, false
	}
	return o.DetailsByDevice, true
}

// HasDetailsByDevice returns a boolean if a field has been set.
func (o *InlineObject94) HasDetailsByDevice() bool {
	if o != nil && !isNil(o.DetailsByDevice) {
		return true
	}

	return false
}

// SetDetailsByDevice gets a reference to the given []NetworksNetworkIdDevicesClaimDetailsByDevice and assigns it to the DetailsByDevice field.
func (o *InlineObject94) SetDetailsByDevice(v []NetworksNetworkIdDevicesClaimDetailsByDevice) {
	o.DetailsByDevice = v
}

func (o InlineObject94) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["serials"] = o.Serials
	}
	if !isNil(o.DetailsByDevice) {
		toSerialize["detailsByDevice"] = o.DetailsByDevice
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject94 struct {
	value *InlineObject94
	isSet bool
}

func (v NullableInlineObject94) Get() *InlineObject94 {
	return v.value
}

func (v *NullableInlineObject94) Set(val *InlineObject94) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject94) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject94) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject94(val *InlineObject94) *NullableInlineObject94 {
	return &NullableInlineObject94{value: val, isSet: true}
}

func (v NullableInlineObject94) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject94) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


