/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 02 April, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.57.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200328Ports struct for InlineResponse200328Ports
type InlineResponse200328Ports struct {
	// The string identifier of this port on the switch. This is commonly just the port number but may contain additional identifying information such as the slot and module-type if the port is located on a port module.
	PortId *string `json:"portId,omitempty"`
	// An array of intervals for a port with bandwidth, traffic, and power usage data.
	Intervals []InlineResponse200328Intervals `json:"intervals,omitempty"`
}

// NewInlineResponse200328Ports instantiates a new InlineResponse200328Ports object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200328Ports() *InlineResponse200328Ports {
	this := InlineResponse200328Ports{}
	return &this
}

// NewInlineResponse200328PortsWithDefaults instantiates a new InlineResponse200328Ports object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200328PortsWithDefaults() *InlineResponse200328Ports {
	this := InlineResponse200328Ports{}
	return &this
}

// GetPortId returns the PortId field value if set, zero value otherwise.
func (o *InlineResponse200328Ports) GetPortId() string {
	if o == nil || isNil(o.PortId) {
		var ret string
		return ret
	}
	return *o.PortId
}

// GetPortIdOk returns a tuple with the PortId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200328Ports) GetPortIdOk() (*string, bool) {
	if o == nil || isNil(o.PortId) {
    return nil, false
	}
	return o.PortId, true
}

// HasPortId returns a boolean if a field has been set.
func (o *InlineResponse200328Ports) HasPortId() bool {
	if o != nil && !isNil(o.PortId) {
		return true
	}

	return false
}

// SetPortId gets a reference to the given string and assigns it to the PortId field.
func (o *InlineResponse200328Ports) SetPortId(v string) {
	o.PortId = &v
}

// GetIntervals returns the Intervals field value if set, zero value otherwise.
func (o *InlineResponse200328Ports) GetIntervals() []InlineResponse200328Intervals {
	if o == nil || isNil(o.Intervals) {
		var ret []InlineResponse200328Intervals
		return ret
	}
	return o.Intervals
}

// GetIntervalsOk returns a tuple with the Intervals field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200328Ports) GetIntervalsOk() ([]InlineResponse200328Intervals, bool) {
	if o == nil || isNil(o.Intervals) {
    return nil, false
	}
	return o.Intervals, true
}

// HasIntervals returns a boolean if a field has been set.
func (o *InlineResponse200328Ports) HasIntervals() bool {
	if o != nil && !isNil(o.Intervals) {
		return true
	}

	return false
}

// SetIntervals gets a reference to the given []InlineResponse200328Intervals and assigns it to the Intervals field.
func (o *InlineResponse200328Ports) SetIntervals(v []InlineResponse200328Intervals) {
	o.Intervals = v
}

func (o InlineResponse200328Ports) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.PortId) {
		toSerialize["portId"] = o.PortId
	}
	if !isNil(o.Intervals) {
		toSerialize["intervals"] = o.Intervals
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200328Ports struct {
	value *InlineResponse200328Ports
	isSet bool
}

func (v NullableInlineResponse200328Ports) Get() *InlineResponse200328Ports {
	return v.value
}

func (v *NullableInlineResponse200328Ports) Set(val *InlineResponse200328Ports) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200328Ports) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200328Ports) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200328Ports(val *InlineResponse200328Ports) *NullableInlineResponse200328Ports {
	return &NullableInlineResponse200328Ports{value: val, isSet: true}
}

func (v NullableInlineResponse200328Ports) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200328Ports) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


