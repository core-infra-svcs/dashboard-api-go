/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 February, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.55.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200160 struct for InlineResponse200160
type InlineResponse200160 struct {
	// Qos Rule ids
	RuleIds []string `json:"ruleIds,omitempty"`
}

// NewInlineResponse200160 instantiates a new InlineResponse200160 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200160() *InlineResponse200160 {
	this := InlineResponse200160{}
	return &this
}

// NewInlineResponse200160WithDefaults instantiates a new InlineResponse200160 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200160WithDefaults() *InlineResponse200160 {
	this := InlineResponse200160{}
	return &this
}

// GetRuleIds returns the RuleIds field value if set, zero value otherwise.
func (o *InlineResponse200160) GetRuleIds() []string {
	if o == nil || isNil(o.RuleIds) {
		var ret []string
		return ret
	}
	return o.RuleIds
}

// GetRuleIdsOk returns a tuple with the RuleIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200160) GetRuleIdsOk() ([]string, bool) {
	if o == nil || isNil(o.RuleIds) {
    return nil, false
	}
	return o.RuleIds, true
}

// HasRuleIds returns a boolean if a field has been set.
func (o *InlineResponse200160) HasRuleIds() bool {
	if o != nil && !isNil(o.RuleIds) {
		return true
	}

	return false
}

// SetRuleIds gets a reference to the given []string and assigns it to the RuleIds field.
func (o *InlineResponse200160) SetRuleIds(v []string) {
	o.RuleIds = v
}

func (o InlineResponse200160) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.RuleIds) {
		toSerialize["ruleIds"] = o.RuleIds
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200160 struct {
	value *InlineResponse200160
	isSet bool
}

func (v NullableInlineResponse200160) Get() *InlineResponse200160 {
	return v.value
}

func (v *NullableInlineResponse200160) Set(val *InlineResponse200160) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200160) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200160) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200160(val *InlineResponse200160) *NullableInlineResponse200160 {
	return &NullableInlineResponse200160{value: val, isSet: true}
}

func (v NullableInlineResponse200160) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200160) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


