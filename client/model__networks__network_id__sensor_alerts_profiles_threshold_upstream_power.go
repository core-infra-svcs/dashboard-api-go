/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 March, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.56.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// NetworksNetworkIdSensorAlertsProfilesThresholdUpstreamPower Upstream power threshold. 'outageDetected' must be provided and set to true.
type NetworksNetworkIdSensorAlertsProfilesThresholdUpstreamPower struct {
	// Alerting threshold for an upstream power event. Must be set to true.
	OutageDetected bool `json:"outageDetected"`
}

// NewNetworksNetworkIdSensorAlertsProfilesThresholdUpstreamPower instantiates a new NetworksNetworkIdSensorAlertsProfilesThresholdUpstreamPower object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworksNetworkIdSensorAlertsProfilesThresholdUpstreamPower(outageDetected bool) *NetworksNetworkIdSensorAlertsProfilesThresholdUpstreamPower {
	this := NetworksNetworkIdSensorAlertsProfilesThresholdUpstreamPower{}
	this.OutageDetected = outageDetected
	return &this
}

// NewNetworksNetworkIdSensorAlertsProfilesThresholdUpstreamPowerWithDefaults instantiates a new NetworksNetworkIdSensorAlertsProfilesThresholdUpstreamPower object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworksNetworkIdSensorAlertsProfilesThresholdUpstreamPowerWithDefaults() *NetworksNetworkIdSensorAlertsProfilesThresholdUpstreamPower {
	this := NetworksNetworkIdSensorAlertsProfilesThresholdUpstreamPower{}
	return &this
}

// GetOutageDetected returns the OutageDetected field value
func (o *NetworksNetworkIdSensorAlertsProfilesThresholdUpstreamPower) GetOutageDetected() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.OutageDetected
}

// GetOutageDetectedOk returns a tuple with the OutageDetected field value
// and a boolean to check if the value has been set.
func (o *NetworksNetworkIdSensorAlertsProfilesThresholdUpstreamPower) GetOutageDetectedOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return &o.OutageDetected, true
}

// SetOutageDetected sets field value
func (o *NetworksNetworkIdSensorAlertsProfilesThresholdUpstreamPower) SetOutageDetected(v bool) {
	o.OutageDetected = v
}

func (o NetworksNetworkIdSensorAlertsProfilesThresholdUpstreamPower) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["outageDetected"] = o.OutageDetected
	}
	return json.Marshal(toSerialize)
}

type NullableNetworksNetworkIdSensorAlertsProfilesThresholdUpstreamPower struct {
	value *NetworksNetworkIdSensorAlertsProfilesThresholdUpstreamPower
	isSet bool
}

func (v NullableNetworksNetworkIdSensorAlertsProfilesThresholdUpstreamPower) Get() *NetworksNetworkIdSensorAlertsProfilesThresholdUpstreamPower {
	return v.value
}

func (v *NullableNetworksNetworkIdSensorAlertsProfilesThresholdUpstreamPower) Set(val *NetworksNetworkIdSensorAlertsProfilesThresholdUpstreamPower) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworksNetworkIdSensorAlertsProfilesThresholdUpstreamPower) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworksNetworkIdSensorAlertsProfilesThresholdUpstreamPower) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworksNetworkIdSensorAlertsProfilesThresholdUpstreamPower(val *NetworksNetworkIdSensorAlertsProfilesThresholdUpstreamPower) *NullableNetworksNetworkIdSensorAlertsProfilesThresholdUpstreamPower {
	return &NullableNetworksNetworkIdSensorAlertsProfilesThresholdUpstreamPower{value: val, isSet: true}
}

func (v NullableNetworksNetworkIdSensorAlertsProfilesThresholdUpstreamPower) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworksNetworkIdSensorAlertsProfilesThresholdUpstreamPower) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


