/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 01 October, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.63.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200372WifiAllowLists Allowed List for MAC and UUID
type InlineResponse200372WifiAllowLists struct {
	// Allowed MAC List
	Macs []string `json:"macs,omitempty"`
}

// NewInlineResponse200372WifiAllowLists instantiates a new InlineResponse200372WifiAllowLists object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200372WifiAllowLists() *InlineResponse200372WifiAllowLists {
	this := InlineResponse200372WifiAllowLists{}
	return &this
}

// NewInlineResponse200372WifiAllowListsWithDefaults instantiates a new InlineResponse200372WifiAllowLists object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200372WifiAllowListsWithDefaults() *InlineResponse200372WifiAllowLists {
	this := InlineResponse200372WifiAllowLists{}
	return &this
}

// GetMacs returns the Macs field value if set, zero value otherwise.
func (o *InlineResponse200372WifiAllowLists) GetMacs() []string {
	if o == nil || isNil(o.Macs) {
		var ret []string
		return ret
	}
	return o.Macs
}

// GetMacsOk returns a tuple with the Macs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200372WifiAllowLists) GetMacsOk() ([]string, bool) {
	if o == nil || isNil(o.Macs) {
    return nil, false
	}
	return o.Macs, true
}

// HasMacs returns a boolean if a field has been set.
func (o *InlineResponse200372WifiAllowLists) HasMacs() bool {
	if o != nil && !isNil(o.Macs) {
		return true
	}

	return false
}

// SetMacs gets a reference to the given []string and assigns it to the Macs field.
func (o *InlineResponse200372WifiAllowLists) SetMacs(v []string) {
	o.Macs = v
}

func (o InlineResponse200372WifiAllowLists) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Macs) {
		toSerialize["macs"] = o.Macs
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200372WifiAllowLists struct {
	value *InlineResponse200372WifiAllowLists
	isSet bool
}

func (v NullableInlineResponse200372WifiAllowLists) Get() *InlineResponse200372WifiAllowLists {
	return v.value
}

func (v *NullableInlineResponse200372WifiAllowLists) Set(val *InlineResponse200372WifiAllowLists) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200372WifiAllowLists) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200372WifiAllowLists) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200372WifiAllowLists(val *InlineResponse200372WifiAllowLists) *NullableInlineResponse200372WifiAllowLists {
	return &NullableInlineResponse200372WifiAllowLists{value: val, isSet: true}
}

func (v NullableInlineResponse200372WifiAllowLists) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200372WifiAllowLists) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


