/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 October, 2022 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.26.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse2014 struct for InlineResponse2014
type InlineResponse2014 struct {
	// The name of the new profile. Must be unique.
	Id *string `json:"id,omitempty"`
	// The network ID of the RF Profile
	NetworkId *string `json:"networkId,omitempty"`
	// The name of the new profile. Must be unique. This param is required on creation.
	Name *string `json:"name,omitempty"`
	// Steers client to best available access point. Can be either true or false. Defaults to true.
	ClientBalancingEnabled *bool `json:"clientBalancingEnabled,omitempty"`
	// Minimum bitrate can be set to either 'band' or 'ssid'. Defaults to band.
	MinBitrateType *string `json:"minBitrateType,omitempty"`
	// Band selection can be set to either 'ssid' or 'ap'. This param is required on creation.
	BandSelectionType *string `json:"bandSelectionType,omitempty"`
	ApBandSettings *InlineResponse2014ApBandSettings `json:"apBandSettings,omitempty"`
	TwoFourGhzSettings *NetworksNetworkIdWirelessRfProfilesTwoFourGhzSettings `json:"twoFourGhzSettings,omitempty"`
	FiveGhzSettings *NetworksNetworkIdWirelessRfProfilesFiveGhzSettings `json:"fiveGhzSettings,omitempty"`
	Transmission *NetworksNetworkIdWirelessRfProfilesTransmission `json:"transmission,omitempty"`
	PerSsidSettings *InlineResponse2014PerSsidSettings `json:"perSsidSettings,omitempty"`
}

// NewInlineResponse2014 instantiates a new InlineResponse2014 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse2014() *InlineResponse2014 {
	this := InlineResponse2014{}
	return &this
}

// NewInlineResponse2014WithDefaults instantiates a new InlineResponse2014 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse2014WithDefaults() *InlineResponse2014 {
	this := InlineResponse2014{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *InlineResponse2014) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2014) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *InlineResponse2014) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *InlineResponse2014) SetId(v string) {
	o.Id = &v
}

// GetNetworkId returns the NetworkId field value if set, zero value otherwise.
func (o *InlineResponse2014) GetNetworkId() string {
	if o == nil || o.NetworkId == nil {
		var ret string
		return ret
	}
	return *o.NetworkId
}

// GetNetworkIdOk returns a tuple with the NetworkId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2014) GetNetworkIdOk() (*string, bool) {
	if o == nil || o.NetworkId == nil {
		return nil, false
	}
	return o.NetworkId, true
}

// HasNetworkId returns a boolean if a field has been set.
func (o *InlineResponse2014) HasNetworkId() bool {
	if o != nil && o.NetworkId != nil {
		return true
	}

	return false
}

// SetNetworkId gets a reference to the given string and assigns it to the NetworkId field.
func (o *InlineResponse2014) SetNetworkId(v string) {
	o.NetworkId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *InlineResponse2014) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2014) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *InlineResponse2014) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *InlineResponse2014) SetName(v string) {
	o.Name = &v
}

// GetClientBalancingEnabled returns the ClientBalancingEnabled field value if set, zero value otherwise.
func (o *InlineResponse2014) GetClientBalancingEnabled() bool {
	if o == nil || o.ClientBalancingEnabled == nil {
		var ret bool
		return ret
	}
	return *o.ClientBalancingEnabled
}

// GetClientBalancingEnabledOk returns a tuple with the ClientBalancingEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2014) GetClientBalancingEnabledOk() (*bool, bool) {
	if o == nil || o.ClientBalancingEnabled == nil {
		return nil, false
	}
	return o.ClientBalancingEnabled, true
}

// HasClientBalancingEnabled returns a boolean if a field has been set.
func (o *InlineResponse2014) HasClientBalancingEnabled() bool {
	if o != nil && o.ClientBalancingEnabled != nil {
		return true
	}

	return false
}

// SetClientBalancingEnabled gets a reference to the given bool and assigns it to the ClientBalancingEnabled field.
func (o *InlineResponse2014) SetClientBalancingEnabled(v bool) {
	o.ClientBalancingEnabled = &v
}

// GetMinBitrateType returns the MinBitrateType field value if set, zero value otherwise.
func (o *InlineResponse2014) GetMinBitrateType() string {
	if o == nil || o.MinBitrateType == nil {
		var ret string
		return ret
	}
	return *o.MinBitrateType
}

// GetMinBitrateTypeOk returns a tuple with the MinBitrateType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2014) GetMinBitrateTypeOk() (*string, bool) {
	if o == nil || o.MinBitrateType == nil {
		return nil, false
	}
	return o.MinBitrateType, true
}

// HasMinBitrateType returns a boolean if a field has been set.
func (o *InlineResponse2014) HasMinBitrateType() bool {
	if o != nil && o.MinBitrateType != nil {
		return true
	}

	return false
}

// SetMinBitrateType gets a reference to the given string and assigns it to the MinBitrateType field.
func (o *InlineResponse2014) SetMinBitrateType(v string) {
	o.MinBitrateType = &v
}

// GetBandSelectionType returns the BandSelectionType field value if set, zero value otherwise.
func (o *InlineResponse2014) GetBandSelectionType() string {
	if o == nil || o.BandSelectionType == nil {
		var ret string
		return ret
	}
	return *o.BandSelectionType
}

// GetBandSelectionTypeOk returns a tuple with the BandSelectionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2014) GetBandSelectionTypeOk() (*string, bool) {
	if o == nil || o.BandSelectionType == nil {
		return nil, false
	}
	return o.BandSelectionType, true
}

// HasBandSelectionType returns a boolean if a field has been set.
func (o *InlineResponse2014) HasBandSelectionType() bool {
	if o != nil && o.BandSelectionType != nil {
		return true
	}

	return false
}

// SetBandSelectionType gets a reference to the given string and assigns it to the BandSelectionType field.
func (o *InlineResponse2014) SetBandSelectionType(v string) {
	o.BandSelectionType = &v
}

// GetApBandSettings returns the ApBandSettings field value if set, zero value otherwise.
func (o *InlineResponse2014) GetApBandSettings() InlineResponse2014ApBandSettings {
	if o == nil || o.ApBandSettings == nil {
		var ret InlineResponse2014ApBandSettings
		return ret
	}
	return *o.ApBandSettings
}

// GetApBandSettingsOk returns a tuple with the ApBandSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2014) GetApBandSettingsOk() (*InlineResponse2014ApBandSettings, bool) {
	if o == nil || o.ApBandSettings == nil {
		return nil, false
	}
	return o.ApBandSettings, true
}

// HasApBandSettings returns a boolean if a field has been set.
func (o *InlineResponse2014) HasApBandSettings() bool {
	if o != nil && o.ApBandSettings != nil {
		return true
	}

	return false
}

// SetApBandSettings gets a reference to the given InlineResponse2014ApBandSettings and assigns it to the ApBandSettings field.
func (o *InlineResponse2014) SetApBandSettings(v InlineResponse2014ApBandSettings) {
	o.ApBandSettings = &v
}

// GetTwoFourGhzSettings returns the TwoFourGhzSettings field value if set, zero value otherwise.
func (o *InlineResponse2014) GetTwoFourGhzSettings() NetworksNetworkIdWirelessRfProfilesTwoFourGhzSettings {
	if o == nil || o.TwoFourGhzSettings == nil {
		var ret NetworksNetworkIdWirelessRfProfilesTwoFourGhzSettings
		return ret
	}
	return *o.TwoFourGhzSettings
}

// GetTwoFourGhzSettingsOk returns a tuple with the TwoFourGhzSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2014) GetTwoFourGhzSettingsOk() (*NetworksNetworkIdWirelessRfProfilesTwoFourGhzSettings, bool) {
	if o == nil || o.TwoFourGhzSettings == nil {
		return nil, false
	}
	return o.TwoFourGhzSettings, true
}

// HasTwoFourGhzSettings returns a boolean if a field has been set.
func (o *InlineResponse2014) HasTwoFourGhzSettings() bool {
	if o != nil && o.TwoFourGhzSettings != nil {
		return true
	}

	return false
}

// SetTwoFourGhzSettings gets a reference to the given NetworksNetworkIdWirelessRfProfilesTwoFourGhzSettings and assigns it to the TwoFourGhzSettings field.
func (o *InlineResponse2014) SetTwoFourGhzSettings(v NetworksNetworkIdWirelessRfProfilesTwoFourGhzSettings) {
	o.TwoFourGhzSettings = &v
}

// GetFiveGhzSettings returns the FiveGhzSettings field value if set, zero value otherwise.
func (o *InlineResponse2014) GetFiveGhzSettings() NetworksNetworkIdWirelessRfProfilesFiveGhzSettings {
	if o == nil || o.FiveGhzSettings == nil {
		var ret NetworksNetworkIdWirelessRfProfilesFiveGhzSettings
		return ret
	}
	return *o.FiveGhzSettings
}

// GetFiveGhzSettingsOk returns a tuple with the FiveGhzSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2014) GetFiveGhzSettingsOk() (*NetworksNetworkIdWirelessRfProfilesFiveGhzSettings, bool) {
	if o == nil || o.FiveGhzSettings == nil {
		return nil, false
	}
	return o.FiveGhzSettings, true
}

// HasFiveGhzSettings returns a boolean if a field has been set.
func (o *InlineResponse2014) HasFiveGhzSettings() bool {
	if o != nil && o.FiveGhzSettings != nil {
		return true
	}

	return false
}

// SetFiveGhzSettings gets a reference to the given NetworksNetworkIdWirelessRfProfilesFiveGhzSettings and assigns it to the FiveGhzSettings field.
func (o *InlineResponse2014) SetFiveGhzSettings(v NetworksNetworkIdWirelessRfProfilesFiveGhzSettings) {
	o.FiveGhzSettings = &v
}

// GetTransmission returns the Transmission field value if set, zero value otherwise.
func (o *InlineResponse2014) GetTransmission() NetworksNetworkIdWirelessRfProfilesTransmission {
	if o == nil || o.Transmission == nil {
		var ret NetworksNetworkIdWirelessRfProfilesTransmission
		return ret
	}
	return *o.Transmission
}

// GetTransmissionOk returns a tuple with the Transmission field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2014) GetTransmissionOk() (*NetworksNetworkIdWirelessRfProfilesTransmission, bool) {
	if o == nil || o.Transmission == nil {
		return nil, false
	}
	return o.Transmission, true
}

// HasTransmission returns a boolean if a field has been set.
func (o *InlineResponse2014) HasTransmission() bool {
	if o != nil && o.Transmission != nil {
		return true
	}

	return false
}

// SetTransmission gets a reference to the given NetworksNetworkIdWirelessRfProfilesTransmission and assigns it to the Transmission field.
func (o *InlineResponse2014) SetTransmission(v NetworksNetworkIdWirelessRfProfilesTransmission) {
	o.Transmission = &v
}

// GetPerSsidSettings returns the PerSsidSettings field value if set, zero value otherwise.
func (o *InlineResponse2014) GetPerSsidSettings() InlineResponse2014PerSsidSettings {
	if o == nil || o.PerSsidSettings == nil {
		var ret InlineResponse2014PerSsidSettings
		return ret
	}
	return *o.PerSsidSettings
}

// GetPerSsidSettingsOk returns a tuple with the PerSsidSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2014) GetPerSsidSettingsOk() (*InlineResponse2014PerSsidSettings, bool) {
	if o == nil || o.PerSsidSettings == nil {
		return nil, false
	}
	return o.PerSsidSettings, true
}

// HasPerSsidSettings returns a boolean if a field has been set.
func (o *InlineResponse2014) HasPerSsidSettings() bool {
	if o != nil && o.PerSsidSettings != nil {
		return true
	}

	return false
}

// SetPerSsidSettings gets a reference to the given InlineResponse2014PerSsidSettings and assigns it to the PerSsidSettings field.
func (o *InlineResponse2014) SetPerSsidSettings(v InlineResponse2014PerSsidSettings) {
	o.PerSsidSettings = &v
}

func (o InlineResponse2014) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.NetworkId != nil {
		toSerialize["networkId"] = o.NetworkId
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.ClientBalancingEnabled != nil {
		toSerialize["clientBalancingEnabled"] = o.ClientBalancingEnabled
	}
	if o.MinBitrateType != nil {
		toSerialize["minBitrateType"] = o.MinBitrateType
	}
	if o.BandSelectionType != nil {
		toSerialize["bandSelectionType"] = o.BandSelectionType
	}
	if o.ApBandSettings != nil {
		toSerialize["apBandSettings"] = o.ApBandSettings
	}
	if o.TwoFourGhzSettings != nil {
		toSerialize["twoFourGhzSettings"] = o.TwoFourGhzSettings
	}
	if o.FiveGhzSettings != nil {
		toSerialize["fiveGhzSettings"] = o.FiveGhzSettings
	}
	if o.Transmission != nil {
		toSerialize["transmission"] = o.Transmission
	}
	if o.PerSsidSettings != nil {
		toSerialize["perSsidSettings"] = o.PerSsidSettings
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse2014 struct {
	value *InlineResponse2014
	isSet bool
}

func (v NullableInlineResponse2014) Get() *InlineResponse2014 {
	return v.value
}

func (v *NullableInlineResponse2014) Set(val *InlineResponse2014) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse2014) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse2014) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse2014(val *InlineResponse2014) *NullableInlineResponse2014 {
	return &NullableInlineResponse2014{value: val, isSet: true}
}

func (v NullableInlineResponse2014) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse2014) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


