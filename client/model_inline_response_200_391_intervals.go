/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 03 September, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.62.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200391Intervals struct for InlineResponse200391Intervals
type InlineResponse200391Intervals struct {
	// The start time of the query range with iso8601 format
	StartTs *string `json:"startTs,omitempty"`
	// The end time of the query range  with iso8601 format
	EndTs *string `json:"endTs,omitempty"`
	Overall *InlineResponse200391Overall `json:"overall,omitempty"`
	// The CPU usage per core of the wireless LAN controller
	ByCore []InlineResponse200391ByCore `json:"byCore,omitempty"`
}

// NewInlineResponse200391Intervals instantiates a new InlineResponse200391Intervals object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200391Intervals() *InlineResponse200391Intervals {
	this := InlineResponse200391Intervals{}
	return &this
}

// NewInlineResponse200391IntervalsWithDefaults instantiates a new InlineResponse200391Intervals object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200391IntervalsWithDefaults() *InlineResponse200391Intervals {
	this := InlineResponse200391Intervals{}
	return &this
}

// GetStartTs returns the StartTs field value if set, zero value otherwise.
func (o *InlineResponse200391Intervals) GetStartTs() string {
	if o == nil || isNil(o.StartTs) {
		var ret string
		return ret
	}
	return *o.StartTs
}

// GetStartTsOk returns a tuple with the StartTs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200391Intervals) GetStartTsOk() (*string, bool) {
	if o == nil || isNil(o.StartTs) {
    return nil, false
	}
	return o.StartTs, true
}

// HasStartTs returns a boolean if a field has been set.
func (o *InlineResponse200391Intervals) HasStartTs() bool {
	if o != nil && !isNil(o.StartTs) {
		return true
	}

	return false
}

// SetStartTs gets a reference to the given string and assigns it to the StartTs field.
func (o *InlineResponse200391Intervals) SetStartTs(v string) {
	o.StartTs = &v
}

// GetEndTs returns the EndTs field value if set, zero value otherwise.
func (o *InlineResponse200391Intervals) GetEndTs() string {
	if o == nil || isNil(o.EndTs) {
		var ret string
		return ret
	}
	return *o.EndTs
}

// GetEndTsOk returns a tuple with the EndTs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200391Intervals) GetEndTsOk() (*string, bool) {
	if o == nil || isNil(o.EndTs) {
    return nil, false
	}
	return o.EndTs, true
}

// HasEndTs returns a boolean if a field has been set.
func (o *InlineResponse200391Intervals) HasEndTs() bool {
	if o != nil && !isNil(o.EndTs) {
		return true
	}

	return false
}

// SetEndTs gets a reference to the given string and assigns it to the EndTs field.
func (o *InlineResponse200391Intervals) SetEndTs(v string) {
	o.EndTs = &v
}

// GetOverall returns the Overall field value if set, zero value otherwise.
func (o *InlineResponse200391Intervals) GetOverall() InlineResponse200391Overall {
	if o == nil || isNil(o.Overall) {
		var ret InlineResponse200391Overall
		return ret
	}
	return *o.Overall
}

// GetOverallOk returns a tuple with the Overall field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200391Intervals) GetOverallOk() (*InlineResponse200391Overall, bool) {
	if o == nil || isNil(o.Overall) {
    return nil, false
	}
	return o.Overall, true
}

// HasOverall returns a boolean if a field has been set.
func (o *InlineResponse200391Intervals) HasOverall() bool {
	if o != nil && !isNil(o.Overall) {
		return true
	}

	return false
}

// SetOverall gets a reference to the given InlineResponse200391Overall and assigns it to the Overall field.
func (o *InlineResponse200391Intervals) SetOverall(v InlineResponse200391Overall) {
	o.Overall = &v
}

// GetByCore returns the ByCore field value if set, zero value otherwise.
func (o *InlineResponse200391Intervals) GetByCore() []InlineResponse200391ByCore {
	if o == nil || isNil(o.ByCore) {
		var ret []InlineResponse200391ByCore
		return ret
	}
	return o.ByCore
}

// GetByCoreOk returns a tuple with the ByCore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200391Intervals) GetByCoreOk() ([]InlineResponse200391ByCore, bool) {
	if o == nil || isNil(o.ByCore) {
    return nil, false
	}
	return o.ByCore, true
}

// HasByCore returns a boolean if a field has been set.
func (o *InlineResponse200391Intervals) HasByCore() bool {
	if o != nil && !isNil(o.ByCore) {
		return true
	}

	return false
}

// SetByCore gets a reference to the given []InlineResponse200391ByCore and assigns it to the ByCore field.
func (o *InlineResponse200391Intervals) SetByCore(v []InlineResponse200391ByCore) {
	o.ByCore = v
}

func (o InlineResponse200391Intervals) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.StartTs) {
		toSerialize["startTs"] = o.StartTs
	}
	if !isNil(o.EndTs) {
		toSerialize["endTs"] = o.EndTs
	}
	if !isNil(o.Overall) {
		toSerialize["overall"] = o.Overall
	}
	if !isNil(o.ByCore) {
		toSerialize["byCore"] = o.ByCore
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200391Intervals struct {
	value *InlineResponse200391Intervals
	isSet bool
}

func (v NullableInlineResponse200391Intervals) Get() *InlineResponse200391Intervals {
	return v.value
}

func (v *NullableInlineResponse200391Intervals) Set(val *InlineResponse200391Intervals) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200391Intervals) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200391Intervals) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200391Intervals(val *InlineResponse200391Intervals) *NullableInlineResponse200391Intervals {
	return &NullableInlineResponse200391Intervals{value: val, isSet: true}
}

func (v NullableInlineResponse200391Intervals) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200391Intervals) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


