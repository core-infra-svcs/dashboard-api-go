/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 06 November, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.52.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse20026Cdp cdp information
type InlineResponse20026Cdp struct {
	// ID for the device
	DeviceId *string `json:"deviceId,omitempty"`
	// Model for the device
	Model *string `json:"model,omitempty"`
	// Version for the device
	Version *string `json:"version,omitempty"`
	// ID for the port
	PortId *string `json:"portId,omitempty"`
	// Management IP address
	Address *string `json:"address,omitempty"`
	// Source port
	SourcePort *string `json:"sourcePort,omitempty"`
}

// NewInlineResponse20026Cdp instantiates a new InlineResponse20026Cdp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20026Cdp() *InlineResponse20026Cdp {
	this := InlineResponse20026Cdp{}
	return &this
}

// NewInlineResponse20026CdpWithDefaults instantiates a new InlineResponse20026Cdp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20026CdpWithDefaults() *InlineResponse20026Cdp {
	this := InlineResponse20026Cdp{}
	return &this
}

// GetDeviceId returns the DeviceId field value if set, zero value otherwise.
func (o *InlineResponse20026Cdp) GetDeviceId() string {
	if o == nil || isNil(o.DeviceId) {
		var ret string
		return ret
	}
	return *o.DeviceId
}

// GetDeviceIdOk returns a tuple with the DeviceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20026Cdp) GetDeviceIdOk() (*string, bool) {
	if o == nil || isNil(o.DeviceId) {
    return nil, false
	}
	return o.DeviceId, true
}

// HasDeviceId returns a boolean if a field has been set.
func (o *InlineResponse20026Cdp) HasDeviceId() bool {
	if o != nil && !isNil(o.DeviceId) {
		return true
	}

	return false
}

// SetDeviceId gets a reference to the given string and assigns it to the DeviceId field.
func (o *InlineResponse20026Cdp) SetDeviceId(v string) {
	o.DeviceId = &v
}

// GetModel returns the Model field value if set, zero value otherwise.
func (o *InlineResponse20026Cdp) GetModel() string {
	if o == nil || isNil(o.Model) {
		var ret string
		return ret
	}
	return *o.Model
}

// GetModelOk returns a tuple with the Model field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20026Cdp) GetModelOk() (*string, bool) {
	if o == nil || isNil(o.Model) {
    return nil, false
	}
	return o.Model, true
}

// HasModel returns a boolean if a field has been set.
func (o *InlineResponse20026Cdp) HasModel() bool {
	if o != nil && !isNil(o.Model) {
		return true
	}

	return false
}

// SetModel gets a reference to the given string and assigns it to the Model field.
func (o *InlineResponse20026Cdp) SetModel(v string) {
	o.Model = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *InlineResponse20026Cdp) GetVersion() string {
	if o == nil || isNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20026Cdp) GetVersionOk() (*string, bool) {
	if o == nil || isNil(o.Version) {
    return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *InlineResponse20026Cdp) HasVersion() bool {
	if o != nil && !isNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *InlineResponse20026Cdp) SetVersion(v string) {
	o.Version = &v
}

// GetPortId returns the PortId field value if set, zero value otherwise.
func (o *InlineResponse20026Cdp) GetPortId() string {
	if o == nil || isNil(o.PortId) {
		var ret string
		return ret
	}
	return *o.PortId
}

// GetPortIdOk returns a tuple with the PortId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20026Cdp) GetPortIdOk() (*string, bool) {
	if o == nil || isNil(o.PortId) {
    return nil, false
	}
	return o.PortId, true
}

// HasPortId returns a boolean if a field has been set.
func (o *InlineResponse20026Cdp) HasPortId() bool {
	if o != nil && !isNil(o.PortId) {
		return true
	}

	return false
}

// SetPortId gets a reference to the given string and assigns it to the PortId field.
func (o *InlineResponse20026Cdp) SetPortId(v string) {
	o.PortId = &v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *InlineResponse20026Cdp) GetAddress() string {
	if o == nil || isNil(o.Address) {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20026Cdp) GetAddressOk() (*string, bool) {
	if o == nil || isNil(o.Address) {
    return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *InlineResponse20026Cdp) HasAddress() bool {
	if o != nil && !isNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *InlineResponse20026Cdp) SetAddress(v string) {
	o.Address = &v
}

// GetSourcePort returns the SourcePort field value if set, zero value otherwise.
func (o *InlineResponse20026Cdp) GetSourcePort() string {
	if o == nil || isNil(o.SourcePort) {
		var ret string
		return ret
	}
	return *o.SourcePort
}

// GetSourcePortOk returns a tuple with the SourcePort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20026Cdp) GetSourcePortOk() (*string, bool) {
	if o == nil || isNil(o.SourcePort) {
    return nil, false
	}
	return o.SourcePort, true
}

// HasSourcePort returns a boolean if a field has been set.
func (o *InlineResponse20026Cdp) HasSourcePort() bool {
	if o != nil && !isNil(o.SourcePort) {
		return true
	}

	return false
}

// SetSourcePort gets a reference to the given string and assigns it to the SourcePort field.
func (o *InlineResponse20026Cdp) SetSourcePort(v string) {
	o.SourcePort = &v
}

func (o InlineResponse20026Cdp) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.DeviceId) {
		toSerialize["deviceId"] = o.DeviceId
	}
	if !isNil(o.Model) {
		toSerialize["model"] = o.Model
	}
	if !isNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !isNil(o.PortId) {
		toSerialize["portId"] = o.PortId
	}
	if !isNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !isNil(o.SourcePort) {
		toSerialize["sourcePort"] = o.SourcePort
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20026Cdp struct {
	value *InlineResponse20026Cdp
	isSet bool
}

func (v NullableInlineResponse20026Cdp) Get() *InlineResponse20026Cdp {
	return v.value
}

func (v *NullableInlineResponse20026Cdp) Set(val *InlineResponse20026Cdp) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20026Cdp) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20026Cdp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20026Cdp(val *InlineResponse20026Cdp) *NullableInlineResponse20026Cdp {
	return &NullableInlineResponse20026Cdp{value: val, isSet: true}
}

func (v NullableInlineResponse20026Cdp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20026Cdp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


