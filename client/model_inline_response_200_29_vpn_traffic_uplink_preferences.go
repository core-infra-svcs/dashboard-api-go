/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 18 December, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.41.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse20029VpnTrafficUplinkPreferences struct for InlineResponse20029VpnTrafficUplinkPreferences
type InlineResponse20029VpnTrafficUplinkPreferences struct {
	// Traffic filters
	TrafficFilters []InlineResponse20029TrafficFilters1 `json:"trafficFilters"`
	// Preferred uplink for uplink preference rule. Must be one of: 'wan1', 'wan2', 'bestForVoIP', 'loadBalancing' or 'defaultUplink'
	PreferredUplink string `json:"preferredUplink"`
	// Fail over criterion for uplink preference rule. Must be one of: 'poorPerformance' or 'uplinkDown'
	FailOverCriterion *string `json:"failOverCriterion,omitempty"`
	PerformanceClass *InlineResponse20029PerformanceClass `json:"performanceClass,omitempty"`
}

// NewInlineResponse20029VpnTrafficUplinkPreferences instantiates a new InlineResponse20029VpnTrafficUplinkPreferences object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20029VpnTrafficUplinkPreferences(trafficFilters []InlineResponse20029TrafficFilters1, preferredUplink string) *InlineResponse20029VpnTrafficUplinkPreferences {
	this := InlineResponse20029VpnTrafficUplinkPreferences{}
	this.TrafficFilters = trafficFilters
	this.PreferredUplink = preferredUplink
	return &this
}

// NewInlineResponse20029VpnTrafficUplinkPreferencesWithDefaults instantiates a new InlineResponse20029VpnTrafficUplinkPreferences object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20029VpnTrafficUplinkPreferencesWithDefaults() *InlineResponse20029VpnTrafficUplinkPreferences {
	this := InlineResponse20029VpnTrafficUplinkPreferences{}
	return &this
}

// GetTrafficFilters returns the TrafficFilters field value
func (o *InlineResponse20029VpnTrafficUplinkPreferences) GetTrafficFilters() []InlineResponse20029TrafficFilters1 {
	if o == nil {
		var ret []InlineResponse20029TrafficFilters1
		return ret
	}

	return o.TrafficFilters
}

// GetTrafficFiltersOk returns a tuple with the TrafficFilters field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20029VpnTrafficUplinkPreferences) GetTrafficFiltersOk() ([]InlineResponse20029TrafficFilters1, bool) {
	if o == nil {
    return nil, false
	}
	return o.TrafficFilters, true
}

// SetTrafficFilters sets field value
func (o *InlineResponse20029VpnTrafficUplinkPreferences) SetTrafficFilters(v []InlineResponse20029TrafficFilters1) {
	o.TrafficFilters = v
}

// GetPreferredUplink returns the PreferredUplink field value
func (o *InlineResponse20029VpnTrafficUplinkPreferences) GetPreferredUplink() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PreferredUplink
}

// GetPreferredUplinkOk returns a tuple with the PreferredUplink field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20029VpnTrafficUplinkPreferences) GetPreferredUplinkOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.PreferredUplink, true
}

// SetPreferredUplink sets field value
func (o *InlineResponse20029VpnTrafficUplinkPreferences) SetPreferredUplink(v string) {
	o.PreferredUplink = v
}

// GetFailOverCriterion returns the FailOverCriterion field value if set, zero value otherwise.
func (o *InlineResponse20029VpnTrafficUplinkPreferences) GetFailOverCriterion() string {
	if o == nil || isNil(o.FailOverCriterion) {
		var ret string
		return ret
	}
	return *o.FailOverCriterion
}

// GetFailOverCriterionOk returns a tuple with the FailOverCriterion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20029VpnTrafficUplinkPreferences) GetFailOverCriterionOk() (*string, bool) {
	if o == nil || isNil(o.FailOverCriterion) {
    return nil, false
	}
	return o.FailOverCriterion, true
}

// HasFailOverCriterion returns a boolean if a field has been set.
func (o *InlineResponse20029VpnTrafficUplinkPreferences) HasFailOverCriterion() bool {
	if o != nil && !isNil(o.FailOverCriterion) {
		return true
	}

	return false
}

// SetFailOverCriterion gets a reference to the given string and assigns it to the FailOverCriterion field.
func (o *InlineResponse20029VpnTrafficUplinkPreferences) SetFailOverCriterion(v string) {
	o.FailOverCriterion = &v
}

// GetPerformanceClass returns the PerformanceClass field value if set, zero value otherwise.
func (o *InlineResponse20029VpnTrafficUplinkPreferences) GetPerformanceClass() InlineResponse20029PerformanceClass {
	if o == nil || isNil(o.PerformanceClass) {
		var ret InlineResponse20029PerformanceClass
		return ret
	}
	return *o.PerformanceClass
}

// GetPerformanceClassOk returns a tuple with the PerformanceClass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20029VpnTrafficUplinkPreferences) GetPerformanceClassOk() (*InlineResponse20029PerformanceClass, bool) {
	if o == nil || isNil(o.PerformanceClass) {
    return nil, false
	}
	return o.PerformanceClass, true
}

// HasPerformanceClass returns a boolean if a field has been set.
func (o *InlineResponse20029VpnTrafficUplinkPreferences) HasPerformanceClass() bool {
	if o != nil && !isNil(o.PerformanceClass) {
		return true
	}

	return false
}

// SetPerformanceClass gets a reference to the given InlineResponse20029PerformanceClass and assigns it to the PerformanceClass field.
func (o *InlineResponse20029VpnTrafficUplinkPreferences) SetPerformanceClass(v InlineResponse20029PerformanceClass) {
	o.PerformanceClass = &v
}

func (o InlineResponse20029VpnTrafficUplinkPreferences) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["trafficFilters"] = o.TrafficFilters
	}
	if true {
		toSerialize["preferredUplink"] = o.PreferredUplink
	}
	if !isNil(o.FailOverCriterion) {
		toSerialize["failOverCriterion"] = o.FailOverCriterion
	}
	if !isNil(o.PerformanceClass) {
		toSerialize["performanceClass"] = o.PerformanceClass
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20029VpnTrafficUplinkPreferences struct {
	value *InlineResponse20029VpnTrafficUplinkPreferences
	isSet bool
}

func (v NullableInlineResponse20029VpnTrafficUplinkPreferences) Get() *InlineResponse20029VpnTrafficUplinkPreferences {
	return v.value
}

func (v *NullableInlineResponse20029VpnTrafficUplinkPreferences) Set(val *InlineResponse20029VpnTrafficUplinkPreferences) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20029VpnTrafficUplinkPreferences) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20029VpnTrafficUplinkPreferences) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20029VpnTrafficUplinkPreferences(val *InlineResponse20029VpnTrafficUplinkPreferences) *NullableInlineResponse20029VpnTrafficUplinkPreferences {
	return &NullableInlineResponse20029VpnTrafficUplinkPreferences{value: val, isSet: true}
}

func (v NullableInlineResponse20029VpnTrafficUplinkPreferences) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20029VpnTrafficUplinkPreferences) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


