/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 03 April, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.45.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200220Usage Usage information of all clients across organization
type InlineResponse200220Usage struct {
	Overall *InlineResponse200220UsageOverall `json:"overall,omitempty"`
	// Average data usage (in kb) of each client in organization
	Average *float32 `json:"average,omitempty"`
}

// NewInlineResponse200220Usage instantiates a new InlineResponse200220Usage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200220Usage() *InlineResponse200220Usage {
	this := InlineResponse200220Usage{}
	return &this
}

// NewInlineResponse200220UsageWithDefaults instantiates a new InlineResponse200220Usage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200220UsageWithDefaults() *InlineResponse200220Usage {
	this := InlineResponse200220Usage{}
	return &this
}

// GetOverall returns the Overall field value if set, zero value otherwise.
func (o *InlineResponse200220Usage) GetOverall() InlineResponse200220UsageOverall {
	if o == nil || isNil(o.Overall) {
		var ret InlineResponse200220UsageOverall
		return ret
	}
	return *o.Overall
}

// GetOverallOk returns a tuple with the Overall field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200220Usage) GetOverallOk() (*InlineResponse200220UsageOverall, bool) {
	if o == nil || isNil(o.Overall) {
    return nil, false
	}
	return o.Overall, true
}

// HasOverall returns a boolean if a field has been set.
func (o *InlineResponse200220Usage) HasOverall() bool {
	if o != nil && !isNil(o.Overall) {
		return true
	}

	return false
}

// SetOverall gets a reference to the given InlineResponse200220UsageOverall and assigns it to the Overall field.
func (o *InlineResponse200220Usage) SetOverall(v InlineResponse200220UsageOverall) {
	o.Overall = &v
}

// GetAverage returns the Average field value if set, zero value otherwise.
func (o *InlineResponse200220Usage) GetAverage() float32 {
	if o == nil || isNil(o.Average) {
		var ret float32
		return ret
	}
	return *o.Average
}

// GetAverageOk returns a tuple with the Average field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200220Usage) GetAverageOk() (*float32, bool) {
	if o == nil || isNil(o.Average) {
    return nil, false
	}
	return o.Average, true
}

// HasAverage returns a boolean if a field has been set.
func (o *InlineResponse200220Usage) HasAverage() bool {
	if o != nil && !isNil(o.Average) {
		return true
	}

	return false
}

// SetAverage gets a reference to the given float32 and assigns it to the Average field.
func (o *InlineResponse200220Usage) SetAverage(v float32) {
	o.Average = &v
}

func (o InlineResponse200220Usage) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Overall) {
		toSerialize["overall"] = o.Overall
	}
	if !isNil(o.Average) {
		toSerialize["average"] = o.Average
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200220Usage struct {
	value *InlineResponse200220Usage
	isSet bool
}

func (v NullableInlineResponse200220Usage) Get() *InlineResponse200220Usage {
	return v.value
}

func (v *NullableInlineResponse200220Usage) Set(val *InlineResponse200220Usage) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200220Usage) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200220Usage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200220Usage(val *InlineResponse200220Usage) *NullableInlineResponse200220Usage {
	return &NullableInlineResponse200220Usage{value: val, isSet: true}
}

func (v NullableInlineResponse200220Usage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200220Usage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


