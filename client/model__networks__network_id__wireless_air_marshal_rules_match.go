/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 03 September, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.62.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// NetworksNetworkIdWirelessAirMarshalRulesMatch Object describing the rule specification.
type NetworksNetworkIdWirelessAirMarshalRulesMatch struct {
	// The type of match.
	Type string `json:"type"`
	// The string used to match.
	String string `json:"string"`
}

// NewNetworksNetworkIdWirelessAirMarshalRulesMatch instantiates a new NetworksNetworkIdWirelessAirMarshalRulesMatch object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworksNetworkIdWirelessAirMarshalRulesMatch(type_ string, string_ string) *NetworksNetworkIdWirelessAirMarshalRulesMatch {
	this := NetworksNetworkIdWirelessAirMarshalRulesMatch{}
	this.Type = type_
	this.String = string_
	return &this
}

// NewNetworksNetworkIdWirelessAirMarshalRulesMatchWithDefaults instantiates a new NetworksNetworkIdWirelessAirMarshalRulesMatch object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworksNetworkIdWirelessAirMarshalRulesMatchWithDefaults() *NetworksNetworkIdWirelessAirMarshalRulesMatch {
	this := NetworksNetworkIdWirelessAirMarshalRulesMatch{}
	return &this
}

// GetType returns the Type field value
func (o *NetworksNetworkIdWirelessAirMarshalRulesMatch) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *NetworksNetworkIdWirelessAirMarshalRulesMatch) GetTypeOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *NetworksNetworkIdWirelessAirMarshalRulesMatch) SetType(v string) {
	o.Type = v
}

// GetString returns the String field value
func (o *NetworksNetworkIdWirelessAirMarshalRulesMatch) GetString() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.String
}

// GetStringOk returns a tuple with the String field value
// and a boolean to check if the value has been set.
func (o *NetworksNetworkIdWirelessAirMarshalRulesMatch) GetStringOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.String, true
}

// SetString sets field value
func (o *NetworksNetworkIdWirelessAirMarshalRulesMatch) SetString(v string) {
	o.String = v
}

func (o NetworksNetworkIdWirelessAirMarshalRulesMatch) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["string"] = o.String
	}
	return json.Marshal(toSerialize)
}

type NullableNetworksNetworkIdWirelessAirMarshalRulesMatch struct {
	value *NetworksNetworkIdWirelessAirMarshalRulesMatch
	isSet bool
}

func (v NullableNetworksNetworkIdWirelessAirMarshalRulesMatch) Get() *NetworksNetworkIdWirelessAirMarshalRulesMatch {
	return v.value
}

func (v *NullableNetworksNetworkIdWirelessAirMarshalRulesMatch) Set(val *NetworksNetworkIdWirelessAirMarshalRulesMatch) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworksNetworkIdWirelessAirMarshalRulesMatch) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworksNetworkIdWirelessAirMarshalRulesMatch) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworksNetworkIdWirelessAirMarshalRulesMatch(val *NetworksNetworkIdWirelessAirMarshalRulesMatch) *NullableNetworksNetworkIdWirelessAirMarshalRulesMatch {
	return &NullableNetworksNetworkIdWirelessAirMarshalRulesMatch{value: val, isSet: true}
}

func (v NullableNetworksNetworkIdWirelessAirMarshalRulesMatch) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworksNetworkIdWirelessAirMarshalRulesMatch) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


