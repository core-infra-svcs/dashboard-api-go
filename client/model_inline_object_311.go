/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 01 October, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.63.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineObject311 struct for InlineObject311
type InlineObject311 struct {
	// A list of Meraki door lock ids to disenroll from the device
	DoorLockIds []string `json:"doorLockIds,omitempty"`
}

// NewInlineObject311 instantiates a new InlineObject311 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject311() *InlineObject311 {
	this := InlineObject311{}
	return &this
}

// NewInlineObject311WithDefaults instantiates a new InlineObject311 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject311WithDefaults() *InlineObject311 {
	this := InlineObject311{}
	return &this
}

// GetDoorLockIds returns the DoorLockIds field value if set, zero value otherwise.
func (o *InlineObject311) GetDoorLockIds() []string {
	if o == nil || isNil(o.DoorLockIds) {
		var ret []string
		return ret
	}
	return o.DoorLockIds
}

// GetDoorLockIdsOk returns a tuple with the DoorLockIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject311) GetDoorLockIdsOk() ([]string, bool) {
	if o == nil || isNil(o.DoorLockIds) {
    return nil, false
	}
	return o.DoorLockIds, true
}

// HasDoorLockIds returns a boolean if a field has been set.
func (o *InlineObject311) HasDoorLockIds() bool {
	if o != nil && !isNil(o.DoorLockIds) {
		return true
	}

	return false
}

// SetDoorLockIds gets a reference to the given []string and assigns it to the DoorLockIds field.
func (o *InlineObject311) SetDoorLockIds(v []string) {
	o.DoorLockIds = v
}

func (o InlineObject311) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.DoorLockIds) {
		toSerialize["doorLockIds"] = o.DoorLockIds
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject311 struct {
	value *InlineObject311
	isSet bool
}

func (v NullableInlineObject311) Get() *InlineObject311 {
	return v.value
}

func (v *NullableInlineObject311) Set(val *InlineObject311) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject311) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject311) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject311(val *InlineObject311) *NullableInlineObject311 {
	return &NullableInlineObject311{value: val, isSet: true}
}

func (v NullableInlineObject311) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject311) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


