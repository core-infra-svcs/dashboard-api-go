/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 March, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.56.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// OrganizationsOrganizationIdWirelessControllerDevicesRedundancyFailoverHistoryActive Details about the active unit
type OrganizationsOrganizationIdWirelessControllerDevicesRedundancyFailoverHistoryActive struct {
	Chassis *OrganizationsOrganizationIdWirelessControllerDevicesRedundancyFailoverHistoryActiveChassis `json:"chassis,omitempty"`
}

// NewOrganizationsOrganizationIdWirelessControllerDevicesRedundancyFailoverHistoryActive instantiates a new OrganizationsOrganizationIdWirelessControllerDevicesRedundancyFailoverHistoryActive object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationsOrganizationIdWirelessControllerDevicesRedundancyFailoverHistoryActive() *OrganizationsOrganizationIdWirelessControllerDevicesRedundancyFailoverHistoryActive {
	this := OrganizationsOrganizationIdWirelessControllerDevicesRedundancyFailoverHistoryActive{}
	return &this
}

// NewOrganizationsOrganizationIdWirelessControllerDevicesRedundancyFailoverHistoryActiveWithDefaults instantiates a new OrganizationsOrganizationIdWirelessControllerDevicesRedundancyFailoverHistoryActive object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationsOrganizationIdWirelessControllerDevicesRedundancyFailoverHistoryActiveWithDefaults() *OrganizationsOrganizationIdWirelessControllerDevicesRedundancyFailoverHistoryActive {
	this := OrganizationsOrganizationIdWirelessControllerDevicesRedundancyFailoverHistoryActive{}
	return &this
}

// GetChassis returns the Chassis field value if set, zero value otherwise.
func (o *OrganizationsOrganizationIdWirelessControllerDevicesRedundancyFailoverHistoryActive) GetChassis() OrganizationsOrganizationIdWirelessControllerDevicesRedundancyFailoverHistoryActiveChassis {
	if o == nil || isNil(o.Chassis) {
		var ret OrganizationsOrganizationIdWirelessControllerDevicesRedundancyFailoverHistoryActiveChassis
		return ret
	}
	return *o.Chassis
}

// GetChassisOk returns a tuple with the Chassis field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationsOrganizationIdWirelessControllerDevicesRedundancyFailoverHistoryActive) GetChassisOk() (*OrganizationsOrganizationIdWirelessControllerDevicesRedundancyFailoverHistoryActiveChassis, bool) {
	if o == nil || isNil(o.Chassis) {
    return nil, false
	}
	return o.Chassis, true
}

// HasChassis returns a boolean if a field has been set.
func (o *OrganizationsOrganizationIdWirelessControllerDevicesRedundancyFailoverHistoryActive) HasChassis() bool {
	if o != nil && !isNil(o.Chassis) {
		return true
	}

	return false
}

// SetChassis gets a reference to the given OrganizationsOrganizationIdWirelessControllerDevicesRedundancyFailoverHistoryActiveChassis and assigns it to the Chassis field.
func (o *OrganizationsOrganizationIdWirelessControllerDevicesRedundancyFailoverHistoryActive) SetChassis(v OrganizationsOrganizationIdWirelessControllerDevicesRedundancyFailoverHistoryActiveChassis) {
	o.Chassis = &v
}

func (o OrganizationsOrganizationIdWirelessControllerDevicesRedundancyFailoverHistoryActive) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Chassis) {
		toSerialize["chassis"] = o.Chassis
	}
	return json.Marshal(toSerialize)
}

type NullableOrganizationsOrganizationIdWirelessControllerDevicesRedundancyFailoverHistoryActive struct {
	value *OrganizationsOrganizationIdWirelessControllerDevicesRedundancyFailoverHistoryActive
	isSet bool
}

func (v NullableOrganizationsOrganizationIdWirelessControllerDevicesRedundancyFailoverHistoryActive) Get() *OrganizationsOrganizationIdWirelessControllerDevicesRedundancyFailoverHistoryActive {
	return v.value
}

func (v *NullableOrganizationsOrganizationIdWirelessControllerDevicesRedundancyFailoverHistoryActive) Set(val *OrganizationsOrganizationIdWirelessControllerDevicesRedundancyFailoverHistoryActive) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationsOrganizationIdWirelessControllerDevicesRedundancyFailoverHistoryActive) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationsOrganizationIdWirelessControllerDevicesRedundancyFailoverHistoryActive) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationsOrganizationIdWirelessControllerDevicesRedundancyFailoverHistoryActive(val *OrganizationsOrganizationIdWirelessControllerDevicesRedundancyFailoverHistoryActive) *NullableOrganizationsOrganizationIdWirelessControllerDevicesRedundancyFailoverHistoryActive {
	return &NullableOrganizationsOrganizationIdWirelessControllerDevicesRedundancyFailoverHistoryActive{value: val, isSet: true}
}

func (v NullableOrganizationsOrganizationIdWirelessControllerDevicesRedundancyFailoverHistoryActive) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationsOrganizationIdWirelessControllerDevicesRedundancyFailoverHistoryActive) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


