/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 02 July, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.60.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200259 struct for InlineResponse200259
type InlineResponse200259 struct {
	// eSIM EID
	Eid string `json:"eid"`
	// eSIM ICCID
	Iccid string `json:"iccid"`
	// Swap status
	Status string `json:"status"`
}

// NewInlineResponse200259 instantiates a new InlineResponse200259 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200259(eid string, iccid string, status string) *InlineResponse200259 {
	this := InlineResponse200259{}
	this.Eid = eid
	this.Iccid = iccid
	this.Status = status
	return &this
}

// NewInlineResponse200259WithDefaults instantiates a new InlineResponse200259 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200259WithDefaults() *InlineResponse200259 {
	this := InlineResponse200259{}
	return &this
}

// GetEid returns the Eid field value
func (o *InlineResponse200259) GetEid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Eid
}

// GetEidOk returns a tuple with the Eid field value
// and a boolean to check if the value has been set.
func (o *InlineResponse200259) GetEidOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Eid, true
}

// SetEid sets field value
func (o *InlineResponse200259) SetEid(v string) {
	o.Eid = v
}

// GetIccid returns the Iccid field value
func (o *InlineResponse200259) GetIccid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Iccid
}

// GetIccidOk returns a tuple with the Iccid field value
// and a boolean to check if the value has been set.
func (o *InlineResponse200259) GetIccidOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Iccid, true
}

// SetIccid sets field value
func (o *InlineResponse200259) SetIccid(v string) {
	o.Iccid = v
}

// GetStatus returns the Status field value
func (o *InlineResponse200259) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *InlineResponse200259) GetStatusOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *InlineResponse200259) SetStatus(v string) {
	o.Status = v
}

func (o InlineResponse200259) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["eid"] = o.Eid
	}
	if true {
		toSerialize["iccid"] = o.Iccid
	}
	if true {
		toSerialize["status"] = o.Status
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200259 struct {
	value *InlineResponse200259
	isSet bool
}

func (v NullableInlineResponse200259) Get() *InlineResponse200259 {
	return v.value
}

func (v *NullableInlineResponse200259) Set(val *InlineResponse200259) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200259) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200259) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200259(val *InlineResponse200259) *NullableInlineResponse200259 {
	return &NullableInlineResponse200259{value: val, isSet: true}
}

func (v NullableInlineResponse200259) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200259) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


