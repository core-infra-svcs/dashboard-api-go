/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 February, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.55.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200245Items struct for InlineResponse200245Items
type InlineResponse200245Items struct {
	// Service provider name.
	Name *string `json:"name,omitempty"`
	Logo *InlineResponse200245Logo `json:"logo,omitempty"`
	// Indicates if service provider is the bootstrap provider.
	IsBootstrap *bool `json:"isBootstrap,omitempty"`
	Terms *InlineResponse200245Terms `json:"terms,omitempty"`
}

// NewInlineResponse200245Items instantiates a new InlineResponse200245Items object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200245Items() *InlineResponse200245Items {
	this := InlineResponse200245Items{}
	return &this
}

// NewInlineResponse200245ItemsWithDefaults instantiates a new InlineResponse200245Items object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200245ItemsWithDefaults() *InlineResponse200245Items {
	this := InlineResponse200245Items{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *InlineResponse200245Items) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200245Items) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
    return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *InlineResponse200245Items) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *InlineResponse200245Items) SetName(v string) {
	o.Name = &v
}

// GetLogo returns the Logo field value if set, zero value otherwise.
func (o *InlineResponse200245Items) GetLogo() InlineResponse200245Logo {
	if o == nil || isNil(o.Logo) {
		var ret InlineResponse200245Logo
		return ret
	}
	return *o.Logo
}

// GetLogoOk returns a tuple with the Logo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200245Items) GetLogoOk() (*InlineResponse200245Logo, bool) {
	if o == nil || isNil(o.Logo) {
    return nil, false
	}
	return o.Logo, true
}

// HasLogo returns a boolean if a field has been set.
func (o *InlineResponse200245Items) HasLogo() bool {
	if o != nil && !isNil(o.Logo) {
		return true
	}

	return false
}

// SetLogo gets a reference to the given InlineResponse200245Logo and assigns it to the Logo field.
func (o *InlineResponse200245Items) SetLogo(v InlineResponse200245Logo) {
	o.Logo = &v
}

// GetIsBootstrap returns the IsBootstrap field value if set, zero value otherwise.
func (o *InlineResponse200245Items) GetIsBootstrap() bool {
	if o == nil || isNil(o.IsBootstrap) {
		var ret bool
		return ret
	}
	return *o.IsBootstrap
}

// GetIsBootstrapOk returns a tuple with the IsBootstrap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200245Items) GetIsBootstrapOk() (*bool, bool) {
	if o == nil || isNil(o.IsBootstrap) {
    return nil, false
	}
	return o.IsBootstrap, true
}

// HasIsBootstrap returns a boolean if a field has been set.
func (o *InlineResponse200245Items) HasIsBootstrap() bool {
	if o != nil && !isNil(o.IsBootstrap) {
		return true
	}

	return false
}

// SetIsBootstrap gets a reference to the given bool and assigns it to the IsBootstrap field.
func (o *InlineResponse200245Items) SetIsBootstrap(v bool) {
	o.IsBootstrap = &v
}

// GetTerms returns the Terms field value if set, zero value otherwise.
func (o *InlineResponse200245Items) GetTerms() InlineResponse200245Terms {
	if o == nil || isNil(o.Terms) {
		var ret InlineResponse200245Terms
		return ret
	}
	return *o.Terms
}

// GetTermsOk returns a tuple with the Terms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200245Items) GetTermsOk() (*InlineResponse200245Terms, bool) {
	if o == nil || isNil(o.Terms) {
    return nil, false
	}
	return o.Terms, true
}

// HasTerms returns a boolean if a field has been set.
func (o *InlineResponse200245Items) HasTerms() bool {
	if o != nil && !isNil(o.Terms) {
		return true
	}

	return false
}

// SetTerms gets a reference to the given InlineResponse200245Terms and assigns it to the Terms field.
func (o *InlineResponse200245Items) SetTerms(v InlineResponse200245Terms) {
	o.Terms = &v
}

func (o InlineResponse200245Items) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.Logo) {
		toSerialize["logo"] = o.Logo
	}
	if !isNil(o.IsBootstrap) {
		toSerialize["isBootstrap"] = o.IsBootstrap
	}
	if !isNil(o.Terms) {
		toSerialize["terms"] = o.Terms
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200245Items struct {
	value *InlineResponse200245Items
	isSet bool
}

func (v NullableInlineResponse200245Items) Get() *InlineResponse200245Items {
	return v.value
}

func (v *NullableInlineResponse200245Items) Set(val *InlineResponse200245Items) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200245Items) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200245Items) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200245Items(val *InlineResponse200245Items) *NullableInlineResponse200245Items {
	return &NullableInlineResponse200245Items{value: val, isSet: true}
}

func (v NullableInlineResponse200245Items) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200245Items) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


