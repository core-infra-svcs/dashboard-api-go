/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 04 December, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.53.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200223Meta Metadata about the response
type InlineResponse200223Meta struct {
	Counts InlineResponse200223MetaCounts `json:"counts"`
}

// NewInlineResponse200223Meta instantiates a new InlineResponse200223Meta object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200223Meta(counts InlineResponse200223MetaCounts) *InlineResponse200223Meta {
	this := InlineResponse200223Meta{}
	this.Counts = counts
	return &this
}

// NewInlineResponse200223MetaWithDefaults instantiates a new InlineResponse200223Meta object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200223MetaWithDefaults() *InlineResponse200223Meta {
	this := InlineResponse200223Meta{}
	return &this
}

// GetCounts returns the Counts field value
func (o *InlineResponse200223Meta) GetCounts() InlineResponse200223MetaCounts {
	if o == nil {
		var ret InlineResponse200223MetaCounts
		return ret
	}

	return o.Counts
}

// GetCountsOk returns a tuple with the Counts field value
// and a boolean to check if the value has been set.
func (o *InlineResponse200223Meta) GetCountsOk() (*InlineResponse200223MetaCounts, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Counts, true
}

// SetCounts sets field value
func (o *InlineResponse200223Meta) SetCounts(v InlineResponse200223MetaCounts) {
	o.Counts = v
}

func (o InlineResponse200223Meta) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["counts"] = o.Counts
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200223Meta struct {
	value *InlineResponse200223Meta
	isSet bool
}

func (v NullableInlineResponse200223Meta) Get() *InlineResponse200223Meta {
	return v.value
}

func (v *NullableInlineResponse200223Meta) Set(val *InlineResponse200223Meta) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200223Meta) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200223Meta) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200223Meta(val *InlineResponse200223Meta) *NullableInlineResponse200223Meta {
	return &NullableInlineResponse200223Meta{value: val, isSet: true}
}

func (v NullableInlineResponse200223Meta) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200223Meta) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


