/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 02 July, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.60.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200254Items struct for InlineResponse200254Items
type InlineResponse200254Items struct {
	Device *InlineResponse200254Device `json:"device,omitempty"`
	// Whether eSIM is currently active SIM on Device
	Active *bool `json:"active,omitempty"`
	// eSIM EID
	Eid *string `json:"eid,omitempty"`
	// Last update of eSIM
	LastUpdatedAt *string `json:"lastUpdatedAt,omitempty"`
	Network *InlineResponse200254Network `json:"network,omitempty"`
	// eSIM Profile Information
	Profiles []InlineResponse200254Profiles `json:"profiles,omitempty"`
}

// NewInlineResponse200254Items instantiates a new InlineResponse200254Items object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200254Items() *InlineResponse200254Items {
	this := InlineResponse200254Items{}
	return &this
}

// NewInlineResponse200254ItemsWithDefaults instantiates a new InlineResponse200254Items object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200254ItemsWithDefaults() *InlineResponse200254Items {
	this := InlineResponse200254Items{}
	return &this
}

// GetDevice returns the Device field value if set, zero value otherwise.
func (o *InlineResponse200254Items) GetDevice() InlineResponse200254Device {
	if o == nil || isNil(o.Device) {
		var ret InlineResponse200254Device
		return ret
	}
	return *o.Device
}

// GetDeviceOk returns a tuple with the Device field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200254Items) GetDeviceOk() (*InlineResponse200254Device, bool) {
	if o == nil || isNil(o.Device) {
    return nil, false
	}
	return o.Device, true
}

// HasDevice returns a boolean if a field has been set.
func (o *InlineResponse200254Items) HasDevice() bool {
	if o != nil && !isNil(o.Device) {
		return true
	}

	return false
}

// SetDevice gets a reference to the given InlineResponse200254Device and assigns it to the Device field.
func (o *InlineResponse200254Items) SetDevice(v InlineResponse200254Device) {
	o.Device = &v
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *InlineResponse200254Items) GetActive() bool {
	if o == nil || isNil(o.Active) {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200254Items) GetActiveOk() (*bool, bool) {
	if o == nil || isNil(o.Active) {
    return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *InlineResponse200254Items) HasActive() bool {
	if o != nil && !isNil(o.Active) {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *InlineResponse200254Items) SetActive(v bool) {
	o.Active = &v
}

// GetEid returns the Eid field value if set, zero value otherwise.
func (o *InlineResponse200254Items) GetEid() string {
	if o == nil || isNil(o.Eid) {
		var ret string
		return ret
	}
	return *o.Eid
}

// GetEidOk returns a tuple with the Eid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200254Items) GetEidOk() (*string, bool) {
	if o == nil || isNil(o.Eid) {
    return nil, false
	}
	return o.Eid, true
}

// HasEid returns a boolean if a field has been set.
func (o *InlineResponse200254Items) HasEid() bool {
	if o != nil && !isNil(o.Eid) {
		return true
	}

	return false
}

// SetEid gets a reference to the given string and assigns it to the Eid field.
func (o *InlineResponse200254Items) SetEid(v string) {
	o.Eid = &v
}

// GetLastUpdatedAt returns the LastUpdatedAt field value if set, zero value otherwise.
func (o *InlineResponse200254Items) GetLastUpdatedAt() string {
	if o == nil || isNil(o.LastUpdatedAt) {
		var ret string
		return ret
	}
	return *o.LastUpdatedAt
}

// GetLastUpdatedAtOk returns a tuple with the LastUpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200254Items) GetLastUpdatedAtOk() (*string, bool) {
	if o == nil || isNil(o.LastUpdatedAt) {
    return nil, false
	}
	return o.LastUpdatedAt, true
}

// HasLastUpdatedAt returns a boolean if a field has been set.
func (o *InlineResponse200254Items) HasLastUpdatedAt() bool {
	if o != nil && !isNil(o.LastUpdatedAt) {
		return true
	}

	return false
}

// SetLastUpdatedAt gets a reference to the given string and assigns it to the LastUpdatedAt field.
func (o *InlineResponse200254Items) SetLastUpdatedAt(v string) {
	o.LastUpdatedAt = &v
}

// GetNetwork returns the Network field value if set, zero value otherwise.
func (o *InlineResponse200254Items) GetNetwork() InlineResponse200254Network {
	if o == nil || isNil(o.Network) {
		var ret InlineResponse200254Network
		return ret
	}
	return *o.Network
}

// GetNetworkOk returns a tuple with the Network field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200254Items) GetNetworkOk() (*InlineResponse200254Network, bool) {
	if o == nil || isNil(o.Network) {
    return nil, false
	}
	return o.Network, true
}

// HasNetwork returns a boolean if a field has been set.
func (o *InlineResponse200254Items) HasNetwork() bool {
	if o != nil && !isNil(o.Network) {
		return true
	}

	return false
}

// SetNetwork gets a reference to the given InlineResponse200254Network and assigns it to the Network field.
func (o *InlineResponse200254Items) SetNetwork(v InlineResponse200254Network) {
	o.Network = &v
}

// GetProfiles returns the Profiles field value if set, zero value otherwise.
func (o *InlineResponse200254Items) GetProfiles() []InlineResponse200254Profiles {
	if o == nil || isNil(o.Profiles) {
		var ret []InlineResponse200254Profiles
		return ret
	}
	return o.Profiles
}

// GetProfilesOk returns a tuple with the Profiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200254Items) GetProfilesOk() ([]InlineResponse200254Profiles, bool) {
	if o == nil || isNil(o.Profiles) {
    return nil, false
	}
	return o.Profiles, true
}

// HasProfiles returns a boolean if a field has been set.
func (o *InlineResponse200254Items) HasProfiles() bool {
	if o != nil && !isNil(o.Profiles) {
		return true
	}

	return false
}

// SetProfiles gets a reference to the given []InlineResponse200254Profiles and assigns it to the Profiles field.
func (o *InlineResponse200254Items) SetProfiles(v []InlineResponse200254Profiles) {
	o.Profiles = v
}

func (o InlineResponse200254Items) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Device) {
		toSerialize["device"] = o.Device
	}
	if !isNil(o.Active) {
		toSerialize["active"] = o.Active
	}
	if !isNil(o.Eid) {
		toSerialize["eid"] = o.Eid
	}
	if !isNil(o.LastUpdatedAt) {
		toSerialize["lastUpdatedAt"] = o.LastUpdatedAt
	}
	if !isNil(o.Network) {
		toSerialize["network"] = o.Network
	}
	if !isNil(o.Profiles) {
		toSerialize["profiles"] = o.Profiles
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200254Items struct {
	value *InlineResponse200254Items
	isSet bool
}

func (v NullableInlineResponse200254Items) Get() *InlineResponse200254Items {
	return v.value
}

func (v *NullableInlineResponse200254Items) Set(val *InlineResponse200254Items) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200254Items) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200254Items) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200254Items(val *InlineResponse200254Items) *NullableInlineResponse200254Items {
	return &NullableInlineResponse200254Items{value: val, isSet: true}
}

func (v NullableInlineResponse200254Items) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200254Items) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


