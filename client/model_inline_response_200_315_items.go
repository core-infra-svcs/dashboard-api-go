/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 06 August, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.61.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"time"
)

// InlineResponse200315Items struct for InlineResponse200315Items
type InlineResponse200315Items struct {
	// Time, in ISO8601 format, when RSSI was last reported for the sensor and gateway pair.
	LastReportedAt time.Time `json:"lastReportedAt"`
	// Time, in ISO8601 format, when the sensor and gateway pair last connected.
	LastConnectedAt *time.Time `json:"lastConnectedAt,omitempty"`
	// Last reported RSSI value.
	Rssi int32 `json:"rssi"`
	Network InlineResponse200315Network `json:"network"`
	Sensor InlineResponse200315Sensor `json:"sensor"`
	Gateway InlineResponse200315Gateway `json:"gateway"`
}

// NewInlineResponse200315Items instantiates a new InlineResponse200315Items object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200315Items(lastReportedAt time.Time, rssi int32, network InlineResponse200315Network, sensor InlineResponse200315Sensor, gateway InlineResponse200315Gateway) *InlineResponse200315Items {
	this := InlineResponse200315Items{}
	this.LastReportedAt = lastReportedAt
	this.Rssi = rssi
	this.Network = network
	this.Sensor = sensor
	this.Gateway = gateway
	return &this
}

// NewInlineResponse200315ItemsWithDefaults instantiates a new InlineResponse200315Items object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200315ItemsWithDefaults() *InlineResponse200315Items {
	this := InlineResponse200315Items{}
	return &this
}

// GetLastReportedAt returns the LastReportedAt field value
func (o *InlineResponse200315Items) GetLastReportedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.LastReportedAt
}

// GetLastReportedAtOk returns a tuple with the LastReportedAt field value
// and a boolean to check if the value has been set.
func (o *InlineResponse200315Items) GetLastReportedAtOk() (*time.Time, bool) {
	if o == nil {
    return nil, false
	}
	return &o.LastReportedAt, true
}

// SetLastReportedAt sets field value
func (o *InlineResponse200315Items) SetLastReportedAt(v time.Time) {
	o.LastReportedAt = v
}

// GetLastConnectedAt returns the LastConnectedAt field value if set, zero value otherwise.
func (o *InlineResponse200315Items) GetLastConnectedAt() time.Time {
	if o == nil || isNil(o.LastConnectedAt) {
		var ret time.Time
		return ret
	}
	return *o.LastConnectedAt
}

// GetLastConnectedAtOk returns a tuple with the LastConnectedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200315Items) GetLastConnectedAtOk() (*time.Time, bool) {
	if o == nil || isNil(o.LastConnectedAt) {
    return nil, false
	}
	return o.LastConnectedAt, true
}

// HasLastConnectedAt returns a boolean if a field has been set.
func (o *InlineResponse200315Items) HasLastConnectedAt() bool {
	if o != nil && !isNil(o.LastConnectedAt) {
		return true
	}

	return false
}

// SetLastConnectedAt gets a reference to the given time.Time and assigns it to the LastConnectedAt field.
func (o *InlineResponse200315Items) SetLastConnectedAt(v time.Time) {
	o.LastConnectedAt = &v
}

// GetRssi returns the Rssi field value
func (o *InlineResponse200315Items) GetRssi() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Rssi
}

// GetRssiOk returns a tuple with the Rssi field value
// and a boolean to check if the value has been set.
func (o *InlineResponse200315Items) GetRssiOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Rssi, true
}

// SetRssi sets field value
func (o *InlineResponse200315Items) SetRssi(v int32) {
	o.Rssi = v
}

// GetNetwork returns the Network field value
func (o *InlineResponse200315Items) GetNetwork() InlineResponse200315Network {
	if o == nil {
		var ret InlineResponse200315Network
		return ret
	}

	return o.Network
}

// GetNetworkOk returns a tuple with the Network field value
// and a boolean to check if the value has been set.
func (o *InlineResponse200315Items) GetNetworkOk() (*InlineResponse200315Network, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Network, true
}

// SetNetwork sets field value
func (o *InlineResponse200315Items) SetNetwork(v InlineResponse200315Network) {
	o.Network = v
}

// GetSensor returns the Sensor field value
func (o *InlineResponse200315Items) GetSensor() InlineResponse200315Sensor {
	if o == nil {
		var ret InlineResponse200315Sensor
		return ret
	}

	return o.Sensor
}

// GetSensorOk returns a tuple with the Sensor field value
// and a boolean to check if the value has been set.
func (o *InlineResponse200315Items) GetSensorOk() (*InlineResponse200315Sensor, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Sensor, true
}

// SetSensor sets field value
func (o *InlineResponse200315Items) SetSensor(v InlineResponse200315Sensor) {
	o.Sensor = v
}

// GetGateway returns the Gateway field value
func (o *InlineResponse200315Items) GetGateway() InlineResponse200315Gateway {
	if o == nil {
		var ret InlineResponse200315Gateway
		return ret
	}

	return o.Gateway
}

// GetGatewayOk returns a tuple with the Gateway field value
// and a boolean to check if the value has been set.
func (o *InlineResponse200315Items) GetGatewayOk() (*InlineResponse200315Gateway, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Gateway, true
}

// SetGateway sets field value
func (o *InlineResponse200315Items) SetGateway(v InlineResponse200315Gateway) {
	o.Gateway = v
}

func (o InlineResponse200315Items) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["lastReportedAt"] = o.LastReportedAt
	}
	if !isNil(o.LastConnectedAt) {
		toSerialize["lastConnectedAt"] = o.LastConnectedAt
	}
	if true {
		toSerialize["rssi"] = o.Rssi
	}
	if true {
		toSerialize["network"] = o.Network
	}
	if true {
		toSerialize["sensor"] = o.Sensor
	}
	if true {
		toSerialize["gateway"] = o.Gateway
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200315Items struct {
	value *InlineResponse200315Items
	isSet bool
}

func (v NullableInlineResponse200315Items) Get() *InlineResponse200315Items {
	return v.value
}

func (v *NullableInlineResponse200315Items) Set(val *InlineResponse200315Items) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200315Items) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200315Items) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200315Items(val *InlineResponse200315Items) *NullableInlineResponse200315Items {
	return &NullableInlineResponse200315Items{value: val, isSet: true}
}

func (v NullableInlineResponse200315Items) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200315Items) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


