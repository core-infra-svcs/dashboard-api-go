/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 02 July, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.60.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// NetworksNetworkIdApplianceFirewallMulticastForwardingRules struct for NetworksNetworkIdApplianceFirewallMulticastForwardingRules
type NetworksNetworkIdApplianceFirewallMulticastForwardingRules struct {
	// Forwarding rule description.
	Description string `json:"description"`
	// IP address
	Address string `json:"address"`
	// List of VLAN IDs
	VlanIds []string `json:"vlanIds"`
}

// NewNetworksNetworkIdApplianceFirewallMulticastForwardingRules instantiates a new NetworksNetworkIdApplianceFirewallMulticastForwardingRules object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworksNetworkIdApplianceFirewallMulticastForwardingRules(description string, address string, vlanIds []string) *NetworksNetworkIdApplianceFirewallMulticastForwardingRules {
	this := NetworksNetworkIdApplianceFirewallMulticastForwardingRules{}
	this.Description = description
	this.Address = address
	this.VlanIds = vlanIds
	return &this
}

// NewNetworksNetworkIdApplianceFirewallMulticastForwardingRulesWithDefaults instantiates a new NetworksNetworkIdApplianceFirewallMulticastForwardingRules object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworksNetworkIdApplianceFirewallMulticastForwardingRulesWithDefaults() *NetworksNetworkIdApplianceFirewallMulticastForwardingRules {
	this := NetworksNetworkIdApplianceFirewallMulticastForwardingRules{}
	return &this
}

// GetDescription returns the Description field value
func (o *NetworksNetworkIdApplianceFirewallMulticastForwardingRules) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *NetworksNetworkIdApplianceFirewallMulticastForwardingRules) GetDescriptionOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *NetworksNetworkIdApplianceFirewallMulticastForwardingRules) SetDescription(v string) {
	o.Description = v
}

// GetAddress returns the Address field value
func (o *NetworksNetworkIdApplianceFirewallMulticastForwardingRules) GetAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Address
}

// GetAddressOk returns a tuple with the Address field value
// and a boolean to check if the value has been set.
func (o *NetworksNetworkIdApplianceFirewallMulticastForwardingRules) GetAddressOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Address, true
}

// SetAddress sets field value
func (o *NetworksNetworkIdApplianceFirewallMulticastForwardingRules) SetAddress(v string) {
	o.Address = v
}

// GetVlanIds returns the VlanIds field value
func (o *NetworksNetworkIdApplianceFirewallMulticastForwardingRules) GetVlanIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.VlanIds
}

// GetVlanIdsOk returns a tuple with the VlanIds field value
// and a boolean to check if the value has been set.
func (o *NetworksNetworkIdApplianceFirewallMulticastForwardingRules) GetVlanIdsOk() ([]string, bool) {
	if o == nil {
    return nil, false
	}
	return o.VlanIds, true
}

// SetVlanIds sets field value
func (o *NetworksNetworkIdApplianceFirewallMulticastForwardingRules) SetVlanIds(v []string) {
	o.VlanIds = v
}

func (o NetworksNetworkIdApplianceFirewallMulticastForwardingRules) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["address"] = o.Address
	}
	if true {
		toSerialize["vlanIds"] = o.VlanIds
	}
	return json.Marshal(toSerialize)
}

type NullableNetworksNetworkIdApplianceFirewallMulticastForwardingRules struct {
	value *NetworksNetworkIdApplianceFirewallMulticastForwardingRules
	isSet bool
}

func (v NullableNetworksNetworkIdApplianceFirewallMulticastForwardingRules) Get() *NetworksNetworkIdApplianceFirewallMulticastForwardingRules {
	return v.value
}

func (v *NullableNetworksNetworkIdApplianceFirewallMulticastForwardingRules) Set(val *NetworksNetworkIdApplianceFirewallMulticastForwardingRules) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworksNetworkIdApplianceFirewallMulticastForwardingRules) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworksNetworkIdApplianceFirewallMulticastForwardingRules) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworksNetworkIdApplianceFirewallMulticastForwardingRules(val *NetworksNetworkIdApplianceFirewallMulticastForwardingRules) *NullableNetworksNetworkIdApplianceFirewallMulticastForwardingRules {
	return &NullableNetworksNetworkIdApplianceFirewallMulticastForwardingRules{value: val, isSet: true}
}

func (v NullableNetworksNetworkIdApplianceFirewallMulticastForwardingRules) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworksNetworkIdApplianceFirewallMulticastForwardingRules) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


