/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 06 August, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.61.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200324 struct for InlineResponse200324
type InlineResponse200324 struct {
	// The success or failure status of the API
	Status *bool `json:"status,omitempty"`
	// The set of different states on the spaces integration process
	States []string `json:"states,omitempty"`
	// The meraki user who attempts the spaces integration
	Email *string `json:"email,omitempty"`
	// The spaces dashboard account name created in spaces integration
	AccountName *string `json:"accountName,omitempty"`
	// The spaces dashboard account type created in spaces integration
	AccountType *string `json:"accountType,omitempty"`
}

// NewInlineResponse200324 instantiates a new InlineResponse200324 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200324() *InlineResponse200324 {
	this := InlineResponse200324{}
	return &this
}

// NewInlineResponse200324WithDefaults instantiates a new InlineResponse200324 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200324WithDefaults() *InlineResponse200324 {
	this := InlineResponse200324{}
	return &this
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *InlineResponse200324) GetStatus() bool {
	if o == nil || isNil(o.Status) {
		var ret bool
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200324) GetStatusOk() (*bool, bool) {
	if o == nil || isNil(o.Status) {
    return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *InlineResponse200324) HasStatus() bool {
	if o != nil && !isNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given bool and assigns it to the Status field.
func (o *InlineResponse200324) SetStatus(v bool) {
	o.Status = &v
}

// GetStates returns the States field value if set, zero value otherwise.
func (o *InlineResponse200324) GetStates() []string {
	if o == nil || isNil(o.States) {
		var ret []string
		return ret
	}
	return o.States
}

// GetStatesOk returns a tuple with the States field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200324) GetStatesOk() ([]string, bool) {
	if o == nil || isNil(o.States) {
    return nil, false
	}
	return o.States, true
}

// HasStates returns a boolean if a field has been set.
func (o *InlineResponse200324) HasStates() bool {
	if o != nil && !isNil(o.States) {
		return true
	}

	return false
}

// SetStates gets a reference to the given []string and assigns it to the States field.
func (o *InlineResponse200324) SetStates(v []string) {
	o.States = v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *InlineResponse200324) GetEmail() string {
	if o == nil || isNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200324) GetEmailOk() (*string, bool) {
	if o == nil || isNil(o.Email) {
    return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *InlineResponse200324) HasEmail() bool {
	if o != nil && !isNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *InlineResponse200324) SetEmail(v string) {
	o.Email = &v
}

// GetAccountName returns the AccountName field value if set, zero value otherwise.
func (o *InlineResponse200324) GetAccountName() string {
	if o == nil || isNil(o.AccountName) {
		var ret string
		return ret
	}
	return *o.AccountName
}

// GetAccountNameOk returns a tuple with the AccountName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200324) GetAccountNameOk() (*string, bool) {
	if o == nil || isNil(o.AccountName) {
    return nil, false
	}
	return o.AccountName, true
}

// HasAccountName returns a boolean if a field has been set.
func (o *InlineResponse200324) HasAccountName() bool {
	if o != nil && !isNil(o.AccountName) {
		return true
	}

	return false
}

// SetAccountName gets a reference to the given string and assigns it to the AccountName field.
func (o *InlineResponse200324) SetAccountName(v string) {
	o.AccountName = &v
}

// GetAccountType returns the AccountType field value if set, zero value otherwise.
func (o *InlineResponse200324) GetAccountType() string {
	if o == nil || isNil(o.AccountType) {
		var ret string
		return ret
	}
	return *o.AccountType
}

// GetAccountTypeOk returns a tuple with the AccountType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200324) GetAccountTypeOk() (*string, bool) {
	if o == nil || isNil(o.AccountType) {
    return nil, false
	}
	return o.AccountType, true
}

// HasAccountType returns a boolean if a field has been set.
func (o *InlineResponse200324) HasAccountType() bool {
	if o != nil && !isNil(o.AccountType) {
		return true
	}

	return false
}

// SetAccountType gets a reference to the given string and assigns it to the AccountType field.
func (o *InlineResponse200324) SetAccountType(v string) {
	o.AccountType = &v
}

func (o InlineResponse200324) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !isNil(o.States) {
		toSerialize["states"] = o.States
	}
	if !isNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !isNil(o.AccountName) {
		toSerialize["accountName"] = o.AccountName
	}
	if !isNil(o.AccountType) {
		toSerialize["accountType"] = o.AccountType
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200324 struct {
	value *InlineResponse200324
	isSet bool
}

func (v NullableInlineResponse200324) Get() *InlineResponse200324 {
	return v.value
}

func (v *NullableInlineResponse200324) Set(val *InlineResponse200324) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200324) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200324) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200324(val *InlineResponse200324) *NullableInlineResponse200324 {
	return &NullableInlineResponse200324{value: val, isSet: true}
}

func (v NullableInlineResponse200324) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200324) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


