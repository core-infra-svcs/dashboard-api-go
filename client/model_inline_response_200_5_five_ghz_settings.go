/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 06 March, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.44.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse2005FiveGhzSettings Manual radio settings for 5 GHz
type InlineResponse2005FiveGhzSettings struct {
	// Manual channel for 5 GHz
	Channel *int32 `json:"channel,omitempty"`
	// Manual channel width for 5 GHz
	ChannelWidth *int32 `json:"channelWidth,omitempty"`
	// Manual target power for 5 GHz
	TargetPower *int32 `json:"targetPower,omitempty"`
}

// NewInlineResponse2005FiveGhzSettings instantiates a new InlineResponse2005FiveGhzSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse2005FiveGhzSettings() *InlineResponse2005FiveGhzSettings {
	this := InlineResponse2005FiveGhzSettings{}
	return &this
}

// NewInlineResponse2005FiveGhzSettingsWithDefaults instantiates a new InlineResponse2005FiveGhzSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse2005FiveGhzSettingsWithDefaults() *InlineResponse2005FiveGhzSettings {
	this := InlineResponse2005FiveGhzSettings{}
	return &this
}

// GetChannel returns the Channel field value if set, zero value otherwise.
func (o *InlineResponse2005FiveGhzSettings) GetChannel() int32 {
	if o == nil || isNil(o.Channel) {
		var ret int32
		return ret
	}
	return *o.Channel
}

// GetChannelOk returns a tuple with the Channel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2005FiveGhzSettings) GetChannelOk() (*int32, bool) {
	if o == nil || isNil(o.Channel) {
    return nil, false
	}
	return o.Channel, true
}

// HasChannel returns a boolean if a field has been set.
func (o *InlineResponse2005FiveGhzSettings) HasChannel() bool {
	if o != nil && !isNil(o.Channel) {
		return true
	}

	return false
}

// SetChannel gets a reference to the given int32 and assigns it to the Channel field.
func (o *InlineResponse2005FiveGhzSettings) SetChannel(v int32) {
	o.Channel = &v
}

// GetChannelWidth returns the ChannelWidth field value if set, zero value otherwise.
func (o *InlineResponse2005FiveGhzSettings) GetChannelWidth() int32 {
	if o == nil || isNil(o.ChannelWidth) {
		var ret int32
		return ret
	}
	return *o.ChannelWidth
}

// GetChannelWidthOk returns a tuple with the ChannelWidth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2005FiveGhzSettings) GetChannelWidthOk() (*int32, bool) {
	if o == nil || isNil(o.ChannelWidth) {
    return nil, false
	}
	return o.ChannelWidth, true
}

// HasChannelWidth returns a boolean if a field has been set.
func (o *InlineResponse2005FiveGhzSettings) HasChannelWidth() bool {
	if o != nil && !isNil(o.ChannelWidth) {
		return true
	}

	return false
}

// SetChannelWidth gets a reference to the given int32 and assigns it to the ChannelWidth field.
func (o *InlineResponse2005FiveGhzSettings) SetChannelWidth(v int32) {
	o.ChannelWidth = &v
}

// GetTargetPower returns the TargetPower field value if set, zero value otherwise.
func (o *InlineResponse2005FiveGhzSettings) GetTargetPower() int32 {
	if o == nil || isNil(o.TargetPower) {
		var ret int32
		return ret
	}
	return *o.TargetPower
}

// GetTargetPowerOk returns a tuple with the TargetPower field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2005FiveGhzSettings) GetTargetPowerOk() (*int32, bool) {
	if o == nil || isNil(o.TargetPower) {
    return nil, false
	}
	return o.TargetPower, true
}

// HasTargetPower returns a boolean if a field has been set.
func (o *InlineResponse2005FiveGhzSettings) HasTargetPower() bool {
	if o != nil && !isNil(o.TargetPower) {
		return true
	}

	return false
}

// SetTargetPower gets a reference to the given int32 and assigns it to the TargetPower field.
func (o *InlineResponse2005FiveGhzSettings) SetTargetPower(v int32) {
	o.TargetPower = &v
}

func (o InlineResponse2005FiveGhzSettings) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Channel) {
		toSerialize["channel"] = o.Channel
	}
	if !isNil(o.ChannelWidth) {
		toSerialize["channelWidth"] = o.ChannelWidth
	}
	if !isNil(o.TargetPower) {
		toSerialize["targetPower"] = o.TargetPower
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse2005FiveGhzSettings struct {
	value *InlineResponse2005FiveGhzSettings
	isSet bool
}

func (v NullableInlineResponse2005FiveGhzSettings) Get() *InlineResponse2005FiveGhzSettings {
	return v.value
}

func (v *NullableInlineResponse2005FiveGhzSettings) Set(val *InlineResponse2005FiveGhzSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse2005FiveGhzSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse2005FiveGhzSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse2005FiveGhzSettings(val *InlineResponse2005FiveGhzSettings) *NullableInlineResponse2005FiveGhzSettings {
	return &NullableInlineResponse2005FiveGhzSettings{value: val, isSet: true}
}

func (v NullableInlineResponse2005FiveGhzSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse2005FiveGhzSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


