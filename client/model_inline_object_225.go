/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 07 June, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.34.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineObject225 struct for InlineObject225
type InlineObject225 struct {
	// Boolean indicating whether SNMP version 2c is enabled for the organization.
	V2cEnabled *bool `json:"v2cEnabled,omitempty"`
	// Boolean indicating whether SNMP version 3 is enabled for the organization.
	V3Enabled *bool `json:"v3Enabled,omitempty"`
	// The SNMP version 3 authentication mode. Can be either 'MD5' or 'SHA'.
	V3AuthMode *string `json:"v3AuthMode,omitempty"`
	// The SNMP version 3 authentication password. Must be at least 8 characters if specified.
	V3AuthPass *string `json:"v3AuthPass,omitempty"`
	// The SNMP version 3 privacy mode. Can be either 'DES' or 'AES128'.
	V3PrivMode *string `json:"v3PrivMode,omitempty"`
	// The SNMP version 3 privacy password. Must be at least 8 characters if specified.
	V3PrivPass *string `json:"v3PrivPass,omitempty"`
	// The list of IPv4 addresses that are allowed to access the SNMP server.
	PeerIps []string `json:"peerIps,omitempty"`
}

// NewInlineObject225 instantiates a new InlineObject225 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject225() *InlineObject225 {
	this := InlineObject225{}
	return &this
}

// NewInlineObject225WithDefaults instantiates a new InlineObject225 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject225WithDefaults() *InlineObject225 {
	this := InlineObject225{}
	return &this
}

// GetV2cEnabled returns the V2cEnabled field value if set, zero value otherwise.
func (o *InlineObject225) GetV2cEnabled() bool {
	if o == nil || isNil(o.V2cEnabled) {
		var ret bool
		return ret
	}
	return *o.V2cEnabled
}

// GetV2cEnabledOk returns a tuple with the V2cEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject225) GetV2cEnabledOk() (*bool, bool) {
	if o == nil || isNil(o.V2cEnabled) {
    return nil, false
	}
	return o.V2cEnabled, true
}

// HasV2cEnabled returns a boolean if a field has been set.
func (o *InlineObject225) HasV2cEnabled() bool {
	if o != nil && !isNil(o.V2cEnabled) {
		return true
	}

	return false
}

// SetV2cEnabled gets a reference to the given bool and assigns it to the V2cEnabled field.
func (o *InlineObject225) SetV2cEnabled(v bool) {
	o.V2cEnabled = &v
}

// GetV3Enabled returns the V3Enabled field value if set, zero value otherwise.
func (o *InlineObject225) GetV3Enabled() bool {
	if o == nil || isNil(o.V3Enabled) {
		var ret bool
		return ret
	}
	return *o.V3Enabled
}

// GetV3EnabledOk returns a tuple with the V3Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject225) GetV3EnabledOk() (*bool, bool) {
	if o == nil || isNil(o.V3Enabled) {
    return nil, false
	}
	return o.V3Enabled, true
}

// HasV3Enabled returns a boolean if a field has been set.
func (o *InlineObject225) HasV3Enabled() bool {
	if o != nil && !isNil(o.V3Enabled) {
		return true
	}

	return false
}

// SetV3Enabled gets a reference to the given bool and assigns it to the V3Enabled field.
func (o *InlineObject225) SetV3Enabled(v bool) {
	o.V3Enabled = &v
}

// GetV3AuthMode returns the V3AuthMode field value if set, zero value otherwise.
func (o *InlineObject225) GetV3AuthMode() string {
	if o == nil || isNil(o.V3AuthMode) {
		var ret string
		return ret
	}
	return *o.V3AuthMode
}

// GetV3AuthModeOk returns a tuple with the V3AuthMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject225) GetV3AuthModeOk() (*string, bool) {
	if o == nil || isNil(o.V3AuthMode) {
    return nil, false
	}
	return o.V3AuthMode, true
}

// HasV3AuthMode returns a boolean if a field has been set.
func (o *InlineObject225) HasV3AuthMode() bool {
	if o != nil && !isNil(o.V3AuthMode) {
		return true
	}

	return false
}

// SetV3AuthMode gets a reference to the given string and assigns it to the V3AuthMode field.
func (o *InlineObject225) SetV3AuthMode(v string) {
	o.V3AuthMode = &v
}

// GetV3AuthPass returns the V3AuthPass field value if set, zero value otherwise.
func (o *InlineObject225) GetV3AuthPass() string {
	if o == nil || isNil(o.V3AuthPass) {
		var ret string
		return ret
	}
	return *o.V3AuthPass
}

// GetV3AuthPassOk returns a tuple with the V3AuthPass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject225) GetV3AuthPassOk() (*string, bool) {
	if o == nil || isNil(o.V3AuthPass) {
    return nil, false
	}
	return o.V3AuthPass, true
}

// HasV3AuthPass returns a boolean if a field has been set.
func (o *InlineObject225) HasV3AuthPass() bool {
	if o != nil && !isNil(o.V3AuthPass) {
		return true
	}

	return false
}

// SetV3AuthPass gets a reference to the given string and assigns it to the V3AuthPass field.
func (o *InlineObject225) SetV3AuthPass(v string) {
	o.V3AuthPass = &v
}

// GetV3PrivMode returns the V3PrivMode field value if set, zero value otherwise.
func (o *InlineObject225) GetV3PrivMode() string {
	if o == nil || isNil(o.V3PrivMode) {
		var ret string
		return ret
	}
	return *o.V3PrivMode
}

// GetV3PrivModeOk returns a tuple with the V3PrivMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject225) GetV3PrivModeOk() (*string, bool) {
	if o == nil || isNil(o.V3PrivMode) {
    return nil, false
	}
	return o.V3PrivMode, true
}

// HasV3PrivMode returns a boolean if a field has been set.
func (o *InlineObject225) HasV3PrivMode() bool {
	if o != nil && !isNil(o.V3PrivMode) {
		return true
	}

	return false
}

// SetV3PrivMode gets a reference to the given string and assigns it to the V3PrivMode field.
func (o *InlineObject225) SetV3PrivMode(v string) {
	o.V3PrivMode = &v
}

// GetV3PrivPass returns the V3PrivPass field value if set, zero value otherwise.
func (o *InlineObject225) GetV3PrivPass() string {
	if o == nil || isNil(o.V3PrivPass) {
		var ret string
		return ret
	}
	return *o.V3PrivPass
}

// GetV3PrivPassOk returns a tuple with the V3PrivPass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject225) GetV3PrivPassOk() (*string, bool) {
	if o == nil || isNil(o.V3PrivPass) {
    return nil, false
	}
	return o.V3PrivPass, true
}

// HasV3PrivPass returns a boolean if a field has been set.
func (o *InlineObject225) HasV3PrivPass() bool {
	if o != nil && !isNil(o.V3PrivPass) {
		return true
	}

	return false
}

// SetV3PrivPass gets a reference to the given string and assigns it to the V3PrivPass field.
func (o *InlineObject225) SetV3PrivPass(v string) {
	o.V3PrivPass = &v
}

// GetPeerIps returns the PeerIps field value if set, zero value otherwise.
func (o *InlineObject225) GetPeerIps() []string {
	if o == nil || isNil(o.PeerIps) {
		var ret []string
		return ret
	}
	return o.PeerIps
}

// GetPeerIpsOk returns a tuple with the PeerIps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject225) GetPeerIpsOk() ([]string, bool) {
	if o == nil || isNil(o.PeerIps) {
    return nil, false
	}
	return o.PeerIps, true
}

// HasPeerIps returns a boolean if a field has been set.
func (o *InlineObject225) HasPeerIps() bool {
	if o != nil && !isNil(o.PeerIps) {
		return true
	}

	return false
}

// SetPeerIps gets a reference to the given []string and assigns it to the PeerIps field.
func (o *InlineObject225) SetPeerIps(v []string) {
	o.PeerIps = v
}

func (o InlineObject225) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.V2cEnabled) {
		toSerialize["v2cEnabled"] = o.V2cEnabled
	}
	if !isNil(o.V3Enabled) {
		toSerialize["v3Enabled"] = o.V3Enabled
	}
	if !isNil(o.V3AuthMode) {
		toSerialize["v3AuthMode"] = o.V3AuthMode
	}
	if !isNil(o.V3AuthPass) {
		toSerialize["v3AuthPass"] = o.V3AuthPass
	}
	if !isNil(o.V3PrivMode) {
		toSerialize["v3PrivMode"] = o.V3PrivMode
	}
	if !isNil(o.V3PrivPass) {
		toSerialize["v3PrivPass"] = o.V3PrivPass
	}
	if !isNil(o.PeerIps) {
		toSerialize["peerIps"] = o.PeerIps
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject225 struct {
	value *InlineObject225
	isSet bool
}

func (v NullableInlineObject225) Get() *InlineObject225 {
	return v.value
}

func (v *NullableInlineObject225) Set(val *InlineObject225) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject225) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject225) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject225(val *InlineObject225) *NullableInlineObject225 {
	return &NullableInlineObject225{value: val, isSet: true}
}

func (v NullableInlineObject225) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject225) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


