/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 04 June, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.59.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200292Items struct for InlineResponse200292Items
type InlineResponse200292Items struct {
	// Network ID
	NetworkId *string `json:"networkId,omitempty"`
	// List of products that have XDR enabled
	ProductTypes []string `json:"productTypes,omitempty"`
	// The name of the network
	Name *string `json:"name,omitempty"`
	// Represents whether XDR is enabled for the network
	Enabled *bool `json:"enabled,omitempty"`
	// Represents whether the network is eligible for XDR
	IsEligible *bool `json:"isEligible,omitempty"`
}

// NewInlineResponse200292Items instantiates a new InlineResponse200292Items object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200292Items() *InlineResponse200292Items {
	this := InlineResponse200292Items{}
	return &this
}

// NewInlineResponse200292ItemsWithDefaults instantiates a new InlineResponse200292Items object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200292ItemsWithDefaults() *InlineResponse200292Items {
	this := InlineResponse200292Items{}
	return &this
}

// GetNetworkId returns the NetworkId field value if set, zero value otherwise.
func (o *InlineResponse200292Items) GetNetworkId() string {
	if o == nil || isNil(o.NetworkId) {
		var ret string
		return ret
	}
	return *o.NetworkId
}

// GetNetworkIdOk returns a tuple with the NetworkId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200292Items) GetNetworkIdOk() (*string, bool) {
	if o == nil || isNil(o.NetworkId) {
    return nil, false
	}
	return o.NetworkId, true
}

// HasNetworkId returns a boolean if a field has been set.
func (o *InlineResponse200292Items) HasNetworkId() bool {
	if o != nil && !isNil(o.NetworkId) {
		return true
	}

	return false
}

// SetNetworkId gets a reference to the given string and assigns it to the NetworkId field.
func (o *InlineResponse200292Items) SetNetworkId(v string) {
	o.NetworkId = &v
}

// GetProductTypes returns the ProductTypes field value if set, zero value otherwise.
func (o *InlineResponse200292Items) GetProductTypes() []string {
	if o == nil || isNil(o.ProductTypes) {
		var ret []string
		return ret
	}
	return o.ProductTypes
}

// GetProductTypesOk returns a tuple with the ProductTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200292Items) GetProductTypesOk() ([]string, bool) {
	if o == nil || isNil(o.ProductTypes) {
    return nil, false
	}
	return o.ProductTypes, true
}

// HasProductTypes returns a boolean if a field has been set.
func (o *InlineResponse200292Items) HasProductTypes() bool {
	if o != nil && !isNil(o.ProductTypes) {
		return true
	}

	return false
}

// SetProductTypes gets a reference to the given []string and assigns it to the ProductTypes field.
func (o *InlineResponse200292Items) SetProductTypes(v []string) {
	o.ProductTypes = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *InlineResponse200292Items) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200292Items) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
    return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *InlineResponse200292Items) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *InlineResponse200292Items) SetName(v string) {
	o.Name = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *InlineResponse200292Items) GetEnabled() bool {
	if o == nil || isNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200292Items) GetEnabledOk() (*bool, bool) {
	if o == nil || isNil(o.Enabled) {
    return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *InlineResponse200292Items) HasEnabled() bool {
	if o != nil && !isNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *InlineResponse200292Items) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetIsEligible returns the IsEligible field value if set, zero value otherwise.
func (o *InlineResponse200292Items) GetIsEligible() bool {
	if o == nil || isNil(o.IsEligible) {
		var ret bool
		return ret
	}
	return *o.IsEligible
}

// GetIsEligibleOk returns a tuple with the IsEligible field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200292Items) GetIsEligibleOk() (*bool, bool) {
	if o == nil || isNil(o.IsEligible) {
    return nil, false
	}
	return o.IsEligible, true
}

// HasIsEligible returns a boolean if a field has been set.
func (o *InlineResponse200292Items) HasIsEligible() bool {
	if o != nil && !isNil(o.IsEligible) {
		return true
	}

	return false
}

// SetIsEligible gets a reference to the given bool and assigns it to the IsEligible field.
func (o *InlineResponse200292Items) SetIsEligible(v bool) {
	o.IsEligible = &v
}

func (o InlineResponse200292Items) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.NetworkId) {
		toSerialize["networkId"] = o.NetworkId
	}
	if !isNil(o.ProductTypes) {
		toSerialize["productTypes"] = o.ProductTypes
	}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !isNil(o.IsEligible) {
		toSerialize["isEligible"] = o.IsEligible
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200292Items struct {
	value *InlineResponse200292Items
	isSet bool
}

func (v NullableInlineResponse200292Items) Get() *InlineResponse200292Items {
	return v.value
}

func (v *NullableInlineResponse200292Items) Set(val *InlineResponse200292Items) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200292Items) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200292Items) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200292Items(val *InlineResponse200292Items) *NullableInlineResponse200292Items {
	return &NullableInlineResponse200292Items{value: val, isSet: true}
}

func (v NullableInlineResponse200292Items) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200292Items) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


