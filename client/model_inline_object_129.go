/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 03 January, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.42.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineObject129 struct for InlineObject129
type InlineObject129 struct {
	// MTU size for the entire network. Default value is 9578.
	DefaultMtuSize *int32 `json:"defaultMtuSize,omitempty"`
	// Override MTU size for individual switches or switch templates. An empty array will clear overrides.
	Overrides []InlineResponse20086Overrides `json:"overrides,omitempty"`
}

// NewInlineObject129 instantiates a new InlineObject129 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject129() *InlineObject129 {
	this := InlineObject129{}
	return &this
}

// NewInlineObject129WithDefaults instantiates a new InlineObject129 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject129WithDefaults() *InlineObject129 {
	this := InlineObject129{}
	return &this
}

// GetDefaultMtuSize returns the DefaultMtuSize field value if set, zero value otherwise.
func (o *InlineObject129) GetDefaultMtuSize() int32 {
	if o == nil || isNil(o.DefaultMtuSize) {
		var ret int32
		return ret
	}
	return *o.DefaultMtuSize
}

// GetDefaultMtuSizeOk returns a tuple with the DefaultMtuSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject129) GetDefaultMtuSizeOk() (*int32, bool) {
	if o == nil || isNil(o.DefaultMtuSize) {
    return nil, false
	}
	return o.DefaultMtuSize, true
}

// HasDefaultMtuSize returns a boolean if a field has been set.
func (o *InlineObject129) HasDefaultMtuSize() bool {
	if o != nil && !isNil(o.DefaultMtuSize) {
		return true
	}

	return false
}

// SetDefaultMtuSize gets a reference to the given int32 and assigns it to the DefaultMtuSize field.
func (o *InlineObject129) SetDefaultMtuSize(v int32) {
	o.DefaultMtuSize = &v
}

// GetOverrides returns the Overrides field value if set, zero value otherwise.
func (o *InlineObject129) GetOverrides() []InlineResponse20086Overrides {
	if o == nil || isNil(o.Overrides) {
		var ret []InlineResponse20086Overrides
		return ret
	}
	return o.Overrides
}

// GetOverridesOk returns a tuple with the Overrides field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject129) GetOverridesOk() ([]InlineResponse20086Overrides, bool) {
	if o == nil || isNil(o.Overrides) {
    return nil, false
	}
	return o.Overrides, true
}

// HasOverrides returns a boolean if a field has been set.
func (o *InlineObject129) HasOverrides() bool {
	if o != nil && !isNil(o.Overrides) {
		return true
	}

	return false
}

// SetOverrides gets a reference to the given []InlineResponse20086Overrides and assigns it to the Overrides field.
func (o *InlineObject129) SetOverrides(v []InlineResponse20086Overrides) {
	o.Overrides = v
}

func (o InlineObject129) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.DefaultMtuSize) {
		toSerialize["defaultMtuSize"] = o.DefaultMtuSize
	}
	if !isNil(o.Overrides) {
		toSerialize["overrides"] = o.Overrides
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject129 struct {
	value *InlineObject129
	isSet bool
}

func (v NullableInlineObject129) Get() *InlineObject129 {
	return v.value
}

func (v *NullableInlineObject129) Set(val *InlineObject129) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject129) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject129) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject129(val *InlineObject129) *NullableInlineObject129 {
	return &NullableInlineObject129{value: val, isSet: true}
}

func (v NullableInlineObject129) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject129) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


