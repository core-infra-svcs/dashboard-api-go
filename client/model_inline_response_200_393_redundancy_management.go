/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 01 October, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.63.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200393RedundancyManagement Wireless LAN controller redundancy management interface information
type InlineResponse200393RedundancyManagement struct {
	// Wireless LAN controller redundancy management interface addresses
	Addresses []InlineResponse200393RedundancyManagementAddresses `json:"addresses,omitempty"`
}

// NewInlineResponse200393RedundancyManagement instantiates a new InlineResponse200393RedundancyManagement object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200393RedundancyManagement() *InlineResponse200393RedundancyManagement {
	this := InlineResponse200393RedundancyManagement{}
	return &this
}

// NewInlineResponse200393RedundancyManagementWithDefaults instantiates a new InlineResponse200393RedundancyManagement object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200393RedundancyManagementWithDefaults() *InlineResponse200393RedundancyManagement {
	this := InlineResponse200393RedundancyManagement{}
	return &this
}

// GetAddresses returns the Addresses field value if set, zero value otherwise.
func (o *InlineResponse200393RedundancyManagement) GetAddresses() []InlineResponse200393RedundancyManagementAddresses {
	if o == nil || isNil(o.Addresses) {
		var ret []InlineResponse200393RedundancyManagementAddresses
		return ret
	}
	return o.Addresses
}

// GetAddressesOk returns a tuple with the Addresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200393RedundancyManagement) GetAddressesOk() ([]InlineResponse200393RedundancyManagementAddresses, bool) {
	if o == nil || isNil(o.Addresses) {
    return nil, false
	}
	return o.Addresses, true
}

// HasAddresses returns a boolean if a field has been set.
func (o *InlineResponse200393RedundancyManagement) HasAddresses() bool {
	if o != nil && !isNil(o.Addresses) {
		return true
	}

	return false
}

// SetAddresses gets a reference to the given []InlineResponse200393RedundancyManagementAddresses and assigns it to the Addresses field.
func (o *InlineResponse200393RedundancyManagement) SetAddresses(v []InlineResponse200393RedundancyManagementAddresses) {
	o.Addresses = v
}

func (o InlineResponse200393RedundancyManagement) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Addresses) {
		toSerialize["addresses"] = o.Addresses
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200393RedundancyManagement struct {
	value *InlineResponse200393RedundancyManagement
	isSet bool
}

func (v NullableInlineResponse200393RedundancyManagement) Get() *InlineResponse200393RedundancyManagement {
	return v.value
}

func (v *NullableInlineResponse200393RedundancyManagement) Set(val *InlineResponse200393RedundancyManagement) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200393RedundancyManagement) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200393RedundancyManagement) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200393RedundancyManagement(val *InlineResponse200393RedundancyManagement) *NullableInlineResponse200393RedundancyManagement {
	return &NullableInlineResponse200393RedundancyManagement{value: val, isSet: true}
}

func (v NullableInlineResponse200393RedundancyManagement) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200393RedundancyManagement) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


