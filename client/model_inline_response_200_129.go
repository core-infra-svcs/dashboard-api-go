/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 03 July, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.48.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200129 struct for InlineResponse200129
type InlineResponse200129 struct {
	// Boolean indicating whether the operation was completed successfully.
	Success *bool `json:"success,omitempty"`
}

// NewInlineResponse200129 instantiates a new InlineResponse200129 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200129() *InlineResponse200129 {
	this := InlineResponse200129{}
	return &this
}

// NewInlineResponse200129WithDefaults instantiates a new InlineResponse200129 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200129WithDefaults() *InlineResponse200129 {
	this := InlineResponse200129{}
	return &this
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *InlineResponse200129) GetSuccess() bool {
	if o == nil || isNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200129) GetSuccessOk() (*bool, bool) {
	if o == nil || isNil(o.Success) {
    return nil, false
	}
	return o.Success, true
}

// HasSuccess returns a boolean if a field has been set.
func (o *InlineResponse200129) HasSuccess() bool {
	if o != nil && !isNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *InlineResponse200129) SetSuccess(v bool) {
	o.Success = &v
}

func (o InlineResponse200129) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200129 struct {
	value *InlineResponse200129
	isSet bool
}

func (v NullableInlineResponse200129) Get() *InlineResponse200129 {
	return v.value
}

func (v *NullableInlineResponse200129) Set(val *InlineResponse200129) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200129) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200129) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200129(val *InlineResponse200129) *NullableInlineResponse200129 {
	return &NullableInlineResponse200129{value: val, isSet: true}
}

func (v NullableInlineResponse200129) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200129) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


