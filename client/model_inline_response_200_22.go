/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 October, 2022 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.26.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse20022 struct for InlineResponse20022
type InlineResponse20022 struct {
	// List of metrics that are supported for alerts, based on available sensor devices in the network
	SupportedMetrics *[]string `json:"supportedMetrics,omitempty"`
	Counts *InlineResponse20022Counts `json:"counts,omitempty"`
}

// NewInlineResponse20022 instantiates a new InlineResponse20022 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20022() *InlineResponse20022 {
	this := InlineResponse20022{}
	return &this
}

// NewInlineResponse20022WithDefaults instantiates a new InlineResponse20022 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20022WithDefaults() *InlineResponse20022 {
	this := InlineResponse20022{}
	return &this
}

// GetSupportedMetrics returns the SupportedMetrics field value if set, zero value otherwise.
func (o *InlineResponse20022) GetSupportedMetrics() []string {
	if o == nil || o.SupportedMetrics == nil {
		var ret []string
		return ret
	}
	return *o.SupportedMetrics
}

// GetSupportedMetricsOk returns a tuple with the SupportedMetrics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20022) GetSupportedMetricsOk() (*[]string, bool) {
	if o == nil || o.SupportedMetrics == nil {
		return nil, false
	}
	return o.SupportedMetrics, true
}

// HasSupportedMetrics returns a boolean if a field has been set.
func (o *InlineResponse20022) HasSupportedMetrics() bool {
	if o != nil && o.SupportedMetrics != nil {
		return true
	}

	return false
}

// SetSupportedMetrics gets a reference to the given []string and assigns it to the SupportedMetrics field.
func (o *InlineResponse20022) SetSupportedMetrics(v []string) {
	o.SupportedMetrics = &v
}

// GetCounts returns the Counts field value if set, zero value otherwise.
func (o *InlineResponse20022) GetCounts() InlineResponse20022Counts {
	if o == nil || o.Counts == nil {
		var ret InlineResponse20022Counts
		return ret
	}
	return *o.Counts
}

// GetCountsOk returns a tuple with the Counts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20022) GetCountsOk() (*InlineResponse20022Counts, bool) {
	if o == nil || o.Counts == nil {
		return nil, false
	}
	return o.Counts, true
}

// HasCounts returns a boolean if a field has been set.
func (o *InlineResponse20022) HasCounts() bool {
	if o != nil && o.Counts != nil {
		return true
	}

	return false
}

// SetCounts gets a reference to the given InlineResponse20022Counts and assigns it to the Counts field.
func (o *InlineResponse20022) SetCounts(v InlineResponse20022Counts) {
	o.Counts = &v
}

func (o InlineResponse20022) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SupportedMetrics != nil {
		toSerialize["supportedMetrics"] = o.SupportedMetrics
	}
	if o.Counts != nil {
		toSerialize["counts"] = o.Counts
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20022 struct {
	value *InlineResponse20022
	isSet bool
}

func (v NullableInlineResponse20022) Get() *InlineResponse20022 {
	return v.value
}

func (v *NullableInlineResponse20022) Set(val *InlineResponse20022) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20022) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20022) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20022(val *InlineResponse20022) *NullableInlineResponse20022 {
	return &NullableInlineResponse20022{value: val, isSet: true}
}

func (v NullableInlineResponse20022) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20022) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


