/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 06 August, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.61.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200364Items struct for InlineResponse200364Items
type InlineResponse200364Items struct {
	// The ID of the Certificate Authority
	CertificateAuthorityId *string `json:"certificateAuthorityId,omitempty"`
	// The PEM encoded CRL for the Certificate Authority
	Crl *string `json:"crl,omitempty"`
}

// NewInlineResponse200364Items instantiates a new InlineResponse200364Items object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200364Items() *InlineResponse200364Items {
	this := InlineResponse200364Items{}
	return &this
}

// NewInlineResponse200364ItemsWithDefaults instantiates a new InlineResponse200364Items object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200364ItemsWithDefaults() *InlineResponse200364Items {
	this := InlineResponse200364Items{}
	return &this
}

// GetCertificateAuthorityId returns the CertificateAuthorityId field value if set, zero value otherwise.
func (o *InlineResponse200364Items) GetCertificateAuthorityId() string {
	if o == nil || isNil(o.CertificateAuthorityId) {
		var ret string
		return ret
	}
	return *o.CertificateAuthorityId
}

// GetCertificateAuthorityIdOk returns a tuple with the CertificateAuthorityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200364Items) GetCertificateAuthorityIdOk() (*string, bool) {
	if o == nil || isNil(o.CertificateAuthorityId) {
    return nil, false
	}
	return o.CertificateAuthorityId, true
}

// HasCertificateAuthorityId returns a boolean if a field has been set.
func (o *InlineResponse200364Items) HasCertificateAuthorityId() bool {
	if o != nil && !isNil(o.CertificateAuthorityId) {
		return true
	}

	return false
}

// SetCertificateAuthorityId gets a reference to the given string and assigns it to the CertificateAuthorityId field.
func (o *InlineResponse200364Items) SetCertificateAuthorityId(v string) {
	o.CertificateAuthorityId = &v
}

// GetCrl returns the Crl field value if set, zero value otherwise.
func (o *InlineResponse200364Items) GetCrl() string {
	if o == nil || isNil(o.Crl) {
		var ret string
		return ret
	}
	return *o.Crl
}

// GetCrlOk returns a tuple with the Crl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200364Items) GetCrlOk() (*string, bool) {
	if o == nil || isNil(o.Crl) {
    return nil, false
	}
	return o.Crl, true
}

// HasCrl returns a boolean if a field has been set.
func (o *InlineResponse200364Items) HasCrl() bool {
	if o != nil && !isNil(o.Crl) {
		return true
	}

	return false
}

// SetCrl gets a reference to the given string and assigns it to the Crl field.
func (o *InlineResponse200364Items) SetCrl(v string) {
	o.Crl = &v
}

func (o InlineResponse200364Items) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.CertificateAuthorityId) {
		toSerialize["certificateAuthorityId"] = o.CertificateAuthorityId
	}
	if !isNil(o.Crl) {
		toSerialize["crl"] = o.Crl
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200364Items struct {
	value *InlineResponse200364Items
	isSet bool
}

func (v NullableInlineResponse200364Items) Get() *InlineResponse200364Items {
	return v.value
}

func (v *NullableInlineResponse200364Items) Set(val *InlineResponse200364Items) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200364Items) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200364Items) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200364Items(val *InlineResponse200364Items) *NullableInlineResponse200364Items {
	return &NullableInlineResponse200364Items{value: val, isSet: true}
}

func (v NullableInlineResponse200364Items) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200364Items) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


