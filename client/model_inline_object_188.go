/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 07 May, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.58.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineObject188 struct for InlineObject188
type InlineObject188 struct {
	// Collect location and scanning analytics
	Enabled *bool `json:"enabled,omitempty"`
	Api *NetworksNetworkIdWirelessLocationScanningApi `json:"api,omitempty"`
}

// NewInlineObject188 instantiates a new InlineObject188 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject188() *InlineObject188 {
	this := InlineObject188{}
	return &this
}

// NewInlineObject188WithDefaults instantiates a new InlineObject188 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject188WithDefaults() *InlineObject188 {
	this := InlineObject188{}
	return &this
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *InlineObject188) GetEnabled() bool {
	if o == nil || isNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject188) GetEnabledOk() (*bool, bool) {
	if o == nil || isNil(o.Enabled) {
    return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *InlineObject188) HasEnabled() bool {
	if o != nil && !isNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *InlineObject188) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetApi returns the Api field value if set, zero value otherwise.
func (o *InlineObject188) GetApi() NetworksNetworkIdWirelessLocationScanningApi {
	if o == nil || isNil(o.Api) {
		var ret NetworksNetworkIdWirelessLocationScanningApi
		return ret
	}
	return *o.Api
}

// GetApiOk returns a tuple with the Api field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject188) GetApiOk() (*NetworksNetworkIdWirelessLocationScanningApi, bool) {
	if o == nil || isNil(o.Api) {
    return nil, false
	}
	return o.Api, true
}

// HasApi returns a boolean if a field has been set.
func (o *InlineObject188) HasApi() bool {
	if o != nil && !isNil(o.Api) {
		return true
	}

	return false
}

// SetApi gets a reference to the given NetworksNetworkIdWirelessLocationScanningApi and assigns it to the Api field.
func (o *InlineObject188) SetApi(v NetworksNetworkIdWirelessLocationScanningApi) {
	o.Api = &v
}

func (o InlineObject188) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !isNil(o.Api) {
		toSerialize["api"] = o.Api
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject188 struct {
	value *InlineObject188
	isSet bool
}

func (v NullableInlineObject188) Get() *InlineObject188 {
	return v.value
}

func (v *NullableInlineObject188) Set(val *InlineObject188) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject188) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject188) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject188(val *InlineObject188) *NullableInlineObject188 {
	return &NullableInlineObject188{value: val, isSet: true}
}

func (v NullableInlineObject188) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject188) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


