/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 04 September, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.50.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200265StatesUnusedSoonestActivation Information about the soonest forthcoming license activation
type InlineResponse200265StatesUnusedSoonestActivation struct {
	// The soonest license activation date
	ActivationDate *string `json:"activationDate,omitempty"`
	// The number of licenses that will activate on this date
	ToActivateCount *int32 `json:"toActivateCount,omitempty"`
}

// NewInlineResponse200265StatesUnusedSoonestActivation instantiates a new InlineResponse200265StatesUnusedSoonestActivation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200265StatesUnusedSoonestActivation() *InlineResponse200265StatesUnusedSoonestActivation {
	this := InlineResponse200265StatesUnusedSoonestActivation{}
	return &this
}

// NewInlineResponse200265StatesUnusedSoonestActivationWithDefaults instantiates a new InlineResponse200265StatesUnusedSoonestActivation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200265StatesUnusedSoonestActivationWithDefaults() *InlineResponse200265StatesUnusedSoonestActivation {
	this := InlineResponse200265StatesUnusedSoonestActivation{}
	return &this
}

// GetActivationDate returns the ActivationDate field value if set, zero value otherwise.
func (o *InlineResponse200265StatesUnusedSoonestActivation) GetActivationDate() string {
	if o == nil || isNil(o.ActivationDate) {
		var ret string
		return ret
	}
	return *o.ActivationDate
}

// GetActivationDateOk returns a tuple with the ActivationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200265StatesUnusedSoonestActivation) GetActivationDateOk() (*string, bool) {
	if o == nil || isNil(o.ActivationDate) {
    return nil, false
	}
	return o.ActivationDate, true
}

// HasActivationDate returns a boolean if a field has been set.
func (o *InlineResponse200265StatesUnusedSoonestActivation) HasActivationDate() bool {
	if o != nil && !isNil(o.ActivationDate) {
		return true
	}

	return false
}

// SetActivationDate gets a reference to the given string and assigns it to the ActivationDate field.
func (o *InlineResponse200265StatesUnusedSoonestActivation) SetActivationDate(v string) {
	o.ActivationDate = &v
}

// GetToActivateCount returns the ToActivateCount field value if set, zero value otherwise.
func (o *InlineResponse200265StatesUnusedSoonestActivation) GetToActivateCount() int32 {
	if o == nil || isNil(o.ToActivateCount) {
		var ret int32
		return ret
	}
	return *o.ToActivateCount
}

// GetToActivateCountOk returns a tuple with the ToActivateCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200265StatesUnusedSoonestActivation) GetToActivateCountOk() (*int32, bool) {
	if o == nil || isNil(o.ToActivateCount) {
    return nil, false
	}
	return o.ToActivateCount, true
}

// HasToActivateCount returns a boolean if a field has been set.
func (o *InlineResponse200265StatesUnusedSoonestActivation) HasToActivateCount() bool {
	if o != nil && !isNil(o.ToActivateCount) {
		return true
	}

	return false
}

// SetToActivateCount gets a reference to the given int32 and assigns it to the ToActivateCount field.
func (o *InlineResponse200265StatesUnusedSoonestActivation) SetToActivateCount(v int32) {
	o.ToActivateCount = &v
}

func (o InlineResponse200265StatesUnusedSoonestActivation) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.ActivationDate) {
		toSerialize["activationDate"] = o.ActivationDate
	}
	if !isNil(o.ToActivateCount) {
		toSerialize["toActivateCount"] = o.ToActivateCount
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200265StatesUnusedSoonestActivation struct {
	value *InlineResponse200265StatesUnusedSoonestActivation
	isSet bool
}

func (v NullableInlineResponse200265StatesUnusedSoonestActivation) Get() *InlineResponse200265StatesUnusedSoonestActivation {
	return v.value
}

func (v *NullableInlineResponse200265StatesUnusedSoonestActivation) Set(val *InlineResponse200265StatesUnusedSoonestActivation) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200265StatesUnusedSoonestActivation) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200265StatesUnusedSoonestActivation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200265StatesUnusedSoonestActivation(val *InlineResponse200265StatesUnusedSoonestActivation) *NullableInlineResponse200265StatesUnusedSoonestActivation {
	return &NullableInlineResponse200265StatesUnusedSoonestActivation{value: val, isSet: true}
}

func (v NullableInlineResponse200265StatesUnusedSoonestActivation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200265StatesUnusedSoonestActivation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


