/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 02 April, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.57.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200333Meta Meta details about the result
type InlineResponse200333Meta struct {
	Counts *InlineResponse200333MetaCounts `json:"counts,omitempty"`
}

// NewInlineResponse200333Meta instantiates a new InlineResponse200333Meta object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200333Meta() *InlineResponse200333Meta {
	this := InlineResponse200333Meta{}
	return &this
}

// NewInlineResponse200333MetaWithDefaults instantiates a new InlineResponse200333Meta object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200333MetaWithDefaults() *InlineResponse200333Meta {
	this := InlineResponse200333Meta{}
	return &this
}

// GetCounts returns the Counts field value if set, zero value otherwise.
func (o *InlineResponse200333Meta) GetCounts() InlineResponse200333MetaCounts {
	if o == nil || isNil(o.Counts) {
		var ret InlineResponse200333MetaCounts
		return ret
	}
	return *o.Counts
}

// GetCountsOk returns a tuple with the Counts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200333Meta) GetCountsOk() (*InlineResponse200333MetaCounts, bool) {
	if o == nil || isNil(o.Counts) {
    return nil, false
	}
	return o.Counts, true
}

// HasCounts returns a boolean if a field has been set.
func (o *InlineResponse200333Meta) HasCounts() bool {
	if o != nil && !isNil(o.Counts) {
		return true
	}

	return false
}

// SetCounts gets a reference to the given InlineResponse200333MetaCounts and assigns it to the Counts field.
func (o *InlineResponse200333Meta) SetCounts(v InlineResponse200333MetaCounts) {
	o.Counts = &v
}

func (o InlineResponse200333Meta) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Counts) {
		toSerialize["counts"] = o.Counts
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200333Meta struct {
	value *InlineResponse200333Meta
	isSet bool
}

func (v NullableInlineResponse200333Meta) Get() *InlineResponse200333Meta {
	return v.value
}

func (v *NullableInlineResponse200333Meta) Set(val *InlineResponse200333Meta) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200333Meta) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200333Meta) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200333Meta(val *InlineResponse200333Meta) *NullableInlineResponse200333Meta {
	return &NullableInlineResponse200333Meta{value: val, isSet: true}
}

func (v NullableInlineResponse200333Meta) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200333Meta) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


