/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 06 November, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.52.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200178 struct for InlineResponse200178
type InlineResponse200178 struct {
	// MAC address of the client
	Mac *string `json:"mac,omitempty"`
	ConnectionStats *InlineResponse200178ConnectionStats `json:"connectionStats,omitempty"`
}

// NewInlineResponse200178 instantiates a new InlineResponse200178 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200178() *InlineResponse200178 {
	this := InlineResponse200178{}
	return &this
}

// NewInlineResponse200178WithDefaults instantiates a new InlineResponse200178 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200178WithDefaults() *InlineResponse200178 {
	this := InlineResponse200178{}
	return &this
}

// GetMac returns the Mac field value if set, zero value otherwise.
func (o *InlineResponse200178) GetMac() string {
	if o == nil || isNil(o.Mac) {
		var ret string
		return ret
	}
	return *o.Mac
}

// GetMacOk returns a tuple with the Mac field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200178) GetMacOk() (*string, bool) {
	if o == nil || isNil(o.Mac) {
    return nil, false
	}
	return o.Mac, true
}

// HasMac returns a boolean if a field has been set.
func (o *InlineResponse200178) HasMac() bool {
	if o != nil && !isNil(o.Mac) {
		return true
	}

	return false
}

// SetMac gets a reference to the given string and assigns it to the Mac field.
func (o *InlineResponse200178) SetMac(v string) {
	o.Mac = &v
}

// GetConnectionStats returns the ConnectionStats field value if set, zero value otherwise.
func (o *InlineResponse200178) GetConnectionStats() InlineResponse200178ConnectionStats {
	if o == nil || isNil(o.ConnectionStats) {
		var ret InlineResponse200178ConnectionStats
		return ret
	}
	return *o.ConnectionStats
}

// GetConnectionStatsOk returns a tuple with the ConnectionStats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200178) GetConnectionStatsOk() (*InlineResponse200178ConnectionStats, bool) {
	if o == nil || isNil(o.ConnectionStats) {
    return nil, false
	}
	return o.ConnectionStats, true
}

// HasConnectionStats returns a boolean if a field has been set.
func (o *InlineResponse200178) HasConnectionStats() bool {
	if o != nil && !isNil(o.ConnectionStats) {
		return true
	}

	return false
}

// SetConnectionStats gets a reference to the given InlineResponse200178ConnectionStats and assigns it to the ConnectionStats field.
func (o *InlineResponse200178) SetConnectionStats(v InlineResponse200178ConnectionStats) {
	o.ConnectionStats = &v
}

func (o InlineResponse200178) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Mac) {
		toSerialize["mac"] = o.Mac
	}
	if !isNil(o.ConnectionStats) {
		toSerialize["connectionStats"] = o.ConnectionStats
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200178 struct {
	value *InlineResponse200178
	isSet bool
}

func (v NullableInlineResponse200178) Get() *InlineResponse200178 {
	return v.value
}

func (v *NullableInlineResponse200178) Set(val *InlineResponse200178) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200178) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200178) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200178(val *InlineResponse200178) *NullableInlineResponse200178 {
	return &NullableInlineResponse200178{value: val, isSet: true}
}

func (v NullableInlineResponse200178) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200178) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


