/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 06 November, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.52.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200339Redundancy Wireless LAN controller redundancy information
type InlineResponse200339Redundancy struct {
	// Wireless LAN controller role(Active, Active recovery, Standby hot, Standby recovery and Offline)
	Role *string `json:"role,omitempty"`
	// Wireless LAN controller redundancy ID
	Id *string `json:"id,omitempty"`
	// Wireless LAN controller chassis name
	ChassisName *string `json:"chassisName,omitempty"`
	Management *InlineResponse200339RedundancyManagement `json:"management,omitempty"`
}

// NewInlineResponse200339Redundancy instantiates a new InlineResponse200339Redundancy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200339Redundancy() *InlineResponse200339Redundancy {
	this := InlineResponse200339Redundancy{}
	return &this
}

// NewInlineResponse200339RedundancyWithDefaults instantiates a new InlineResponse200339Redundancy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200339RedundancyWithDefaults() *InlineResponse200339Redundancy {
	this := InlineResponse200339Redundancy{}
	return &this
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *InlineResponse200339Redundancy) GetRole() string {
	if o == nil || isNil(o.Role) {
		var ret string
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200339Redundancy) GetRoleOk() (*string, bool) {
	if o == nil || isNil(o.Role) {
    return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *InlineResponse200339Redundancy) HasRole() bool {
	if o != nil && !isNil(o.Role) {
		return true
	}

	return false
}

// SetRole gets a reference to the given string and assigns it to the Role field.
func (o *InlineResponse200339Redundancy) SetRole(v string) {
	o.Role = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *InlineResponse200339Redundancy) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200339Redundancy) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *InlineResponse200339Redundancy) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *InlineResponse200339Redundancy) SetId(v string) {
	o.Id = &v
}

// GetChassisName returns the ChassisName field value if set, zero value otherwise.
func (o *InlineResponse200339Redundancy) GetChassisName() string {
	if o == nil || isNil(o.ChassisName) {
		var ret string
		return ret
	}
	return *o.ChassisName
}

// GetChassisNameOk returns a tuple with the ChassisName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200339Redundancy) GetChassisNameOk() (*string, bool) {
	if o == nil || isNil(o.ChassisName) {
    return nil, false
	}
	return o.ChassisName, true
}

// HasChassisName returns a boolean if a field has been set.
func (o *InlineResponse200339Redundancy) HasChassisName() bool {
	if o != nil && !isNil(o.ChassisName) {
		return true
	}

	return false
}

// SetChassisName gets a reference to the given string and assigns it to the ChassisName field.
func (o *InlineResponse200339Redundancy) SetChassisName(v string) {
	o.ChassisName = &v
}

// GetManagement returns the Management field value if set, zero value otherwise.
func (o *InlineResponse200339Redundancy) GetManagement() InlineResponse200339RedundancyManagement {
	if o == nil || isNil(o.Management) {
		var ret InlineResponse200339RedundancyManagement
		return ret
	}
	return *o.Management
}

// GetManagementOk returns a tuple with the Management field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200339Redundancy) GetManagementOk() (*InlineResponse200339RedundancyManagement, bool) {
	if o == nil || isNil(o.Management) {
    return nil, false
	}
	return o.Management, true
}

// HasManagement returns a boolean if a field has been set.
func (o *InlineResponse200339Redundancy) HasManagement() bool {
	if o != nil && !isNil(o.Management) {
		return true
	}

	return false
}

// SetManagement gets a reference to the given InlineResponse200339RedundancyManagement and assigns it to the Management field.
func (o *InlineResponse200339Redundancy) SetManagement(v InlineResponse200339RedundancyManagement) {
	o.Management = &v
}

func (o InlineResponse200339Redundancy) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Role) {
		toSerialize["role"] = o.Role
	}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.ChassisName) {
		toSerialize["chassisName"] = o.ChassisName
	}
	if !isNil(o.Management) {
		toSerialize["management"] = o.Management
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200339Redundancy struct {
	value *InlineResponse200339Redundancy
	isSet bool
}

func (v NullableInlineResponse200339Redundancy) Get() *InlineResponse200339Redundancy {
	return v.value
}

func (v *NullableInlineResponse200339Redundancy) Set(val *InlineResponse200339Redundancy) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200339Redundancy) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200339Redundancy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200339Redundancy(val *InlineResponse200339Redundancy) *NullableInlineResponse200339Redundancy {
	return &NullableInlineResponse200339Redundancy{value: val, isSet: true}
}

func (v NullableInlineResponse200339Redundancy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200339Redundancy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


