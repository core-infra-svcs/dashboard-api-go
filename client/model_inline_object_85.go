/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 02 July, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.60.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineObject85 struct for InlineObject85
type InlineObject85 struct {
	// Name of the new cluster
	Name string `json:"name"`
	// Uplink interface settings of the cluster
	Uplinks []NetworksNetworkIdCampusGatewayClustersUplinks `json:"uplinks"`
	// Tunnel interface settings of the cluster: Reuse uplink or specify tunnel interface
	Tunnels []NetworksNetworkIdCampusGatewayClustersTunnels `json:"tunnels"`
	Nameservers NetworksNetworkIdCampusGatewayClustersNameservers `json:"nameservers"`
	// Port channel settings of the cluster
	PortChannels []NetworksNetworkIdCampusGatewayClustersPortChannels `json:"portChannels"`
	// Devices to be added to the cluster
	Devices []NetworksNetworkIdCampusGatewayClustersDevices `json:"devices,omitempty"`
	// Notes about cluster with max size of 511 characters allowed
	Notes *string `json:"notes,omitempty"`
}

// NewInlineObject85 instantiates a new InlineObject85 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject85(name string, uplinks []NetworksNetworkIdCampusGatewayClustersUplinks, tunnels []NetworksNetworkIdCampusGatewayClustersTunnels, nameservers NetworksNetworkIdCampusGatewayClustersNameservers, portChannels []NetworksNetworkIdCampusGatewayClustersPortChannels) *InlineObject85 {
	this := InlineObject85{}
	this.Name = name
	this.Uplinks = uplinks
	this.Tunnels = tunnels
	this.Nameservers = nameservers
	this.PortChannels = portChannels
	return &this
}

// NewInlineObject85WithDefaults instantiates a new InlineObject85 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject85WithDefaults() *InlineObject85 {
	this := InlineObject85{}
	return &this
}

// GetName returns the Name field value
func (o *InlineObject85) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *InlineObject85) GetNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *InlineObject85) SetName(v string) {
	o.Name = v
}

// GetUplinks returns the Uplinks field value
func (o *InlineObject85) GetUplinks() []NetworksNetworkIdCampusGatewayClustersUplinks {
	if o == nil {
		var ret []NetworksNetworkIdCampusGatewayClustersUplinks
		return ret
	}

	return o.Uplinks
}

// GetUplinksOk returns a tuple with the Uplinks field value
// and a boolean to check if the value has been set.
func (o *InlineObject85) GetUplinksOk() ([]NetworksNetworkIdCampusGatewayClustersUplinks, bool) {
	if o == nil {
    return nil, false
	}
	return o.Uplinks, true
}

// SetUplinks sets field value
func (o *InlineObject85) SetUplinks(v []NetworksNetworkIdCampusGatewayClustersUplinks) {
	o.Uplinks = v
}

// GetTunnels returns the Tunnels field value
func (o *InlineObject85) GetTunnels() []NetworksNetworkIdCampusGatewayClustersTunnels {
	if o == nil {
		var ret []NetworksNetworkIdCampusGatewayClustersTunnels
		return ret
	}

	return o.Tunnels
}

// GetTunnelsOk returns a tuple with the Tunnels field value
// and a boolean to check if the value has been set.
func (o *InlineObject85) GetTunnelsOk() ([]NetworksNetworkIdCampusGatewayClustersTunnels, bool) {
	if o == nil {
    return nil, false
	}
	return o.Tunnels, true
}

// SetTunnels sets field value
func (o *InlineObject85) SetTunnels(v []NetworksNetworkIdCampusGatewayClustersTunnels) {
	o.Tunnels = v
}

// GetNameservers returns the Nameservers field value
func (o *InlineObject85) GetNameservers() NetworksNetworkIdCampusGatewayClustersNameservers {
	if o == nil {
		var ret NetworksNetworkIdCampusGatewayClustersNameservers
		return ret
	}

	return o.Nameservers
}

// GetNameserversOk returns a tuple with the Nameservers field value
// and a boolean to check if the value has been set.
func (o *InlineObject85) GetNameserversOk() (*NetworksNetworkIdCampusGatewayClustersNameservers, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Nameservers, true
}

// SetNameservers sets field value
func (o *InlineObject85) SetNameservers(v NetworksNetworkIdCampusGatewayClustersNameservers) {
	o.Nameservers = v
}

// GetPortChannels returns the PortChannels field value
func (o *InlineObject85) GetPortChannels() []NetworksNetworkIdCampusGatewayClustersPortChannels {
	if o == nil {
		var ret []NetworksNetworkIdCampusGatewayClustersPortChannels
		return ret
	}

	return o.PortChannels
}

// GetPortChannelsOk returns a tuple with the PortChannels field value
// and a boolean to check if the value has been set.
func (o *InlineObject85) GetPortChannelsOk() ([]NetworksNetworkIdCampusGatewayClustersPortChannels, bool) {
	if o == nil {
    return nil, false
	}
	return o.PortChannels, true
}

// SetPortChannels sets field value
func (o *InlineObject85) SetPortChannels(v []NetworksNetworkIdCampusGatewayClustersPortChannels) {
	o.PortChannels = v
}

// GetDevices returns the Devices field value if set, zero value otherwise.
func (o *InlineObject85) GetDevices() []NetworksNetworkIdCampusGatewayClustersDevices {
	if o == nil || isNil(o.Devices) {
		var ret []NetworksNetworkIdCampusGatewayClustersDevices
		return ret
	}
	return o.Devices
}

// GetDevicesOk returns a tuple with the Devices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject85) GetDevicesOk() ([]NetworksNetworkIdCampusGatewayClustersDevices, bool) {
	if o == nil || isNil(o.Devices) {
    return nil, false
	}
	return o.Devices, true
}

// HasDevices returns a boolean if a field has been set.
func (o *InlineObject85) HasDevices() bool {
	if o != nil && !isNil(o.Devices) {
		return true
	}

	return false
}

// SetDevices gets a reference to the given []NetworksNetworkIdCampusGatewayClustersDevices and assigns it to the Devices field.
func (o *InlineObject85) SetDevices(v []NetworksNetworkIdCampusGatewayClustersDevices) {
	o.Devices = v
}

// GetNotes returns the Notes field value if set, zero value otherwise.
func (o *InlineObject85) GetNotes() string {
	if o == nil || isNil(o.Notes) {
		var ret string
		return ret
	}
	return *o.Notes
}

// GetNotesOk returns a tuple with the Notes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject85) GetNotesOk() (*string, bool) {
	if o == nil || isNil(o.Notes) {
    return nil, false
	}
	return o.Notes, true
}

// HasNotes returns a boolean if a field has been set.
func (o *InlineObject85) HasNotes() bool {
	if o != nil && !isNil(o.Notes) {
		return true
	}

	return false
}

// SetNotes gets a reference to the given string and assigns it to the Notes field.
func (o *InlineObject85) SetNotes(v string) {
	o.Notes = &v
}

func (o InlineObject85) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["uplinks"] = o.Uplinks
	}
	if true {
		toSerialize["tunnels"] = o.Tunnels
	}
	if true {
		toSerialize["nameservers"] = o.Nameservers
	}
	if true {
		toSerialize["portChannels"] = o.PortChannels
	}
	if !isNil(o.Devices) {
		toSerialize["devices"] = o.Devices
	}
	if !isNil(o.Notes) {
		toSerialize["notes"] = o.Notes
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject85 struct {
	value *InlineObject85
	isSet bool
}

func (v NullableInlineObject85) Get() *InlineObject85 {
	return v.value
}

func (v *NullableInlineObject85) Set(val *InlineObject85) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject85) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject85) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject85(val *InlineObject85) *NullableInlineObject85 {
	return &NullableInlineObject85{value: val, isSet: true}
}

func (v NullableInlineObject85) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject85) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


