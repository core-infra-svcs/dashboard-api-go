/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 04 December, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.53.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"time"
)

// InlineResponse200312Webhook The webhook receiver used by the callback to send results
type InlineResponse200312Webhook struct {
	// The webhook receiver URL where the callback will be sent
	Url *string `json:"url,omitempty"`
	HttpServer *InlineResponse200312WebhookHttpServer `json:"httpServer,omitempty"`
	PayloadTemplate *InlineResponse200312WebhookPayloadTemplate `json:"payloadTemplate,omitempty"`
	// The timestamp the callback was sent to the webhook receiver
	SentAt *time.Time `json:"sentAt,omitempty"`
}

// NewInlineResponse200312Webhook instantiates a new InlineResponse200312Webhook object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200312Webhook() *InlineResponse200312Webhook {
	this := InlineResponse200312Webhook{}
	return &this
}

// NewInlineResponse200312WebhookWithDefaults instantiates a new InlineResponse200312Webhook object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200312WebhookWithDefaults() *InlineResponse200312Webhook {
	this := InlineResponse200312Webhook{}
	return &this
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *InlineResponse200312Webhook) GetUrl() string {
	if o == nil || isNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200312Webhook) GetUrlOk() (*string, bool) {
	if o == nil || isNil(o.Url) {
    return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *InlineResponse200312Webhook) HasUrl() bool {
	if o != nil && !isNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *InlineResponse200312Webhook) SetUrl(v string) {
	o.Url = &v
}

// GetHttpServer returns the HttpServer field value if set, zero value otherwise.
func (o *InlineResponse200312Webhook) GetHttpServer() InlineResponse200312WebhookHttpServer {
	if o == nil || isNil(o.HttpServer) {
		var ret InlineResponse200312WebhookHttpServer
		return ret
	}
	return *o.HttpServer
}

// GetHttpServerOk returns a tuple with the HttpServer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200312Webhook) GetHttpServerOk() (*InlineResponse200312WebhookHttpServer, bool) {
	if o == nil || isNil(o.HttpServer) {
    return nil, false
	}
	return o.HttpServer, true
}

// HasHttpServer returns a boolean if a field has been set.
func (o *InlineResponse200312Webhook) HasHttpServer() bool {
	if o != nil && !isNil(o.HttpServer) {
		return true
	}

	return false
}

// SetHttpServer gets a reference to the given InlineResponse200312WebhookHttpServer and assigns it to the HttpServer field.
func (o *InlineResponse200312Webhook) SetHttpServer(v InlineResponse200312WebhookHttpServer) {
	o.HttpServer = &v
}

// GetPayloadTemplate returns the PayloadTemplate field value if set, zero value otherwise.
func (o *InlineResponse200312Webhook) GetPayloadTemplate() InlineResponse200312WebhookPayloadTemplate {
	if o == nil || isNil(o.PayloadTemplate) {
		var ret InlineResponse200312WebhookPayloadTemplate
		return ret
	}
	return *o.PayloadTemplate
}

// GetPayloadTemplateOk returns a tuple with the PayloadTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200312Webhook) GetPayloadTemplateOk() (*InlineResponse200312WebhookPayloadTemplate, bool) {
	if o == nil || isNil(o.PayloadTemplate) {
    return nil, false
	}
	return o.PayloadTemplate, true
}

// HasPayloadTemplate returns a boolean if a field has been set.
func (o *InlineResponse200312Webhook) HasPayloadTemplate() bool {
	if o != nil && !isNil(o.PayloadTemplate) {
		return true
	}

	return false
}

// SetPayloadTemplate gets a reference to the given InlineResponse200312WebhookPayloadTemplate and assigns it to the PayloadTemplate field.
func (o *InlineResponse200312Webhook) SetPayloadTemplate(v InlineResponse200312WebhookPayloadTemplate) {
	o.PayloadTemplate = &v
}

// GetSentAt returns the SentAt field value if set, zero value otherwise.
func (o *InlineResponse200312Webhook) GetSentAt() time.Time {
	if o == nil || isNil(o.SentAt) {
		var ret time.Time
		return ret
	}
	return *o.SentAt
}

// GetSentAtOk returns a tuple with the SentAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200312Webhook) GetSentAtOk() (*time.Time, bool) {
	if o == nil || isNil(o.SentAt) {
    return nil, false
	}
	return o.SentAt, true
}

// HasSentAt returns a boolean if a field has been set.
func (o *InlineResponse200312Webhook) HasSentAt() bool {
	if o != nil && !isNil(o.SentAt) {
		return true
	}

	return false
}

// SetSentAt gets a reference to the given time.Time and assigns it to the SentAt field.
func (o *InlineResponse200312Webhook) SetSentAt(v time.Time) {
	o.SentAt = &v
}

func (o InlineResponse200312Webhook) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !isNil(o.HttpServer) {
		toSerialize["httpServer"] = o.HttpServer
	}
	if !isNil(o.PayloadTemplate) {
		toSerialize["payloadTemplate"] = o.PayloadTemplate
	}
	if !isNil(o.SentAt) {
		toSerialize["sentAt"] = o.SentAt
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200312Webhook struct {
	value *InlineResponse200312Webhook
	isSet bool
}

func (v NullableInlineResponse200312Webhook) Get() *InlineResponse200312Webhook {
	return v.value
}

func (v *NullableInlineResponse200312Webhook) Set(val *InlineResponse200312Webhook) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200312Webhook) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200312Webhook) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200312Webhook(val *InlineResponse200312Webhook) *NullableInlineResponse200312Webhook {
	return &NullableInlineResponse200312Webhook{value: val, isSet: true}
}

func (v NullableInlineResponse200312Webhook) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200312Webhook) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


