/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 03 September, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.62.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// NetworksNetworkIdFirmwareUpgradesUpgradeWindow Upgrade window for devices in network
type NetworksNetworkIdFirmwareUpgradesUpgradeWindow struct {
	// Day of the week
	DayOfWeek string `json:"dayOfWeek"`
	// Hour of the day
	HourOfDay string `json:"hourOfDay"`
}

// NewNetworksNetworkIdFirmwareUpgradesUpgradeWindow instantiates a new NetworksNetworkIdFirmwareUpgradesUpgradeWindow object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworksNetworkIdFirmwareUpgradesUpgradeWindow(dayOfWeek string, hourOfDay string) *NetworksNetworkIdFirmwareUpgradesUpgradeWindow {
	this := NetworksNetworkIdFirmwareUpgradesUpgradeWindow{}
	this.DayOfWeek = dayOfWeek
	this.HourOfDay = hourOfDay
	return &this
}

// NewNetworksNetworkIdFirmwareUpgradesUpgradeWindowWithDefaults instantiates a new NetworksNetworkIdFirmwareUpgradesUpgradeWindow object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworksNetworkIdFirmwareUpgradesUpgradeWindowWithDefaults() *NetworksNetworkIdFirmwareUpgradesUpgradeWindow {
	this := NetworksNetworkIdFirmwareUpgradesUpgradeWindow{}
	return &this
}

// GetDayOfWeek returns the DayOfWeek field value
func (o *NetworksNetworkIdFirmwareUpgradesUpgradeWindow) GetDayOfWeek() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DayOfWeek
}

// GetDayOfWeekOk returns a tuple with the DayOfWeek field value
// and a boolean to check if the value has been set.
func (o *NetworksNetworkIdFirmwareUpgradesUpgradeWindow) GetDayOfWeekOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.DayOfWeek, true
}

// SetDayOfWeek sets field value
func (o *NetworksNetworkIdFirmwareUpgradesUpgradeWindow) SetDayOfWeek(v string) {
	o.DayOfWeek = v
}

// GetHourOfDay returns the HourOfDay field value
func (o *NetworksNetworkIdFirmwareUpgradesUpgradeWindow) GetHourOfDay() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.HourOfDay
}

// GetHourOfDayOk returns a tuple with the HourOfDay field value
// and a boolean to check if the value has been set.
func (o *NetworksNetworkIdFirmwareUpgradesUpgradeWindow) GetHourOfDayOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.HourOfDay, true
}

// SetHourOfDay sets field value
func (o *NetworksNetworkIdFirmwareUpgradesUpgradeWindow) SetHourOfDay(v string) {
	o.HourOfDay = v
}

func (o NetworksNetworkIdFirmwareUpgradesUpgradeWindow) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["dayOfWeek"] = o.DayOfWeek
	}
	if true {
		toSerialize["hourOfDay"] = o.HourOfDay
	}
	return json.Marshal(toSerialize)
}

type NullableNetworksNetworkIdFirmwareUpgradesUpgradeWindow struct {
	value *NetworksNetworkIdFirmwareUpgradesUpgradeWindow
	isSet bool
}

func (v NullableNetworksNetworkIdFirmwareUpgradesUpgradeWindow) Get() *NetworksNetworkIdFirmwareUpgradesUpgradeWindow {
	return v.value
}

func (v *NullableNetworksNetworkIdFirmwareUpgradesUpgradeWindow) Set(val *NetworksNetworkIdFirmwareUpgradesUpgradeWindow) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworksNetworkIdFirmwareUpgradesUpgradeWindow) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworksNetworkIdFirmwareUpgradesUpgradeWindow) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworksNetworkIdFirmwareUpgradesUpgradeWindow(val *NetworksNetworkIdFirmwareUpgradesUpgradeWindow) *NullableNetworksNetworkIdFirmwareUpgradesUpgradeWindow {
	return &NullableNetworksNetworkIdFirmwareUpgradesUpgradeWindow{value: val, isSet: true}
}

func (v NullableNetworksNetworkIdFirmwareUpgradesUpgradeWindow) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworksNetworkIdFirmwareUpgradesUpgradeWindow) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


