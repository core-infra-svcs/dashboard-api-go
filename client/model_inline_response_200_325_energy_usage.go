/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 March, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.56.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200325EnergyUsage Energy data for the given interval.
type InlineResponse200325EnergyUsage struct {
	// The total energy in watt-hours delivered by this port during the interval
	Total *float32 `json:"total,omitempty"`
}

// NewInlineResponse200325EnergyUsage instantiates a new InlineResponse200325EnergyUsage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200325EnergyUsage() *InlineResponse200325EnergyUsage {
	this := InlineResponse200325EnergyUsage{}
	return &this
}

// NewInlineResponse200325EnergyUsageWithDefaults instantiates a new InlineResponse200325EnergyUsage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200325EnergyUsageWithDefaults() *InlineResponse200325EnergyUsage {
	this := InlineResponse200325EnergyUsage{}
	return &this
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *InlineResponse200325EnergyUsage) GetTotal() float32 {
	if o == nil || isNil(o.Total) {
		var ret float32
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200325EnergyUsage) GetTotalOk() (*float32, bool) {
	if o == nil || isNil(o.Total) {
    return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *InlineResponse200325EnergyUsage) HasTotal() bool {
	if o != nil && !isNil(o.Total) {
		return true
	}

	return false
}

// SetTotal gets a reference to the given float32 and assigns it to the Total field.
func (o *InlineResponse200325EnergyUsage) SetTotal(v float32) {
	o.Total = &v
}

func (o InlineResponse200325EnergyUsage) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Total) {
		toSerialize["total"] = o.Total
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200325EnergyUsage struct {
	value *InlineResponse200325EnergyUsage
	isSet bool
}

func (v NullableInlineResponse200325EnergyUsage) Get() *InlineResponse200325EnergyUsage {
	return v.value
}

func (v *NullableInlineResponse200325EnergyUsage) Set(val *InlineResponse200325EnergyUsage) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200325EnergyUsage) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200325EnergyUsage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200325EnergyUsage(val *InlineResponse200325EnergyUsage) *NullableInlineResponse200325EnergyUsage {
	return &NullableInlineResponse200325EnergyUsage{value: val, isSet: true}
}

func (v NullableInlineResponse200325EnergyUsage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200325EnergyUsage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


