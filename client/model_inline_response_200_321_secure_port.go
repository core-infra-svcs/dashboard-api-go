/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 February, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.55.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200321SecurePort The Secure Port status of the port.
type InlineResponse200321SecurePort struct {
	// Whether Secure Port is currently active for this port.
	Active *bool `json:"active,omitempty"`
	// The current Secure Port status.
	AuthenticationStatus *string `json:"authenticationStatus,omitempty"`
}

// NewInlineResponse200321SecurePort instantiates a new InlineResponse200321SecurePort object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200321SecurePort() *InlineResponse200321SecurePort {
	this := InlineResponse200321SecurePort{}
	return &this
}

// NewInlineResponse200321SecurePortWithDefaults instantiates a new InlineResponse200321SecurePort object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200321SecurePortWithDefaults() *InlineResponse200321SecurePort {
	this := InlineResponse200321SecurePort{}
	return &this
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *InlineResponse200321SecurePort) GetActive() bool {
	if o == nil || isNil(o.Active) {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200321SecurePort) GetActiveOk() (*bool, bool) {
	if o == nil || isNil(o.Active) {
    return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *InlineResponse200321SecurePort) HasActive() bool {
	if o != nil && !isNil(o.Active) {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *InlineResponse200321SecurePort) SetActive(v bool) {
	o.Active = &v
}

// GetAuthenticationStatus returns the AuthenticationStatus field value if set, zero value otherwise.
func (o *InlineResponse200321SecurePort) GetAuthenticationStatus() string {
	if o == nil || isNil(o.AuthenticationStatus) {
		var ret string
		return ret
	}
	return *o.AuthenticationStatus
}

// GetAuthenticationStatusOk returns a tuple with the AuthenticationStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200321SecurePort) GetAuthenticationStatusOk() (*string, bool) {
	if o == nil || isNil(o.AuthenticationStatus) {
    return nil, false
	}
	return o.AuthenticationStatus, true
}

// HasAuthenticationStatus returns a boolean if a field has been set.
func (o *InlineResponse200321SecurePort) HasAuthenticationStatus() bool {
	if o != nil && !isNil(o.AuthenticationStatus) {
		return true
	}

	return false
}

// SetAuthenticationStatus gets a reference to the given string and assigns it to the AuthenticationStatus field.
func (o *InlineResponse200321SecurePort) SetAuthenticationStatus(v string) {
	o.AuthenticationStatus = &v
}

func (o InlineResponse200321SecurePort) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Active) {
		toSerialize["active"] = o.Active
	}
	if !isNil(o.AuthenticationStatus) {
		toSerialize["authenticationStatus"] = o.AuthenticationStatus
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200321SecurePort struct {
	value *InlineResponse200321SecurePort
	isSet bool
}

func (v NullableInlineResponse200321SecurePort) Get() *InlineResponse200321SecurePort {
	return v.value
}

func (v *NullableInlineResponse200321SecurePort) Set(val *InlineResponse200321SecurePort) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200321SecurePort) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200321SecurePort) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200321SecurePort(val *InlineResponse200321SecurePort) *NullableInlineResponse200321SecurePort {
	return &NullableInlineResponse200321SecurePort{value: val, isSet: true}
}

func (v NullableInlineResponse200321SecurePort) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200321SecurePort) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


