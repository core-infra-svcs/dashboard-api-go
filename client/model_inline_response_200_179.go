/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 06 December, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.40.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200179 struct for InlineResponse200179
type InlineResponse200179 struct {
	// The ID of the callback
	CallbackId *string `json:"callbackId,omitempty"`
	// The status of the callback
	Status *string `json:"status,omitempty"`
	// The errors returned by the callback
	Errors []string `json:"errors,omitempty"`
	CreatedBy *InlineResponse200179CreatedBy `json:"createdBy,omitempty"`
	Webhook *InlineResponse200179Webhook `json:"webhook,omitempty"`
}

// NewInlineResponse200179 instantiates a new InlineResponse200179 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200179() *InlineResponse200179 {
	this := InlineResponse200179{}
	return &this
}

// NewInlineResponse200179WithDefaults instantiates a new InlineResponse200179 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200179WithDefaults() *InlineResponse200179 {
	this := InlineResponse200179{}
	return &this
}

// GetCallbackId returns the CallbackId field value if set, zero value otherwise.
func (o *InlineResponse200179) GetCallbackId() string {
	if o == nil || isNil(o.CallbackId) {
		var ret string
		return ret
	}
	return *o.CallbackId
}

// GetCallbackIdOk returns a tuple with the CallbackId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200179) GetCallbackIdOk() (*string, bool) {
	if o == nil || isNil(o.CallbackId) {
    return nil, false
	}
	return o.CallbackId, true
}

// HasCallbackId returns a boolean if a field has been set.
func (o *InlineResponse200179) HasCallbackId() bool {
	if o != nil && !isNil(o.CallbackId) {
		return true
	}

	return false
}

// SetCallbackId gets a reference to the given string and assigns it to the CallbackId field.
func (o *InlineResponse200179) SetCallbackId(v string) {
	o.CallbackId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *InlineResponse200179) GetStatus() string {
	if o == nil || isNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200179) GetStatusOk() (*string, bool) {
	if o == nil || isNil(o.Status) {
    return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *InlineResponse200179) HasStatus() bool {
	if o != nil && !isNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *InlineResponse200179) SetStatus(v string) {
	o.Status = &v
}

// GetErrors returns the Errors field value if set, zero value otherwise.
func (o *InlineResponse200179) GetErrors() []string {
	if o == nil || isNil(o.Errors) {
		var ret []string
		return ret
	}
	return o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200179) GetErrorsOk() ([]string, bool) {
	if o == nil || isNil(o.Errors) {
    return nil, false
	}
	return o.Errors, true
}

// HasErrors returns a boolean if a field has been set.
func (o *InlineResponse200179) HasErrors() bool {
	if o != nil && !isNil(o.Errors) {
		return true
	}

	return false
}

// SetErrors gets a reference to the given []string and assigns it to the Errors field.
func (o *InlineResponse200179) SetErrors(v []string) {
	o.Errors = v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *InlineResponse200179) GetCreatedBy() InlineResponse200179CreatedBy {
	if o == nil || isNil(o.CreatedBy) {
		var ret InlineResponse200179CreatedBy
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200179) GetCreatedByOk() (*InlineResponse200179CreatedBy, bool) {
	if o == nil || isNil(o.CreatedBy) {
    return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *InlineResponse200179) HasCreatedBy() bool {
	if o != nil && !isNil(o.CreatedBy) {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given InlineResponse200179CreatedBy and assigns it to the CreatedBy field.
func (o *InlineResponse200179) SetCreatedBy(v InlineResponse200179CreatedBy) {
	o.CreatedBy = &v
}

// GetWebhook returns the Webhook field value if set, zero value otherwise.
func (o *InlineResponse200179) GetWebhook() InlineResponse200179Webhook {
	if o == nil || isNil(o.Webhook) {
		var ret InlineResponse200179Webhook
		return ret
	}
	return *o.Webhook
}

// GetWebhookOk returns a tuple with the Webhook field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200179) GetWebhookOk() (*InlineResponse200179Webhook, bool) {
	if o == nil || isNil(o.Webhook) {
    return nil, false
	}
	return o.Webhook, true
}

// HasWebhook returns a boolean if a field has been set.
func (o *InlineResponse200179) HasWebhook() bool {
	if o != nil && !isNil(o.Webhook) {
		return true
	}

	return false
}

// SetWebhook gets a reference to the given InlineResponse200179Webhook and assigns it to the Webhook field.
func (o *InlineResponse200179) SetWebhook(v InlineResponse200179Webhook) {
	o.Webhook = &v
}

func (o InlineResponse200179) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.CallbackId) {
		toSerialize["callbackId"] = o.CallbackId
	}
	if !isNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !isNil(o.Errors) {
		toSerialize["errors"] = o.Errors
	}
	if !isNil(o.CreatedBy) {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if !isNil(o.Webhook) {
		toSerialize["webhook"] = o.Webhook
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200179 struct {
	value *InlineResponse200179
	isSet bool
}

func (v NullableInlineResponse200179) Get() *InlineResponse200179 {
	return v.value
}

func (v *NullableInlineResponse200179) Set(val *InlineResponse200179) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200179) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200179) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200179(val *InlineResponse200179) *NullableInlineResponse200179 {
	return &NullableInlineResponse200179{value: val, isSet: true}
}

func (v NullableInlineResponse200179) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200179) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


