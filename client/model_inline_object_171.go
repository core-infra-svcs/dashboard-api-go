/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 01 June, 2022 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.22.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineObject171 struct for InlineObject171
type InlineObject171 struct {
	// The numbers of the orders that should be claimed
	Orders *[]string `json:"orders,omitempty"`
	// The serials of the devices that should be claimed
	Serials *[]string `json:"serials,omitempty"`
	// The licenses that should be claimed
	Licenses *[]OrganizationsOrganizationIdClaimLicenses `json:"licenses,omitempty"`
}

// NewInlineObject171 instantiates a new InlineObject171 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject171() *InlineObject171 {
	this := InlineObject171{}
	return &this
}

// NewInlineObject171WithDefaults instantiates a new InlineObject171 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject171WithDefaults() *InlineObject171 {
	this := InlineObject171{}
	return &this
}

// GetOrders returns the Orders field value if set, zero value otherwise.
func (o *InlineObject171) GetOrders() []string {
	if o == nil || o.Orders == nil {
		var ret []string
		return ret
	}
	return *o.Orders
}

// GetOrdersOk returns a tuple with the Orders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject171) GetOrdersOk() (*[]string, bool) {
	if o == nil || o.Orders == nil {
		return nil, false
	}
	return o.Orders, true
}

// HasOrders returns a boolean if a field has been set.
func (o *InlineObject171) HasOrders() bool {
	if o != nil && o.Orders != nil {
		return true
	}

	return false
}

// SetOrders gets a reference to the given []string and assigns it to the Orders field.
func (o *InlineObject171) SetOrders(v []string) {
	o.Orders = &v
}

// GetSerials returns the Serials field value if set, zero value otherwise.
func (o *InlineObject171) GetSerials() []string {
	if o == nil || o.Serials == nil {
		var ret []string
		return ret
	}
	return *o.Serials
}

// GetSerialsOk returns a tuple with the Serials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject171) GetSerialsOk() (*[]string, bool) {
	if o == nil || o.Serials == nil {
		return nil, false
	}
	return o.Serials, true
}

// HasSerials returns a boolean if a field has been set.
func (o *InlineObject171) HasSerials() bool {
	if o != nil && o.Serials != nil {
		return true
	}

	return false
}

// SetSerials gets a reference to the given []string and assigns it to the Serials field.
func (o *InlineObject171) SetSerials(v []string) {
	o.Serials = &v
}

// GetLicenses returns the Licenses field value if set, zero value otherwise.
func (o *InlineObject171) GetLicenses() []OrganizationsOrganizationIdClaimLicenses {
	if o == nil || o.Licenses == nil {
		var ret []OrganizationsOrganizationIdClaimLicenses
		return ret
	}
	return *o.Licenses
}

// GetLicensesOk returns a tuple with the Licenses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject171) GetLicensesOk() (*[]OrganizationsOrganizationIdClaimLicenses, bool) {
	if o == nil || o.Licenses == nil {
		return nil, false
	}
	return o.Licenses, true
}

// HasLicenses returns a boolean if a field has been set.
func (o *InlineObject171) HasLicenses() bool {
	if o != nil && o.Licenses != nil {
		return true
	}

	return false
}

// SetLicenses gets a reference to the given []OrganizationsOrganizationIdClaimLicenses and assigns it to the Licenses field.
func (o *InlineObject171) SetLicenses(v []OrganizationsOrganizationIdClaimLicenses) {
	o.Licenses = &v
}

func (o InlineObject171) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Orders != nil {
		toSerialize["orders"] = o.Orders
	}
	if o.Serials != nil {
		toSerialize["serials"] = o.Serials
	}
	if o.Licenses != nil {
		toSerialize["licenses"] = o.Licenses
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject171 struct {
	value *InlineObject171
	isSet bool
}

func (v NullableInlineObject171) Get() *InlineObject171 {
	return v.value
}

func (v *NullableInlineObject171) Set(val *InlineObject171) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject171) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject171) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject171(val *InlineObject171) *NullableInlineObject171 {
	return &NullableInlineObject171{value: val, isSet: true}
}

func (v NullableInlineObject171) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject171) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


