/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 01 October, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.63.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse20121 struct for InlineResponse20121
type InlineResponse20121 struct {
	// List of packet capture files
	Items []InlineResponse200278Items `json:"items,omitempty"`
}

// NewInlineResponse20121 instantiates a new InlineResponse20121 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20121() *InlineResponse20121 {
	this := InlineResponse20121{}
	return &this
}

// NewInlineResponse20121WithDefaults instantiates a new InlineResponse20121 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20121WithDefaults() *InlineResponse20121 {
	this := InlineResponse20121{}
	return &this
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *InlineResponse20121) GetItems() []InlineResponse200278Items {
	if o == nil || isNil(o.Items) {
		var ret []InlineResponse200278Items
		return ret
	}
	return o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20121) GetItemsOk() ([]InlineResponse200278Items, bool) {
	if o == nil || isNil(o.Items) {
    return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *InlineResponse20121) HasItems() bool {
	if o != nil && !isNil(o.Items) {
		return true
	}

	return false
}

// SetItems gets a reference to the given []InlineResponse200278Items and assigns it to the Items field.
func (o *InlineResponse20121) SetItems(v []InlineResponse200278Items) {
	o.Items = v
}

func (o InlineResponse20121) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Items) {
		toSerialize["items"] = o.Items
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20121 struct {
	value *InlineResponse20121
	isSet bool
}

func (v NullableInlineResponse20121) Get() *InlineResponse20121 {
	return v.value
}

func (v *NullableInlineResponse20121) Set(val *InlineResponse20121) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20121) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20121) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20121(val *InlineResponse20121) *NullableInlineResponse20121 {
	return &NullableInlineResponse20121{value: val, isSet: true}
}

func (v NullableInlineResponse20121) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20121) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


