/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 07 May, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.58.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineObject271 struct for InlineObject271
type InlineObject271 struct {
	// A set of devices to import (or update)
	Devices []OrganizationsOrganizationIdInventoryOnboardingCloudMonitoringPrepareDevices `json:"devices"`
	Options *OrganizationsOrganizationIdInventoryOnboardingCloudMonitoringPrepareOptions `json:"options,omitempty"`
}

// NewInlineObject271 instantiates a new InlineObject271 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject271(devices []OrganizationsOrganizationIdInventoryOnboardingCloudMonitoringPrepareDevices) *InlineObject271 {
	this := InlineObject271{}
	this.Devices = devices
	return &this
}

// NewInlineObject271WithDefaults instantiates a new InlineObject271 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject271WithDefaults() *InlineObject271 {
	this := InlineObject271{}
	return &this
}

// GetDevices returns the Devices field value
func (o *InlineObject271) GetDevices() []OrganizationsOrganizationIdInventoryOnboardingCloudMonitoringPrepareDevices {
	if o == nil {
		var ret []OrganizationsOrganizationIdInventoryOnboardingCloudMonitoringPrepareDevices
		return ret
	}

	return o.Devices
}

// GetDevicesOk returns a tuple with the Devices field value
// and a boolean to check if the value has been set.
func (o *InlineObject271) GetDevicesOk() ([]OrganizationsOrganizationIdInventoryOnboardingCloudMonitoringPrepareDevices, bool) {
	if o == nil {
    return nil, false
	}
	return o.Devices, true
}

// SetDevices sets field value
func (o *InlineObject271) SetDevices(v []OrganizationsOrganizationIdInventoryOnboardingCloudMonitoringPrepareDevices) {
	o.Devices = v
}

// GetOptions returns the Options field value if set, zero value otherwise.
func (o *InlineObject271) GetOptions() OrganizationsOrganizationIdInventoryOnboardingCloudMonitoringPrepareOptions {
	if o == nil || isNil(o.Options) {
		var ret OrganizationsOrganizationIdInventoryOnboardingCloudMonitoringPrepareOptions
		return ret
	}
	return *o.Options
}

// GetOptionsOk returns a tuple with the Options field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject271) GetOptionsOk() (*OrganizationsOrganizationIdInventoryOnboardingCloudMonitoringPrepareOptions, bool) {
	if o == nil || isNil(o.Options) {
    return nil, false
	}
	return o.Options, true
}

// HasOptions returns a boolean if a field has been set.
func (o *InlineObject271) HasOptions() bool {
	if o != nil && !isNil(o.Options) {
		return true
	}

	return false
}

// SetOptions gets a reference to the given OrganizationsOrganizationIdInventoryOnboardingCloudMonitoringPrepareOptions and assigns it to the Options field.
func (o *InlineObject271) SetOptions(v OrganizationsOrganizationIdInventoryOnboardingCloudMonitoringPrepareOptions) {
	o.Options = &v
}

func (o InlineObject271) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["devices"] = o.Devices
	}
	if !isNil(o.Options) {
		toSerialize["options"] = o.Options
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject271 struct {
	value *InlineObject271
	isSet bool
}

func (v NullableInlineObject271) Get() *InlineObject271 {
	return v.value
}

func (v *NullableInlineObject271) Set(val *InlineObject271) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject271) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject271) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject271(val *InlineObject271) *NullableInlineObject271 {
	return &NullableInlineObject271{value: val, isSet: true}
}

func (v NullableInlineObject271) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject271) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


