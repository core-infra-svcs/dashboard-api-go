/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 06 November, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.52.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse2015Result Result of the throughput test request
type InlineResponse2015Result struct {
	Speeds *InlineResponse2015ResultSpeeds `json:"speeds,omitempty"`
}

// NewInlineResponse2015Result instantiates a new InlineResponse2015Result object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse2015Result() *InlineResponse2015Result {
	this := InlineResponse2015Result{}
	return &this
}

// NewInlineResponse2015ResultWithDefaults instantiates a new InlineResponse2015Result object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse2015ResultWithDefaults() *InlineResponse2015Result {
	this := InlineResponse2015Result{}
	return &this
}

// GetSpeeds returns the Speeds field value if set, zero value otherwise.
func (o *InlineResponse2015Result) GetSpeeds() InlineResponse2015ResultSpeeds {
	if o == nil || isNil(o.Speeds) {
		var ret InlineResponse2015ResultSpeeds
		return ret
	}
	return *o.Speeds
}

// GetSpeedsOk returns a tuple with the Speeds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2015Result) GetSpeedsOk() (*InlineResponse2015ResultSpeeds, bool) {
	if o == nil || isNil(o.Speeds) {
    return nil, false
	}
	return o.Speeds, true
}

// HasSpeeds returns a boolean if a field has been set.
func (o *InlineResponse2015Result) HasSpeeds() bool {
	if o != nil && !isNil(o.Speeds) {
		return true
	}

	return false
}

// SetSpeeds gets a reference to the given InlineResponse2015ResultSpeeds and assigns it to the Speeds field.
func (o *InlineResponse2015Result) SetSpeeds(v InlineResponse2015ResultSpeeds) {
	o.Speeds = &v
}

func (o InlineResponse2015Result) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Speeds) {
		toSerialize["speeds"] = o.Speeds
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse2015Result struct {
	value *InlineResponse2015Result
	isSet bool
}

func (v NullableInlineResponse2015Result) Get() *InlineResponse2015Result {
	return v.value
}

func (v *NullableInlineResponse2015Result) Set(val *InlineResponse2015Result) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse2015Result) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse2015Result) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse2015Result(val *InlineResponse2015Result) *NullableInlineResponse2015Result {
	return &NullableInlineResponse2015Result{value: val, isSet: true}
}

func (v NullableInlineResponse2015Result) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse2015Result) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


