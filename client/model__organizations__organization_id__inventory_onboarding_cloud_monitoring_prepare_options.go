/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 06 August, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.61.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// OrganizationsOrganizationIdInventoryOnboardingCloudMonitoringPrepareOptions Additional options for the import
type OrganizationsOrganizationIdInventoryOnboardingCloudMonitoringPrepareOptions struct {
	// Flag to skip adding the device to RDM
	SkipCommit *bool `json:"skipCommit,omitempty"`
}

// NewOrganizationsOrganizationIdInventoryOnboardingCloudMonitoringPrepareOptions instantiates a new OrganizationsOrganizationIdInventoryOnboardingCloudMonitoringPrepareOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationsOrganizationIdInventoryOnboardingCloudMonitoringPrepareOptions() *OrganizationsOrganizationIdInventoryOnboardingCloudMonitoringPrepareOptions {
	this := OrganizationsOrganizationIdInventoryOnboardingCloudMonitoringPrepareOptions{}
	return &this
}

// NewOrganizationsOrganizationIdInventoryOnboardingCloudMonitoringPrepareOptionsWithDefaults instantiates a new OrganizationsOrganizationIdInventoryOnboardingCloudMonitoringPrepareOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationsOrganizationIdInventoryOnboardingCloudMonitoringPrepareOptionsWithDefaults() *OrganizationsOrganizationIdInventoryOnboardingCloudMonitoringPrepareOptions {
	this := OrganizationsOrganizationIdInventoryOnboardingCloudMonitoringPrepareOptions{}
	return &this
}

// GetSkipCommit returns the SkipCommit field value if set, zero value otherwise.
func (o *OrganizationsOrganizationIdInventoryOnboardingCloudMonitoringPrepareOptions) GetSkipCommit() bool {
	if o == nil || isNil(o.SkipCommit) {
		var ret bool
		return ret
	}
	return *o.SkipCommit
}

// GetSkipCommitOk returns a tuple with the SkipCommit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationsOrganizationIdInventoryOnboardingCloudMonitoringPrepareOptions) GetSkipCommitOk() (*bool, bool) {
	if o == nil || isNil(o.SkipCommit) {
    return nil, false
	}
	return o.SkipCommit, true
}

// HasSkipCommit returns a boolean if a field has been set.
func (o *OrganizationsOrganizationIdInventoryOnboardingCloudMonitoringPrepareOptions) HasSkipCommit() bool {
	if o != nil && !isNil(o.SkipCommit) {
		return true
	}

	return false
}

// SetSkipCommit gets a reference to the given bool and assigns it to the SkipCommit field.
func (o *OrganizationsOrganizationIdInventoryOnboardingCloudMonitoringPrepareOptions) SetSkipCommit(v bool) {
	o.SkipCommit = &v
}

func (o OrganizationsOrganizationIdInventoryOnboardingCloudMonitoringPrepareOptions) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.SkipCommit) {
		toSerialize["skipCommit"] = o.SkipCommit
	}
	return json.Marshal(toSerialize)
}

type NullableOrganizationsOrganizationIdInventoryOnboardingCloudMonitoringPrepareOptions struct {
	value *OrganizationsOrganizationIdInventoryOnboardingCloudMonitoringPrepareOptions
	isSet bool
}

func (v NullableOrganizationsOrganizationIdInventoryOnboardingCloudMonitoringPrepareOptions) Get() *OrganizationsOrganizationIdInventoryOnboardingCloudMonitoringPrepareOptions {
	return v.value
}

func (v *NullableOrganizationsOrganizationIdInventoryOnboardingCloudMonitoringPrepareOptions) Set(val *OrganizationsOrganizationIdInventoryOnboardingCloudMonitoringPrepareOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationsOrganizationIdInventoryOnboardingCloudMonitoringPrepareOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationsOrganizationIdInventoryOnboardingCloudMonitoringPrepareOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationsOrganizationIdInventoryOnboardingCloudMonitoringPrepareOptions(val *OrganizationsOrganizationIdInventoryOnboardingCloudMonitoringPrepareOptions) *NullableOrganizationsOrganizationIdInventoryOnboardingCloudMonitoringPrepareOptions {
	return &NullableOrganizationsOrganizationIdInventoryOnboardingCloudMonitoringPrepareOptions{value: val, isSet: true}
}

func (v NullableOrganizationsOrganizationIdInventoryOnboardingCloudMonitoringPrepareOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationsOrganizationIdInventoryOnboardingCloudMonitoringPrepareOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


