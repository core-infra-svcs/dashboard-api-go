/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 March, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.56.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200361Items struct for InlineResponse200361Items
type InlineResponse200361Items struct {
	// Wireless LAN controller cloud ID
	Serial *string `json:"serial,omitempty"`
	Network *InlineResponse200348Network `json:"network,omitempty"`
	Counts *InlineResponse200361Counts `json:"counts,omitempty"`
	Redundancy *InlineResponse200361Redundancy `json:"redundancy,omitempty"`
	Firmware *InlineResponse200361Firmware `json:"firmware,omitempty"`
}

// NewInlineResponse200361Items instantiates a new InlineResponse200361Items object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200361Items() *InlineResponse200361Items {
	this := InlineResponse200361Items{}
	return &this
}

// NewInlineResponse200361ItemsWithDefaults instantiates a new InlineResponse200361Items object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200361ItemsWithDefaults() *InlineResponse200361Items {
	this := InlineResponse200361Items{}
	return &this
}

// GetSerial returns the Serial field value if set, zero value otherwise.
func (o *InlineResponse200361Items) GetSerial() string {
	if o == nil || isNil(o.Serial) {
		var ret string
		return ret
	}
	return *o.Serial
}

// GetSerialOk returns a tuple with the Serial field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200361Items) GetSerialOk() (*string, bool) {
	if o == nil || isNil(o.Serial) {
    return nil, false
	}
	return o.Serial, true
}

// HasSerial returns a boolean if a field has been set.
func (o *InlineResponse200361Items) HasSerial() bool {
	if o != nil && !isNil(o.Serial) {
		return true
	}

	return false
}

// SetSerial gets a reference to the given string and assigns it to the Serial field.
func (o *InlineResponse200361Items) SetSerial(v string) {
	o.Serial = &v
}

// GetNetwork returns the Network field value if set, zero value otherwise.
func (o *InlineResponse200361Items) GetNetwork() InlineResponse200348Network {
	if o == nil || isNil(o.Network) {
		var ret InlineResponse200348Network
		return ret
	}
	return *o.Network
}

// GetNetworkOk returns a tuple with the Network field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200361Items) GetNetworkOk() (*InlineResponse200348Network, bool) {
	if o == nil || isNil(o.Network) {
    return nil, false
	}
	return o.Network, true
}

// HasNetwork returns a boolean if a field has been set.
func (o *InlineResponse200361Items) HasNetwork() bool {
	if o != nil && !isNil(o.Network) {
		return true
	}

	return false
}

// SetNetwork gets a reference to the given InlineResponse200348Network and assigns it to the Network field.
func (o *InlineResponse200361Items) SetNetwork(v InlineResponse200348Network) {
	o.Network = &v
}

// GetCounts returns the Counts field value if set, zero value otherwise.
func (o *InlineResponse200361Items) GetCounts() InlineResponse200361Counts {
	if o == nil || isNil(o.Counts) {
		var ret InlineResponse200361Counts
		return ret
	}
	return *o.Counts
}

// GetCountsOk returns a tuple with the Counts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200361Items) GetCountsOk() (*InlineResponse200361Counts, bool) {
	if o == nil || isNil(o.Counts) {
    return nil, false
	}
	return o.Counts, true
}

// HasCounts returns a boolean if a field has been set.
func (o *InlineResponse200361Items) HasCounts() bool {
	if o != nil && !isNil(o.Counts) {
		return true
	}

	return false
}

// SetCounts gets a reference to the given InlineResponse200361Counts and assigns it to the Counts field.
func (o *InlineResponse200361Items) SetCounts(v InlineResponse200361Counts) {
	o.Counts = &v
}

// GetRedundancy returns the Redundancy field value if set, zero value otherwise.
func (o *InlineResponse200361Items) GetRedundancy() InlineResponse200361Redundancy {
	if o == nil || isNil(o.Redundancy) {
		var ret InlineResponse200361Redundancy
		return ret
	}
	return *o.Redundancy
}

// GetRedundancyOk returns a tuple with the Redundancy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200361Items) GetRedundancyOk() (*InlineResponse200361Redundancy, bool) {
	if o == nil || isNil(o.Redundancy) {
    return nil, false
	}
	return o.Redundancy, true
}

// HasRedundancy returns a boolean if a field has been set.
func (o *InlineResponse200361Items) HasRedundancy() bool {
	if o != nil && !isNil(o.Redundancy) {
		return true
	}

	return false
}

// SetRedundancy gets a reference to the given InlineResponse200361Redundancy and assigns it to the Redundancy field.
func (o *InlineResponse200361Items) SetRedundancy(v InlineResponse200361Redundancy) {
	o.Redundancy = &v
}

// GetFirmware returns the Firmware field value if set, zero value otherwise.
func (o *InlineResponse200361Items) GetFirmware() InlineResponse200361Firmware {
	if o == nil || isNil(o.Firmware) {
		var ret InlineResponse200361Firmware
		return ret
	}
	return *o.Firmware
}

// GetFirmwareOk returns a tuple with the Firmware field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200361Items) GetFirmwareOk() (*InlineResponse200361Firmware, bool) {
	if o == nil || isNil(o.Firmware) {
    return nil, false
	}
	return o.Firmware, true
}

// HasFirmware returns a boolean if a field has been set.
func (o *InlineResponse200361Items) HasFirmware() bool {
	if o != nil && !isNil(o.Firmware) {
		return true
	}

	return false
}

// SetFirmware gets a reference to the given InlineResponse200361Firmware and assigns it to the Firmware field.
func (o *InlineResponse200361Items) SetFirmware(v InlineResponse200361Firmware) {
	o.Firmware = &v
}

func (o InlineResponse200361Items) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Serial) {
		toSerialize["serial"] = o.Serial
	}
	if !isNil(o.Network) {
		toSerialize["network"] = o.Network
	}
	if !isNil(o.Counts) {
		toSerialize["counts"] = o.Counts
	}
	if !isNil(o.Redundancy) {
		toSerialize["redundancy"] = o.Redundancy
	}
	if !isNil(o.Firmware) {
		toSerialize["firmware"] = o.Firmware
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200361Items struct {
	value *InlineResponse200361Items
	isSet bool
}

func (v NullableInlineResponse200361Items) Get() *InlineResponse200361Items {
	return v.value
}

func (v *NullableInlineResponse200361Items) Set(val *InlineResponse200361Items) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200361Items) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200361Items) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200361Items(val *InlineResponse200361Items) *NullableInlineResponse200361Items {
	return &NullableInlineResponse200361Items{value: val, isSet: true}
}

func (v NullableInlineResponse200361Items) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200361Items) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


