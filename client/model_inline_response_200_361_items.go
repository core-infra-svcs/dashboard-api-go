/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 07 May, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.58.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200361Items struct for InlineResponse200361Items
type InlineResponse200361Items struct {
	// Access points cloud ID
	Serial *string `json:"serial,omitempty"`
	Controller *InlineResponse200361Controller `json:"controller,omitempty"`
	Network *InlineResponse200361Network `json:"network,omitempty"`
}

// NewInlineResponse200361Items instantiates a new InlineResponse200361Items object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200361Items() *InlineResponse200361Items {
	this := InlineResponse200361Items{}
	return &this
}

// NewInlineResponse200361ItemsWithDefaults instantiates a new InlineResponse200361Items object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200361ItemsWithDefaults() *InlineResponse200361Items {
	this := InlineResponse200361Items{}
	return &this
}

// GetSerial returns the Serial field value if set, zero value otherwise.
func (o *InlineResponse200361Items) GetSerial() string {
	if o == nil || isNil(o.Serial) {
		var ret string
		return ret
	}
	return *o.Serial
}

// GetSerialOk returns a tuple with the Serial field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200361Items) GetSerialOk() (*string, bool) {
	if o == nil || isNil(o.Serial) {
    return nil, false
	}
	return o.Serial, true
}

// HasSerial returns a boolean if a field has been set.
func (o *InlineResponse200361Items) HasSerial() bool {
	if o != nil && !isNil(o.Serial) {
		return true
	}

	return false
}

// SetSerial gets a reference to the given string and assigns it to the Serial field.
func (o *InlineResponse200361Items) SetSerial(v string) {
	o.Serial = &v
}

// GetController returns the Controller field value if set, zero value otherwise.
func (o *InlineResponse200361Items) GetController() InlineResponse200361Controller {
	if o == nil || isNil(o.Controller) {
		var ret InlineResponse200361Controller
		return ret
	}
	return *o.Controller
}

// GetControllerOk returns a tuple with the Controller field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200361Items) GetControllerOk() (*InlineResponse200361Controller, bool) {
	if o == nil || isNil(o.Controller) {
    return nil, false
	}
	return o.Controller, true
}

// HasController returns a boolean if a field has been set.
func (o *InlineResponse200361Items) HasController() bool {
	if o != nil && !isNil(o.Controller) {
		return true
	}

	return false
}

// SetController gets a reference to the given InlineResponse200361Controller and assigns it to the Controller field.
func (o *InlineResponse200361Items) SetController(v InlineResponse200361Controller) {
	o.Controller = &v
}

// GetNetwork returns the Network field value if set, zero value otherwise.
func (o *InlineResponse200361Items) GetNetwork() InlineResponse200361Network {
	if o == nil || isNil(o.Network) {
		var ret InlineResponse200361Network
		return ret
	}
	return *o.Network
}

// GetNetworkOk returns a tuple with the Network field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200361Items) GetNetworkOk() (*InlineResponse200361Network, bool) {
	if o == nil || isNil(o.Network) {
    return nil, false
	}
	return o.Network, true
}

// HasNetwork returns a boolean if a field has been set.
func (o *InlineResponse200361Items) HasNetwork() bool {
	if o != nil && !isNil(o.Network) {
		return true
	}

	return false
}

// SetNetwork gets a reference to the given InlineResponse200361Network and assigns it to the Network field.
func (o *InlineResponse200361Items) SetNetwork(v InlineResponse200361Network) {
	o.Network = &v
}

func (o InlineResponse200361Items) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Serial) {
		toSerialize["serial"] = o.Serial
	}
	if !isNil(o.Controller) {
		toSerialize["controller"] = o.Controller
	}
	if !isNil(o.Network) {
		toSerialize["network"] = o.Network
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200361Items struct {
	value *InlineResponse200361Items
	isSet bool
}

func (v NullableInlineResponse200361Items) Get() *InlineResponse200361Items {
	return v.value
}

func (v *NullableInlineResponse200361Items) Set(val *InlineResponse200361Items) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200361Items) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200361Items) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200361Items(val *InlineResponse200361Items) *NullableInlineResponse200361Items {
	return &NullableInlineResponse200361Items{value: val, isSet: true}
}

func (v NullableInlineResponse200361Items) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200361Items) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


