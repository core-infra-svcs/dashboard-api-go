/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 02 July, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.60.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200361Items struct for InlineResponse200361Items
type InlineResponse200361Items struct {
	// Unique serial number for the device
	Serial *string `json:"serial,omitempty"`
	// Model of the device
	Model *string `json:"model,omitempty"`
	// Name of the device
	Name *string `json:"name,omitempty"`
	// MAC address of the device
	Mac *string `json:"mac,omitempty"`
	// List of custom tags for the device
	Tags []string `json:"tags,omitempty"`
	Network *InlineResponse200282Network `json:"network,omitempty"`
	// Number of CPU cores on the device
	CpuCount *int32 `json:"cpuCount,omitempty"`
	// Series of cpu load average measurements on the device
	Series []InlineResponse200361Series `json:"series,omitempty"`
}

// NewInlineResponse200361Items instantiates a new InlineResponse200361Items object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200361Items() *InlineResponse200361Items {
	this := InlineResponse200361Items{}
	return &this
}

// NewInlineResponse200361ItemsWithDefaults instantiates a new InlineResponse200361Items object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200361ItemsWithDefaults() *InlineResponse200361Items {
	this := InlineResponse200361Items{}
	return &this
}

// GetSerial returns the Serial field value if set, zero value otherwise.
func (o *InlineResponse200361Items) GetSerial() string {
	if o == nil || isNil(o.Serial) {
		var ret string
		return ret
	}
	return *o.Serial
}

// GetSerialOk returns a tuple with the Serial field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200361Items) GetSerialOk() (*string, bool) {
	if o == nil || isNil(o.Serial) {
    return nil, false
	}
	return o.Serial, true
}

// HasSerial returns a boolean if a field has been set.
func (o *InlineResponse200361Items) HasSerial() bool {
	if o != nil && !isNil(o.Serial) {
		return true
	}

	return false
}

// SetSerial gets a reference to the given string and assigns it to the Serial field.
func (o *InlineResponse200361Items) SetSerial(v string) {
	o.Serial = &v
}

// GetModel returns the Model field value if set, zero value otherwise.
func (o *InlineResponse200361Items) GetModel() string {
	if o == nil || isNil(o.Model) {
		var ret string
		return ret
	}
	return *o.Model
}

// GetModelOk returns a tuple with the Model field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200361Items) GetModelOk() (*string, bool) {
	if o == nil || isNil(o.Model) {
    return nil, false
	}
	return o.Model, true
}

// HasModel returns a boolean if a field has been set.
func (o *InlineResponse200361Items) HasModel() bool {
	if o != nil && !isNil(o.Model) {
		return true
	}

	return false
}

// SetModel gets a reference to the given string and assigns it to the Model field.
func (o *InlineResponse200361Items) SetModel(v string) {
	o.Model = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *InlineResponse200361Items) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200361Items) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
    return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *InlineResponse200361Items) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *InlineResponse200361Items) SetName(v string) {
	o.Name = &v
}

// GetMac returns the Mac field value if set, zero value otherwise.
func (o *InlineResponse200361Items) GetMac() string {
	if o == nil || isNil(o.Mac) {
		var ret string
		return ret
	}
	return *o.Mac
}

// GetMacOk returns a tuple with the Mac field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200361Items) GetMacOk() (*string, bool) {
	if o == nil || isNil(o.Mac) {
    return nil, false
	}
	return o.Mac, true
}

// HasMac returns a boolean if a field has been set.
func (o *InlineResponse200361Items) HasMac() bool {
	if o != nil && !isNil(o.Mac) {
		return true
	}

	return false
}

// SetMac gets a reference to the given string and assigns it to the Mac field.
func (o *InlineResponse200361Items) SetMac(v string) {
	o.Mac = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *InlineResponse200361Items) GetTags() []string {
	if o == nil || isNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200361Items) GetTagsOk() ([]string, bool) {
	if o == nil || isNil(o.Tags) {
    return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *InlineResponse200361Items) HasTags() bool {
	if o != nil && !isNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *InlineResponse200361Items) SetTags(v []string) {
	o.Tags = v
}

// GetNetwork returns the Network field value if set, zero value otherwise.
func (o *InlineResponse200361Items) GetNetwork() InlineResponse200282Network {
	if o == nil || isNil(o.Network) {
		var ret InlineResponse200282Network
		return ret
	}
	return *o.Network
}

// GetNetworkOk returns a tuple with the Network field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200361Items) GetNetworkOk() (*InlineResponse200282Network, bool) {
	if o == nil || isNil(o.Network) {
    return nil, false
	}
	return o.Network, true
}

// HasNetwork returns a boolean if a field has been set.
func (o *InlineResponse200361Items) HasNetwork() bool {
	if o != nil && !isNil(o.Network) {
		return true
	}

	return false
}

// SetNetwork gets a reference to the given InlineResponse200282Network and assigns it to the Network field.
func (o *InlineResponse200361Items) SetNetwork(v InlineResponse200282Network) {
	o.Network = &v
}

// GetCpuCount returns the CpuCount field value if set, zero value otherwise.
func (o *InlineResponse200361Items) GetCpuCount() int32 {
	if o == nil || isNil(o.CpuCount) {
		var ret int32
		return ret
	}
	return *o.CpuCount
}

// GetCpuCountOk returns a tuple with the CpuCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200361Items) GetCpuCountOk() (*int32, bool) {
	if o == nil || isNil(o.CpuCount) {
    return nil, false
	}
	return o.CpuCount, true
}

// HasCpuCount returns a boolean if a field has been set.
func (o *InlineResponse200361Items) HasCpuCount() bool {
	if o != nil && !isNil(o.CpuCount) {
		return true
	}

	return false
}

// SetCpuCount gets a reference to the given int32 and assigns it to the CpuCount field.
func (o *InlineResponse200361Items) SetCpuCount(v int32) {
	o.CpuCount = &v
}

// GetSeries returns the Series field value if set, zero value otherwise.
func (o *InlineResponse200361Items) GetSeries() []InlineResponse200361Series {
	if o == nil || isNil(o.Series) {
		var ret []InlineResponse200361Series
		return ret
	}
	return o.Series
}

// GetSeriesOk returns a tuple with the Series field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200361Items) GetSeriesOk() ([]InlineResponse200361Series, bool) {
	if o == nil || isNil(o.Series) {
    return nil, false
	}
	return o.Series, true
}

// HasSeries returns a boolean if a field has been set.
func (o *InlineResponse200361Items) HasSeries() bool {
	if o != nil && !isNil(o.Series) {
		return true
	}

	return false
}

// SetSeries gets a reference to the given []InlineResponse200361Series and assigns it to the Series field.
func (o *InlineResponse200361Items) SetSeries(v []InlineResponse200361Series) {
	o.Series = v
}

func (o InlineResponse200361Items) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Serial) {
		toSerialize["serial"] = o.Serial
	}
	if !isNil(o.Model) {
		toSerialize["model"] = o.Model
	}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.Mac) {
		toSerialize["mac"] = o.Mac
	}
	if !isNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !isNil(o.Network) {
		toSerialize["network"] = o.Network
	}
	if !isNil(o.CpuCount) {
		toSerialize["cpuCount"] = o.CpuCount
	}
	if !isNil(o.Series) {
		toSerialize["series"] = o.Series
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200361Items struct {
	value *InlineResponse200361Items
	isSet bool
}

func (v NullableInlineResponse200361Items) Get() *InlineResponse200361Items {
	return v.value
}

func (v *NullableInlineResponse200361Items) Set(val *InlineResponse200361Items) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200361Items) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200361Items) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200361Items(val *InlineResponse200361Items) *NullableInlineResponse200361Items {
	return &NullableInlineResponse200361Items{value: val, isSet: true}
}

func (v NullableInlineResponse200361Items) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200361Items) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


