/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 06 September, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.37.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200108Billing Details associated with billing splash
type InlineResponse200108Billing struct {
	FreeAccess *InlineResponse200108BillingFreeAccess `json:"freeAccess,omitempty"`
	// Whether or not billing uses the fast login prepaid access option.
	PrepaidAccessFastLoginEnabled *bool `json:"prepaidAccessFastLoginEnabled,omitempty"`
	// The email address that reeceives replies from clients
	ReplyToEmailAddress *string `json:"replyToEmailAddress,omitempty"`
}

// NewInlineResponse200108Billing instantiates a new InlineResponse200108Billing object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200108Billing() *InlineResponse200108Billing {
	this := InlineResponse200108Billing{}
	return &this
}

// NewInlineResponse200108BillingWithDefaults instantiates a new InlineResponse200108Billing object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200108BillingWithDefaults() *InlineResponse200108Billing {
	this := InlineResponse200108Billing{}
	return &this
}

// GetFreeAccess returns the FreeAccess field value if set, zero value otherwise.
func (o *InlineResponse200108Billing) GetFreeAccess() InlineResponse200108BillingFreeAccess {
	if o == nil || isNil(o.FreeAccess) {
		var ret InlineResponse200108BillingFreeAccess
		return ret
	}
	return *o.FreeAccess
}

// GetFreeAccessOk returns a tuple with the FreeAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200108Billing) GetFreeAccessOk() (*InlineResponse200108BillingFreeAccess, bool) {
	if o == nil || isNil(o.FreeAccess) {
    return nil, false
	}
	return o.FreeAccess, true
}

// HasFreeAccess returns a boolean if a field has been set.
func (o *InlineResponse200108Billing) HasFreeAccess() bool {
	if o != nil && !isNil(o.FreeAccess) {
		return true
	}

	return false
}

// SetFreeAccess gets a reference to the given InlineResponse200108BillingFreeAccess and assigns it to the FreeAccess field.
func (o *InlineResponse200108Billing) SetFreeAccess(v InlineResponse200108BillingFreeAccess) {
	o.FreeAccess = &v
}

// GetPrepaidAccessFastLoginEnabled returns the PrepaidAccessFastLoginEnabled field value if set, zero value otherwise.
func (o *InlineResponse200108Billing) GetPrepaidAccessFastLoginEnabled() bool {
	if o == nil || isNil(o.PrepaidAccessFastLoginEnabled) {
		var ret bool
		return ret
	}
	return *o.PrepaidAccessFastLoginEnabled
}

// GetPrepaidAccessFastLoginEnabledOk returns a tuple with the PrepaidAccessFastLoginEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200108Billing) GetPrepaidAccessFastLoginEnabledOk() (*bool, bool) {
	if o == nil || isNil(o.PrepaidAccessFastLoginEnabled) {
    return nil, false
	}
	return o.PrepaidAccessFastLoginEnabled, true
}

// HasPrepaidAccessFastLoginEnabled returns a boolean if a field has been set.
func (o *InlineResponse200108Billing) HasPrepaidAccessFastLoginEnabled() bool {
	if o != nil && !isNil(o.PrepaidAccessFastLoginEnabled) {
		return true
	}

	return false
}

// SetPrepaidAccessFastLoginEnabled gets a reference to the given bool and assigns it to the PrepaidAccessFastLoginEnabled field.
func (o *InlineResponse200108Billing) SetPrepaidAccessFastLoginEnabled(v bool) {
	o.PrepaidAccessFastLoginEnabled = &v
}

// GetReplyToEmailAddress returns the ReplyToEmailAddress field value if set, zero value otherwise.
func (o *InlineResponse200108Billing) GetReplyToEmailAddress() string {
	if o == nil || isNil(o.ReplyToEmailAddress) {
		var ret string
		return ret
	}
	return *o.ReplyToEmailAddress
}

// GetReplyToEmailAddressOk returns a tuple with the ReplyToEmailAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200108Billing) GetReplyToEmailAddressOk() (*string, bool) {
	if o == nil || isNil(o.ReplyToEmailAddress) {
    return nil, false
	}
	return o.ReplyToEmailAddress, true
}

// HasReplyToEmailAddress returns a boolean if a field has been set.
func (o *InlineResponse200108Billing) HasReplyToEmailAddress() bool {
	if o != nil && !isNil(o.ReplyToEmailAddress) {
		return true
	}

	return false
}

// SetReplyToEmailAddress gets a reference to the given string and assigns it to the ReplyToEmailAddress field.
func (o *InlineResponse200108Billing) SetReplyToEmailAddress(v string) {
	o.ReplyToEmailAddress = &v
}

func (o InlineResponse200108Billing) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.FreeAccess) {
		toSerialize["freeAccess"] = o.FreeAccess
	}
	if !isNil(o.PrepaidAccessFastLoginEnabled) {
		toSerialize["prepaidAccessFastLoginEnabled"] = o.PrepaidAccessFastLoginEnabled
	}
	if !isNil(o.ReplyToEmailAddress) {
		toSerialize["replyToEmailAddress"] = o.ReplyToEmailAddress
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200108Billing struct {
	value *InlineResponse200108Billing
	isSet bool
}

func (v NullableInlineResponse200108Billing) Get() *InlineResponse200108Billing {
	return v.value
}

func (v *NullableInlineResponse200108Billing) Set(val *InlineResponse200108Billing) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200108Billing) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200108Billing) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200108Billing(val *InlineResponse200108Billing) *NullableInlineResponse200108Billing {
	return &NullableInlineResponse200108Billing{value: val, isSet: true}
}

func (v NullableInlineResponse200108Billing) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200108Billing) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


