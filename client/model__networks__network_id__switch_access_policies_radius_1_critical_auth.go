/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 01 October, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.63.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// NetworksNetworkIdSwitchAccessPoliciesRadius1CriticalAuth Critical auth settings for when authentication is rejected by the RADIUS server
type NetworksNetworkIdSwitchAccessPoliciesRadius1CriticalAuth struct {
	// VLAN that clients who use data will be placed on when RADIUS authentication fails. Will be null if hostMode is Multi-Auth
	DataVlanId *int32 `json:"dataVlanId,omitempty"`
	// VLAN that clients who use voice will be placed on when RADIUS authentication fails. Will be null if hostMode is Multi-Auth
	VoiceVlanId *int32 `json:"voiceVlanId,omitempty"`
	// Disable port bounce when RADIUS servers are unreachable
	SuspendPortBounce *bool `json:"suspendPortBounce,omitempty"`
	// Group policy Number for data VLAN
	DataGroupPolicyId *string `json:"dataGroupPolicyId,omitempty"`
	// Group policy Number for voice VLAN
	VoiceGroupPolicyId *string `json:"voiceGroupPolicyId,omitempty"`
	// Security Group Tag ID for data VLAN
	DataSgtId *int32 `json:"dataSgtId,omitempty"`
	// Security Group Tag ID for voice VLAN
	VoiceSgtId *int32 `json:"voiceSgtId,omitempty"`
}

// NewNetworksNetworkIdSwitchAccessPoliciesRadius1CriticalAuth instantiates a new NetworksNetworkIdSwitchAccessPoliciesRadius1CriticalAuth object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworksNetworkIdSwitchAccessPoliciesRadius1CriticalAuth() *NetworksNetworkIdSwitchAccessPoliciesRadius1CriticalAuth {
	this := NetworksNetworkIdSwitchAccessPoliciesRadius1CriticalAuth{}
	return &this
}

// NewNetworksNetworkIdSwitchAccessPoliciesRadius1CriticalAuthWithDefaults instantiates a new NetworksNetworkIdSwitchAccessPoliciesRadius1CriticalAuth object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworksNetworkIdSwitchAccessPoliciesRadius1CriticalAuthWithDefaults() *NetworksNetworkIdSwitchAccessPoliciesRadius1CriticalAuth {
	this := NetworksNetworkIdSwitchAccessPoliciesRadius1CriticalAuth{}
	return &this
}

// GetDataVlanId returns the DataVlanId field value if set, zero value otherwise.
func (o *NetworksNetworkIdSwitchAccessPoliciesRadius1CriticalAuth) GetDataVlanId() int32 {
	if o == nil || isNil(o.DataVlanId) {
		var ret int32
		return ret
	}
	return *o.DataVlanId
}

// GetDataVlanIdOk returns a tuple with the DataVlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworksNetworkIdSwitchAccessPoliciesRadius1CriticalAuth) GetDataVlanIdOk() (*int32, bool) {
	if o == nil || isNil(o.DataVlanId) {
    return nil, false
	}
	return o.DataVlanId, true
}

// HasDataVlanId returns a boolean if a field has been set.
func (o *NetworksNetworkIdSwitchAccessPoliciesRadius1CriticalAuth) HasDataVlanId() bool {
	if o != nil && !isNil(o.DataVlanId) {
		return true
	}

	return false
}

// SetDataVlanId gets a reference to the given int32 and assigns it to the DataVlanId field.
func (o *NetworksNetworkIdSwitchAccessPoliciesRadius1CriticalAuth) SetDataVlanId(v int32) {
	o.DataVlanId = &v
}

// GetVoiceVlanId returns the VoiceVlanId field value if set, zero value otherwise.
func (o *NetworksNetworkIdSwitchAccessPoliciesRadius1CriticalAuth) GetVoiceVlanId() int32 {
	if o == nil || isNil(o.VoiceVlanId) {
		var ret int32
		return ret
	}
	return *o.VoiceVlanId
}

// GetVoiceVlanIdOk returns a tuple with the VoiceVlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworksNetworkIdSwitchAccessPoliciesRadius1CriticalAuth) GetVoiceVlanIdOk() (*int32, bool) {
	if o == nil || isNil(o.VoiceVlanId) {
    return nil, false
	}
	return o.VoiceVlanId, true
}

// HasVoiceVlanId returns a boolean if a field has been set.
func (o *NetworksNetworkIdSwitchAccessPoliciesRadius1CriticalAuth) HasVoiceVlanId() bool {
	if o != nil && !isNil(o.VoiceVlanId) {
		return true
	}

	return false
}

// SetVoiceVlanId gets a reference to the given int32 and assigns it to the VoiceVlanId field.
func (o *NetworksNetworkIdSwitchAccessPoliciesRadius1CriticalAuth) SetVoiceVlanId(v int32) {
	o.VoiceVlanId = &v
}

// GetSuspendPortBounce returns the SuspendPortBounce field value if set, zero value otherwise.
func (o *NetworksNetworkIdSwitchAccessPoliciesRadius1CriticalAuth) GetSuspendPortBounce() bool {
	if o == nil || isNil(o.SuspendPortBounce) {
		var ret bool
		return ret
	}
	return *o.SuspendPortBounce
}

// GetSuspendPortBounceOk returns a tuple with the SuspendPortBounce field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworksNetworkIdSwitchAccessPoliciesRadius1CriticalAuth) GetSuspendPortBounceOk() (*bool, bool) {
	if o == nil || isNil(o.SuspendPortBounce) {
    return nil, false
	}
	return o.SuspendPortBounce, true
}

// HasSuspendPortBounce returns a boolean if a field has been set.
func (o *NetworksNetworkIdSwitchAccessPoliciesRadius1CriticalAuth) HasSuspendPortBounce() bool {
	if o != nil && !isNil(o.SuspendPortBounce) {
		return true
	}

	return false
}

// SetSuspendPortBounce gets a reference to the given bool and assigns it to the SuspendPortBounce field.
func (o *NetworksNetworkIdSwitchAccessPoliciesRadius1CriticalAuth) SetSuspendPortBounce(v bool) {
	o.SuspendPortBounce = &v
}

// GetDataGroupPolicyId returns the DataGroupPolicyId field value if set, zero value otherwise.
func (o *NetworksNetworkIdSwitchAccessPoliciesRadius1CriticalAuth) GetDataGroupPolicyId() string {
	if o == nil || isNil(o.DataGroupPolicyId) {
		var ret string
		return ret
	}
	return *o.DataGroupPolicyId
}

// GetDataGroupPolicyIdOk returns a tuple with the DataGroupPolicyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworksNetworkIdSwitchAccessPoliciesRadius1CriticalAuth) GetDataGroupPolicyIdOk() (*string, bool) {
	if o == nil || isNil(o.DataGroupPolicyId) {
    return nil, false
	}
	return o.DataGroupPolicyId, true
}

// HasDataGroupPolicyId returns a boolean if a field has been set.
func (o *NetworksNetworkIdSwitchAccessPoliciesRadius1CriticalAuth) HasDataGroupPolicyId() bool {
	if o != nil && !isNil(o.DataGroupPolicyId) {
		return true
	}

	return false
}

// SetDataGroupPolicyId gets a reference to the given string and assigns it to the DataGroupPolicyId field.
func (o *NetworksNetworkIdSwitchAccessPoliciesRadius1CriticalAuth) SetDataGroupPolicyId(v string) {
	o.DataGroupPolicyId = &v
}

// GetVoiceGroupPolicyId returns the VoiceGroupPolicyId field value if set, zero value otherwise.
func (o *NetworksNetworkIdSwitchAccessPoliciesRadius1CriticalAuth) GetVoiceGroupPolicyId() string {
	if o == nil || isNil(o.VoiceGroupPolicyId) {
		var ret string
		return ret
	}
	return *o.VoiceGroupPolicyId
}

// GetVoiceGroupPolicyIdOk returns a tuple with the VoiceGroupPolicyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworksNetworkIdSwitchAccessPoliciesRadius1CriticalAuth) GetVoiceGroupPolicyIdOk() (*string, bool) {
	if o == nil || isNil(o.VoiceGroupPolicyId) {
    return nil, false
	}
	return o.VoiceGroupPolicyId, true
}

// HasVoiceGroupPolicyId returns a boolean if a field has been set.
func (o *NetworksNetworkIdSwitchAccessPoliciesRadius1CriticalAuth) HasVoiceGroupPolicyId() bool {
	if o != nil && !isNil(o.VoiceGroupPolicyId) {
		return true
	}

	return false
}

// SetVoiceGroupPolicyId gets a reference to the given string and assigns it to the VoiceGroupPolicyId field.
func (o *NetworksNetworkIdSwitchAccessPoliciesRadius1CriticalAuth) SetVoiceGroupPolicyId(v string) {
	o.VoiceGroupPolicyId = &v
}

// GetDataSgtId returns the DataSgtId field value if set, zero value otherwise.
func (o *NetworksNetworkIdSwitchAccessPoliciesRadius1CriticalAuth) GetDataSgtId() int32 {
	if o == nil || isNil(o.DataSgtId) {
		var ret int32
		return ret
	}
	return *o.DataSgtId
}

// GetDataSgtIdOk returns a tuple with the DataSgtId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworksNetworkIdSwitchAccessPoliciesRadius1CriticalAuth) GetDataSgtIdOk() (*int32, bool) {
	if o == nil || isNil(o.DataSgtId) {
    return nil, false
	}
	return o.DataSgtId, true
}

// HasDataSgtId returns a boolean if a field has been set.
func (o *NetworksNetworkIdSwitchAccessPoliciesRadius1CriticalAuth) HasDataSgtId() bool {
	if o != nil && !isNil(o.DataSgtId) {
		return true
	}

	return false
}

// SetDataSgtId gets a reference to the given int32 and assigns it to the DataSgtId field.
func (o *NetworksNetworkIdSwitchAccessPoliciesRadius1CriticalAuth) SetDataSgtId(v int32) {
	o.DataSgtId = &v
}

// GetVoiceSgtId returns the VoiceSgtId field value if set, zero value otherwise.
func (o *NetworksNetworkIdSwitchAccessPoliciesRadius1CriticalAuth) GetVoiceSgtId() int32 {
	if o == nil || isNil(o.VoiceSgtId) {
		var ret int32
		return ret
	}
	return *o.VoiceSgtId
}

// GetVoiceSgtIdOk returns a tuple with the VoiceSgtId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworksNetworkIdSwitchAccessPoliciesRadius1CriticalAuth) GetVoiceSgtIdOk() (*int32, bool) {
	if o == nil || isNil(o.VoiceSgtId) {
    return nil, false
	}
	return o.VoiceSgtId, true
}

// HasVoiceSgtId returns a boolean if a field has been set.
func (o *NetworksNetworkIdSwitchAccessPoliciesRadius1CriticalAuth) HasVoiceSgtId() bool {
	if o != nil && !isNil(o.VoiceSgtId) {
		return true
	}

	return false
}

// SetVoiceSgtId gets a reference to the given int32 and assigns it to the VoiceSgtId field.
func (o *NetworksNetworkIdSwitchAccessPoliciesRadius1CriticalAuth) SetVoiceSgtId(v int32) {
	o.VoiceSgtId = &v
}

func (o NetworksNetworkIdSwitchAccessPoliciesRadius1CriticalAuth) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.DataVlanId) {
		toSerialize["dataVlanId"] = o.DataVlanId
	}
	if !isNil(o.VoiceVlanId) {
		toSerialize["voiceVlanId"] = o.VoiceVlanId
	}
	if !isNil(o.SuspendPortBounce) {
		toSerialize["suspendPortBounce"] = o.SuspendPortBounce
	}
	if !isNil(o.DataGroupPolicyId) {
		toSerialize["dataGroupPolicyId"] = o.DataGroupPolicyId
	}
	if !isNil(o.VoiceGroupPolicyId) {
		toSerialize["voiceGroupPolicyId"] = o.VoiceGroupPolicyId
	}
	if !isNil(o.DataSgtId) {
		toSerialize["dataSgtId"] = o.DataSgtId
	}
	if !isNil(o.VoiceSgtId) {
		toSerialize["voiceSgtId"] = o.VoiceSgtId
	}
	return json.Marshal(toSerialize)
}

type NullableNetworksNetworkIdSwitchAccessPoliciesRadius1CriticalAuth struct {
	value *NetworksNetworkIdSwitchAccessPoliciesRadius1CriticalAuth
	isSet bool
}

func (v NullableNetworksNetworkIdSwitchAccessPoliciesRadius1CriticalAuth) Get() *NetworksNetworkIdSwitchAccessPoliciesRadius1CriticalAuth {
	return v.value
}

func (v *NullableNetworksNetworkIdSwitchAccessPoliciesRadius1CriticalAuth) Set(val *NetworksNetworkIdSwitchAccessPoliciesRadius1CriticalAuth) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworksNetworkIdSwitchAccessPoliciesRadius1CriticalAuth) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworksNetworkIdSwitchAccessPoliciesRadius1CriticalAuth) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworksNetworkIdSwitchAccessPoliciesRadius1CriticalAuth(val *NetworksNetworkIdSwitchAccessPoliciesRadius1CriticalAuth) *NullableNetworksNetworkIdSwitchAccessPoliciesRadius1CriticalAuth {
	return &NullableNetworksNetworkIdSwitchAccessPoliciesRadius1CriticalAuth{value: val, isSet: true}
}

func (v NullableNetworksNetworkIdSwitchAccessPoliciesRadius1CriticalAuth) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworksNetworkIdSwitchAccessPoliciesRadius1CriticalAuth) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


