/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 October, 2022 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.26.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse20086Networks struct for InlineResponse20086Networks
type InlineResponse20086Networks struct {
	// The network ID
	Id *string `json:"id,omitempty"`
	// The privilege of the SAML administrator on the network
	Access *string `json:"access,omitempty"`
}

// NewInlineResponse20086Networks instantiates a new InlineResponse20086Networks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20086Networks() *InlineResponse20086Networks {
	this := InlineResponse20086Networks{}
	return &this
}

// NewInlineResponse20086NetworksWithDefaults instantiates a new InlineResponse20086Networks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20086NetworksWithDefaults() *InlineResponse20086Networks {
	this := InlineResponse20086Networks{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *InlineResponse20086Networks) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20086Networks) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *InlineResponse20086Networks) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *InlineResponse20086Networks) SetId(v string) {
	o.Id = &v
}

// GetAccess returns the Access field value if set, zero value otherwise.
func (o *InlineResponse20086Networks) GetAccess() string {
	if o == nil || o.Access == nil {
		var ret string
		return ret
	}
	return *o.Access
}

// GetAccessOk returns a tuple with the Access field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20086Networks) GetAccessOk() (*string, bool) {
	if o == nil || o.Access == nil {
		return nil, false
	}
	return o.Access, true
}

// HasAccess returns a boolean if a field has been set.
func (o *InlineResponse20086Networks) HasAccess() bool {
	if o != nil && o.Access != nil {
		return true
	}

	return false
}

// SetAccess gets a reference to the given string and assigns it to the Access field.
func (o *InlineResponse20086Networks) SetAccess(v string) {
	o.Access = &v
}

func (o InlineResponse20086Networks) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Access != nil {
		toSerialize["access"] = o.Access
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20086Networks struct {
	value *InlineResponse20086Networks
	isSet bool
}

func (v NullableInlineResponse20086Networks) Get() *InlineResponse20086Networks {
	return v.value
}

func (v *NullableInlineResponse20086Networks) Set(val *InlineResponse20086Networks) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20086Networks) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20086Networks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20086Networks(val *InlineResponse20086Networks) *NullableInlineResponse20086Networks {
	return &NullableInlineResponse20086Networks{value: val, isSet: true}
}

func (v NullableInlineResponse20086Networks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20086Networks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


