/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 01 October, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.63.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// NetworksNetworkIdSwitchAccessPoliciesRadiusAuthentication Object for authentication mode settings
type NetworksNetworkIdSwitchAccessPoliciesRadiusAuthentication struct {
	// Authentication mode of the policy: Open | Closed (Requires MS 18 or higher)
	Mode *string `json:"mode,omitempty"`
}

// NewNetworksNetworkIdSwitchAccessPoliciesRadiusAuthentication instantiates a new NetworksNetworkIdSwitchAccessPoliciesRadiusAuthentication object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworksNetworkIdSwitchAccessPoliciesRadiusAuthentication() *NetworksNetworkIdSwitchAccessPoliciesRadiusAuthentication {
	this := NetworksNetworkIdSwitchAccessPoliciesRadiusAuthentication{}
	return &this
}

// NewNetworksNetworkIdSwitchAccessPoliciesRadiusAuthenticationWithDefaults instantiates a new NetworksNetworkIdSwitchAccessPoliciesRadiusAuthentication object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworksNetworkIdSwitchAccessPoliciesRadiusAuthenticationWithDefaults() *NetworksNetworkIdSwitchAccessPoliciesRadiusAuthentication {
	this := NetworksNetworkIdSwitchAccessPoliciesRadiusAuthentication{}
	return &this
}

// GetMode returns the Mode field value if set, zero value otherwise.
func (o *NetworksNetworkIdSwitchAccessPoliciesRadiusAuthentication) GetMode() string {
	if o == nil || isNil(o.Mode) {
		var ret string
		return ret
	}
	return *o.Mode
}

// GetModeOk returns a tuple with the Mode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworksNetworkIdSwitchAccessPoliciesRadiusAuthentication) GetModeOk() (*string, bool) {
	if o == nil || isNil(o.Mode) {
    return nil, false
	}
	return o.Mode, true
}

// HasMode returns a boolean if a field has been set.
func (o *NetworksNetworkIdSwitchAccessPoliciesRadiusAuthentication) HasMode() bool {
	if o != nil && !isNil(o.Mode) {
		return true
	}

	return false
}

// SetMode gets a reference to the given string and assigns it to the Mode field.
func (o *NetworksNetworkIdSwitchAccessPoliciesRadiusAuthentication) SetMode(v string) {
	o.Mode = &v
}

func (o NetworksNetworkIdSwitchAccessPoliciesRadiusAuthentication) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Mode) {
		toSerialize["mode"] = o.Mode
	}
	return json.Marshal(toSerialize)
}

type NullableNetworksNetworkIdSwitchAccessPoliciesRadiusAuthentication struct {
	value *NetworksNetworkIdSwitchAccessPoliciesRadiusAuthentication
	isSet bool
}

func (v NullableNetworksNetworkIdSwitchAccessPoliciesRadiusAuthentication) Get() *NetworksNetworkIdSwitchAccessPoliciesRadiusAuthentication {
	return v.value
}

func (v *NullableNetworksNetworkIdSwitchAccessPoliciesRadiusAuthentication) Set(val *NetworksNetworkIdSwitchAccessPoliciesRadiusAuthentication) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworksNetworkIdSwitchAccessPoliciesRadiusAuthentication) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworksNetworkIdSwitchAccessPoliciesRadiusAuthentication) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworksNetworkIdSwitchAccessPoliciesRadiusAuthentication(val *NetworksNetworkIdSwitchAccessPoliciesRadiusAuthentication) *NullableNetworksNetworkIdSwitchAccessPoliciesRadiusAuthentication {
	return &NullableNetworksNetworkIdSwitchAccessPoliciesRadiusAuthentication{value: val, isSet: true}
}

func (v NullableNetworksNetworkIdSwitchAccessPoliciesRadiusAuthentication) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworksNetworkIdSwitchAccessPoliciesRadiusAuthentication) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


