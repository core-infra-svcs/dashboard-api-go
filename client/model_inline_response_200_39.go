/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 03 September, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.62.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse20039 struct for InlineResponse20039
type InlineResponse20039 struct {
	// The string identifier of this port on the switch. This is commonly just the port number but may contain additional identifying information such as the slot and module-type if the port is located on a port module.
	PortId *string `json:"portId,omitempty"`
	// The packet counts on the switch.
	Packets []DevicesSerialSwitchPortsStatusesPacketsPackets `json:"packets,omitempty"`
}

// NewInlineResponse20039 instantiates a new InlineResponse20039 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20039() *InlineResponse20039 {
	this := InlineResponse20039{}
	return &this
}

// NewInlineResponse20039WithDefaults instantiates a new InlineResponse20039 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20039WithDefaults() *InlineResponse20039 {
	this := InlineResponse20039{}
	return &this
}

// GetPortId returns the PortId field value if set, zero value otherwise.
func (o *InlineResponse20039) GetPortId() string {
	if o == nil || isNil(o.PortId) {
		var ret string
		return ret
	}
	return *o.PortId
}

// GetPortIdOk returns a tuple with the PortId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20039) GetPortIdOk() (*string, bool) {
	if o == nil || isNil(o.PortId) {
    return nil, false
	}
	return o.PortId, true
}

// HasPortId returns a boolean if a field has been set.
func (o *InlineResponse20039) HasPortId() bool {
	if o != nil && !isNil(o.PortId) {
		return true
	}

	return false
}

// SetPortId gets a reference to the given string and assigns it to the PortId field.
func (o *InlineResponse20039) SetPortId(v string) {
	o.PortId = &v
}

// GetPackets returns the Packets field value if set, zero value otherwise.
func (o *InlineResponse20039) GetPackets() []DevicesSerialSwitchPortsStatusesPacketsPackets {
	if o == nil || isNil(o.Packets) {
		var ret []DevicesSerialSwitchPortsStatusesPacketsPackets
		return ret
	}
	return o.Packets
}

// GetPacketsOk returns a tuple with the Packets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20039) GetPacketsOk() ([]DevicesSerialSwitchPortsStatusesPacketsPackets, bool) {
	if o == nil || isNil(o.Packets) {
    return nil, false
	}
	return o.Packets, true
}

// HasPackets returns a boolean if a field has been set.
func (o *InlineResponse20039) HasPackets() bool {
	if o != nil && !isNil(o.Packets) {
		return true
	}

	return false
}

// SetPackets gets a reference to the given []DevicesSerialSwitchPortsStatusesPacketsPackets and assigns it to the Packets field.
func (o *InlineResponse20039) SetPackets(v []DevicesSerialSwitchPortsStatusesPacketsPackets) {
	o.Packets = v
}

func (o InlineResponse20039) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.PortId) {
		toSerialize["portId"] = o.PortId
	}
	if !isNil(o.Packets) {
		toSerialize["packets"] = o.Packets
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20039 struct {
	value *InlineResponse20039
	isSet bool
}

func (v NullableInlineResponse20039) Get() *InlineResponse20039 {
	return v.value
}

func (v *NullableInlineResponse20039) Set(val *InlineResponse20039) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20039) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20039) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20039(val *InlineResponse20039) *NullableInlineResponse20039 {
	return &NullableInlineResponse20039{value: val, isSet: true}
}

func (v NullableInlineResponse20039) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20039) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


