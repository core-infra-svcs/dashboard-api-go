/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 07 February, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.43.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse20042UpgradeWindow Upgrade window for devices in network
type InlineResponse20042UpgradeWindow struct {
	// Day of the week
	DayOfWeek *string `json:"dayOfWeek,omitempty"`
	// Hour of the day
	HourOfDay *string `json:"hourOfDay,omitempty"`
}

// NewInlineResponse20042UpgradeWindow instantiates a new InlineResponse20042UpgradeWindow object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20042UpgradeWindow() *InlineResponse20042UpgradeWindow {
	this := InlineResponse20042UpgradeWindow{}
	return &this
}

// NewInlineResponse20042UpgradeWindowWithDefaults instantiates a new InlineResponse20042UpgradeWindow object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20042UpgradeWindowWithDefaults() *InlineResponse20042UpgradeWindow {
	this := InlineResponse20042UpgradeWindow{}
	return &this
}

// GetDayOfWeek returns the DayOfWeek field value if set, zero value otherwise.
func (o *InlineResponse20042UpgradeWindow) GetDayOfWeek() string {
	if o == nil || isNil(o.DayOfWeek) {
		var ret string
		return ret
	}
	return *o.DayOfWeek
}

// GetDayOfWeekOk returns a tuple with the DayOfWeek field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20042UpgradeWindow) GetDayOfWeekOk() (*string, bool) {
	if o == nil || isNil(o.DayOfWeek) {
    return nil, false
	}
	return o.DayOfWeek, true
}

// HasDayOfWeek returns a boolean if a field has been set.
func (o *InlineResponse20042UpgradeWindow) HasDayOfWeek() bool {
	if o != nil && !isNil(o.DayOfWeek) {
		return true
	}

	return false
}

// SetDayOfWeek gets a reference to the given string and assigns it to the DayOfWeek field.
func (o *InlineResponse20042UpgradeWindow) SetDayOfWeek(v string) {
	o.DayOfWeek = &v
}

// GetHourOfDay returns the HourOfDay field value if set, zero value otherwise.
func (o *InlineResponse20042UpgradeWindow) GetHourOfDay() string {
	if o == nil || isNil(o.HourOfDay) {
		var ret string
		return ret
	}
	return *o.HourOfDay
}

// GetHourOfDayOk returns a tuple with the HourOfDay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20042UpgradeWindow) GetHourOfDayOk() (*string, bool) {
	if o == nil || isNil(o.HourOfDay) {
    return nil, false
	}
	return o.HourOfDay, true
}

// HasHourOfDay returns a boolean if a field has been set.
func (o *InlineResponse20042UpgradeWindow) HasHourOfDay() bool {
	if o != nil && !isNil(o.HourOfDay) {
		return true
	}

	return false
}

// SetHourOfDay gets a reference to the given string and assigns it to the HourOfDay field.
func (o *InlineResponse20042UpgradeWindow) SetHourOfDay(v string) {
	o.HourOfDay = &v
}

func (o InlineResponse20042UpgradeWindow) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.DayOfWeek) {
		toSerialize["dayOfWeek"] = o.DayOfWeek
	}
	if !isNil(o.HourOfDay) {
		toSerialize["hourOfDay"] = o.HourOfDay
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20042UpgradeWindow struct {
	value *InlineResponse20042UpgradeWindow
	isSet bool
}

func (v NullableInlineResponse20042UpgradeWindow) Get() *InlineResponse20042UpgradeWindow {
	return v.value
}

func (v *NullableInlineResponse20042UpgradeWindow) Set(val *InlineResponse20042UpgradeWindow) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20042UpgradeWindow) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20042UpgradeWindow) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20042UpgradeWindow(val *InlineResponse20042UpgradeWindow) *NullableInlineResponse20042UpgradeWindow {
	return &NullableInlineResponse20042UpgradeWindow{value: val, isSet: true}
}

func (v NullableInlineResponse20042UpgradeWindow) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20042UpgradeWindow) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


