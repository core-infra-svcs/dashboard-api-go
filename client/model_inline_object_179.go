/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 07 May, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.58.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineObject179 struct for InlineObject179
type InlineObject179 struct {
	// Allows clients to access rogue networks. Blocked by default.
	DefaultPolicy string `json:"defaultPolicy"`
}

// NewInlineObject179 instantiates a new InlineObject179 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject179(defaultPolicy string) *InlineObject179 {
	this := InlineObject179{}
	this.DefaultPolicy = defaultPolicy
	return &this
}

// NewInlineObject179WithDefaults instantiates a new InlineObject179 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject179WithDefaults() *InlineObject179 {
	this := InlineObject179{}
	return &this
}

// GetDefaultPolicy returns the DefaultPolicy field value
func (o *InlineObject179) GetDefaultPolicy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DefaultPolicy
}

// GetDefaultPolicyOk returns a tuple with the DefaultPolicy field value
// and a boolean to check if the value has been set.
func (o *InlineObject179) GetDefaultPolicyOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.DefaultPolicy, true
}

// SetDefaultPolicy sets field value
func (o *InlineObject179) SetDefaultPolicy(v string) {
	o.DefaultPolicy = v
}

func (o InlineObject179) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["defaultPolicy"] = o.DefaultPolicy
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject179 struct {
	value *InlineObject179
	isSet bool
}

func (v NullableInlineObject179) Get() *InlineObject179 {
	return v.value
}

func (v *NullableInlineObject179) Set(val *InlineObject179) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject179) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject179) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject179(val *InlineObject179) *NullableInlineObject179 {
	return &NullableInlineObject179{value: val, isSet: true}
}

func (v NullableInlineObject179) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject179) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


