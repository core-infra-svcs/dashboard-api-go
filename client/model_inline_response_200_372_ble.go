/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 01 October, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.63.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200372Ble MQTT BLE Settings for network
type InlineResponse200372Ble struct {
	// BLE Enabled
	Enabled *bool `json:"enabled,omitempty"`
	// BLE type of clients to publish telemetry. Valid types are: all, ibeacon, eddystone, unknown
	Type *string `json:"type,omitempty"`
	Flush *InlineResponse200372BleFlush `json:"flush,omitempty"`
	AllowLists *InlineResponse200372BleAllowLists `json:"allowLists,omitempty"`
	Hysteresis *InlineResponse200372BleHysteresis `json:"hysteresis,omitempty"`
}

// NewInlineResponse200372Ble instantiates a new InlineResponse200372Ble object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200372Ble() *InlineResponse200372Ble {
	this := InlineResponse200372Ble{}
	return &this
}

// NewInlineResponse200372BleWithDefaults instantiates a new InlineResponse200372Ble object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200372BleWithDefaults() *InlineResponse200372Ble {
	this := InlineResponse200372Ble{}
	return &this
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *InlineResponse200372Ble) GetEnabled() bool {
	if o == nil || isNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200372Ble) GetEnabledOk() (*bool, bool) {
	if o == nil || isNil(o.Enabled) {
    return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *InlineResponse200372Ble) HasEnabled() bool {
	if o != nil && !isNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *InlineResponse200372Ble) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *InlineResponse200372Ble) GetType() string {
	if o == nil || isNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200372Ble) GetTypeOk() (*string, bool) {
	if o == nil || isNil(o.Type) {
    return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *InlineResponse200372Ble) HasType() bool {
	if o != nil && !isNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *InlineResponse200372Ble) SetType(v string) {
	o.Type = &v
}

// GetFlush returns the Flush field value if set, zero value otherwise.
func (o *InlineResponse200372Ble) GetFlush() InlineResponse200372BleFlush {
	if o == nil || isNil(o.Flush) {
		var ret InlineResponse200372BleFlush
		return ret
	}
	return *o.Flush
}

// GetFlushOk returns a tuple with the Flush field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200372Ble) GetFlushOk() (*InlineResponse200372BleFlush, bool) {
	if o == nil || isNil(o.Flush) {
    return nil, false
	}
	return o.Flush, true
}

// HasFlush returns a boolean if a field has been set.
func (o *InlineResponse200372Ble) HasFlush() bool {
	if o != nil && !isNil(o.Flush) {
		return true
	}

	return false
}

// SetFlush gets a reference to the given InlineResponse200372BleFlush and assigns it to the Flush field.
func (o *InlineResponse200372Ble) SetFlush(v InlineResponse200372BleFlush) {
	o.Flush = &v
}

// GetAllowLists returns the AllowLists field value if set, zero value otherwise.
func (o *InlineResponse200372Ble) GetAllowLists() InlineResponse200372BleAllowLists {
	if o == nil || isNil(o.AllowLists) {
		var ret InlineResponse200372BleAllowLists
		return ret
	}
	return *o.AllowLists
}

// GetAllowListsOk returns a tuple with the AllowLists field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200372Ble) GetAllowListsOk() (*InlineResponse200372BleAllowLists, bool) {
	if o == nil || isNil(o.AllowLists) {
    return nil, false
	}
	return o.AllowLists, true
}

// HasAllowLists returns a boolean if a field has been set.
func (o *InlineResponse200372Ble) HasAllowLists() bool {
	if o != nil && !isNil(o.AllowLists) {
		return true
	}

	return false
}

// SetAllowLists gets a reference to the given InlineResponse200372BleAllowLists and assigns it to the AllowLists field.
func (o *InlineResponse200372Ble) SetAllowLists(v InlineResponse200372BleAllowLists) {
	o.AllowLists = &v
}

// GetHysteresis returns the Hysteresis field value if set, zero value otherwise.
func (o *InlineResponse200372Ble) GetHysteresis() InlineResponse200372BleHysteresis {
	if o == nil || isNil(o.Hysteresis) {
		var ret InlineResponse200372BleHysteresis
		return ret
	}
	return *o.Hysteresis
}

// GetHysteresisOk returns a tuple with the Hysteresis field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200372Ble) GetHysteresisOk() (*InlineResponse200372BleHysteresis, bool) {
	if o == nil || isNil(o.Hysteresis) {
    return nil, false
	}
	return o.Hysteresis, true
}

// HasHysteresis returns a boolean if a field has been set.
func (o *InlineResponse200372Ble) HasHysteresis() bool {
	if o != nil && !isNil(o.Hysteresis) {
		return true
	}

	return false
}

// SetHysteresis gets a reference to the given InlineResponse200372BleHysteresis and assigns it to the Hysteresis field.
func (o *InlineResponse200372Ble) SetHysteresis(v InlineResponse200372BleHysteresis) {
	o.Hysteresis = &v
}

func (o InlineResponse200372Ble) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !isNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !isNil(o.Flush) {
		toSerialize["flush"] = o.Flush
	}
	if !isNil(o.AllowLists) {
		toSerialize["allowLists"] = o.AllowLists
	}
	if !isNil(o.Hysteresis) {
		toSerialize["hysteresis"] = o.Hysteresis
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200372Ble struct {
	value *InlineResponse200372Ble
	isSet bool
}

func (v NullableInlineResponse200372Ble) Get() *InlineResponse200372Ble {
	return v.value
}

func (v *NullableInlineResponse200372Ble) Set(val *InlineResponse200372Ble) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200372Ble) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200372Ble) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200372Ble(val *InlineResponse200372Ble) *NullableInlineResponse200372Ble {
	return &NullableInlineResponse200372Ble{value: val, isSet: true}
}

func (v NullableInlineResponse200372Ble) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200372Ble) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


