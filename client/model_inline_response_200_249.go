/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 06 November, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.52.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200249 struct for InlineResponse200249
type InlineResponse200249 struct {
	// A list of serials of devices updated
	Serials []string `json:"serials"`
}

// NewInlineResponse200249 instantiates a new InlineResponse200249 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200249(serials []string) *InlineResponse200249 {
	this := InlineResponse200249{}
	this.Serials = serials
	return &this
}

// NewInlineResponse200249WithDefaults instantiates a new InlineResponse200249 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200249WithDefaults() *InlineResponse200249 {
	this := InlineResponse200249{}
	return &this
}

// GetSerials returns the Serials field value
func (o *InlineResponse200249) GetSerials() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Serials
}

// GetSerialsOk returns a tuple with the Serials field value
// and a boolean to check if the value has been set.
func (o *InlineResponse200249) GetSerialsOk() ([]string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Serials, true
}

// SetSerials sets field value
func (o *InlineResponse200249) SetSerials(v []string) {
	o.Serials = v
}

func (o InlineResponse200249) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["serials"] = o.Serials
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200249 struct {
	value *InlineResponse200249
	isSet bool
}

func (v NullableInlineResponse200249) Get() *InlineResponse200249 {
	return v.value
}

func (v *NullableInlineResponse200249) Set(val *InlineResponse200249) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200249) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200249) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200249(val *InlineResponse200249) *NullableInlineResponse200249 {
	return &NullableInlineResponse200249{value: val, isSet: true}
}

func (v NullableInlineResponse200249) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200249) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


