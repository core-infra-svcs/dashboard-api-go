/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 06 March, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.44.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200143 struct for InlineResponse200143
type InlineResponse200143 struct {
	// The list of VPN peers
	Peers []InlineResponse200143Peers `json:"peers,omitempty"`
}

// NewInlineResponse200143 instantiates a new InlineResponse200143 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200143() *InlineResponse200143 {
	this := InlineResponse200143{}
	return &this
}

// NewInlineResponse200143WithDefaults instantiates a new InlineResponse200143 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200143WithDefaults() *InlineResponse200143 {
	this := InlineResponse200143{}
	return &this
}

// GetPeers returns the Peers field value if set, zero value otherwise.
func (o *InlineResponse200143) GetPeers() []InlineResponse200143Peers {
	if o == nil || isNil(o.Peers) {
		var ret []InlineResponse200143Peers
		return ret
	}
	return o.Peers
}

// GetPeersOk returns a tuple with the Peers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200143) GetPeersOk() ([]InlineResponse200143Peers, bool) {
	if o == nil || isNil(o.Peers) {
    return nil, false
	}
	return o.Peers, true
}

// HasPeers returns a boolean if a field has been set.
func (o *InlineResponse200143) HasPeers() bool {
	if o != nil && !isNil(o.Peers) {
		return true
	}

	return false
}

// SetPeers gets a reference to the given []InlineResponse200143Peers and assigns it to the Peers field.
func (o *InlineResponse200143) SetPeers(v []InlineResponse200143Peers) {
	o.Peers = v
}

func (o InlineResponse200143) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Peers) {
		toSerialize["peers"] = o.Peers
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200143 struct {
	value *InlineResponse200143
	isSet bool
}

func (v NullableInlineResponse200143) Get() *InlineResponse200143 {
	return v.value
}

func (v *NullableInlineResponse200143) Set(val *InlineResponse200143) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200143) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200143) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200143(val *InlineResponse200143) *NullableInlineResponse200143 {
	return &NullableInlineResponse200143{value: val, isSet: true}
}

func (v NullableInlineResponse200143) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200143) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


