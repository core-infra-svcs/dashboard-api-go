/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 March, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.56.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse20097Products The network devices to be updated
type InlineResponse20097Products struct {
	Switch *InlineResponse20097ProductsSwitch `json:"switch,omitempty"`
}

// NewInlineResponse20097Products instantiates a new InlineResponse20097Products object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20097Products() *InlineResponse20097Products {
	this := InlineResponse20097Products{}
	return &this
}

// NewInlineResponse20097ProductsWithDefaults instantiates a new InlineResponse20097Products object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20097ProductsWithDefaults() *InlineResponse20097Products {
	this := InlineResponse20097Products{}
	return &this
}

// GetSwitch returns the Switch field value if set, zero value otherwise.
func (o *InlineResponse20097Products) GetSwitch() InlineResponse20097ProductsSwitch {
	if o == nil || isNil(o.Switch) {
		var ret InlineResponse20097ProductsSwitch
		return ret
	}
	return *o.Switch
}

// GetSwitchOk returns a tuple with the Switch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20097Products) GetSwitchOk() (*InlineResponse20097ProductsSwitch, bool) {
	if o == nil || isNil(o.Switch) {
    return nil, false
	}
	return o.Switch, true
}

// HasSwitch returns a boolean if a field has been set.
func (o *InlineResponse20097Products) HasSwitch() bool {
	if o != nil && !isNil(o.Switch) {
		return true
	}

	return false
}

// SetSwitch gets a reference to the given InlineResponse20097ProductsSwitch and assigns it to the Switch field.
func (o *InlineResponse20097Products) SetSwitch(v InlineResponse20097ProductsSwitch) {
	o.Switch = &v
}

func (o InlineResponse20097Products) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Switch) {
		toSerialize["switch"] = o.Switch
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20097Products struct {
	value *InlineResponse20097Products
	isSet bool
}

func (v NullableInlineResponse20097Products) Get() *InlineResponse20097Products {
	return v.value
}

func (v *NullableInlineResponse20097Products) Set(val *InlineResponse20097Products) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20097Products) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20097Products) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20097Products(val *InlineResponse20097Products) *NullableInlineResponse20097Products {
	return &NullableInlineResponse20097Products{value: val, isSet: true}
}

func (v NullableInlineResponse20097Products) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20097Products) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


