/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 01 October, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.63.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// DevicesSerialSwitchRoutingStaticRoutesVrf1 The VRF settings of the interface. Requires IOS XE 17.18 or higher
type DevicesSerialSwitchRoutingStaticRoutesVrf1 struct {
	// The name of the VRF this static route belongs to
	Name *string `json:"name,omitempty"`
	// Whether or not next-hop IP is reachable via default VRF
	LeakRouteToDefaultVrf *bool `json:"leakRouteToDefaultVrf,omitempty"`
}

// NewDevicesSerialSwitchRoutingStaticRoutesVrf1 instantiates a new DevicesSerialSwitchRoutingStaticRoutesVrf1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDevicesSerialSwitchRoutingStaticRoutesVrf1() *DevicesSerialSwitchRoutingStaticRoutesVrf1 {
	this := DevicesSerialSwitchRoutingStaticRoutesVrf1{}
	return &this
}

// NewDevicesSerialSwitchRoutingStaticRoutesVrf1WithDefaults instantiates a new DevicesSerialSwitchRoutingStaticRoutesVrf1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDevicesSerialSwitchRoutingStaticRoutesVrf1WithDefaults() *DevicesSerialSwitchRoutingStaticRoutesVrf1 {
	this := DevicesSerialSwitchRoutingStaticRoutesVrf1{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *DevicesSerialSwitchRoutingStaticRoutesVrf1) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DevicesSerialSwitchRoutingStaticRoutesVrf1) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
    return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *DevicesSerialSwitchRoutingStaticRoutesVrf1) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *DevicesSerialSwitchRoutingStaticRoutesVrf1) SetName(v string) {
	o.Name = &v
}

// GetLeakRouteToDefaultVrf returns the LeakRouteToDefaultVrf field value if set, zero value otherwise.
func (o *DevicesSerialSwitchRoutingStaticRoutesVrf1) GetLeakRouteToDefaultVrf() bool {
	if o == nil || isNil(o.LeakRouteToDefaultVrf) {
		var ret bool
		return ret
	}
	return *o.LeakRouteToDefaultVrf
}

// GetLeakRouteToDefaultVrfOk returns a tuple with the LeakRouteToDefaultVrf field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DevicesSerialSwitchRoutingStaticRoutesVrf1) GetLeakRouteToDefaultVrfOk() (*bool, bool) {
	if o == nil || isNil(o.LeakRouteToDefaultVrf) {
    return nil, false
	}
	return o.LeakRouteToDefaultVrf, true
}

// HasLeakRouteToDefaultVrf returns a boolean if a field has been set.
func (o *DevicesSerialSwitchRoutingStaticRoutesVrf1) HasLeakRouteToDefaultVrf() bool {
	if o != nil && !isNil(o.LeakRouteToDefaultVrf) {
		return true
	}

	return false
}

// SetLeakRouteToDefaultVrf gets a reference to the given bool and assigns it to the LeakRouteToDefaultVrf field.
func (o *DevicesSerialSwitchRoutingStaticRoutesVrf1) SetLeakRouteToDefaultVrf(v bool) {
	o.LeakRouteToDefaultVrf = &v
}

func (o DevicesSerialSwitchRoutingStaticRoutesVrf1) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.LeakRouteToDefaultVrf) {
		toSerialize["leakRouteToDefaultVrf"] = o.LeakRouteToDefaultVrf
	}
	return json.Marshal(toSerialize)
}

type NullableDevicesSerialSwitchRoutingStaticRoutesVrf1 struct {
	value *DevicesSerialSwitchRoutingStaticRoutesVrf1
	isSet bool
}

func (v NullableDevicesSerialSwitchRoutingStaticRoutesVrf1) Get() *DevicesSerialSwitchRoutingStaticRoutesVrf1 {
	return v.value
}

func (v *NullableDevicesSerialSwitchRoutingStaticRoutesVrf1) Set(val *DevicesSerialSwitchRoutingStaticRoutesVrf1) {
	v.value = val
	v.isSet = true
}

func (v NullableDevicesSerialSwitchRoutingStaticRoutesVrf1) IsSet() bool {
	return v.isSet
}

func (v *NullableDevicesSerialSwitchRoutingStaticRoutesVrf1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDevicesSerialSwitchRoutingStaticRoutesVrf1(val *DevicesSerialSwitchRoutingStaticRoutesVrf1) *NullableDevicesSerialSwitchRoutingStaticRoutesVrf1 {
	return &NullableDevicesSerialSwitchRoutingStaticRoutesVrf1{value: val, isSet: true}
}

func (v NullableDevicesSerialSwitchRoutingStaticRoutesVrf1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDevicesSerialSwitchRoutingStaticRoutesVrf1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


