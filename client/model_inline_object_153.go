/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 October, 2022 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.26.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineObject153 struct for InlineObject153
type InlineObject153 struct {
	// The name of the SSID
	Name *string `json:"name,omitempty"`
	// Whether or not the SSID is enabled
	Enabled *bool `json:"enabled,omitempty"`
	// The association control method for the SSID ('open', 'open-enhanced', 'psk', 'open-with-radius', '8021x-meraki', '8021x-radius', '8021x-google', '8021x-localradius', 'ipsk-with-radius' or 'ipsk-without-radius')
	AuthMode *string `json:"authMode,omitempty"`
	// Whether or not an SSID is accessible by 'enterprise' administrators ('access disabled' or 'access enabled')
	EnterpriseAdminAccess *string `json:"enterpriseAdminAccess,omitempty"`
	// The psk encryption mode for the SSID ('wep' or 'wpa'). This param is only valid if the authMode is 'psk'
	EncryptionMode *string `json:"encryptionMode,omitempty"`
	// The passkey for the SSID. This param is only valid if the authMode is 'psk'
	Psk *string `json:"psk,omitempty"`
	// The types of WPA encryption. ('WPA1 only', 'WPA1 and WPA2', 'WPA2 only', 'WPA3 Transition Mode' or 'WPA3 only')
	WpaEncryptionMode *string `json:"wpaEncryptionMode,omitempty"`
	Dot11w *NetworksNetworkIdWirelessSsidsNumberDot11w `json:"dot11w,omitempty"`
	Dot11r *NetworksNetworkIdWirelessSsidsNumberDot11r `json:"dot11r,omitempty"`
	// The type of splash page for the SSID ('None', 'Click-through splash page', 'Billing', 'Password-protected with Meraki RADIUS', 'Password-protected with custom RADIUS', 'Password-protected with Active Directory', 'Password-protected with LDAP', 'SMS authentication', 'Systems Manager Sentry', 'Facebook Wi-Fi', 'Google OAuth', 'Sponsored guest', 'Cisco ISE' or 'Google Apps domain'). This attribute is not supported for template children.
	SplashPage *string `json:"splashPage,omitempty"`
	// Array of valid sponsor email domains for sponsored guest splash type.
	SplashGuestSponsorDomains *[]string `json:"splashGuestSponsorDomains,omitempty"`
	Oauth *NetworksNetworkIdWirelessSsidsNumberOauth `json:"oauth,omitempty"`
	LocalRadius *NetworksNetworkIdWirelessSsidsNumberLocalRadius `json:"localRadius,omitempty"`
	Ldap *NetworksNetworkIdWirelessSsidsNumberLdap `json:"ldap,omitempty"`
	ActiveDirectory *NetworksNetworkIdWirelessSsidsNumberActiveDirectory `json:"activeDirectory,omitempty"`
	// The RADIUS 802.1X servers to be used for authentication. This param is only valid if the authMode is 'open-with-radius', '8021x-radius' or 'ipsk-with-radius'
	RadiusServers *[]NetworksNetworkIdWirelessSsidsNumberRadiusServers `json:"radiusServers,omitempty"`
	// If true, Meraki devices will proxy RADIUS messages through the Meraki cloud to the configured RADIUS auth and accounting servers.
	RadiusProxyEnabled *bool `json:"radiusProxyEnabled,omitempty"`
	// If true, Meraki devices will periodically send Access-Request messages to configured RADIUS servers using identity 'meraki_8021x_test' to ensure that the RADIUS servers are reachable.
	RadiusTestingEnabled *bool `json:"radiusTestingEnabled,omitempty"`
	// The template of the called station identifier to be used for RADIUS (ex. $NODE_MAC$:$VAP_NUM$).
	RadiusCalledStationId *string `json:"radiusCalledStationId,omitempty"`
	// The template of the NAS identifier to be used for RADIUS authentication (ex. $NODE_MAC$:$VAP_NUM$).
	RadiusAuthenticationNasId *string `json:"radiusAuthenticationNasId,omitempty"`
	// The amount of time for which a RADIUS client waits for a reply from the RADIUS server (must be between 1-10 seconds).
	RadiusServerTimeout *int32 `json:"radiusServerTimeout,omitempty"`
	// The maximum number of transmit attempts after which a RADIUS server is failed over (must be between 1-5).
	RadiusServerAttemptsLimit *int32 `json:"radiusServerAttemptsLimit,omitempty"`
	// Whether or not higher priority RADIUS servers should be retried after 60 seconds.
	RadiusFallbackEnabled *bool `json:"radiusFallbackEnabled,omitempty"`
	// If true, Meraki devices will act as a RADIUS Dynamic Authorization Server and will respond to RADIUS Change-of-Authorization and Disconnect messages sent by the RADIUS server.
	RadiusCoaEnabled *bool `json:"radiusCoaEnabled,omitempty"`
	// This policy determines how authentication requests should be handled in the event that all of the configured RADIUS servers are unreachable ('Deny access' or 'Allow access')
	RadiusFailoverPolicy *string `json:"radiusFailoverPolicy,omitempty"`
	// This policy determines which RADIUS server will be contacted first in an authentication attempt and the ordering of any necessary retry attempts ('Strict priority order' or 'Round robin')
	RadiusLoadBalancingPolicy *string `json:"radiusLoadBalancingPolicy,omitempty"`
	// Whether or not RADIUS accounting is enabled. This param is only valid if the authMode is 'open-with-radius', '8021x-radius' or 'ipsk-with-radius'
	RadiusAccountingEnabled *bool `json:"radiusAccountingEnabled,omitempty"`
	// The RADIUS accounting 802.1X servers to be used for authentication. This param is only valid if the authMode is 'open-with-radius', '8021x-radius' or 'ipsk-with-radius' and radiusAccountingEnabled is 'true'
	RadiusAccountingServers *[]NetworksNetworkIdWirelessSsidsNumberRadiusAccountingServers `json:"radiusAccountingServers,omitempty"`
	// The interval (in seconds) in which accounting information is updated and sent to the RADIUS accounting server.
	RadiusAccountingInterimInterval *int32 `json:"radiusAccountingInterimInterval,omitempty"`
	// Specify the RADIUS attribute used to look up group policies ('Filter-Id', 'Reply-Message', 'Airespace-ACL-Name' or 'Aruba-User-Role'). Access points must receive this attribute in the RADIUS Access-Accept message
	RadiusAttributeForGroupPolicies *string `json:"radiusAttributeForGroupPolicies,omitempty"`
	// The client IP assignment mode ('NAT mode', 'Bridge mode', 'Layer 3 roaming', 'Ethernet over GRE', 'Layer 3 roaming with a concentrator' or 'VPN')
	IpAssignmentMode *string `json:"ipAssignmentMode,omitempty"`
	// Whether or not traffic should be directed to use specific VLANs. This param is only valid if the ipAssignmentMode is 'Bridge mode' or 'Layer 3 roaming'
	UseVlanTagging *bool `json:"useVlanTagging,omitempty"`
	// The concentrator to use when the ipAssignmentMode is 'Layer 3 roaming with a concentrator' or 'VPN'.
	ConcentratorNetworkId *string `json:"concentratorNetworkId,omitempty"`
	// The secondary concentrator to use when the ipAssignmentMode is 'VPN'. If configured, the APs will switch to using this concentrator if the primary concentrator is unreachable. This param is optional. ('disabled' represents no secondary concentrator.)
	SecondaryConcentratorNetworkId *string `json:"secondaryConcentratorNetworkId,omitempty"`
	// Disassociate clients when 'VPN' concentrator failover occurs in order to trigger clients to re-associate and generate new DHCP requests. This param is only valid if ipAssignmentMode is 'VPN'.
	DisassociateClientsOnVpnFailover *bool `json:"disassociateClientsOnVpnFailover,omitempty"`
	// The VLAN ID used for VLAN tagging. This param is only valid when the ipAssignmentMode is 'Layer 3 roaming with a concentrator' or 'VPN'
	VlanId *int32 `json:"vlanId,omitempty"`
	// The default VLAN ID used for 'all other APs'. This param is only valid when the ipAssignmentMode is 'Bridge mode' or 'Layer 3 roaming'
	DefaultVlanId *int32 `json:"defaultVlanId,omitempty"`
	// The list of tags and VLAN IDs used for VLAN tagging. This param is only valid when the ipAssignmentMode is 'Bridge mode' or 'Layer 3 roaming'
	ApTagsAndVlanIds *[]NetworksNetworkIdWirelessSsidsNumberApTagsAndVlanIds `json:"apTagsAndVlanIds,omitempty"`
	// Allow access to a configurable list of IP ranges, which users may access prior to sign-on.
	WalledGardenEnabled *bool `json:"walledGardenEnabled,omitempty"`
	// Specify your walled garden by entering an array of addresses, ranges using CIDR notation, domain names, and domain wildcards (e.g. '192.168.1.1/24', '192.168.37.10/32', 'www.yahoo.com', '*.google.com']). Meraki's splash page is automatically included in your walled garden.
	WalledGardenRanges *[]string `json:"walledGardenRanges,omitempty"`
	Gre *NetworksNetworkIdWirelessSsidsNumberGre `json:"gre,omitempty"`
	// If true, the RADIUS response can override VLAN tag. This is not valid when ipAssignmentMode is 'NAT mode'.
	RadiusOverride *bool `json:"radiusOverride,omitempty"`
	// Whether or not RADIUS Guest VLAN is enabled. This param is only valid if the authMode is 'open-with-radius' and addressing mode is not set to 'isolated' or 'nat' mode
	RadiusGuestVlanEnabled *bool `json:"radiusGuestVlanEnabled,omitempty"`
	// VLAN ID of the RADIUS Guest VLAN. This param is only valid if the authMode is 'open-with-radius' and addressing mode is not set to 'isolated' or 'nat' mode
	RadiusGuestVlanId *int32 `json:"radiusGuestVlanId,omitempty"`
	// The minimum bitrate in Mbps of this SSID in the default indoor RF profile. ('1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54')
	MinBitrate *float32 `json:"minBitrate,omitempty"`
	// The client-serving radio frequencies of this SSID in the default indoor RF profile. ('Dual band operation', '5 GHz band only' or 'Dual band operation with Band Steering')
	BandSelection *string `json:"bandSelection,omitempty"`
	// The upload bandwidth limit in Kbps. (0 represents no limit.)
	PerClientBandwidthLimitUp *int32 `json:"perClientBandwidthLimitUp,omitempty"`
	// The download bandwidth limit in Kbps. (0 represents no limit.)
	PerClientBandwidthLimitDown *int32 `json:"perClientBandwidthLimitDown,omitempty"`
	// The total upload bandwidth limit in Kbps. (0 represents no limit.)
	PerSsidBandwidthLimitUp *int32 `json:"perSsidBandwidthLimitUp,omitempty"`
	// The total download bandwidth limit in Kbps. (0 represents no limit.)
	PerSsidBandwidthLimitDown *int32 `json:"perSsidBandwidthLimitDown,omitempty"`
	// Boolean indicating whether Layer 2 LAN isolation should be enabled or disabled. Only configurable when ipAssignmentMode is 'Bridge mode'.
	LanIsolationEnabled *bool `json:"lanIsolationEnabled,omitempty"`
	// Boolean indicating whether APs should advertise or hide this SSID. APs will only broadcast this SSID if set to true
	Visible *bool `json:"visible,omitempty"`
	// Boolean indicating whether all APs should broadcast the SSID or if it should be restricted to APs matching any availability tags. Can only be false if the SSID has availability tags.
	AvailableOnAllAps *bool `json:"availableOnAllAps,omitempty"`
	// Accepts a list of tags for this SSID. If availableOnAllAps is false, then the SSID will only be broadcast by APs with tags matching any of the tags in this list.
	AvailabilityTags *[]string `json:"availabilityTags,omitempty"`
	// If true, Mandatory DHCP will enforce that clients connecting to this SSID must use the IP address assigned by the DHCP server. Clients who use a static IP address won't be able to associate.
	MandatoryDhcpEnabled *bool `json:"mandatoryDhcpEnabled,omitempty"`
	// Boolean indicating whether or not adult content will be blocked
	AdultContentFilteringEnabled *bool `json:"adultContentFilteringEnabled,omitempty"`
	DnsRewrite *NetworksNetworkIdWirelessSsidsNumberDnsRewrite `json:"dnsRewrite,omitempty"`
	SpeedBurst *NetworksNetworkIdWirelessSsidsNumberSpeedBurst `json:"speedBurst,omitempty"`
}

// NewInlineObject153 instantiates a new InlineObject153 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject153() *InlineObject153 {
	this := InlineObject153{}
	return &this
}

// NewInlineObject153WithDefaults instantiates a new InlineObject153 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject153WithDefaults() *InlineObject153 {
	this := InlineObject153{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *InlineObject153) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject153) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *InlineObject153) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *InlineObject153) SetName(v string) {
	o.Name = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *InlineObject153) GetEnabled() bool {
	if o == nil || o.Enabled == nil {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject153) GetEnabledOk() (*bool, bool) {
	if o == nil || o.Enabled == nil {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *InlineObject153) HasEnabled() bool {
	if o != nil && o.Enabled != nil {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *InlineObject153) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetAuthMode returns the AuthMode field value if set, zero value otherwise.
func (o *InlineObject153) GetAuthMode() string {
	if o == nil || o.AuthMode == nil {
		var ret string
		return ret
	}
	return *o.AuthMode
}

// GetAuthModeOk returns a tuple with the AuthMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject153) GetAuthModeOk() (*string, bool) {
	if o == nil || o.AuthMode == nil {
		return nil, false
	}
	return o.AuthMode, true
}

// HasAuthMode returns a boolean if a field has been set.
func (o *InlineObject153) HasAuthMode() bool {
	if o != nil && o.AuthMode != nil {
		return true
	}

	return false
}

// SetAuthMode gets a reference to the given string and assigns it to the AuthMode field.
func (o *InlineObject153) SetAuthMode(v string) {
	o.AuthMode = &v
}

// GetEnterpriseAdminAccess returns the EnterpriseAdminAccess field value if set, zero value otherwise.
func (o *InlineObject153) GetEnterpriseAdminAccess() string {
	if o == nil || o.EnterpriseAdminAccess == nil {
		var ret string
		return ret
	}
	return *o.EnterpriseAdminAccess
}

// GetEnterpriseAdminAccessOk returns a tuple with the EnterpriseAdminAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject153) GetEnterpriseAdminAccessOk() (*string, bool) {
	if o == nil || o.EnterpriseAdminAccess == nil {
		return nil, false
	}
	return o.EnterpriseAdminAccess, true
}

// HasEnterpriseAdminAccess returns a boolean if a field has been set.
func (o *InlineObject153) HasEnterpriseAdminAccess() bool {
	if o != nil && o.EnterpriseAdminAccess != nil {
		return true
	}

	return false
}

// SetEnterpriseAdminAccess gets a reference to the given string and assigns it to the EnterpriseAdminAccess field.
func (o *InlineObject153) SetEnterpriseAdminAccess(v string) {
	o.EnterpriseAdminAccess = &v
}

// GetEncryptionMode returns the EncryptionMode field value if set, zero value otherwise.
func (o *InlineObject153) GetEncryptionMode() string {
	if o == nil || o.EncryptionMode == nil {
		var ret string
		return ret
	}
	return *o.EncryptionMode
}

// GetEncryptionModeOk returns a tuple with the EncryptionMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject153) GetEncryptionModeOk() (*string, bool) {
	if o == nil || o.EncryptionMode == nil {
		return nil, false
	}
	return o.EncryptionMode, true
}

// HasEncryptionMode returns a boolean if a field has been set.
func (o *InlineObject153) HasEncryptionMode() bool {
	if o != nil && o.EncryptionMode != nil {
		return true
	}

	return false
}

// SetEncryptionMode gets a reference to the given string and assigns it to the EncryptionMode field.
func (o *InlineObject153) SetEncryptionMode(v string) {
	o.EncryptionMode = &v
}

// GetPsk returns the Psk field value if set, zero value otherwise.
func (o *InlineObject153) GetPsk() string {
	if o == nil || o.Psk == nil {
		var ret string
		return ret
	}
	return *o.Psk
}

// GetPskOk returns a tuple with the Psk field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject153) GetPskOk() (*string, bool) {
	if o == nil || o.Psk == nil {
		return nil, false
	}
	return o.Psk, true
}

// HasPsk returns a boolean if a field has been set.
func (o *InlineObject153) HasPsk() bool {
	if o != nil && o.Psk != nil {
		return true
	}

	return false
}

// SetPsk gets a reference to the given string and assigns it to the Psk field.
func (o *InlineObject153) SetPsk(v string) {
	o.Psk = &v
}

// GetWpaEncryptionMode returns the WpaEncryptionMode field value if set, zero value otherwise.
func (o *InlineObject153) GetWpaEncryptionMode() string {
	if o == nil || o.WpaEncryptionMode == nil {
		var ret string
		return ret
	}
	return *o.WpaEncryptionMode
}

// GetWpaEncryptionModeOk returns a tuple with the WpaEncryptionMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject153) GetWpaEncryptionModeOk() (*string, bool) {
	if o == nil || o.WpaEncryptionMode == nil {
		return nil, false
	}
	return o.WpaEncryptionMode, true
}

// HasWpaEncryptionMode returns a boolean if a field has been set.
func (o *InlineObject153) HasWpaEncryptionMode() bool {
	if o != nil && o.WpaEncryptionMode != nil {
		return true
	}

	return false
}

// SetWpaEncryptionMode gets a reference to the given string and assigns it to the WpaEncryptionMode field.
func (o *InlineObject153) SetWpaEncryptionMode(v string) {
	o.WpaEncryptionMode = &v
}

// GetDot11w returns the Dot11w field value if set, zero value otherwise.
func (o *InlineObject153) GetDot11w() NetworksNetworkIdWirelessSsidsNumberDot11w {
	if o == nil || o.Dot11w == nil {
		var ret NetworksNetworkIdWirelessSsidsNumberDot11w
		return ret
	}
	return *o.Dot11w
}

// GetDot11wOk returns a tuple with the Dot11w field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject153) GetDot11wOk() (*NetworksNetworkIdWirelessSsidsNumberDot11w, bool) {
	if o == nil || o.Dot11w == nil {
		return nil, false
	}
	return o.Dot11w, true
}

// HasDot11w returns a boolean if a field has been set.
func (o *InlineObject153) HasDot11w() bool {
	if o != nil && o.Dot11w != nil {
		return true
	}

	return false
}

// SetDot11w gets a reference to the given NetworksNetworkIdWirelessSsidsNumberDot11w and assigns it to the Dot11w field.
func (o *InlineObject153) SetDot11w(v NetworksNetworkIdWirelessSsidsNumberDot11w) {
	o.Dot11w = &v
}

// GetDot11r returns the Dot11r field value if set, zero value otherwise.
func (o *InlineObject153) GetDot11r() NetworksNetworkIdWirelessSsidsNumberDot11r {
	if o == nil || o.Dot11r == nil {
		var ret NetworksNetworkIdWirelessSsidsNumberDot11r
		return ret
	}
	return *o.Dot11r
}

// GetDot11rOk returns a tuple with the Dot11r field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject153) GetDot11rOk() (*NetworksNetworkIdWirelessSsidsNumberDot11r, bool) {
	if o == nil || o.Dot11r == nil {
		return nil, false
	}
	return o.Dot11r, true
}

// HasDot11r returns a boolean if a field has been set.
func (o *InlineObject153) HasDot11r() bool {
	if o != nil && o.Dot11r != nil {
		return true
	}

	return false
}

// SetDot11r gets a reference to the given NetworksNetworkIdWirelessSsidsNumberDot11r and assigns it to the Dot11r field.
func (o *InlineObject153) SetDot11r(v NetworksNetworkIdWirelessSsidsNumberDot11r) {
	o.Dot11r = &v
}

// GetSplashPage returns the SplashPage field value if set, zero value otherwise.
func (o *InlineObject153) GetSplashPage() string {
	if o == nil || o.SplashPage == nil {
		var ret string
		return ret
	}
	return *o.SplashPage
}

// GetSplashPageOk returns a tuple with the SplashPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject153) GetSplashPageOk() (*string, bool) {
	if o == nil || o.SplashPage == nil {
		return nil, false
	}
	return o.SplashPage, true
}

// HasSplashPage returns a boolean if a field has been set.
func (o *InlineObject153) HasSplashPage() bool {
	if o != nil && o.SplashPage != nil {
		return true
	}

	return false
}

// SetSplashPage gets a reference to the given string and assigns it to the SplashPage field.
func (o *InlineObject153) SetSplashPage(v string) {
	o.SplashPage = &v
}

// GetSplashGuestSponsorDomains returns the SplashGuestSponsorDomains field value if set, zero value otherwise.
func (o *InlineObject153) GetSplashGuestSponsorDomains() []string {
	if o == nil || o.SplashGuestSponsorDomains == nil {
		var ret []string
		return ret
	}
	return *o.SplashGuestSponsorDomains
}

// GetSplashGuestSponsorDomainsOk returns a tuple with the SplashGuestSponsorDomains field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject153) GetSplashGuestSponsorDomainsOk() (*[]string, bool) {
	if o == nil || o.SplashGuestSponsorDomains == nil {
		return nil, false
	}
	return o.SplashGuestSponsorDomains, true
}

// HasSplashGuestSponsorDomains returns a boolean if a field has been set.
func (o *InlineObject153) HasSplashGuestSponsorDomains() bool {
	if o != nil && o.SplashGuestSponsorDomains != nil {
		return true
	}

	return false
}

// SetSplashGuestSponsorDomains gets a reference to the given []string and assigns it to the SplashGuestSponsorDomains field.
func (o *InlineObject153) SetSplashGuestSponsorDomains(v []string) {
	o.SplashGuestSponsorDomains = &v
}

// GetOauth returns the Oauth field value if set, zero value otherwise.
func (o *InlineObject153) GetOauth() NetworksNetworkIdWirelessSsidsNumberOauth {
	if o == nil || o.Oauth == nil {
		var ret NetworksNetworkIdWirelessSsidsNumberOauth
		return ret
	}
	return *o.Oauth
}

// GetOauthOk returns a tuple with the Oauth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject153) GetOauthOk() (*NetworksNetworkIdWirelessSsidsNumberOauth, bool) {
	if o == nil || o.Oauth == nil {
		return nil, false
	}
	return o.Oauth, true
}

// HasOauth returns a boolean if a field has been set.
func (o *InlineObject153) HasOauth() bool {
	if o != nil && o.Oauth != nil {
		return true
	}

	return false
}

// SetOauth gets a reference to the given NetworksNetworkIdWirelessSsidsNumberOauth and assigns it to the Oauth field.
func (o *InlineObject153) SetOauth(v NetworksNetworkIdWirelessSsidsNumberOauth) {
	o.Oauth = &v
}

// GetLocalRadius returns the LocalRadius field value if set, zero value otherwise.
func (o *InlineObject153) GetLocalRadius() NetworksNetworkIdWirelessSsidsNumberLocalRadius {
	if o == nil || o.LocalRadius == nil {
		var ret NetworksNetworkIdWirelessSsidsNumberLocalRadius
		return ret
	}
	return *o.LocalRadius
}

// GetLocalRadiusOk returns a tuple with the LocalRadius field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject153) GetLocalRadiusOk() (*NetworksNetworkIdWirelessSsidsNumberLocalRadius, bool) {
	if o == nil || o.LocalRadius == nil {
		return nil, false
	}
	return o.LocalRadius, true
}

// HasLocalRadius returns a boolean if a field has been set.
func (o *InlineObject153) HasLocalRadius() bool {
	if o != nil && o.LocalRadius != nil {
		return true
	}

	return false
}

// SetLocalRadius gets a reference to the given NetworksNetworkIdWirelessSsidsNumberLocalRadius and assigns it to the LocalRadius field.
func (o *InlineObject153) SetLocalRadius(v NetworksNetworkIdWirelessSsidsNumberLocalRadius) {
	o.LocalRadius = &v
}

// GetLdap returns the Ldap field value if set, zero value otherwise.
func (o *InlineObject153) GetLdap() NetworksNetworkIdWirelessSsidsNumberLdap {
	if o == nil || o.Ldap == nil {
		var ret NetworksNetworkIdWirelessSsidsNumberLdap
		return ret
	}
	return *o.Ldap
}

// GetLdapOk returns a tuple with the Ldap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject153) GetLdapOk() (*NetworksNetworkIdWirelessSsidsNumberLdap, bool) {
	if o == nil || o.Ldap == nil {
		return nil, false
	}
	return o.Ldap, true
}

// HasLdap returns a boolean if a field has been set.
func (o *InlineObject153) HasLdap() bool {
	if o != nil && o.Ldap != nil {
		return true
	}

	return false
}

// SetLdap gets a reference to the given NetworksNetworkIdWirelessSsidsNumberLdap and assigns it to the Ldap field.
func (o *InlineObject153) SetLdap(v NetworksNetworkIdWirelessSsidsNumberLdap) {
	o.Ldap = &v
}

// GetActiveDirectory returns the ActiveDirectory field value if set, zero value otherwise.
func (o *InlineObject153) GetActiveDirectory() NetworksNetworkIdWirelessSsidsNumberActiveDirectory {
	if o == nil || o.ActiveDirectory == nil {
		var ret NetworksNetworkIdWirelessSsidsNumberActiveDirectory
		return ret
	}
	return *o.ActiveDirectory
}

// GetActiveDirectoryOk returns a tuple with the ActiveDirectory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject153) GetActiveDirectoryOk() (*NetworksNetworkIdWirelessSsidsNumberActiveDirectory, bool) {
	if o == nil || o.ActiveDirectory == nil {
		return nil, false
	}
	return o.ActiveDirectory, true
}

// HasActiveDirectory returns a boolean if a field has been set.
func (o *InlineObject153) HasActiveDirectory() bool {
	if o != nil && o.ActiveDirectory != nil {
		return true
	}

	return false
}

// SetActiveDirectory gets a reference to the given NetworksNetworkIdWirelessSsidsNumberActiveDirectory and assigns it to the ActiveDirectory field.
func (o *InlineObject153) SetActiveDirectory(v NetworksNetworkIdWirelessSsidsNumberActiveDirectory) {
	o.ActiveDirectory = &v
}

// GetRadiusServers returns the RadiusServers field value if set, zero value otherwise.
func (o *InlineObject153) GetRadiusServers() []NetworksNetworkIdWirelessSsidsNumberRadiusServers {
	if o == nil || o.RadiusServers == nil {
		var ret []NetworksNetworkIdWirelessSsidsNumberRadiusServers
		return ret
	}
	return *o.RadiusServers
}

// GetRadiusServersOk returns a tuple with the RadiusServers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject153) GetRadiusServersOk() (*[]NetworksNetworkIdWirelessSsidsNumberRadiusServers, bool) {
	if o == nil || o.RadiusServers == nil {
		return nil, false
	}
	return o.RadiusServers, true
}

// HasRadiusServers returns a boolean if a field has been set.
func (o *InlineObject153) HasRadiusServers() bool {
	if o != nil && o.RadiusServers != nil {
		return true
	}

	return false
}

// SetRadiusServers gets a reference to the given []NetworksNetworkIdWirelessSsidsNumberRadiusServers and assigns it to the RadiusServers field.
func (o *InlineObject153) SetRadiusServers(v []NetworksNetworkIdWirelessSsidsNumberRadiusServers) {
	o.RadiusServers = &v
}

// GetRadiusProxyEnabled returns the RadiusProxyEnabled field value if set, zero value otherwise.
func (o *InlineObject153) GetRadiusProxyEnabled() bool {
	if o == nil || o.RadiusProxyEnabled == nil {
		var ret bool
		return ret
	}
	return *o.RadiusProxyEnabled
}

// GetRadiusProxyEnabledOk returns a tuple with the RadiusProxyEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject153) GetRadiusProxyEnabledOk() (*bool, bool) {
	if o == nil || o.RadiusProxyEnabled == nil {
		return nil, false
	}
	return o.RadiusProxyEnabled, true
}

// HasRadiusProxyEnabled returns a boolean if a field has been set.
func (o *InlineObject153) HasRadiusProxyEnabled() bool {
	if o != nil && o.RadiusProxyEnabled != nil {
		return true
	}

	return false
}

// SetRadiusProxyEnabled gets a reference to the given bool and assigns it to the RadiusProxyEnabled field.
func (o *InlineObject153) SetRadiusProxyEnabled(v bool) {
	o.RadiusProxyEnabled = &v
}

// GetRadiusTestingEnabled returns the RadiusTestingEnabled field value if set, zero value otherwise.
func (o *InlineObject153) GetRadiusTestingEnabled() bool {
	if o == nil || o.RadiusTestingEnabled == nil {
		var ret bool
		return ret
	}
	return *o.RadiusTestingEnabled
}

// GetRadiusTestingEnabledOk returns a tuple with the RadiusTestingEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject153) GetRadiusTestingEnabledOk() (*bool, bool) {
	if o == nil || o.RadiusTestingEnabled == nil {
		return nil, false
	}
	return o.RadiusTestingEnabled, true
}

// HasRadiusTestingEnabled returns a boolean if a field has been set.
func (o *InlineObject153) HasRadiusTestingEnabled() bool {
	if o != nil && o.RadiusTestingEnabled != nil {
		return true
	}

	return false
}

// SetRadiusTestingEnabled gets a reference to the given bool and assigns it to the RadiusTestingEnabled field.
func (o *InlineObject153) SetRadiusTestingEnabled(v bool) {
	o.RadiusTestingEnabled = &v
}

// GetRadiusCalledStationId returns the RadiusCalledStationId field value if set, zero value otherwise.
func (o *InlineObject153) GetRadiusCalledStationId() string {
	if o == nil || o.RadiusCalledStationId == nil {
		var ret string
		return ret
	}
	return *o.RadiusCalledStationId
}

// GetRadiusCalledStationIdOk returns a tuple with the RadiusCalledStationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject153) GetRadiusCalledStationIdOk() (*string, bool) {
	if o == nil || o.RadiusCalledStationId == nil {
		return nil, false
	}
	return o.RadiusCalledStationId, true
}

// HasRadiusCalledStationId returns a boolean if a field has been set.
func (o *InlineObject153) HasRadiusCalledStationId() bool {
	if o != nil && o.RadiusCalledStationId != nil {
		return true
	}

	return false
}

// SetRadiusCalledStationId gets a reference to the given string and assigns it to the RadiusCalledStationId field.
func (o *InlineObject153) SetRadiusCalledStationId(v string) {
	o.RadiusCalledStationId = &v
}

// GetRadiusAuthenticationNasId returns the RadiusAuthenticationNasId field value if set, zero value otherwise.
func (o *InlineObject153) GetRadiusAuthenticationNasId() string {
	if o == nil || o.RadiusAuthenticationNasId == nil {
		var ret string
		return ret
	}
	return *o.RadiusAuthenticationNasId
}

// GetRadiusAuthenticationNasIdOk returns a tuple with the RadiusAuthenticationNasId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject153) GetRadiusAuthenticationNasIdOk() (*string, bool) {
	if o == nil || o.RadiusAuthenticationNasId == nil {
		return nil, false
	}
	return o.RadiusAuthenticationNasId, true
}

// HasRadiusAuthenticationNasId returns a boolean if a field has been set.
func (o *InlineObject153) HasRadiusAuthenticationNasId() bool {
	if o != nil && o.RadiusAuthenticationNasId != nil {
		return true
	}

	return false
}

// SetRadiusAuthenticationNasId gets a reference to the given string and assigns it to the RadiusAuthenticationNasId field.
func (o *InlineObject153) SetRadiusAuthenticationNasId(v string) {
	o.RadiusAuthenticationNasId = &v
}

// GetRadiusServerTimeout returns the RadiusServerTimeout field value if set, zero value otherwise.
func (o *InlineObject153) GetRadiusServerTimeout() int32 {
	if o == nil || o.RadiusServerTimeout == nil {
		var ret int32
		return ret
	}
	return *o.RadiusServerTimeout
}

// GetRadiusServerTimeoutOk returns a tuple with the RadiusServerTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject153) GetRadiusServerTimeoutOk() (*int32, bool) {
	if o == nil || o.RadiusServerTimeout == nil {
		return nil, false
	}
	return o.RadiusServerTimeout, true
}

// HasRadiusServerTimeout returns a boolean if a field has been set.
func (o *InlineObject153) HasRadiusServerTimeout() bool {
	if o != nil && o.RadiusServerTimeout != nil {
		return true
	}

	return false
}

// SetRadiusServerTimeout gets a reference to the given int32 and assigns it to the RadiusServerTimeout field.
func (o *InlineObject153) SetRadiusServerTimeout(v int32) {
	o.RadiusServerTimeout = &v
}

// GetRadiusServerAttemptsLimit returns the RadiusServerAttemptsLimit field value if set, zero value otherwise.
func (o *InlineObject153) GetRadiusServerAttemptsLimit() int32 {
	if o == nil || o.RadiusServerAttemptsLimit == nil {
		var ret int32
		return ret
	}
	return *o.RadiusServerAttemptsLimit
}

// GetRadiusServerAttemptsLimitOk returns a tuple with the RadiusServerAttemptsLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject153) GetRadiusServerAttemptsLimitOk() (*int32, bool) {
	if o == nil || o.RadiusServerAttemptsLimit == nil {
		return nil, false
	}
	return o.RadiusServerAttemptsLimit, true
}

// HasRadiusServerAttemptsLimit returns a boolean if a field has been set.
func (o *InlineObject153) HasRadiusServerAttemptsLimit() bool {
	if o != nil && o.RadiusServerAttemptsLimit != nil {
		return true
	}

	return false
}

// SetRadiusServerAttemptsLimit gets a reference to the given int32 and assigns it to the RadiusServerAttemptsLimit field.
func (o *InlineObject153) SetRadiusServerAttemptsLimit(v int32) {
	o.RadiusServerAttemptsLimit = &v
}

// GetRadiusFallbackEnabled returns the RadiusFallbackEnabled field value if set, zero value otherwise.
func (o *InlineObject153) GetRadiusFallbackEnabled() bool {
	if o == nil || o.RadiusFallbackEnabled == nil {
		var ret bool
		return ret
	}
	return *o.RadiusFallbackEnabled
}

// GetRadiusFallbackEnabledOk returns a tuple with the RadiusFallbackEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject153) GetRadiusFallbackEnabledOk() (*bool, bool) {
	if o == nil || o.RadiusFallbackEnabled == nil {
		return nil, false
	}
	return o.RadiusFallbackEnabled, true
}

// HasRadiusFallbackEnabled returns a boolean if a field has been set.
func (o *InlineObject153) HasRadiusFallbackEnabled() bool {
	if o != nil && o.RadiusFallbackEnabled != nil {
		return true
	}

	return false
}

// SetRadiusFallbackEnabled gets a reference to the given bool and assigns it to the RadiusFallbackEnabled field.
func (o *InlineObject153) SetRadiusFallbackEnabled(v bool) {
	o.RadiusFallbackEnabled = &v
}

// GetRadiusCoaEnabled returns the RadiusCoaEnabled field value if set, zero value otherwise.
func (o *InlineObject153) GetRadiusCoaEnabled() bool {
	if o == nil || o.RadiusCoaEnabled == nil {
		var ret bool
		return ret
	}
	return *o.RadiusCoaEnabled
}

// GetRadiusCoaEnabledOk returns a tuple with the RadiusCoaEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject153) GetRadiusCoaEnabledOk() (*bool, bool) {
	if o == nil || o.RadiusCoaEnabled == nil {
		return nil, false
	}
	return o.RadiusCoaEnabled, true
}

// HasRadiusCoaEnabled returns a boolean if a field has been set.
func (o *InlineObject153) HasRadiusCoaEnabled() bool {
	if o != nil && o.RadiusCoaEnabled != nil {
		return true
	}

	return false
}

// SetRadiusCoaEnabled gets a reference to the given bool and assigns it to the RadiusCoaEnabled field.
func (o *InlineObject153) SetRadiusCoaEnabled(v bool) {
	o.RadiusCoaEnabled = &v
}

// GetRadiusFailoverPolicy returns the RadiusFailoverPolicy field value if set, zero value otherwise.
func (o *InlineObject153) GetRadiusFailoverPolicy() string {
	if o == nil || o.RadiusFailoverPolicy == nil {
		var ret string
		return ret
	}
	return *o.RadiusFailoverPolicy
}

// GetRadiusFailoverPolicyOk returns a tuple with the RadiusFailoverPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject153) GetRadiusFailoverPolicyOk() (*string, bool) {
	if o == nil || o.RadiusFailoverPolicy == nil {
		return nil, false
	}
	return o.RadiusFailoverPolicy, true
}

// HasRadiusFailoverPolicy returns a boolean if a field has been set.
func (o *InlineObject153) HasRadiusFailoverPolicy() bool {
	if o != nil && o.RadiusFailoverPolicy != nil {
		return true
	}

	return false
}

// SetRadiusFailoverPolicy gets a reference to the given string and assigns it to the RadiusFailoverPolicy field.
func (o *InlineObject153) SetRadiusFailoverPolicy(v string) {
	o.RadiusFailoverPolicy = &v
}

// GetRadiusLoadBalancingPolicy returns the RadiusLoadBalancingPolicy field value if set, zero value otherwise.
func (o *InlineObject153) GetRadiusLoadBalancingPolicy() string {
	if o == nil || o.RadiusLoadBalancingPolicy == nil {
		var ret string
		return ret
	}
	return *o.RadiusLoadBalancingPolicy
}

// GetRadiusLoadBalancingPolicyOk returns a tuple with the RadiusLoadBalancingPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject153) GetRadiusLoadBalancingPolicyOk() (*string, bool) {
	if o == nil || o.RadiusLoadBalancingPolicy == nil {
		return nil, false
	}
	return o.RadiusLoadBalancingPolicy, true
}

// HasRadiusLoadBalancingPolicy returns a boolean if a field has been set.
func (o *InlineObject153) HasRadiusLoadBalancingPolicy() bool {
	if o != nil && o.RadiusLoadBalancingPolicy != nil {
		return true
	}

	return false
}

// SetRadiusLoadBalancingPolicy gets a reference to the given string and assigns it to the RadiusLoadBalancingPolicy field.
func (o *InlineObject153) SetRadiusLoadBalancingPolicy(v string) {
	o.RadiusLoadBalancingPolicy = &v
}

// GetRadiusAccountingEnabled returns the RadiusAccountingEnabled field value if set, zero value otherwise.
func (o *InlineObject153) GetRadiusAccountingEnabled() bool {
	if o == nil || o.RadiusAccountingEnabled == nil {
		var ret bool
		return ret
	}
	return *o.RadiusAccountingEnabled
}

// GetRadiusAccountingEnabledOk returns a tuple with the RadiusAccountingEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject153) GetRadiusAccountingEnabledOk() (*bool, bool) {
	if o == nil || o.RadiusAccountingEnabled == nil {
		return nil, false
	}
	return o.RadiusAccountingEnabled, true
}

// HasRadiusAccountingEnabled returns a boolean if a field has been set.
func (o *InlineObject153) HasRadiusAccountingEnabled() bool {
	if o != nil && o.RadiusAccountingEnabled != nil {
		return true
	}

	return false
}

// SetRadiusAccountingEnabled gets a reference to the given bool and assigns it to the RadiusAccountingEnabled field.
func (o *InlineObject153) SetRadiusAccountingEnabled(v bool) {
	o.RadiusAccountingEnabled = &v
}

// GetRadiusAccountingServers returns the RadiusAccountingServers field value if set, zero value otherwise.
func (o *InlineObject153) GetRadiusAccountingServers() []NetworksNetworkIdWirelessSsidsNumberRadiusAccountingServers {
	if o == nil || o.RadiusAccountingServers == nil {
		var ret []NetworksNetworkIdWirelessSsidsNumberRadiusAccountingServers
		return ret
	}
	return *o.RadiusAccountingServers
}

// GetRadiusAccountingServersOk returns a tuple with the RadiusAccountingServers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject153) GetRadiusAccountingServersOk() (*[]NetworksNetworkIdWirelessSsidsNumberRadiusAccountingServers, bool) {
	if o == nil || o.RadiusAccountingServers == nil {
		return nil, false
	}
	return o.RadiusAccountingServers, true
}

// HasRadiusAccountingServers returns a boolean if a field has been set.
func (o *InlineObject153) HasRadiusAccountingServers() bool {
	if o != nil && o.RadiusAccountingServers != nil {
		return true
	}

	return false
}

// SetRadiusAccountingServers gets a reference to the given []NetworksNetworkIdWirelessSsidsNumberRadiusAccountingServers and assigns it to the RadiusAccountingServers field.
func (o *InlineObject153) SetRadiusAccountingServers(v []NetworksNetworkIdWirelessSsidsNumberRadiusAccountingServers) {
	o.RadiusAccountingServers = &v
}

// GetRadiusAccountingInterimInterval returns the RadiusAccountingInterimInterval field value if set, zero value otherwise.
func (o *InlineObject153) GetRadiusAccountingInterimInterval() int32 {
	if o == nil || o.RadiusAccountingInterimInterval == nil {
		var ret int32
		return ret
	}
	return *o.RadiusAccountingInterimInterval
}

// GetRadiusAccountingInterimIntervalOk returns a tuple with the RadiusAccountingInterimInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject153) GetRadiusAccountingInterimIntervalOk() (*int32, bool) {
	if o == nil || o.RadiusAccountingInterimInterval == nil {
		return nil, false
	}
	return o.RadiusAccountingInterimInterval, true
}

// HasRadiusAccountingInterimInterval returns a boolean if a field has been set.
func (o *InlineObject153) HasRadiusAccountingInterimInterval() bool {
	if o != nil && o.RadiusAccountingInterimInterval != nil {
		return true
	}

	return false
}

// SetRadiusAccountingInterimInterval gets a reference to the given int32 and assigns it to the RadiusAccountingInterimInterval field.
func (o *InlineObject153) SetRadiusAccountingInterimInterval(v int32) {
	o.RadiusAccountingInterimInterval = &v
}

// GetRadiusAttributeForGroupPolicies returns the RadiusAttributeForGroupPolicies field value if set, zero value otherwise.
func (o *InlineObject153) GetRadiusAttributeForGroupPolicies() string {
	if o == nil || o.RadiusAttributeForGroupPolicies == nil {
		var ret string
		return ret
	}
	return *o.RadiusAttributeForGroupPolicies
}

// GetRadiusAttributeForGroupPoliciesOk returns a tuple with the RadiusAttributeForGroupPolicies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject153) GetRadiusAttributeForGroupPoliciesOk() (*string, bool) {
	if o == nil || o.RadiusAttributeForGroupPolicies == nil {
		return nil, false
	}
	return o.RadiusAttributeForGroupPolicies, true
}

// HasRadiusAttributeForGroupPolicies returns a boolean if a field has been set.
func (o *InlineObject153) HasRadiusAttributeForGroupPolicies() bool {
	if o != nil && o.RadiusAttributeForGroupPolicies != nil {
		return true
	}

	return false
}

// SetRadiusAttributeForGroupPolicies gets a reference to the given string and assigns it to the RadiusAttributeForGroupPolicies field.
func (o *InlineObject153) SetRadiusAttributeForGroupPolicies(v string) {
	o.RadiusAttributeForGroupPolicies = &v
}

// GetIpAssignmentMode returns the IpAssignmentMode field value if set, zero value otherwise.
func (o *InlineObject153) GetIpAssignmentMode() string {
	if o == nil || o.IpAssignmentMode == nil {
		var ret string
		return ret
	}
	return *o.IpAssignmentMode
}

// GetIpAssignmentModeOk returns a tuple with the IpAssignmentMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject153) GetIpAssignmentModeOk() (*string, bool) {
	if o == nil || o.IpAssignmentMode == nil {
		return nil, false
	}
	return o.IpAssignmentMode, true
}

// HasIpAssignmentMode returns a boolean if a field has been set.
func (o *InlineObject153) HasIpAssignmentMode() bool {
	if o != nil && o.IpAssignmentMode != nil {
		return true
	}

	return false
}

// SetIpAssignmentMode gets a reference to the given string and assigns it to the IpAssignmentMode field.
func (o *InlineObject153) SetIpAssignmentMode(v string) {
	o.IpAssignmentMode = &v
}

// GetUseVlanTagging returns the UseVlanTagging field value if set, zero value otherwise.
func (o *InlineObject153) GetUseVlanTagging() bool {
	if o == nil || o.UseVlanTagging == nil {
		var ret bool
		return ret
	}
	return *o.UseVlanTagging
}

// GetUseVlanTaggingOk returns a tuple with the UseVlanTagging field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject153) GetUseVlanTaggingOk() (*bool, bool) {
	if o == nil || o.UseVlanTagging == nil {
		return nil, false
	}
	return o.UseVlanTagging, true
}

// HasUseVlanTagging returns a boolean if a field has been set.
func (o *InlineObject153) HasUseVlanTagging() bool {
	if o != nil && o.UseVlanTagging != nil {
		return true
	}

	return false
}

// SetUseVlanTagging gets a reference to the given bool and assigns it to the UseVlanTagging field.
func (o *InlineObject153) SetUseVlanTagging(v bool) {
	o.UseVlanTagging = &v
}

// GetConcentratorNetworkId returns the ConcentratorNetworkId field value if set, zero value otherwise.
func (o *InlineObject153) GetConcentratorNetworkId() string {
	if o == nil || o.ConcentratorNetworkId == nil {
		var ret string
		return ret
	}
	return *o.ConcentratorNetworkId
}

// GetConcentratorNetworkIdOk returns a tuple with the ConcentratorNetworkId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject153) GetConcentratorNetworkIdOk() (*string, bool) {
	if o == nil || o.ConcentratorNetworkId == nil {
		return nil, false
	}
	return o.ConcentratorNetworkId, true
}

// HasConcentratorNetworkId returns a boolean if a field has been set.
func (o *InlineObject153) HasConcentratorNetworkId() bool {
	if o != nil && o.ConcentratorNetworkId != nil {
		return true
	}

	return false
}

// SetConcentratorNetworkId gets a reference to the given string and assigns it to the ConcentratorNetworkId field.
func (o *InlineObject153) SetConcentratorNetworkId(v string) {
	o.ConcentratorNetworkId = &v
}

// GetSecondaryConcentratorNetworkId returns the SecondaryConcentratorNetworkId field value if set, zero value otherwise.
func (o *InlineObject153) GetSecondaryConcentratorNetworkId() string {
	if o == nil || o.SecondaryConcentratorNetworkId == nil {
		var ret string
		return ret
	}
	return *o.SecondaryConcentratorNetworkId
}

// GetSecondaryConcentratorNetworkIdOk returns a tuple with the SecondaryConcentratorNetworkId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject153) GetSecondaryConcentratorNetworkIdOk() (*string, bool) {
	if o == nil || o.SecondaryConcentratorNetworkId == nil {
		return nil, false
	}
	return o.SecondaryConcentratorNetworkId, true
}

// HasSecondaryConcentratorNetworkId returns a boolean if a field has been set.
func (o *InlineObject153) HasSecondaryConcentratorNetworkId() bool {
	if o != nil && o.SecondaryConcentratorNetworkId != nil {
		return true
	}

	return false
}

// SetSecondaryConcentratorNetworkId gets a reference to the given string and assigns it to the SecondaryConcentratorNetworkId field.
func (o *InlineObject153) SetSecondaryConcentratorNetworkId(v string) {
	o.SecondaryConcentratorNetworkId = &v
}

// GetDisassociateClientsOnVpnFailover returns the DisassociateClientsOnVpnFailover field value if set, zero value otherwise.
func (o *InlineObject153) GetDisassociateClientsOnVpnFailover() bool {
	if o == nil || o.DisassociateClientsOnVpnFailover == nil {
		var ret bool
		return ret
	}
	return *o.DisassociateClientsOnVpnFailover
}

// GetDisassociateClientsOnVpnFailoverOk returns a tuple with the DisassociateClientsOnVpnFailover field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject153) GetDisassociateClientsOnVpnFailoverOk() (*bool, bool) {
	if o == nil || o.DisassociateClientsOnVpnFailover == nil {
		return nil, false
	}
	return o.DisassociateClientsOnVpnFailover, true
}

// HasDisassociateClientsOnVpnFailover returns a boolean if a field has been set.
func (o *InlineObject153) HasDisassociateClientsOnVpnFailover() bool {
	if o != nil && o.DisassociateClientsOnVpnFailover != nil {
		return true
	}

	return false
}

// SetDisassociateClientsOnVpnFailover gets a reference to the given bool and assigns it to the DisassociateClientsOnVpnFailover field.
func (o *InlineObject153) SetDisassociateClientsOnVpnFailover(v bool) {
	o.DisassociateClientsOnVpnFailover = &v
}

// GetVlanId returns the VlanId field value if set, zero value otherwise.
func (o *InlineObject153) GetVlanId() int32 {
	if o == nil || o.VlanId == nil {
		var ret int32
		return ret
	}
	return *o.VlanId
}

// GetVlanIdOk returns a tuple with the VlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject153) GetVlanIdOk() (*int32, bool) {
	if o == nil || o.VlanId == nil {
		return nil, false
	}
	return o.VlanId, true
}

// HasVlanId returns a boolean if a field has been set.
func (o *InlineObject153) HasVlanId() bool {
	if o != nil && o.VlanId != nil {
		return true
	}

	return false
}

// SetVlanId gets a reference to the given int32 and assigns it to the VlanId field.
func (o *InlineObject153) SetVlanId(v int32) {
	o.VlanId = &v
}

// GetDefaultVlanId returns the DefaultVlanId field value if set, zero value otherwise.
func (o *InlineObject153) GetDefaultVlanId() int32 {
	if o == nil || o.DefaultVlanId == nil {
		var ret int32
		return ret
	}
	return *o.DefaultVlanId
}

// GetDefaultVlanIdOk returns a tuple with the DefaultVlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject153) GetDefaultVlanIdOk() (*int32, bool) {
	if o == nil || o.DefaultVlanId == nil {
		return nil, false
	}
	return o.DefaultVlanId, true
}

// HasDefaultVlanId returns a boolean if a field has been set.
func (o *InlineObject153) HasDefaultVlanId() bool {
	if o != nil && o.DefaultVlanId != nil {
		return true
	}

	return false
}

// SetDefaultVlanId gets a reference to the given int32 and assigns it to the DefaultVlanId field.
func (o *InlineObject153) SetDefaultVlanId(v int32) {
	o.DefaultVlanId = &v
}

// GetApTagsAndVlanIds returns the ApTagsAndVlanIds field value if set, zero value otherwise.
func (o *InlineObject153) GetApTagsAndVlanIds() []NetworksNetworkIdWirelessSsidsNumberApTagsAndVlanIds {
	if o == nil || o.ApTagsAndVlanIds == nil {
		var ret []NetworksNetworkIdWirelessSsidsNumberApTagsAndVlanIds
		return ret
	}
	return *o.ApTagsAndVlanIds
}

// GetApTagsAndVlanIdsOk returns a tuple with the ApTagsAndVlanIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject153) GetApTagsAndVlanIdsOk() (*[]NetworksNetworkIdWirelessSsidsNumberApTagsAndVlanIds, bool) {
	if o == nil || o.ApTagsAndVlanIds == nil {
		return nil, false
	}
	return o.ApTagsAndVlanIds, true
}

// HasApTagsAndVlanIds returns a boolean if a field has been set.
func (o *InlineObject153) HasApTagsAndVlanIds() bool {
	if o != nil && o.ApTagsAndVlanIds != nil {
		return true
	}

	return false
}

// SetApTagsAndVlanIds gets a reference to the given []NetworksNetworkIdWirelessSsidsNumberApTagsAndVlanIds and assigns it to the ApTagsAndVlanIds field.
func (o *InlineObject153) SetApTagsAndVlanIds(v []NetworksNetworkIdWirelessSsidsNumberApTagsAndVlanIds) {
	o.ApTagsAndVlanIds = &v
}

// GetWalledGardenEnabled returns the WalledGardenEnabled field value if set, zero value otherwise.
func (o *InlineObject153) GetWalledGardenEnabled() bool {
	if o == nil || o.WalledGardenEnabled == nil {
		var ret bool
		return ret
	}
	return *o.WalledGardenEnabled
}

// GetWalledGardenEnabledOk returns a tuple with the WalledGardenEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject153) GetWalledGardenEnabledOk() (*bool, bool) {
	if o == nil || o.WalledGardenEnabled == nil {
		return nil, false
	}
	return o.WalledGardenEnabled, true
}

// HasWalledGardenEnabled returns a boolean if a field has been set.
func (o *InlineObject153) HasWalledGardenEnabled() bool {
	if o != nil && o.WalledGardenEnabled != nil {
		return true
	}

	return false
}

// SetWalledGardenEnabled gets a reference to the given bool and assigns it to the WalledGardenEnabled field.
func (o *InlineObject153) SetWalledGardenEnabled(v bool) {
	o.WalledGardenEnabled = &v
}

// GetWalledGardenRanges returns the WalledGardenRanges field value if set, zero value otherwise.
func (o *InlineObject153) GetWalledGardenRanges() []string {
	if o == nil || o.WalledGardenRanges == nil {
		var ret []string
		return ret
	}
	return *o.WalledGardenRanges
}

// GetWalledGardenRangesOk returns a tuple with the WalledGardenRanges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject153) GetWalledGardenRangesOk() (*[]string, bool) {
	if o == nil || o.WalledGardenRanges == nil {
		return nil, false
	}
	return o.WalledGardenRanges, true
}

// HasWalledGardenRanges returns a boolean if a field has been set.
func (o *InlineObject153) HasWalledGardenRanges() bool {
	if o != nil && o.WalledGardenRanges != nil {
		return true
	}

	return false
}

// SetWalledGardenRanges gets a reference to the given []string and assigns it to the WalledGardenRanges field.
func (o *InlineObject153) SetWalledGardenRanges(v []string) {
	o.WalledGardenRanges = &v
}

// GetGre returns the Gre field value if set, zero value otherwise.
func (o *InlineObject153) GetGre() NetworksNetworkIdWirelessSsidsNumberGre {
	if o == nil || o.Gre == nil {
		var ret NetworksNetworkIdWirelessSsidsNumberGre
		return ret
	}
	return *o.Gre
}

// GetGreOk returns a tuple with the Gre field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject153) GetGreOk() (*NetworksNetworkIdWirelessSsidsNumberGre, bool) {
	if o == nil || o.Gre == nil {
		return nil, false
	}
	return o.Gre, true
}

// HasGre returns a boolean if a field has been set.
func (o *InlineObject153) HasGre() bool {
	if o != nil && o.Gre != nil {
		return true
	}

	return false
}

// SetGre gets a reference to the given NetworksNetworkIdWirelessSsidsNumberGre and assigns it to the Gre field.
func (o *InlineObject153) SetGre(v NetworksNetworkIdWirelessSsidsNumberGre) {
	o.Gre = &v
}

// GetRadiusOverride returns the RadiusOverride field value if set, zero value otherwise.
func (o *InlineObject153) GetRadiusOverride() bool {
	if o == nil || o.RadiusOverride == nil {
		var ret bool
		return ret
	}
	return *o.RadiusOverride
}

// GetRadiusOverrideOk returns a tuple with the RadiusOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject153) GetRadiusOverrideOk() (*bool, bool) {
	if o == nil || o.RadiusOverride == nil {
		return nil, false
	}
	return o.RadiusOverride, true
}

// HasRadiusOverride returns a boolean if a field has been set.
func (o *InlineObject153) HasRadiusOverride() bool {
	if o != nil && o.RadiusOverride != nil {
		return true
	}

	return false
}

// SetRadiusOverride gets a reference to the given bool and assigns it to the RadiusOverride field.
func (o *InlineObject153) SetRadiusOverride(v bool) {
	o.RadiusOverride = &v
}

// GetRadiusGuestVlanEnabled returns the RadiusGuestVlanEnabled field value if set, zero value otherwise.
func (o *InlineObject153) GetRadiusGuestVlanEnabled() bool {
	if o == nil || o.RadiusGuestVlanEnabled == nil {
		var ret bool
		return ret
	}
	return *o.RadiusGuestVlanEnabled
}

// GetRadiusGuestVlanEnabledOk returns a tuple with the RadiusGuestVlanEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject153) GetRadiusGuestVlanEnabledOk() (*bool, bool) {
	if o == nil || o.RadiusGuestVlanEnabled == nil {
		return nil, false
	}
	return o.RadiusGuestVlanEnabled, true
}

// HasRadiusGuestVlanEnabled returns a boolean if a field has been set.
func (o *InlineObject153) HasRadiusGuestVlanEnabled() bool {
	if o != nil && o.RadiusGuestVlanEnabled != nil {
		return true
	}

	return false
}

// SetRadiusGuestVlanEnabled gets a reference to the given bool and assigns it to the RadiusGuestVlanEnabled field.
func (o *InlineObject153) SetRadiusGuestVlanEnabled(v bool) {
	o.RadiusGuestVlanEnabled = &v
}

// GetRadiusGuestVlanId returns the RadiusGuestVlanId field value if set, zero value otherwise.
func (o *InlineObject153) GetRadiusGuestVlanId() int32 {
	if o == nil || o.RadiusGuestVlanId == nil {
		var ret int32
		return ret
	}
	return *o.RadiusGuestVlanId
}

// GetRadiusGuestVlanIdOk returns a tuple with the RadiusGuestVlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject153) GetRadiusGuestVlanIdOk() (*int32, bool) {
	if o == nil || o.RadiusGuestVlanId == nil {
		return nil, false
	}
	return o.RadiusGuestVlanId, true
}

// HasRadiusGuestVlanId returns a boolean if a field has been set.
func (o *InlineObject153) HasRadiusGuestVlanId() bool {
	if o != nil && o.RadiusGuestVlanId != nil {
		return true
	}

	return false
}

// SetRadiusGuestVlanId gets a reference to the given int32 and assigns it to the RadiusGuestVlanId field.
func (o *InlineObject153) SetRadiusGuestVlanId(v int32) {
	o.RadiusGuestVlanId = &v
}

// GetMinBitrate returns the MinBitrate field value if set, zero value otherwise.
func (o *InlineObject153) GetMinBitrate() float32 {
	if o == nil || o.MinBitrate == nil {
		var ret float32
		return ret
	}
	return *o.MinBitrate
}

// GetMinBitrateOk returns a tuple with the MinBitrate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject153) GetMinBitrateOk() (*float32, bool) {
	if o == nil || o.MinBitrate == nil {
		return nil, false
	}
	return o.MinBitrate, true
}

// HasMinBitrate returns a boolean if a field has been set.
func (o *InlineObject153) HasMinBitrate() bool {
	if o != nil && o.MinBitrate != nil {
		return true
	}

	return false
}

// SetMinBitrate gets a reference to the given float32 and assigns it to the MinBitrate field.
func (o *InlineObject153) SetMinBitrate(v float32) {
	o.MinBitrate = &v
}

// GetBandSelection returns the BandSelection field value if set, zero value otherwise.
func (o *InlineObject153) GetBandSelection() string {
	if o == nil || o.BandSelection == nil {
		var ret string
		return ret
	}
	return *o.BandSelection
}

// GetBandSelectionOk returns a tuple with the BandSelection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject153) GetBandSelectionOk() (*string, bool) {
	if o == nil || o.BandSelection == nil {
		return nil, false
	}
	return o.BandSelection, true
}

// HasBandSelection returns a boolean if a field has been set.
func (o *InlineObject153) HasBandSelection() bool {
	if o != nil && o.BandSelection != nil {
		return true
	}

	return false
}

// SetBandSelection gets a reference to the given string and assigns it to the BandSelection field.
func (o *InlineObject153) SetBandSelection(v string) {
	o.BandSelection = &v
}

// GetPerClientBandwidthLimitUp returns the PerClientBandwidthLimitUp field value if set, zero value otherwise.
func (o *InlineObject153) GetPerClientBandwidthLimitUp() int32 {
	if o == nil || o.PerClientBandwidthLimitUp == nil {
		var ret int32
		return ret
	}
	return *o.PerClientBandwidthLimitUp
}

// GetPerClientBandwidthLimitUpOk returns a tuple with the PerClientBandwidthLimitUp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject153) GetPerClientBandwidthLimitUpOk() (*int32, bool) {
	if o == nil || o.PerClientBandwidthLimitUp == nil {
		return nil, false
	}
	return o.PerClientBandwidthLimitUp, true
}

// HasPerClientBandwidthLimitUp returns a boolean if a field has been set.
func (o *InlineObject153) HasPerClientBandwidthLimitUp() bool {
	if o != nil && o.PerClientBandwidthLimitUp != nil {
		return true
	}

	return false
}

// SetPerClientBandwidthLimitUp gets a reference to the given int32 and assigns it to the PerClientBandwidthLimitUp field.
func (o *InlineObject153) SetPerClientBandwidthLimitUp(v int32) {
	o.PerClientBandwidthLimitUp = &v
}

// GetPerClientBandwidthLimitDown returns the PerClientBandwidthLimitDown field value if set, zero value otherwise.
func (o *InlineObject153) GetPerClientBandwidthLimitDown() int32 {
	if o == nil || o.PerClientBandwidthLimitDown == nil {
		var ret int32
		return ret
	}
	return *o.PerClientBandwidthLimitDown
}

// GetPerClientBandwidthLimitDownOk returns a tuple with the PerClientBandwidthLimitDown field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject153) GetPerClientBandwidthLimitDownOk() (*int32, bool) {
	if o == nil || o.PerClientBandwidthLimitDown == nil {
		return nil, false
	}
	return o.PerClientBandwidthLimitDown, true
}

// HasPerClientBandwidthLimitDown returns a boolean if a field has been set.
func (o *InlineObject153) HasPerClientBandwidthLimitDown() bool {
	if o != nil && o.PerClientBandwidthLimitDown != nil {
		return true
	}

	return false
}

// SetPerClientBandwidthLimitDown gets a reference to the given int32 and assigns it to the PerClientBandwidthLimitDown field.
func (o *InlineObject153) SetPerClientBandwidthLimitDown(v int32) {
	o.PerClientBandwidthLimitDown = &v
}

// GetPerSsidBandwidthLimitUp returns the PerSsidBandwidthLimitUp field value if set, zero value otherwise.
func (o *InlineObject153) GetPerSsidBandwidthLimitUp() int32 {
	if o == nil || o.PerSsidBandwidthLimitUp == nil {
		var ret int32
		return ret
	}
	return *o.PerSsidBandwidthLimitUp
}

// GetPerSsidBandwidthLimitUpOk returns a tuple with the PerSsidBandwidthLimitUp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject153) GetPerSsidBandwidthLimitUpOk() (*int32, bool) {
	if o == nil || o.PerSsidBandwidthLimitUp == nil {
		return nil, false
	}
	return o.PerSsidBandwidthLimitUp, true
}

// HasPerSsidBandwidthLimitUp returns a boolean if a field has been set.
func (o *InlineObject153) HasPerSsidBandwidthLimitUp() bool {
	if o != nil && o.PerSsidBandwidthLimitUp != nil {
		return true
	}

	return false
}

// SetPerSsidBandwidthLimitUp gets a reference to the given int32 and assigns it to the PerSsidBandwidthLimitUp field.
func (o *InlineObject153) SetPerSsidBandwidthLimitUp(v int32) {
	o.PerSsidBandwidthLimitUp = &v
}

// GetPerSsidBandwidthLimitDown returns the PerSsidBandwidthLimitDown field value if set, zero value otherwise.
func (o *InlineObject153) GetPerSsidBandwidthLimitDown() int32 {
	if o == nil || o.PerSsidBandwidthLimitDown == nil {
		var ret int32
		return ret
	}
	return *o.PerSsidBandwidthLimitDown
}

// GetPerSsidBandwidthLimitDownOk returns a tuple with the PerSsidBandwidthLimitDown field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject153) GetPerSsidBandwidthLimitDownOk() (*int32, bool) {
	if o == nil || o.PerSsidBandwidthLimitDown == nil {
		return nil, false
	}
	return o.PerSsidBandwidthLimitDown, true
}

// HasPerSsidBandwidthLimitDown returns a boolean if a field has been set.
func (o *InlineObject153) HasPerSsidBandwidthLimitDown() bool {
	if o != nil && o.PerSsidBandwidthLimitDown != nil {
		return true
	}

	return false
}

// SetPerSsidBandwidthLimitDown gets a reference to the given int32 and assigns it to the PerSsidBandwidthLimitDown field.
func (o *InlineObject153) SetPerSsidBandwidthLimitDown(v int32) {
	o.PerSsidBandwidthLimitDown = &v
}

// GetLanIsolationEnabled returns the LanIsolationEnabled field value if set, zero value otherwise.
func (o *InlineObject153) GetLanIsolationEnabled() bool {
	if o == nil || o.LanIsolationEnabled == nil {
		var ret bool
		return ret
	}
	return *o.LanIsolationEnabled
}

// GetLanIsolationEnabledOk returns a tuple with the LanIsolationEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject153) GetLanIsolationEnabledOk() (*bool, bool) {
	if o == nil || o.LanIsolationEnabled == nil {
		return nil, false
	}
	return o.LanIsolationEnabled, true
}

// HasLanIsolationEnabled returns a boolean if a field has been set.
func (o *InlineObject153) HasLanIsolationEnabled() bool {
	if o != nil && o.LanIsolationEnabled != nil {
		return true
	}

	return false
}

// SetLanIsolationEnabled gets a reference to the given bool and assigns it to the LanIsolationEnabled field.
func (o *InlineObject153) SetLanIsolationEnabled(v bool) {
	o.LanIsolationEnabled = &v
}

// GetVisible returns the Visible field value if set, zero value otherwise.
func (o *InlineObject153) GetVisible() bool {
	if o == nil || o.Visible == nil {
		var ret bool
		return ret
	}
	return *o.Visible
}

// GetVisibleOk returns a tuple with the Visible field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject153) GetVisibleOk() (*bool, bool) {
	if o == nil || o.Visible == nil {
		return nil, false
	}
	return o.Visible, true
}

// HasVisible returns a boolean if a field has been set.
func (o *InlineObject153) HasVisible() bool {
	if o != nil && o.Visible != nil {
		return true
	}

	return false
}

// SetVisible gets a reference to the given bool and assigns it to the Visible field.
func (o *InlineObject153) SetVisible(v bool) {
	o.Visible = &v
}

// GetAvailableOnAllAps returns the AvailableOnAllAps field value if set, zero value otherwise.
func (o *InlineObject153) GetAvailableOnAllAps() bool {
	if o == nil || o.AvailableOnAllAps == nil {
		var ret bool
		return ret
	}
	return *o.AvailableOnAllAps
}

// GetAvailableOnAllApsOk returns a tuple with the AvailableOnAllAps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject153) GetAvailableOnAllApsOk() (*bool, bool) {
	if o == nil || o.AvailableOnAllAps == nil {
		return nil, false
	}
	return o.AvailableOnAllAps, true
}

// HasAvailableOnAllAps returns a boolean if a field has been set.
func (o *InlineObject153) HasAvailableOnAllAps() bool {
	if o != nil && o.AvailableOnAllAps != nil {
		return true
	}

	return false
}

// SetAvailableOnAllAps gets a reference to the given bool and assigns it to the AvailableOnAllAps field.
func (o *InlineObject153) SetAvailableOnAllAps(v bool) {
	o.AvailableOnAllAps = &v
}

// GetAvailabilityTags returns the AvailabilityTags field value if set, zero value otherwise.
func (o *InlineObject153) GetAvailabilityTags() []string {
	if o == nil || o.AvailabilityTags == nil {
		var ret []string
		return ret
	}
	return *o.AvailabilityTags
}

// GetAvailabilityTagsOk returns a tuple with the AvailabilityTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject153) GetAvailabilityTagsOk() (*[]string, bool) {
	if o == nil || o.AvailabilityTags == nil {
		return nil, false
	}
	return o.AvailabilityTags, true
}

// HasAvailabilityTags returns a boolean if a field has been set.
func (o *InlineObject153) HasAvailabilityTags() bool {
	if o != nil && o.AvailabilityTags != nil {
		return true
	}

	return false
}

// SetAvailabilityTags gets a reference to the given []string and assigns it to the AvailabilityTags field.
func (o *InlineObject153) SetAvailabilityTags(v []string) {
	o.AvailabilityTags = &v
}

// GetMandatoryDhcpEnabled returns the MandatoryDhcpEnabled field value if set, zero value otherwise.
func (o *InlineObject153) GetMandatoryDhcpEnabled() bool {
	if o == nil || o.MandatoryDhcpEnabled == nil {
		var ret bool
		return ret
	}
	return *o.MandatoryDhcpEnabled
}

// GetMandatoryDhcpEnabledOk returns a tuple with the MandatoryDhcpEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject153) GetMandatoryDhcpEnabledOk() (*bool, bool) {
	if o == nil || o.MandatoryDhcpEnabled == nil {
		return nil, false
	}
	return o.MandatoryDhcpEnabled, true
}

// HasMandatoryDhcpEnabled returns a boolean if a field has been set.
func (o *InlineObject153) HasMandatoryDhcpEnabled() bool {
	if o != nil && o.MandatoryDhcpEnabled != nil {
		return true
	}

	return false
}

// SetMandatoryDhcpEnabled gets a reference to the given bool and assigns it to the MandatoryDhcpEnabled field.
func (o *InlineObject153) SetMandatoryDhcpEnabled(v bool) {
	o.MandatoryDhcpEnabled = &v
}

// GetAdultContentFilteringEnabled returns the AdultContentFilteringEnabled field value if set, zero value otherwise.
func (o *InlineObject153) GetAdultContentFilteringEnabled() bool {
	if o == nil || o.AdultContentFilteringEnabled == nil {
		var ret bool
		return ret
	}
	return *o.AdultContentFilteringEnabled
}

// GetAdultContentFilteringEnabledOk returns a tuple with the AdultContentFilteringEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject153) GetAdultContentFilteringEnabledOk() (*bool, bool) {
	if o == nil || o.AdultContentFilteringEnabled == nil {
		return nil, false
	}
	return o.AdultContentFilteringEnabled, true
}

// HasAdultContentFilteringEnabled returns a boolean if a field has been set.
func (o *InlineObject153) HasAdultContentFilteringEnabled() bool {
	if o != nil && o.AdultContentFilteringEnabled != nil {
		return true
	}

	return false
}

// SetAdultContentFilteringEnabled gets a reference to the given bool and assigns it to the AdultContentFilteringEnabled field.
func (o *InlineObject153) SetAdultContentFilteringEnabled(v bool) {
	o.AdultContentFilteringEnabled = &v
}

// GetDnsRewrite returns the DnsRewrite field value if set, zero value otherwise.
func (o *InlineObject153) GetDnsRewrite() NetworksNetworkIdWirelessSsidsNumberDnsRewrite {
	if o == nil || o.DnsRewrite == nil {
		var ret NetworksNetworkIdWirelessSsidsNumberDnsRewrite
		return ret
	}
	return *o.DnsRewrite
}

// GetDnsRewriteOk returns a tuple with the DnsRewrite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject153) GetDnsRewriteOk() (*NetworksNetworkIdWirelessSsidsNumberDnsRewrite, bool) {
	if o == nil || o.DnsRewrite == nil {
		return nil, false
	}
	return o.DnsRewrite, true
}

// HasDnsRewrite returns a boolean if a field has been set.
func (o *InlineObject153) HasDnsRewrite() bool {
	if o != nil && o.DnsRewrite != nil {
		return true
	}

	return false
}

// SetDnsRewrite gets a reference to the given NetworksNetworkIdWirelessSsidsNumberDnsRewrite and assigns it to the DnsRewrite field.
func (o *InlineObject153) SetDnsRewrite(v NetworksNetworkIdWirelessSsidsNumberDnsRewrite) {
	o.DnsRewrite = &v
}

// GetSpeedBurst returns the SpeedBurst field value if set, zero value otherwise.
func (o *InlineObject153) GetSpeedBurst() NetworksNetworkIdWirelessSsidsNumberSpeedBurst {
	if o == nil || o.SpeedBurst == nil {
		var ret NetworksNetworkIdWirelessSsidsNumberSpeedBurst
		return ret
	}
	return *o.SpeedBurst
}

// GetSpeedBurstOk returns a tuple with the SpeedBurst field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject153) GetSpeedBurstOk() (*NetworksNetworkIdWirelessSsidsNumberSpeedBurst, bool) {
	if o == nil || o.SpeedBurst == nil {
		return nil, false
	}
	return o.SpeedBurst, true
}

// HasSpeedBurst returns a boolean if a field has been set.
func (o *InlineObject153) HasSpeedBurst() bool {
	if o != nil && o.SpeedBurst != nil {
		return true
	}

	return false
}

// SetSpeedBurst gets a reference to the given NetworksNetworkIdWirelessSsidsNumberSpeedBurst and assigns it to the SpeedBurst field.
func (o *InlineObject153) SetSpeedBurst(v NetworksNetworkIdWirelessSsidsNumberSpeedBurst) {
	o.SpeedBurst = &v
}

func (o InlineObject153) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Enabled != nil {
		toSerialize["enabled"] = o.Enabled
	}
	if o.AuthMode != nil {
		toSerialize["authMode"] = o.AuthMode
	}
	if o.EnterpriseAdminAccess != nil {
		toSerialize["enterpriseAdminAccess"] = o.EnterpriseAdminAccess
	}
	if o.EncryptionMode != nil {
		toSerialize["encryptionMode"] = o.EncryptionMode
	}
	if o.Psk != nil {
		toSerialize["psk"] = o.Psk
	}
	if o.WpaEncryptionMode != nil {
		toSerialize["wpaEncryptionMode"] = o.WpaEncryptionMode
	}
	if o.Dot11w != nil {
		toSerialize["dot11w"] = o.Dot11w
	}
	if o.Dot11r != nil {
		toSerialize["dot11r"] = o.Dot11r
	}
	if o.SplashPage != nil {
		toSerialize["splashPage"] = o.SplashPage
	}
	if o.SplashGuestSponsorDomains != nil {
		toSerialize["splashGuestSponsorDomains"] = o.SplashGuestSponsorDomains
	}
	if o.Oauth != nil {
		toSerialize["oauth"] = o.Oauth
	}
	if o.LocalRadius != nil {
		toSerialize["localRadius"] = o.LocalRadius
	}
	if o.Ldap != nil {
		toSerialize["ldap"] = o.Ldap
	}
	if o.ActiveDirectory != nil {
		toSerialize["activeDirectory"] = o.ActiveDirectory
	}
	if o.RadiusServers != nil {
		toSerialize["radiusServers"] = o.RadiusServers
	}
	if o.RadiusProxyEnabled != nil {
		toSerialize["radiusProxyEnabled"] = o.RadiusProxyEnabled
	}
	if o.RadiusTestingEnabled != nil {
		toSerialize["radiusTestingEnabled"] = o.RadiusTestingEnabled
	}
	if o.RadiusCalledStationId != nil {
		toSerialize["radiusCalledStationId"] = o.RadiusCalledStationId
	}
	if o.RadiusAuthenticationNasId != nil {
		toSerialize["radiusAuthenticationNasId"] = o.RadiusAuthenticationNasId
	}
	if o.RadiusServerTimeout != nil {
		toSerialize["radiusServerTimeout"] = o.RadiusServerTimeout
	}
	if o.RadiusServerAttemptsLimit != nil {
		toSerialize["radiusServerAttemptsLimit"] = o.RadiusServerAttemptsLimit
	}
	if o.RadiusFallbackEnabled != nil {
		toSerialize["radiusFallbackEnabled"] = o.RadiusFallbackEnabled
	}
	if o.RadiusCoaEnabled != nil {
		toSerialize["radiusCoaEnabled"] = o.RadiusCoaEnabled
	}
	if o.RadiusFailoverPolicy != nil {
		toSerialize["radiusFailoverPolicy"] = o.RadiusFailoverPolicy
	}
	if o.RadiusLoadBalancingPolicy != nil {
		toSerialize["radiusLoadBalancingPolicy"] = o.RadiusLoadBalancingPolicy
	}
	if o.RadiusAccountingEnabled != nil {
		toSerialize["radiusAccountingEnabled"] = o.RadiusAccountingEnabled
	}
	if o.RadiusAccountingServers != nil {
		toSerialize["radiusAccountingServers"] = o.RadiusAccountingServers
	}
	if o.RadiusAccountingInterimInterval != nil {
		toSerialize["radiusAccountingInterimInterval"] = o.RadiusAccountingInterimInterval
	}
	if o.RadiusAttributeForGroupPolicies != nil {
		toSerialize["radiusAttributeForGroupPolicies"] = o.RadiusAttributeForGroupPolicies
	}
	if o.IpAssignmentMode != nil {
		toSerialize["ipAssignmentMode"] = o.IpAssignmentMode
	}
	if o.UseVlanTagging != nil {
		toSerialize["useVlanTagging"] = o.UseVlanTagging
	}
	if o.ConcentratorNetworkId != nil {
		toSerialize["concentratorNetworkId"] = o.ConcentratorNetworkId
	}
	if o.SecondaryConcentratorNetworkId != nil {
		toSerialize["secondaryConcentratorNetworkId"] = o.SecondaryConcentratorNetworkId
	}
	if o.DisassociateClientsOnVpnFailover != nil {
		toSerialize["disassociateClientsOnVpnFailover"] = o.DisassociateClientsOnVpnFailover
	}
	if o.VlanId != nil {
		toSerialize["vlanId"] = o.VlanId
	}
	if o.DefaultVlanId != nil {
		toSerialize["defaultVlanId"] = o.DefaultVlanId
	}
	if o.ApTagsAndVlanIds != nil {
		toSerialize["apTagsAndVlanIds"] = o.ApTagsAndVlanIds
	}
	if o.WalledGardenEnabled != nil {
		toSerialize["walledGardenEnabled"] = o.WalledGardenEnabled
	}
	if o.WalledGardenRanges != nil {
		toSerialize["walledGardenRanges"] = o.WalledGardenRanges
	}
	if o.Gre != nil {
		toSerialize["gre"] = o.Gre
	}
	if o.RadiusOverride != nil {
		toSerialize["radiusOverride"] = o.RadiusOverride
	}
	if o.RadiusGuestVlanEnabled != nil {
		toSerialize["radiusGuestVlanEnabled"] = o.RadiusGuestVlanEnabled
	}
	if o.RadiusGuestVlanId != nil {
		toSerialize["radiusGuestVlanId"] = o.RadiusGuestVlanId
	}
	if o.MinBitrate != nil {
		toSerialize["minBitrate"] = o.MinBitrate
	}
	if o.BandSelection != nil {
		toSerialize["bandSelection"] = o.BandSelection
	}
	if o.PerClientBandwidthLimitUp != nil {
		toSerialize["perClientBandwidthLimitUp"] = o.PerClientBandwidthLimitUp
	}
	if o.PerClientBandwidthLimitDown != nil {
		toSerialize["perClientBandwidthLimitDown"] = o.PerClientBandwidthLimitDown
	}
	if o.PerSsidBandwidthLimitUp != nil {
		toSerialize["perSsidBandwidthLimitUp"] = o.PerSsidBandwidthLimitUp
	}
	if o.PerSsidBandwidthLimitDown != nil {
		toSerialize["perSsidBandwidthLimitDown"] = o.PerSsidBandwidthLimitDown
	}
	if o.LanIsolationEnabled != nil {
		toSerialize["lanIsolationEnabled"] = o.LanIsolationEnabled
	}
	if o.Visible != nil {
		toSerialize["visible"] = o.Visible
	}
	if o.AvailableOnAllAps != nil {
		toSerialize["availableOnAllAps"] = o.AvailableOnAllAps
	}
	if o.AvailabilityTags != nil {
		toSerialize["availabilityTags"] = o.AvailabilityTags
	}
	if o.MandatoryDhcpEnabled != nil {
		toSerialize["mandatoryDhcpEnabled"] = o.MandatoryDhcpEnabled
	}
	if o.AdultContentFilteringEnabled != nil {
		toSerialize["adultContentFilteringEnabled"] = o.AdultContentFilteringEnabled
	}
	if o.DnsRewrite != nil {
		toSerialize["dnsRewrite"] = o.DnsRewrite
	}
	if o.SpeedBurst != nil {
		toSerialize["speedBurst"] = o.SpeedBurst
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject153 struct {
	value *InlineObject153
	isSet bool
}

func (v NullableInlineObject153) Get() *InlineObject153 {
	return v.value
}

func (v *NullableInlineObject153) Set(val *InlineObject153) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject153) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject153) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject153(val *InlineObject153) *NullableInlineObject153 {
	return &NullableInlineObject153{value: val, isSet: true}
}

func (v NullableInlineObject153) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject153) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


