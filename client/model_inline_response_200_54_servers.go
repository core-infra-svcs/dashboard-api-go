/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 02 November, 2022 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.27.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse20054Servers struct for InlineResponse20054Servers
type InlineResponse20054Servers struct {
	// The IP address of the syslog server
	Host *string `json:"host,omitempty"`
	// The port of the syslog server
	Port *int32 `json:"port,omitempty"`
	// A list of roles for the syslog server. Options (case-insensitive): 'Wireless event log', 'Appliance event log', 'Switch event log', 'Air Marshal events', 'Flows', 'URLs', 'IDS alerts', 'Security events'
	Roles []string `json:"roles,omitempty"`
}

// NewInlineResponse20054Servers instantiates a new InlineResponse20054Servers object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20054Servers() *InlineResponse20054Servers {
	this := InlineResponse20054Servers{}
	return &this
}

// NewInlineResponse20054ServersWithDefaults instantiates a new InlineResponse20054Servers object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20054ServersWithDefaults() *InlineResponse20054Servers {
	this := InlineResponse20054Servers{}
	return &this
}

// GetHost returns the Host field value if set, zero value otherwise.
func (o *InlineResponse20054Servers) GetHost() string {
	if o == nil || isNil(o.Host) {
		var ret string
		return ret
	}
	return *o.Host
}

// GetHostOk returns a tuple with the Host field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20054Servers) GetHostOk() (*string, bool) {
	if o == nil || isNil(o.Host) {
    return nil, false
	}
	return o.Host, true
}

// HasHost returns a boolean if a field has been set.
func (o *InlineResponse20054Servers) HasHost() bool {
	if o != nil && !isNil(o.Host) {
		return true
	}

	return false
}

// SetHost gets a reference to the given string and assigns it to the Host field.
func (o *InlineResponse20054Servers) SetHost(v string) {
	o.Host = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *InlineResponse20054Servers) GetPort() int32 {
	if o == nil || isNil(o.Port) {
		var ret int32
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20054Servers) GetPortOk() (*int32, bool) {
	if o == nil || isNil(o.Port) {
    return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *InlineResponse20054Servers) HasPort() bool {
	if o != nil && !isNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given int32 and assigns it to the Port field.
func (o *InlineResponse20054Servers) SetPort(v int32) {
	o.Port = &v
}

// GetRoles returns the Roles field value if set, zero value otherwise.
func (o *InlineResponse20054Servers) GetRoles() []string {
	if o == nil || isNil(o.Roles) {
		var ret []string
		return ret
	}
	return o.Roles
}

// GetRolesOk returns a tuple with the Roles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20054Servers) GetRolesOk() ([]string, bool) {
	if o == nil || isNil(o.Roles) {
    return nil, false
	}
	return o.Roles, true
}

// HasRoles returns a boolean if a field has been set.
func (o *InlineResponse20054Servers) HasRoles() bool {
	if o != nil && !isNil(o.Roles) {
		return true
	}

	return false
}

// SetRoles gets a reference to the given []string and assigns it to the Roles field.
func (o *InlineResponse20054Servers) SetRoles(v []string) {
	o.Roles = v
}

func (o InlineResponse20054Servers) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Host) {
		toSerialize["host"] = o.Host
	}
	if !isNil(o.Port) {
		toSerialize["port"] = o.Port
	}
	if !isNil(o.Roles) {
		toSerialize["roles"] = o.Roles
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20054Servers struct {
	value *InlineResponse20054Servers
	isSet bool
}

func (v NullableInlineResponse20054Servers) Get() *InlineResponse20054Servers {
	return v.value
}

func (v *NullableInlineResponse20054Servers) Set(val *InlineResponse20054Servers) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20054Servers) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20054Servers) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20054Servers(val *InlineResponse20054Servers) *NullableInlineResponse20054Servers {
	return &NullableInlineResponse20054Servers{value: val, isSet: true}
}

func (v NullableInlineResponse20054Servers) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20054Servers) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


