/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 07 August, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.49.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200259Counts Aggregated count data for the license type
type InlineResponse200259Counts struct {
	// The number of unassigned licenses
	Unassigned *int32 `json:"unassigned,omitempty"`
}

// NewInlineResponse200259Counts instantiates a new InlineResponse200259Counts object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200259Counts() *InlineResponse200259Counts {
	this := InlineResponse200259Counts{}
	return &this
}

// NewInlineResponse200259CountsWithDefaults instantiates a new InlineResponse200259Counts object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200259CountsWithDefaults() *InlineResponse200259Counts {
	this := InlineResponse200259Counts{}
	return &this
}

// GetUnassigned returns the Unassigned field value if set, zero value otherwise.
func (o *InlineResponse200259Counts) GetUnassigned() int32 {
	if o == nil || isNil(o.Unassigned) {
		var ret int32
		return ret
	}
	return *o.Unassigned
}

// GetUnassignedOk returns a tuple with the Unassigned field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200259Counts) GetUnassignedOk() (*int32, bool) {
	if o == nil || isNil(o.Unassigned) {
    return nil, false
	}
	return o.Unassigned, true
}

// HasUnassigned returns a boolean if a field has been set.
func (o *InlineResponse200259Counts) HasUnassigned() bool {
	if o != nil && !isNil(o.Unassigned) {
		return true
	}

	return false
}

// SetUnassigned gets a reference to the given int32 and assigns it to the Unassigned field.
func (o *InlineResponse200259Counts) SetUnassigned(v int32) {
	o.Unassigned = &v
}

func (o InlineResponse200259Counts) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Unassigned) {
		toSerialize["unassigned"] = o.Unassigned
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200259Counts struct {
	value *InlineResponse200259Counts
	isSet bool
}

func (v NullableInlineResponse200259Counts) Get() *InlineResponse200259Counts {
	return v.value
}

func (v *NullableInlineResponse200259Counts) Set(val *InlineResponse200259Counts) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200259Counts) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200259Counts) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200259Counts(val *InlineResponse200259Counts) *NullableInlineResponse200259Counts {
	return &NullableInlineResponse200259Counts{value: val, isSet: true}
}

func (v NullableInlineResponse200259Counts) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200259Counts) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


