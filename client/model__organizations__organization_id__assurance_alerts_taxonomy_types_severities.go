/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 01 October, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.63.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// OrganizationsOrganizationIdAssuranceAlertsTaxonomyTypesSeverities struct for OrganizationsOrganizationIdAssuranceAlertsTaxonomyTypesSeverities
type OrganizationsOrganizationIdAssuranceAlertsTaxonomyTypesSeverities struct {
	// The severity for the alert type
	Type string `json:"type"`
}

// NewOrganizationsOrganizationIdAssuranceAlertsTaxonomyTypesSeverities instantiates a new OrganizationsOrganizationIdAssuranceAlertsTaxonomyTypesSeverities object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationsOrganizationIdAssuranceAlertsTaxonomyTypesSeverities(type_ string) *OrganizationsOrganizationIdAssuranceAlertsTaxonomyTypesSeverities {
	this := OrganizationsOrganizationIdAssuranceAlertsTaxonomyTypesSeverities{}
	this.Type = type_
	return &this
}

// NewOrganizationsOrganizationIdAssuranceAlertsTaxonomyTypesSeveritiesWithDefaults instantiates a new OrganizationsOrganizationIdAssuranceAlertsTaxonomyTypesSeverities object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationsOrganizationIdAssuranceAlertsTaxonomyTypesSeveritiesWithDefaults() *OrganizationsOrganizationIdAssuranceAlertsTaxonomyTypesSeverities {
	this := OrganizationsOrganizationIdAssuranceAlertsTaxonomyTypesSeverities{}
	return &this
}

// GetType returns the Type field value
func (o *OrganizationsOrganizationIdAssuranceAlertsTaxonomyTypesSeverities) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *OrganizationsOrganizationIdAssuranceAlertsTaxonomyTypesSeverities) GetTypeOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *OrganizationsOrganizationIdAssuranceAlertsTaxonomyTypesSeverities) SetType(v string) {
	o.Type = v
}

func (o OrganizationsOrganizationIdAssuranceAlertsTaxonomyTypesSeverities) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableOrganizationsOrganizationIdAssuranceAlertsTaxonomyTypesSeverities struct {
	value *OrganizationsOrganizationIdAssuranceAlertsTaxonomyTypesSeverities
	isSet bool
}

func (v NullableOrganizationsOrganizationIdAssuranceAlertsTaxonomyTypesSeverities) Get() *OrganizationsOrganizationIdAssuranceAlertsTaxonomyTypesSeverities {
	return v.value
}

func (v *NullableOrganizationsOrganizationIdAssuranceAlertsTaxonomyTypesSeverities) Set(val *OrganizationsOrganizationIdAssuranceAlertsTaxonomyTypesSeverities) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationsOrganizationIdAssuranceAlertsTaxonomyTypesSeverities) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationsOrganizationIdAssuranceAlertsTaxonomyTypesSeverities) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationsOrganizationIdAssuranceAlertsTaxonomyTypesSeverities(val *OrganizationsOrganizationIdAssuranceAlertsTaxonomyTypesSeverities) *NullableOrganizationsOrganizationIdAssuranceAlertsTaxonomyTypesSeverities {
	return &NullableOrganizationsOrganizationIdAssuranceAlertsTaxonomyTypesSeverities{value: val, isSet: true}
}

func (v NullableOrganizationsOrganizationIdAssuranceAlertsTaxonomyTypesSeverities) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationsOrganizationIdAssuranceAlertsTaxonomyTypesSeverities) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


