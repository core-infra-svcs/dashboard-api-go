/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 01 June, 2022 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.22.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"time"
)

// InlineResponse2002 struct for InlineResponse2002
type InlineResponse2002 struct {
	// Database ID for the admin user who made the API request.
	AdminId *string `json:"adminId,omitempty"`
	// HTTP method used in the API request.
	Method *string `json:"method,omitempty"`
	// The host which the API request was directed at.
	Host *string `json:"host,omitempty"`
	// The API request path.
	Path *string `json:"path,omitempty"`
	// The query string sent with the API request.
	QueryString *string `json:"queryString,omitempty"`
	// The API request user agent.
	UserAgent *string `json:"userAgent,omitempty"`
	// Timestamp, in iso8601 format, indicating when the API request was made.
	Ts *time.Time `json:"ts,omitempty"`
	// API request response code.
	ResponseCode *int32 `json:"responseCode,omitempty"`
	// Public IP address from which the API request was made.
	SourceIp *string `json:"sourceIp,omitempty"`
	// API version of the endpoint.
	Version *int32 `json:"version,omitempty"`
	// Operation ID for the endpoint.
	OperationId *string `json:"operationId,omitempty"`
}

// NewInlineResponse2002 instantiates a new InlineResponse2002 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse2002() *InlineResponse2002 {
	this := InlineResponse2002{}
	return &this
}

// NewInlineResponse2002WithDefaults instantiates a new InlineResponse2002 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse2002WithDefaults() *InlineResponse2002 {
	this := InlineResponse2002{}
	return &this
}

// GetAdminId returns the AdminId field value if set, zero value otherwise.
func (o *InlineResponse2002) GetAdminId() string {
	if o == nil || o.AdminId == nil {
		var ret string
		return ret
	}
	return *o.AdminId
}

// GetAdminIdOk returns a tuple with the AdminId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2002) GetAdminIdOk() (*string, bool) {
	if o == nil || o.AdminId == nil {
		return nil, false
	}
	return o.AdminId, true
}

// HasAdminId returns a boolean if a field has been set.
func (o *InlineResponse2002) HasAdminId() bool {
	if o != nil && o.AdminId != nil {
		return true
	}

	return false
}

// SetAdminId gets a reference to the given string and assigns it to the AdminId field.
func (o *InlineResponse2002) SetAdminId(v string) {
	o.AdminId = &v
}

// GetMethod returns the Method field value if set, zero value otherwise.
func (o *InlineResponse2002) GetMethod() string {
	if o == nil || o.Method == nil {
		var ret string
		return ret
	}
	return *o.Method
}

// GetMethodOk returns a tuple with the Method field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2002) GetMethodOk() (*string, bool) {
	if o == nil || o.Method == nil {
		return nil, false
	}
	return o.Method, true
}

// HasMethod returns a boolean if a field has been set.
func (o *InlineResponse2002) HasMethod() bool {
	if o != nil && o.Method != nil {
		return true
	}

	return false
}

// SetMethod gets a reference to the given string and assigns it to the Method field.
func (o *InlineResponse2002) SetMethod(v string) {
	o.Method = &v
}

// GetHost returns the Host field value if set, zero value otherwise.
func (o *InlineResponse2002) GetHost() string {
	if o == nil || o.Host == nil {
		var ret string
		return ret
	}
	return *o.Host
}

// GetHostOk returns a tuple with the Host field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2002) GetHostOk() (*string, bool) {
	if o == nil || o.Host == nil {
		return nil, false
	}
	return o.Host, true
}

// HasHost returns a boolean if a field has been set.
func (o *InlineResponse2002) HasHost() bool {
	if o != nil && o.Host != nil {
		return true
	}

	return false
}

// SetHost gets a reference to the given string and assigns it to the Host field.
func (o *InlineResponse2002) SetHost(v string) {
	o.Host = &v
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *InlineResponse2002) GetPath() string {
	if o == nil || o.Path == nil {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2002) GetPathOk() (*string, bool) {
	if o == nil || o.Path == nil {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *InlineResponse2002) HasPath() bool {
	if o != nil && o.Path != nil {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *InlineResponse2002) SetPath(v string) {
	o.Path = &v
}

// GetQueryString returns the QueryString field value if set, zero value otherwise.
func (o *InlineResponse2002) GetQueryString() string {
	if o == nil || o.QueryString == nil {
		var ret string
		return ret
	}
	return *o.QueryString
}

// GetQueryStringOk returns a tuple with the QueryString field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2002) GetQueryStringOk() (*string, bool) {
	if o == nil || o.QueryString == nil {
		return nil, false
	}
	return o.QueryString, true
}

// HasQueryString returns a boolean if a field has been set.
func (o *InlineResponse2002) HasQueryString() bool {
	if o != nil && o.QueryString != nil {
		return true
	}

	return false
}

// SetQueryString gets a reference to the given string and assigns it to the QueryString field.
func (o *InlineResponse2002) SetQueryString(v string) {
	o.QueryString = &v
}

// GetUserAgent returns the UserAgent field value if set, zero value otherwise.
func (o *InlineResponse2002) GetUserAgent() string {
	if o == nil || o.UserAgent == nil {
		var ret string
		return ret
	}
	return *o.UserAgent
}

// GetUserAgentOk returns a tuple with the UserAgent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2002) GetUserAgentOk() (*string, bool) {
	if o == nil || o.UserAgent == nil {
		return nil, false
	}
	return o.UserAgent, true
}

// HasUserAgent returns a boolean if a field has been set.
func (o *InlineResponse2002) HasUserAgent() bool {
	if o != nil && o.UserAgent != nil {
		return true
	}

	return false
}

// SetUserAgent gets a reference to the given string and assigns it to the UserAgent field.
func (o *InlineResponse2002) SetUserAgent(v string) {
	o.UserAgent = &v
}

// GetTs returns the Ts field value if set, zero value otherwise.
func (o *InlineResponse2002) GetTs() time.Time {
	if o == nil || o.Ts == nil {
		var ret time.Time
		return ret
	}
	return *o.Ts
}

// GetTsOk returns a tuple with the Ts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2002) GetTsOk() (*time.Time, bool) {
	if o == nil || o.Ts == nil {
		return nil, false
	}
	return o.Ts, true
}

// HasTs returns a boolean if a field has been set.
func (o *InlineResponse2002) HasTs() bool {
	if o != nil && o.Ts != nil {
		return true
	}

	return false
}

// SetTs gets a reference to the given time.Time and assigns it to the Ts field.
func (o *InlineResponse2002) SetTs(v time.Time) {
	o.Ts = &v
}

// GetResponseCode returns the ResponseCode field value if set, zero value otherwise.
func (o *InlineResponse2002) GetResponseCode() int32 {
	if o == nil || o.ResponseCode == nil {
		var ret int32
		return ret
	}
	return *o.ResponseCode
}

// GetResponseCodeOk returns a tuple with the ResponseCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2002) GetResponseCodeOk() (*int32, bool) {
	if o == nil || o.ResponseCode == nil {
		return nil, false
	}
	return o.ResponseCode, true
}

// HasResponseCode returns a boolean if a field has been set.
func (o *InlineResponse2002) HasResponseCode() bool {
	if o != nil && o.ResponseCode != nil {
		return true
	}

	return false
}

// SetResponseCode gets a reference to the given int32 and assigns it to the ResponseCode field.
func (o *InlineResponse2002) SetResponseCode(v int32) {
	o.ResponseCode = &v
}

// GetSourceIp returns the SourceIp field value if set, zero value otherwise.
func (o *InlineResponse2002) GetSourceIp() string {
	if o == nil || o.SourceIp == nil {
		var ret string
		return ret
	}
	return *o.SourceIp
}

// GetSourceIpOk returns a tuple with the SourceIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2002) GetSourceIpOk() (*string, bool) {
	if o == nil || o.SourceIp == nil {
		return nil, false
	}
	return o.SourceIp, true
}

// HasSourceIp returns a boolean if a field has been set.
func (o *InlineResponse2002) HasSourceIp() bool {
	if o != nil && o.SourceIp != nil {
		return true
	}

	return false
}

// SetSourceIp gets a reference to the given string and assigns it to the SourceIp field.
func (o *InlineResponse2002) SetSourceIp(v string) {
	o.SourceIp = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *InlineResponse2002) GetVersion() int32 {
	if o == nil || o.Version == nil {
		var ret int32
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2002) GetVersionOk() (*int32, bool) {
	if o == nil || o.Version == nil {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *InlineResponse2002) HasVersion() bool {
	if o != nil && o.Version != nil {
		return true
	}

	return false
}

// SetVersion gets a reference to the given int32 and assigns it to the Version field.
func (o *InlineResponse2002) SetVersion(v int32) {
	o.Version = &v
}

// GetOperationId returns the OperationId field value if set, zero value otherwise.
func (o *InlineResponse2002) GetOperationId() string {
	if o == nil || o.OperationId == nil {
		var ret string
		return ret
	}
	return *o.OperationId
}

// GetOperationIdOk returns a tuple with the OperationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2002) GetOperationIdOk() (*string, bool) {
	if o == nil || o.OperationId == nil {
		return nil, false
	}
	return o.OperationId, true
}

// HasOperationId returns a boolean if a field has been set.
func (o *InlineResponse2002) HasOperationId() bool {
	if o != nil && o.OperationId != nil {
		return true
	}

	return false
}

// SetOperationId gets a reference to the given string and assigns it to the OperationId field.
func (o *InlineResponse2002) SetOperationId(v string) {
	o.OperationId = &v
}

func (o InlineResponse2002) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AdminId != nil {
		toSerialize["adminId"] = o.AdminId
	}
	if o.Method != nil {
		toSerialize["method"] = o.Method
	}
	if o.Host != nil {
		toSerialize["host"] = o.Host
	}
	if o.Path != nil {
		toSerialize["path"] = o.Path
	}
	if o.QueryString != nil {
		toSerialize["queryString"] = o.QueryString
	}
	if o.UserAgent != nil {
		toSerialize["userAgent"] = o.UserAgent
	}
	if o.Ts != nil {
		toSerialize["ts"] = o.Ts
	}
	if o.ResponseCode != nil {
		toSerialize["responseCode"] = o.ResponseCode
	}
	if o.SourceIp != nil {
		toSerialize["sourceIp"] = o.SourceIp
	}
	if o.Version != nil {
		toSerialize["version"] = o.Version
	}
	if o.OperationId != nil {
		toSerialize["operationId"] = o.OperationId
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse2002 struct {
	value *InlineResponse2002
	isSet bool
}

func (v NullableInlineResponse2002) Get() *InlineResponse2002 {
	return v.value
}

func (v *NullableInlineResponse2002) Set(val *InlineResponse2002) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse2002) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse2002) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse2002(val *InlineResponse2002) *NullableInlineResponse2002 {
	return &NullableInlineResponse2002{value: val, isSet: true}
}

func (v NullableInlineResponse2002) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse2002) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


