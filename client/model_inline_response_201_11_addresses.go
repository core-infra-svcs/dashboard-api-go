/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 06 August, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.61.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse20111Addresses struct for InlineResponse20111Addresses
type InlineResponse20111Addresses struct {
	// Assignment mode of the interface
	AssignmentMode *string `json:"assignmentMode,omitempty"`
	// Protocol of the interface
	Protocol *string `json:"protocol,omitempty"`
	// Gateway of the interface
	Gateway *string `json:"gateway,omitempty"`
	// Subnet mask of the interface
	SubnetMask *string `json:"subnetMask,omitempty"`
}

// NewInlineResponse20111Addresses instantiates a new InlineResponse20111Addresses object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20111Addresses() *InlineResponse20111Addresses {
	this := InlineResponse20111Addresses{}
	return &this
}

// NewInlineResponse20111AddressesWithDefaults instantiates a new InlineResponse20111Addresses object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20111AddressesWithDefaults() *InlineResponse20111Addresses {
	this := InlineResponse20111Addresses{}
	return &this
}

// GetAssignmentMode returns the AssignmentMode field value if set, zero value otherwise.
func (o *InlineResponse20111Addresses) GetAssignmentMode() string {
	if o == nil || isNil(o.AssignmentMode) {
		var ret string
		return ret
	}
	return *o.AssignmentMode
}

// GetAssignmentModeOk returns a tuple with the AssignmentMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20111Addresses) GetAssignmentModeOk() (*string, bool) {
	if o == nil || isNil(o.AssignmentMode) {
    return nil, false
	}
	return o.AssignmentMode, true
}

// HasAssignmentMode returns a boolean if a field has been set.
func (o *InlineResponse20111Addresses) HasAssignmentMode() bool {
	if o != nil && !isNil(o.AssignmentMode) {
		return true
	}

	return false
}

// SetAssignmentMode gets a reference to the given string and assigns it to the AssignmentMode field.
func (o *InlineResponse20111Addresses) SetAssignmentMode(v string) {
	o.AssignmentMode = &v
}

// GetProtocol returns the Protocol field value if set, zero value otherwise.
func (o *InlineResponse20111Addresses) GetProtocol() string {
	if o == nil || isNil(o.Protocol) {
		var ret string
		return ret
	}
	return *o.Protocol
}

// GetProtocolOk returns a tuple with the Protocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20111Addresses) GetProtocolOk() (*string, bool) {
	if o == nil || isNil(o.Protocol) {
    return nil, false
	}
	return o.Protocol, true
}

// HasProtocol returns a boolean if a field has been set.
func (o *InlineResponse20111Addresses) HasProtocol() bool {
	if o != nil && !isNil(o.Protocol) {
		return true
	}

	return false
}

// SetProtocol gets a reference to the given string and assigns it to the Protocol field.
func (o *InlineResponse20111Addresses) SetProtocol(v string) {
	o.Protocol = &v
}

// GetGateway returns the Gateway field value if set, zero value otherwise.
func (o *InlineResponse20111Addresses) GetGateway() string {
	if o == nil || isNil(o.Gateway) {
		var ret string
		return ret
	}
	return *o.Gateway
}

// GetGatewayOk returns a tuple with the Gateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20111Addresses) GetGatewayOk() (*string, bool) {
	if o == nil || isNil(o.Gateway) {
    return nil, false
	}
	return o.Gateway, true
}

// HasGateway returns a boolean if a field has been set.
func (o *InlineResponse20111Addresses) HasGateway() bool {
	if o != nil && !isNil(o.Gateway) {
		return true
	}

	return false
}

// SetGateway gets a reference to the given string and assigns it to the Gateway field.
func (o *InlineResponse20111Addresses) SetGateway(v string) {
	o.Gateway = &v
}

// GetSubnetMask returns the SubnetMask field value if set, zero value otherwise.
func (o *InlineResponse20111Addresses) GetSubnetMask() string {
	if o == nil || isNil(o.SubnetMask) {
		var ret string
		return ret
	}
	return *o.SubnetMask
}

// GetSubnetMaskOk returns a tuple with the SubnetMask field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20111Addresses) GetSubnetMaskOk() (*string, bool) {
	if o == nil || isNil(o.SubnetMask) {
    return nil, false
	}
	return o.SubnetMask, true
}

// HasSubnetMask returns a boolean if a field has been set.
func (o *InlineResponse20111Addresses) HasSubnetMask() bool {
	if o != nil && !isNil(o.SubnetMask) {
		return true
	}

	return false
}

// SetSubnetMask gets a reference to the given string and assigns it to the SubnetMask field.
func (o *InlineResponse20111Addresses) SetSubnetMask(v string) {
	o.SubnetMask = &v
}

func (o InlineResponse20111Addresses) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.AssignmentMode) {
		toSerialize["assignmentMode"] = o.AssignmentMode
	}
	if !isNil(o.Protocol) {
		toSerialize["protocol"] = o.Protocol
	}
	if !isNil(o.Gateway) {
		toSerialize["gateway"] = o.Gateway
	}
	if !isNil(o.SubnetMask) {
		toSerialize["subnetMask"] = o.SubnetMask
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20111Addresses struct {
	value *InlineResponse20111Addresses
	isSet bool
}

func (v NullableInlineResponse20111Addresses) Get() *InlineResponse20111Addresses {
	return v.value
}

func (v *NullableInlineResponse20111Addresses) Set(val *InlineResponse20111Addresses) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20111Addresses) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20111Addresses) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20111Addresses(val *InlineResponse20111Addresses) *NullableInlineResponse20111Addresses {
	return &NullableInlineResponse20111Addresses{value: val, isSet: true}
}

func (v NullableInlineResponse20111Addresses) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20111Addresses) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


