/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 06 November, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.52.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse20021Pairs struct for InlineResponse20021Pairs
type InlineResponse20021Pairs struct {
	// The index of the twisted pair tested.
	Index *int32 `json:"index,omitempty"`
	// The test result of the twisted pair tested.
	Status *string `json:"status,omitempty"`
	// The detected length of the twisted pair.
	LengthMeters *int32 `json:"lengthMeters,omitempty"`
}

// NewInlineResponse20021Pairs instantiates a new InlineResponse20021Pairs object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20021Pairs() *InlineResponse20021Pairs {
	this := InlineResponse20021Pairs{}
	return &this
}

// NewInlineResponse20021PairsWithDefaults instantiates a new InlineResponse20021Pairs object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20021PairsWithDefaults() *InlineResponse20021Pairs {
	this := InlineResponse20021Pairs{}
	return &this
}

// GetIndex returns the Index field value if set, zero value otherwise.
func (o *InlineResponse20021Pairs) GetIndex() int32 {
	if o == nil || isNil(o.Index) {
		var ret int32
		return ret
	}
	return *o.Index
}

// GetIndexOk returns a tuple with the Index field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20021Pairs) GetIndexOk() (*int32, bool) {
	if o == nil || isNil(o.Index) {
    return nil, false
	}
	return o.Index, true
}

// HasIndex returns a boolean if a field has been set.
func (o *InlineResponse20021Pairs) HasIndex() bool {
	if o != nil && !isNil(o.Index) {
		return true
	}

	return false
}

// SetIndex gets a reference to the given int32 and assigns it to the Index field.
func (o *InlineResponse20021Pairs) SetIndex(v int32) {
	o.Index = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *InlineResponse20021Pairs) GetStatus() string {
	if o == nil || isNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20021Pairs) GetStatusOk() (*string, bool) {
	if o == nil || isNil(o.Status) {
    return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *InlineResponse20021Pairs) HasStatus() bool {
	if o != nil && !isNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *InlineResponse20021Pairs) SetStatus(v string) {
	o.Status = &v
}

// GetLengthMeters returns the LengthMeters field value if set, zero value otherwise.
func (o *InlineResponse20021Pairs) GetLengthMeters() int32 {
	if o == nil || isNil(o.LengthMeters) {
		var ret int32
		return ret
	}
	return *o.LengthMeters
}

// GetLengthMetersOk returns a tuple with the LengthMeters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20021Pairs) GetLengthMetersOk() (*int32, bool) {
	if o == nil || isNil(o.LengthMeters) {
    return nil, false
	}
	return o.LengthMeters, true
}

// HasLengthMeters returns a boolean if a field has been set.
func (o *InlineResponse20021Pairs) HasLengthMeters() bool {
	if o != nil && !isNil(o.LengthMeters) {
		return true
	}

	return false
}

// SetLengthMeters gets a reference to the given int32 and assigns it to the LengthMeters field.
func (o *InlineResponse20021Pairs) SetLengthMeters(v int32) {
	o.LengthMeters = &v
}

func (o InlineResponse20021Pairs) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Index) {
		toSerialize["index"] = o.Index
	}
	if !isNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !isNil(o.LengthMeters) {
		toSerialize["lengthMeters"] = o.LengthMeters
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20021Pairs struct {
	value *InlineResponse20021Pairs
	isSet bool
}

func (v NullableInlineResponse20021Pairs) Get() *InlineResponse20021Pairs {
	return v.value
}

func (v *NullableInlineResponse20021Pairs) Set(val *InlineResponse20021Pairs) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20021Pairs) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20021Pairs) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20021Pairs(val *InlineResponse20021Pairs) *NullableInlineResponse20021Pairs {
	return &NullableInlineResponse20021Pairs{value: val, isSet: true}
}

func (v NullableInlineResponse20021Pairs) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20021Pairs) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


