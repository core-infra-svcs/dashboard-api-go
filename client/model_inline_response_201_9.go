/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 03 April, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.45.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse2019 struct for InlineResponse2019
type InlineResponse2019 struct {
	// List of updated AP serials
	Serials []string `json:"serials,omitempty"`
	// AP profile ID
	ProfileId *string `json:"profileId,omitempty"`
}

// NewInlineResponse2019 instantiates a new InlineResponse2019 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse2019() *InlineResponse2019 {
	this := InlineResponse2019{}
	return &this
}

// NewInlineResponse2019WithDefaults instantiates a new InlineResponse2019 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse2019WithDefaults() *InlineResponse2019 {
	this := InlineResponse2019{}
	return &this
}

// GetSerials returns the Serials field value if set, zero value otherwise.
func (o *InlineResponse2019) GetSerials() []string {
	if o == nil || isNil(o.Serials) {
		var ret []string
		return ret
	}
	return o.Serials
}

// GetSerialsOk returns a tuple with the Serials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2019) GetSerialsOk() ([]string, bool) {
	if o == nil || isNil(o.Serials) {
    return nil, false
	}
	return o.Serials, true
}

// HasSerials returns a boolean if a field has been set.
func (o *InlineResponse2019) HasSerials() bool {
	if o != nil && !isNil(o.Serials) {
		return true
	}

	return false
}

// SetSerials gets a reference to the given []string and assigns it to the Serials field.
func (o *InlineResponse2019) SetSerials(v []string) {
	o.Serials = v
}

// GetProfileId returns the ProfileId field value if set, zero value otherwise.
func (o *InlineResponse2019) GetProfileId() string {
	if o == nil || isNil(o.ProfileId) {
		var ret string
		return ret
	}
	return *o.ProfileId
}

// GetProfileIdOk returns a tuple with the ProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2019) GetProfileIdOk() (*string, bool) {
	if o == nil || isNil(o.ProfileId) {
    return nil, false
	}
	return o.ProfileId, true
}

// HasProfileId returns a boolean if a field has been set.
func (o *InlineResponse2019) HasProfileId() bool {
	if o != nil && !isNil(o.ProfileId) {
		return true
	}

	return false
}

// SetProfileId gets a reference to the given string and assigns it to the ProfileId field.
func (o *InlineResponse2019) SetProfileId(v string) {
	o.ProfileId = &v
}

func (o InlineResponse2019) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Serials) {
		toSerialize["serials"] = o.Serials
	}
	if !isNil(o.ProfileId) {
		toSerialize["profileId"] = o.ProfileId
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse2019 struct {
	value *InlineResponse2019
	isSet bool
}

func (v NullableInlineResponse2019) Get() *InlineResponse2019 {
	return v.value
}

func (v *NullableInlineResponse2019) Set(val *InlineResponse2019) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse2019) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse2019) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse2019(val *InlineResponse2019) *NullableInlineResponse2019 {
	return &NullableInlineResponse2019{value: val, isSet: true}
}

func (v NullableInlineResponse2019) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse2019) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


