/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 07 May, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.58.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"time"
)

// InlineResponse200334Intervals struct for InlineResponse200334Intervals
type InlineResponse200334Intervals struct {
	// The starting timestamp of the given interval.
	StartTs *time.Time `json:"startTs,omitempty"`
	// The end timestamp of the given interval.
	EndTs *time.Time `json:"endTs,omitempty"`
	Data *InlineResponse200334Data `json:"data,omitempty"`
	Bandwidth *InlineResponse200334Bandwidth `json:"bandwidth,omitempty"`
	Energy *InlineResponse200334Energy `json:"energy,omitempty"`
}

// NewInlineResponse200334Intervals instantiates a new InlineResponse200334Intervals object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200334Intervals() *InlineResponse200334Intervals {
	this := InlineResponse200334Intervals{}
	return &this
}

// NewInlineResponse200334IntervalsWithDefaults instantiates a new InlineResponse200334Intervals object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200334IntervalsWithDefaults() *InlineResponse200334Intervals {
	this := InlineResponse200334Intervals{}
	return &this
}

// GetStartTs returns the StartTs field value if set, zero value otherwise.
func (o *InlineResponse200334Intervals) GetStartTs() time.Time {
	if o == nil || isNil(o.StartTs) {
		var ret time.Time
		return ret
	}
	return *o.StartTs
}

// GetStartTsOk returns a tuple with the StartTs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200334Intervals) GetStartTsOk() (*time.Time, bool) {
	if o == nil || isNil(o.StartTs) {
    return nil, false
	}
	return o.StartTs, true
}

// HasStartTs returns a boolean if a field has been set.
func (o *InlineResponse200334Intervals) HasStartTs() bool {
	if o != nil && !isNil(o.StartTs) {
		return true
	}

	return false
}

// SetStartTs gets a reference to the given time.Time and assigns it to the StartTs field.
func (o *InlineResponse200334Intervals) SetStartTs(v time.Time) {
	o.StartTs = &v
}

// GetEndTs returns the EndTs field value if set, zero value otherwise.
func (o *InlineResponse200334Intervals) GetEndTs() time.Time {
	if o == nil || isNil(o.EndTs) {
		var ret time.Time
		return ret
	}
	return *o.EndTs
}

// GetEndTsOk returns a tuple with the EndTs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200334Intervals) GetEndTsOk() (*time.Time, bool) {
	if o == nil || isNil(o.EndTs) {
    return nil, false
	}
	return o.EndTs, true
}

// HasEndTs returns a boolean if a field has been set.
func (o *InlineResponse200334Intervals) HasEndTs() bool {
	if o != nil && !isNil(o.EndTs) {
		return true
	}

	return false
}

// SetEndTs gets a reference to the given time.Time and assigns it to the EndTs field.
func (o *InlineResponse200334Intervals) SetEndTs(v time.Time) {
	o.EndTs = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *InlineResponse200334Intervals) GetData() InlineResponse200334Data {
	if o == nil || isNil(o.Data) {
		var ret InlineResponse200334Data
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200334Intervals) GetDataOk() (*InlineResponse200334Data, bool) {
	if o == nil || isNil(o.Data) {
    return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *InlineResponse200334Intervals) HasData() bool {
	if o != nil && !isNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given InlineResponse200334Data and assigns it to the Data field.
func (o *InlineResponse200334Intervals) SetData(v InlineResponse200334Data) {
	o.Data = &v
}

// GetBandwidth returns the Bandwidth field value if set, zero value otherwise.
func (o *InlineResponse200334Intervals) GetBandwidth() InlineResponse200334Bandwidth {
	if o == nil || isNil(o.Bandwidth) {
		var ret InlineResponse200334Bandwidth
		return ret
	}
	return *o.Bandwidth
}

// GetBandwidthOk returns a tuple with the Bandwidth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200334Intervals) GetBandwidthOk() (*InlineResponse200334Bandwidth, bool) {
	if o == nil || isNil(o.Bandwidth) {
    return nil, false
	}
	return o.Bandwidth, true
}

// HasBandwidth returns a boolean if a field has been set.
func (o *InlineResponse200334Intervals) HasBandwidth() bool {
	if o != nil && !isNil(o.Bandwidth) {
		return true
	}

	return false
}

// SetBandwidth gets a reference to the given InlineResponse200334Bandwidth and assigns it to the Bandwidth field.
func (o *InlineResponse200334Intervals) SetBandwidth(v InlineResponse200334Bandwidth) {
	o.Bandwidth = &v
}

// GetEnergy returns the Energy field value if set, zero value otherwise.
func (o *InlineResponse200334Intervals) GetEnergy() InlineResponse200334Energy {
	if o == nil || isNil(o.Energy) {
		var ret InlineResponse200334Energy
		return ret
	}
	return *o.Energy
}

// GetEnergyOk returns a tuple with the Energy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200334Intervals) GetEnergyOk() (*InlineResponse200334Energy, bool) {
	if o == nil || isNil(o.Energy) {
    return nil, false
	}
	return o.Energy, true
}

// HasEnergy returns a boolean if a field has been set.
func (o *InlineResponse200334Intervals) HasEnergy() bool {
	if o != nil && !isNil(o.Energy) {
		return true
	}

	return false
}

// SetEnergy gets a reference to the given InlineResponse200334Energy and assigns it to the Energy field.
func (o *InlineResponse200334Intervals) SetEnergy(v InlineResponse200334Energy) {
	o.Energy = &v
}

func (o InlineResponse200334Intervals) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.StartTs) {
		toSerialize["startTs"] = o.StartTs
	}
	if !isNil(o.EndTs) {
		toSerialize["endTs"] = o.EndTs
	}
	if !isNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	if !isNil(o.Bandwidth) {
		toSerialize["bandwidth"] = o.Bandwidth
	}
	if !isNil(o.Energy) {
		toSerialize["energy"] = o.Energy
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200334Intervals struct {
	value *InlineResponse200334Intervals
	isSet bool
}

func (v NullableInlineResponse200334Intervals) Get() *InlineResponse200334Intervals {
	return v.value
}

func (v *NullableInlineResponse200334Intervals) Set(val *InlineResponse200334Intervals) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200334Intervals) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200334Intervals) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200334Intervals(val *InlineResponse200334Intervals) *NullableInlineResponse200334Intervals {
	return &NullableInlineResponse200334Intervals{value: val, isSet: true}
}

func (v NullableInlineResponse200334Intervals) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200334Intervals) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


