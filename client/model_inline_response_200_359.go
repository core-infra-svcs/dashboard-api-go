/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 02 July, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.60.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200359 struct for InlineResponse200359
type InlineResponse200359 struct {
	// The ID of the Certificate Authority
	CertificateAuthorityId *string `json:"certificateAuthorityId,omitempty"`
	// The status of the Certificate Authority
	Status *string `json:"status,omitempty"`
	// The PEM encoded contents of the Certificate Authority - with newlines as \" \". Contents can be null, if the cert has not yet been generated.
	Contents *string `json:"contents,omitempty"`
}

// NewInlineResponse200359 instantiates a new InlineResponse200359 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200359() *InlineResponse200359 {
	this := InlineResponse200359{}
	return &this
}

// NewInlineResponse200359WithDefaults instantiates a new InlineResponse200359 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200359WithDefaults() *InlineResponse200359 {
	this := InlineResponse200359{}
	return &this
}

// GetCertificateAuthorityId returns the CertificateAuthorityId field value if set, zero value otherwise.
func (o *InlineResponse200359) GetCertificateAuthorityId() string {
	if o == nil || isNil(o.CertificateAuthorityId) {
		var ret string
		return ret
	}
	return *o.CertificateAuthorityId
}

// GetCertificateAuthorityIdOk returns a tuple with the CertificateAuthorityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200359) GetCertificateAuthorityIdOk() (*string, bool) {
	if o == nil || isNil(o.CertificateAuthorityId) {
    return nil, false
	}
	return o.CertificateAuthorityId, true
}

// HasCertificateAuthorityId returns a boolean if a field has been set.
func (o *InlineResponse200359) HasCertificateAuthorityId() bool {
	if o != nil && !isNil(o.CertificateAuthorityId) {
		return true
	}

	return false
}

// SetCertificateAuthorityId gets a reference to the given string and assigns it to the CertificateAuthorityId field.
func (o *InlineResponse200359) SetCertificateAuthorityId(v string) {
	o.CertificateAuthorityId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *InlineResponse200359) GetStatus() string {
	if o == nil || isNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200359) GetStatusOk() (*string, bool) {
	if o == nil || isNil(o.Status) {
    return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *InlineResponse200359) HasStatus() bool {
	if o != nil && !isNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *InlineResponse200359) SetStatus(v string) {
	o.Status = &v
}

// GetContents returns the Contents field value if set, zero value otherwise.
func (o *InlineResponse200359) GetContents() string {
	if o == nil || isNil(o.Contents) {
		var ret string
		return ret
	}
	return *o.Contents
}

// GetContentsOk returns a tuple with the Contents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200359) GetContentsOk() (*string, bool) {
	if o == nil || isNil(o.Contents) {
    return nil, false
	}
	return o.Contents, true
}

// HasContents returns a boolean if a field has been set.
func (o *InlineResponse200359) HasContents() bool {
	if o != nil && !isNil(o.Contents) {
		return true
	}

	return false
}

// SetContents gets a reference to the given string and assigns it to the Contents field.
func (o *InlineResponse200359) SetContents(v string) {
	o.Contents = &v
}

func (o InlineResponse200359) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.CertificateAuthorityId) {
		toSerialize["certificateAuthorityId"] = o.CertificateAuthorityId
	}
	if !isNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !isNil(o.Contents) {
		toSerialize["contents"] = o.Contents
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200359 struct {
	value *InlineResponse200359
	isSet bool
}

func (v NullableInlineResponse200359) Get() *InlineResponse200359 {
	return v.value
}

func (v *NullableInlineResponse200359) Set(val *InlineResponse200359) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200359) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200359) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200359(val *InlineResponse200359) *NullableInlineResponse200359 {
	return &NullableInlineResponse200359{value: val, isSet: true}
}

func (v NullableInlineResponse200359) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200359) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


