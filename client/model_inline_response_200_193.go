/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 February, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.55.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200193 struct for InlineResponse200193
type InlineResponse200193 struct {
	// The name of the new profile. Must be unique.
	Id *string `json:"id,omitempty"`
	// The network ID of the RF Profile
	NetworkId *string `json:"networkId,omitempty"`
	// The name of the new profile. Must be unique. This param is required on creation.
	Name *string `json:"name,omitempty"`
	// Steers client to best available access point. Can be either true or false. Defaults to true.
	ClientBalancingEnabled *bool `json:"clientBalancingEnabled,omitempty"`
	// Minimum bitrate can be set to either 'band' or 'ssid'. Defaults to band.
	MinBitrateType *string `json:"minBitrateType,omitempty"`
	// Band selection can be set to either 'ssid' or 'ap'. This param is required on creation.
	BandSelectionType *string `json:"bandSelectionType,omitempty"`
	ApBandSettings *InlineResponse200193ApBandSettings `json:"apBandSettings,omitempty"`
	TwoFourGhzSettings *InlineResponse200193TwoFourGhzSettings `json:"twoFourGhzSettings,omitempty"`
	FiveGhzSettings *InlineResponse200193FiveGhzSettings `json:"fiveGhzSettings,omitempty"`
	SixGhzSettings *InlineResponse200193SixGhzSettings `json:"sixGhzSettings,omitempty"`
	Transmission *InlineResponse200193Transmission `json:"transmission,omitempty"`
	PerSsidSettings *InlineResponse200193PerSsidSettings `json:"perSsidSettings,omitempty"`
	// Set this profile as the default indoor rf profile. If the profile ID is one of 'indoor' or 'outdoor',   then a new profile will be created from the respective ID and set as the default
	IsIndoorDefault *bool `json:"isIndoorDefault,omitempty"`
	// Set this profile as the default outdoor rf profile. If the profile ID is one of 'indoor' or 'outdoor',   then a new profile will be created from the respective ID and set as the default
	IsOutdoorDefault *bool `json:"isOutdoorDefault,omitempty"`
}

// NewInlineResponse200193 instantiates a new InlineResponse200193 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200193() *InlineResponse200193 {
	this := InlineResponse200193{}
	return &this
}

// NewInlineResponse200193WithDefaults instantiates a new InlineResponse200193 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200193WithDefaults() *InlineResponse200193 {
	this := InlineResponse200193{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *InlineResponse200193) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200193) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *InlineResponse200193) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *InlineResponse200193) SetId(v string) {
	o.Id = &v
}

// GetNetworkId returns the NetworkId field value if set, zero value otherwise.
func (o *InlineResponse200193) GetNetworkId() string {
	if o == nil || isNil(o.NetworkId) {
		var ret string
		return ret
	}
	return *o.NetworkId
}

// GetNetworkIdOk returns a tuple with the NetworkId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200193) GetNetworkIdOk() (*string, bool) {
	if o == nil || isNil(o.NetworkId) {
    return nil, false
	}
	return o.NetworkId, true
}

// HasNetworkId returns a boolean if a field has been set.
func (o *InlineResponse200193) HasNetworkId() bool {
	if o != nil && !isNil(o.NetworkId) {
		return true
	}

	return false
}

// SetNetworkId gets a reference to the given string and assigns it to the NetworkId field.
func (o *InlineResponse200193) SetNetworkId(v string) {
	o.NetworkId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *InlineResponse200193) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200193) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
    return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *InlineResponse200193) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *InlineResponse200193) SetName(v string) {
	o.Name = &v
}

// GetClientBalancingEnabled returns the ClientBalancingEnabled field value if set, zero value otherwise.
func (o *InlineResponse200193) GetClientBalancingEnabled() bool {
	if o == nil || isNil(o.ClientBalancingEnabled) {
		var ret bool
		return ret
	}
	return *o.ClientBalancingEnabled
}

// GetClientBalancingEnabledOk returns a tuple with the ClientBalancingEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200193) GetClientBalancingEnabledOk() (*bool, bool) {
	if o == nil || isNil(o.ClientBalancingEnabled) {
    return nil, false
	}
	return o.ClientBalancingEnabled, true
}

// HasClientBalancingEnabled returns a boolean if a field has been set.
func (o *InlineResponse200193) HasClientBalancingEnabled() bool {
	if o != nil && !isNil(o.ClientBalancingEnabled) {
		return true
	}

	return false
}

// SetClientBalancingEnabled gets a reference to the given bool and assigns it to the ClientBalancingEnabled field.
func (o *InlineResponse200193) SetClientBalancingEnabled(v bool) {
	o.ClientBalancingEnabled = &v
}

// GetMinBitrateType returns the MinBitrateType field value if set, zero value otherwise.
func (o *InlineResponse200193) GetMinBitrateType() string {
	if o == nil || isNil(o.MinBitrateType) {
		var ret string
		return ret
	}
	return *o.MinBitrateType
}

// GetMinBitrateTypeOk returns a tuple with the MinBitrateType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200193) GetMinBitrateTypeOk() (*string, bool) {
	if o == nil || isNil(o.MinBitrateType) {
    return nil, false
	}
	return o.MinBitrateType, true
}

// HasMinBitrateType returns a boolean if a field has been set.
func (o *InlineResponse200193) HasMinBitrateType() bool {
	if o != nil && !isNil(o.MinBitrateType) {
		return true
	}

	return false
}

// SetMinBitrateType gets a reference to the given string and assigns it to the MinBitrateType field.
func (o *InlineResponse200193) SetMinBitrateType(v string) {
	o.MinBitrateType = &v
}

// GetBandSelectionType returns the BandSelectionType field value if set, zero value otherwise.
func (o *InlineResponse200193) GetBandSelectionType() string {
	if o == nil || isNil(o.BandSelectionType) {
		var ret string
		return ret
	}
	return *o.BandSelectionType
}

// GetBandSelectionTypeOk returns a tuple with the BandSelectionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200193) GetBandSelectionTypeOk() (*string, bool) {
	if o == nil || isNil(o.BandSelectionType) {
    return nil, false
	}
	return o.BandSelectionType, true
}

// HasBandSelectionType returns a boolean if a field has been set.
func (o *InlineResponse200193) HasBandSelectionType() bool {
	if o != nil && !isNil(o.BandSelectionType) {
		return true
	}

	return false
}

// SetBandSelectionType gets a reference to the given string and assigns it to the BandSelectionType field.
func (o *InlineResponse200193) SetBandSelectionType(v string) {
	o.BandSelectionType = &v
}

// GetApBandSettings returns the ApBandSettings field value if set, zero value otherwise.
func (o *InlineResponse200193) GetApBandSettings() InlineResponse200193ApBandSettings {
	if o == nil || isNil(o.ApBandSettings) {
		var ret InlineResponse200193ApBandSettings
		return ret
	}
	return *o.ApBandSettings
}

// GetApBandSettingsOk returns a tuple with the ApBandSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200193) GetApBandSettingsOk() (*InlineResponse200193ApBandSettings, bool) {
	if o == nil || isNil(o.ApBandSettings) {
    return nil, false
	}
	return o.ApBandSettings, true
}

// HasApBandSettings returns a boolean if a field has been set.
func (o *InlineResponse200193) HasApBandSettings() bool {
	if o != nil && !isNil(o.ApBandSettings) {
		return true
	}

	return false
}

// SetApBandSettings gets a reference to the given InlineResponse200193ApBandSettings and assigns it to the ApBandSettings field.
func (o *InlineResponse200193) SetApBandSettings(v InlineResponse200193ApBandSettings) {
	o.ApBandSettings = &v
}

// GetTwoFourGhzSettings returns the TwoFourGhzSettings field value if set, zero value otherwise.
func (o *InlineResponse200193) GetTwoFourGhzSettings() InlineResponse200193TwoFourGhzSettings {
	if o == nil || isNil(o.TwoFourGhzSettings) {
		var ret InlineResponse200193TwoFourGhzSettings
		return ret
	}
	return *o.TwoFourGhzSettings
}

// GetTwoFourGhzSettingsOk returns a tuple with the TwoFourGhzSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200193) GetTwoFourGhzSettingsOk() (*InlineResponse200193TwoFourGhzSettings, bool) {
	if o == nil || isNil(o.TwoFourGhzSettings) {
    return nil, false
	}
	return o.TwoFourGhzSettings, true
}

// HasTwoFourGhzSettings returns a boolean if a field has been set.
func (o *InlineResponse200193) HasTwoFourGhzSettings() bool {
	if o != nil && !isNil(o.TwoFourGhzSettings) {
		return true
	}

	return false
}

// SetTwoFourGhzSettings gets a reference to the given InlineResponse200193TwoFourGhzSettings and assigns it to the TwoFourGhzSettings field.
func (o *InlineResponse200193) SetTwoFourGhzSettings(v InlineResponse200193TwoFourGhzSettings) {
	o.TwoFourGhzSettings = &v
}

// GetFiveGhzSettings returns the FiveGhzSettings field value if set, zero value otherwise.
func (o *InlineResponse200193) GetFiveGhzSettings() InlineResponse200193FiveGhzSettings {
	if o == nil || isNil(o.FiveGhzSettings) {
		var ret InlineResponse200193FiveGhzSettings
		return ret
	}
	return *o.FiveGhzSettings
}

// GetFiveGhzSettingsOk returns a tuple with the FiveGhzSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200193) GetFiveGhzSettingsOk() (*InlineResponse200193FiveGhzSettings, bool) {
	if o == nil || isNil(o.FiveGhzSettings) {
    return nil, false
	}
	return o.FiveGhzSettings, true
}

// HasFiveGhzSettings returns a boolean if a field has been set.
func (o *InlineResponse200193) HasFiveGhzSettings() bool {
	if o != nil && !isNil(o.FiveGhzSettings) {
		return true
	}

	return false
}

// SetFiveGhzSettings gets a reference to the given InlineResponse200193FiveGhzSettings and assigns it to the FiveGhzSettings field.
func (o *InlineResponse200193) SetFiveGhzSettings(v InlineResponse200193FiveGhzSettings) {
	o.FiveGhzSettings = &v
}

// GetSixGhzSettings returns the SixGhzSettings field value if set, zero value otherwise.
func (o *InlineResponse200193) GetSixGhzSettings() InlineResponse200193SixGhzSettings {
	if o == nil || isNil(o.SixGhzSettings) {
		var ret InlineResponse200193SixGhzSettings
		return ret
	}
	return *o.SixGhzSettings
}

// GetSixGhzSettingsOk returns a tuple with the SixGhzSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200193) GetSixGhzSettingsOk() (*InlineResponse200193SixGhzSettings, bool) {
	if o == nil || isNil(o.SixGhzSettings) {
    return nil, false
	}
	return o.SixGhzSettings, true
}

// HasSixGhzSettings returns a boolean if a field has been set.
func (o *InlineResponse200193) HasSixGhzSettings() bool {
	if o != nil && !isNil(o.SixGhzSettings) {
		return true
	}

	return false
}

// SetSixGhzSettings gets a reference to the given InlineResponse200193SixGhzSettings and assigns it to the SixGhzSettings field.
func (o *InlineResponse200193) SetSixGhzSettings(v InlineResponse200193SixGhzSettings) {
	o.SixGhzSettings = &v
}

// GetTransmission returns the Transmission field value if set, zero value otherwise.
func (o *InlineResponse200193) GetTransmission() InlineResponse200193Transmission {
	if o == nil || isNil(o.Transmission) {
		var ret InlineResponse200193Transmission
		return ret
	}
	return *o.Transmission
}

// GetTransmissionOk returns a tuple with the Transmission field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200193) GetTransmissionOk() (*InlineResponse200193Transmission, bool) {
	if o == nil || isNil(o.Transmission) {
    return nil, false
	}
	return o.Transmission, true
}

// HasTransmission returns a boolean if a field has been set.
func (o *InlineResponse200193) HasTransmission() bool {
	if o != nil && !isNil(o.Transmission) {
		return true
	}

	return false
}

// SetTransmission gets a reference to the given InlineResponse200193Transmission and assigns it to the Transmission field.
func (o *InlineResponse200193) SetTransmission(v InlineResponse200193Transmission) {
	o.Transmission = &v
}

// GetPerSsidSettings returns the PerSsidSettings field value if set, zero value otherwise.
func (o *InlineResponse200193) GetPerSsidSettings() InlineResponse200193PerSsidSettings {
	if o == nil || isNil(o.PerSsidSettings) {
		var ret InlineResponse200193PerSsidSettings
		return ret
	}
	return *o.PerSsidSettings
}

// GetPerSsidSettingsOk returns a tuple with the PerSsidSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200193) GetPerSsidSettingsOk() (*InlineResponse200193PerSsidSettings, bool) {
	if o == nil || isNil(o.PerSsidSettings) {
    return nil, false
	}
	return o.PerSsidSettings, true
}

// HasPerSsidSettings returns a boolean if a field has been set.
func (o *InlineResponse200193) HasPerSsidSettings() bool {
	if o != nil && !isNil(o.PerSsidSettings) {
		return true
	}

	return false
}

// SetPerSsidSettings gets a reference to the given InlineResponse200193PerSsidSettings and assigns it to the PerSsidSettings field.
func (o *InlineResponse200193) SetPerSsidSettings(v InlineResponse200193PerSsidSettings) {
	o.PerSsidSettings = &v
}

// GetIsIndoorDefault returns the IsIndoorDefault field value if set, zero value otherwise.
func (o *InlineResponse200193) GetIsIndoorDefault() bool {
	if o == nil || isNil(o.IsIndoorDefault) {
		var ret bool
		return ret
	}
	return *o.IsIndoorDefault
}

// GetIsIndoorDefaultOk returns a tuple with the IsIndoorDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200193) GetIsIndoorDefaultOk() (*bool, bool) {
	if o == nil || isNil(o.IsIndoorDefault) {
    return nil, false
	}
	return o.IsIndoorDefault, true
}

// HasIsIndoorDefault returns a boolean if a field has been set.
func (o *InlineResponse200193) HasIsIndoorDefault() bool {
	if o != nil && !isNil(o.IsIndoorDefault) {
		return true
	}

	return false
}

// SetIsIndoorDefault gets a reference to the given bool and assigns it to the IsIndoorDefault field.
func (o *InlineResponse200193) SetIsIndoorDefault(v bool) {
	o.IsIndoorDefault = &v
}

// GetIsOutdoorDefault returns the IsOutdoorDefault field value if set, zero value otherwise.
func (o *InlineResponse200193) GetIsOutdoorDefault() bool {
	if o == nil || isNil(o.IsOutdoorDefault) {
		var ret bool
		return ret
	}
	return *o.IsOutdoorDefault
}

// GetIsOutdoorDefaultOk returns a tuple with the IsOutdoorDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200193) GetIsOutdoorDefaultOk() (*bool, bool) {
	if o == nil || isNil(o.IsOutdoorDefault) {
    return nil, false
	}
	return o.IsOutdoorDefault, true
}

// HasIsOutdoorDefault returns a boolean if a field has been set.
func (o *InlineResponse200193) HasIsOutdoorDefault() bool {
	if o != nil && !isNil(o.IsOutdoorDefault) {
		return true
	}

	return false
}

// SetIsOutdoorDefault gets a reference to the given bool and assigns it to the IsOutdoorDefault field.
func (o *InlineResponse200193) SetIsOutdoorDefault(v bool) {
	o.IsOutdoorDefault = &v
}

func (o InlineResponse200193) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.NetworkId) {
		toSerialize["networkId"] = o.NetworkId
	}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.ClientBalancingEnabled) {
		toSerialize["clientBalancingEnabled"] = o.ClientBalancingEnabled
	}
	if !isNil(o.MinBitrateType) {
		toSerialize["minBitrateType"] = o.MinBitrateType
	}
	if !isNil(o.BandSelectionType) {
		toSerialize["bandSelectionType"] = o.BandSelectionType
	}
	if !isNil(o.ApBandSettings) {
		toSerialize["apBandSettings"] = o.ApBandSettings
	}
	if !isNil(o.TwoFourGhzSettings) {
		toSerialize["twoFourGhzSettings"] = o.TwoFourGhzSettings
	}
	if !isNil(o.FiveGhzSettings) {
		toSerialize["fiveGhzSettings"] = o.FiveGhzSettings
	}
	if !isNil(o.SixGhzSettings) {
		toSerialize["sixGhzSettings"] = o.SixGhzSettings
	}
	if !isNil(o.Transmission) {
		toSerialize["transmission"] = o.Transmission
	}
	if !isNil(o.PerSsidSettings) {
		toSerialize["perSsidSettings"] = o.PerSsidSettings
	}
	if !isNil(o.IsIndoorDefault) {
		toSerialize["isIndoorDefault"] = o.IsIndoorDefault
	}
	if !isNil(o.IsOutdoorDefault) {
		toSerialize["isOutdoorDefault"] = o.IsOutdoorDefault
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200193 struct {
	value *InlineResponse200193
	isSet bool
}

func (v NullableInlineResponse200193) Get() *InlineResponse200193 {
	return v.value
}

func (v *NullableInlineResponse200193) Set(val *InlineResponse200193) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200193) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200193) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200193(val *InlineResponse200193) *NullableInlineResponse200193 {
	return &NullableInlineResponse200193{value: val, isSet: true}
}

func (v NullableInlineResponse200193) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200193) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


