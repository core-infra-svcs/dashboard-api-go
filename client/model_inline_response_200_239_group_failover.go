/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 06 August, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.61.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200239GroupFailover [optional] Contains the failover configuration for the group.
type InlineResponse200239GroupFailover struct {
	// [optional] When both primary and backup tunnels are down, direct traffic to the internet. Traffic will be routed via the WAN
	DirectToInternet *bool `json:"directToInternet,omitempty"`
}

// NewInlineResponse200239GroupFailover instantiates a new InlineResponse200239GroupFailover object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200239GroupFailover() *InlineResponse200239GroupFailover {
	this := InlineResponse200239GroupFailover{}
	return &this
}

// NewInlineResponse200239GroupFailoverWithDefaults instantiates a new InlineResponse200239GroupFailover object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200239GroupFailoverWithDefaults() *InlineResponse200239GroupFailover {
	this := InlineResponse200239GroupFailover{}
	return &this
}

// GetDirectToInternet returns the DirectToInternet field value if set, zero value otherwise.
func (o *InlineResponse200239GroupFailover) GetDirectToInternet() bool {
	if o == nil || isNil(o.DirectToInternet) {
		var ret bool
		return ret
	}
	return *o.DirectToInternet
}

// GetDirectToInternetOk returns a tuple with the DirectToInternet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200239GroupFailover) GetDirectToInternetOk() (*bool, bool) {
	if o == nil || isNil(o.DirectToInternet) {
    return nil, false
	}
	return o.DirectToInternet, true
}

// HasDirectToInternet returns a boolean if a field has been set.
func (o *InlineResponse200239GroupFailover) HasDirectToInternet() bool {
	if o != nil && !isNil(o.DirectToInternet) {
		return true
	}

	return false
}

// SetDirectToInternet gets a reference to the given bool and assigns it to the DirectToInternet field.
func (o *InlineResponse200239GroupFailover) SetDirectToInternet(v bool) {
	o.DirectToInternet = &v
}

func (o InlineResponse200239GroupFailover) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.DirectToInternet) {
		toSerialize["directToInternet"] = o.DirectToInternet
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200239GroupFailover struct {
	value *InlineResponse200239GroupFailover
	isSet bool
}

func (v NullableInlineResponse200239GroupFailover) Get() *InlineResponse200239GroupFailover {
	return v.value
}

func (v *NullableInlineResponse200239GroupFailover) Set(val *InlineResponse200239GroupFailover) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200239GroupFailover) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200239GroupFailover) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200239GroupFailover(val *InlineResponse200239GroupFailover) *NullableInlineResponse200239GroupFailover {
	return &NullableInlineResponse200239GroupFailover{value: val, isSet: true}
}

func (v NullableInlineResponse200239GroupFailover) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200239GroupFailover) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


