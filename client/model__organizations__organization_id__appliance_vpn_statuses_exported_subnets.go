/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 01 October, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.63.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// OrganizationsOrganizationIdApplianceVpnStatusesExportedSubnets struct for OrganizationsOrganizationIdApplianceVpnStatusesExportedSubnets
type OrganizationsOrganizationIdApplianceVpnStatusesExportedSubnets struct {
	// Subnet
	Subnet *string `json:"subnet,omitempty"`
	// Name of the subnet
	Name *string `json:"name,omitempty"`
}

// NewOrganizationsOrganizationIdApplianceVpnStatusesExportedSubnets instantiates a new OrganizationsOrganizationIdApplianceVpnStatusesExportedSubnets object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationsOrganizationIdApplianceVpnStatusesExportedSubnets() *OrganizationsOrganizationIdApplianceVpnStatusesExportedSubnets {
	this := OrganizationsOrganizationIdApplianceVpnStatusesExportedSubnets{}
	return &this
}

// NewOrganizationsOrganizationIdApplianceVpnStatusesExportedSubnetsWithDefaults instantiates a new OrganizationsOrganizationIdApplianceVpnStatusesExportedSubnets object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationsOrganizationIdApplianceVpnStatusesExportedSubnetsWithDefaults() *OrganizationsOrganizationIdApplianceVpnStatusesExportedSubnets {
	this := OrganizationsOrganizationIdApplianceVpnStatusesExportedSubnets{}
	return &this
}

// GetSubnet returns the Subnet field value if set, zero value otherwise.
func (o *OrganizationsOrganizationIdApplianceVpnStatusesExportedSubnets) GetSubnet() string {
	if o == nil || isNil(o.Subnet) {
		var ret string
		return ret
	}
	return *o.Subnet
}

// GetSubnetOk returns a tuple with the Subnet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationsOrganizationIdApplianceVpnStatusesExportedSubnets) GetSubnetOk() (*string, bool) {
	if o == nil || isNil(o.Subnet) {
    return nil, false
	}
	return o.Subnet, true
}

// HasSubnet returns a boolean if a field has been set.
func (o *OrganizationsOrganizationIdApplianceVpnStatusesExportedSubnets) HasSubnet() bool {
	if o != nil && !isNil(o.Subnet) {
		return true
	}

	return false
}

// SetSubnet gets a reference to the given string and assigns it to the Subnet field.
func (o *OrganizationsOrganizationIdApplianceVpnStatusesExportedSubnets) SetSubnet(v string) {
	o.Subnet = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *OrganizationsOrganizationIdApplianceVpnStatusesExportedSubnets) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationsOrganizationIdApplianceVpnStatusesExportedSubnets) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
    return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *OrganizationsOrganizationIdApplianceVpnStatusesExportedSubnets) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *OrganizationsOrganizationIdApplianceVpnStatusesExportedSubnets) SetName(v string) {
	o.Name = &v
}

func (o OrganizationsOrganizationIdApplianceVpnStatusesExportedSubnets) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Subnet) {
		toSerialize["subnet"] = o.Subnet
	}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableOrganizationsOrganizationIdApplianceVpnStatusesExportedSubnets struct {
	value *OrganizationsOrganizationIdApplianceVpnStatusesExportedSubnets
	isSet bool
}

func (v NullableOrganizationsOrganizationIdApplianceVpnStatusesExportedSubnets) Get() *OrganizationsOrganizationIdApplianceVpnStatusesExportedSubnets {
	return v.value
}

func (v *NullableOrganizationsOrganizationIdApplianceVpnStatusesExportedSubnets) Set(val *OrganizationsOrganizationIdApplianceVpnStatusesExportedSubnets) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationsOrganizationIdApplianceVpnStatusesExportedSubnets) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationsOrganizationIdApplianceVpnStatusesExportedSubnets) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationsOrganizationIdApplianceVpnStatusesExportedSubnets(val *OrganizationsOrganizationIdApplianceVpnStatusesExportedSubnets) *NullableOrganizationsOrganizationIdApplianceVpnStatusesExportedSubnets {
	return &NullableOrganizationsOrganizationIdApplianceVpnStatusesExportedSubnets{value: val, isSet: true}
}

func (v NullableOrganizationsOrganizationIdApplianceVpnStatusesExportedSubnets) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationsOrganizationIdApplianceVpnStatusesExportedSubnets) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


