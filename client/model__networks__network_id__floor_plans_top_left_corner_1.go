/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 03 September, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.62.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// NetworksNetworkIdFloorPlansTopLeftCorner1 The longitude and latitude of the top left corner of your floor plan.
type NetworksNetworkIdFloorPlansTopLeftCorner1 struct {
	// Latitude
	Lat float32 `json:"lat"`
	// Longitude
	Lng float32 `json:"lng"`
}

// NewNetworksNetworkIdFloorPlansTopLeftCorner1 instantiates a new NetworksNetworkIdFloorPlansTopLeftCorner1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworksNetworkIdFloorPlansTopLeftCorner1(lat float32, lng float32) *NetworksNetworkIdFloorPlansTopLeftCorner1 {
	this := NetworksNetworkIdFloorPlansTopLeftCorner1{}
	this.Lat = lat
	this.Lng = lng
	return &this
}

// NewNetworksNetworkIdFloorPlansTopLeftCorner1WithDefaults instantiates a new NetworksNetworkIdFloorPlansTopLeftCorner1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworksNetworkIdFloorPlansTopLeftCorner1WithDefaults() *NetworksNetworkIdFloorPlansTopLeftCorner1 {
	this := NetworksNetworkIdFloorPlansTopLeftCorner1{}
	return &this
}

// GetLat returns the Lat field value
func (o *NetworksNetworkIdFloorPlansTopLeftCorner1) GetLat() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Lat
}

// GetLatOk returns a tuple with the Lat field value
// and a boolean to check if the value has been set.
func (o *NetworksNetworkIdFloorPlansTopLeftCorner1) GetLatOk() (*float32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Lat, true
}

// SetLat sets field value
func (o *NetworksNetworkIdFloorPlansTopLeftCorner1) SetLat(v float32) {
	o.Lat = v
}

// GetLng returns the Lng field value
func (o *NetworksNetworkIdFloorPlansTopLeftCorner1) GetLng() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Lng
}

// GetLngOk returns a tuple with the Lng field value
// and a boolean to check if the value has been set.
func (o *NetworksNetworkIdFloorPlansTopLeftCorner1) GetLngOk() (*float32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Lng, true
}

// SetLng sets field value
func (o *NetworksNetworkIdFloorPlansTopLeftCorner1) SetLng(v float32) {
	o.Lng = v
}

func (o NetworksNetworkIdFloorPlansTopLeftCorner1) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["lat"] = o.Lat
	}
	if true {
		toSerialize["lng"] = o.Lng
	}
	return json.Marshal(toSerialize)
}

type NullableNetworksNetworkIdFloorPlansTopLeftCorner1 struct {
	value *NetworksNetworkIdFloorPlansTopLeftCorner1
	isSet bool
}

func (v NullableNetworksNetworkIdFloorPlansTopLeftCorner1) Get() *NetworksNetworkIdFloorPlansTopLeftCorner1 {
	return v.value
}

func (v *NullableNetworksNetworkIdFloorPlansTopLeftCorner1) Set(val *NetworksNetworkIdFloorPlansTopLeftCorner1) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworksNetworkIdFloorPlansTopLeftCorner1) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworksNetworkIdFloorPlansTopLeftCorner1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworksNetworkIdFloorPlansTopLeftCorner1(val *NetworksNetworkIdFloorPlansTopLeftCorner1) *NullableNetworksNetworkIdFloorPlansTopLeftCorner1 {
	return &NullableNetworksNetworkIdFloorPlansTopLeftCorner1{value: val, isSet: true}
}

func (v NullableNetworksNetworkIdFloorPlansTopLeftCorner1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworksNetworkIdFloorPlansTopLeftCorner1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


