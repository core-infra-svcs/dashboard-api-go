/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 02 July, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.60.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineObject150 struct for InlineObject150
type InlineObject150 struct {
	// The VLAN of the incoming packet. A null value will match any VLAN.
	Vlan NullableInt32 `json:"vlan"`
	// The protocol of the incoming packet. Default value is \"ANY\"
	Protocol *string `json:"protocol,omitempty"`
	// The source port of the incoming packet. Applicable only if protocol is TCP or UDP.
	SrcPort NullableInt32 `json:"srcPort,omitempty"`
	// The source port range of the incoming packet. Applicable only if protocol is set to TCP or UDP.
	SrcPortRange *string `json:"srcPortRange,omitempty"`
	// The destination port of the incoming packet. Applicable only if protocol is TCP or UDP.
	DstPort NullableInt32 `json:"dstPort,omitempty"`
	// The destination port range of the incoming packet. Applicable only if protocol is set to TCP or UDP.
	DstPortRange *string `json:"dstPortRange,omitempty"`
	// DSCP tag for the incoming packet. Set this to -1 to trust incoming DSCP. Default value is 0
	Dscp *int32 `json:"dscp,omitempty"`
}

// NewInlineObject150 instantiates a new InlineObject150 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject150(vlan NullableInt32) *InlineObject150 {
	this := InlineObject150{}
	this.Vlan = vlan
	return &this
}

// NewInlineObject150WithDefaults instantiates a new InlineObject150 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject150WithDefaults() *InlineObject150 {
	this := InlineObject150{}
	return &this
}

// GetVlan returns the Vlan field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *InlineObject150) GetVlan() int32 {
	if o == nil || o.Vlan.Get() == nil {
		var ret int32
		return ret
	}

	return *o.Vlan.Get()
}

// GetVlanOk returns a tuple with the Vlan field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject150) GetVlanOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return o.Vlan.Get(), o.Vlan.IsSet()
}

// SetVlan sets field value
func (o *InlineObject150) SetVlan(v int32) {
	o.Vlan.Set(&v)
}

// GetProtocol returns the Protocol field value if set, zero value otherwise.
func (o *InlineObject150) GetProtocol() string {
	if o == nil || isNil(o.Protocol) {
		var ret string
		return ret
	}
	return *o.Protocol
}

// GetProtocolOk returns a tuple with the Protocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject150) GetProtocolOk() (*string, bool) {
	if o == nil || isNil(o.Protocol) {
    return nil, false
	}
	return o.Protocol, true
}

// HasProtocol returns a boolean if a field has been set.
func (o *InlineObject150) HasProtocol() bool {
	if o != nil && !isNil(o.Protocol) {
		return true
	}

	return false
}

// SetProtocol gets a reference to the given string and assigns it to the Protocol field.
func (o *InlineObject150) SetProtocol(v string) {
	o.Protocol = &v
}

// GetSrcPort returns the SrcPort field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject150) GetSrcPort() int32 {
	if o == nil || isNil(o.SrcPort.Get()) {
		var ret int32
		return ret
	}
	return *o.SrcPort.Get()
}

// GetSrcPortOk returns a tuple with the SrcPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject150) GetSrcPortOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return o.SrcPort.Get(), o.SrcPort.IsSet()
}

// HasSrcPort returns a boolean if a field has been set.
func (o *InlineObject150) HasSrcPort() bool {
	if o != nil && o.SrcPort.IsSet() {
		return true
	}

	return false
}

// SetSrcPort gets a reference to the given NullableInt32 and assigns it to the SrcPort field.
func (o *InlineObject150) SetSrcPort(v int32) {
	o.SrcPort.Set(&v)
}
// SetSrcPortNil sets the value for SrcPort to be an explicit nil
func (o *InlineObject150) SetSrcPortNil() {
	o.SrcPort.Set(nil)
}

// UnsetSrcPort ensures that no value is present for SrcPort, not even an explicit nil
func (o *InlineObject150) UnsetSrcPort() {
	o.SrcPort.Unset()
}

// GetSrcPortRange returns the SrcPortRange field value if set, zero value otherwise.
func (o *InlineObject150) GetSrcPortRange() string {
	if o == nil || isNil(o.SrcPortRange) {
		var ret string
		return ret
	}
	return *o.SrcPortRange
}

// GetSrcPortRangeOk returns a tuple with the SrcPortRange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject150) GetSrcPortRangeOk() (*string, bool) {
	if o == nil || isNil(o.SrcPortRange) {
    return nil, false
	}
	return o.SrcPortRange, true
}

// HasSrcPortRange returns a boolean if a field has been set.
func (o *InlineObject150) HasSrcPortRange() bool {
	if o != nil && !isNil(o.SrcPortRange) {
		return true
	}

	return false
}

// SetSrcPortRange gets a reference to the given string and assigns it to the SrcPortRange field.
func (o *InlineObject150) SetSrcPortRange(v string) {
	o.SrcPortRange = &v
}

// GetDstPort returns the DstPort field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject150) GetDstPort() int32 {
	if o == nil || isNil(o.DstPort.Get()) {
		var ret int32
		return ret
	}
	return *o.DstPort.Get()
}

// GetDstPortOk returns a tuple with the DstPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject150) GetDstPortOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return o.DstPort.Get(), o.DstPort.IsSet()
}

// HasDstPort returns a boolean if a field has been set.
func (o *InlineObject150) HasDstPort() bool {
	if o != nil && o.DstPort.IsSet() {
		return true
	}

	return false
}

// SetDstPort gets a reference to the given NullableInt32 and assigns it to the DstPort field.
func (o *InlineObject150) SetDstPort(v int32) {
	o.DstPort.Set(&v)
}
// SetDstPortNil sets the value for DstPort to be an explicit nil
func (o *InlineObject150) SetDstPortNil() {
	o.DstPort.Set(nil)
}

// UnsetDstPort ensures that no value is present for DstPort, not even an explicit nil
func (o *InlineObject150) UnsetDstPort() {
	o.DstPort.Unset()
}

// GetDstPortRange returns the DstPortRange field value if set, zero value otherwise.
func (o *InlineObject150) GetDstPortRange() string {
	if o == nil || isNil(o.DstPortRange) {
		var ret string
		return ret
	}
	return *o.DstPortRange
}

// GetDstPortRangeOk returns a tuple with the DstPortRange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject150) GetDstPortRangeOk() (*string, bool) {
	if o == nil || isNil(o.DstPortRange) {
    return nil, false
	}
	return o.DstPortRange, true
}

// HasDstPortRange returns a boolean if a field has been set.
func (o *InlineObject150) HasDstPortRange() bool {
	if o != nil && !isNil(o.DstPortRange) {
		return true
	}

	return false
}

// SetDstPortRange gets a reference to the given string and assigns it to the DstPortRange field.
func (o *InlineObject150) SetDstPortRange(v string) {
	o.DstPortRange = &v
}

// GetDscp returns the Dscp field value if set, zero value otherwise.
func (o *InlineObject150) GetDscp() int32 {
	if o == nil || isNil(o.Dscp) {
		var ret int32
		return ret
	}
	return *o.Dscp
}

// GetDscpOk returns a tuple with the Dscp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject150) GetDscpOk() (*int32, bool) {
	if o == nil || isNil(o.Dscp) {
    return nil, false
	}
	return o.Dscp, true
}

// HasDscp returns a boolean if a field has been set.
func (o *InlineObject150) HasDscp() bool {
	if o != nil && !isNil(o.Dscp) {
		return true
	}

	return false
}

// SetDscp gets a reference to the given int32 and assigns it to the Dscp field.
func (o *InlineObject150) SetDscp(v int32) {
	o.Dscp = &v
}

func (o InlineObject150) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["vlan"] = o.Vlan.Get()
	}
	if !isNil(o.Protocol) {
		toSerialize["protocol"] = o.Protocol
	}
	if o.SrcPort.IsSet() {
		toSerialize["srcPort"] = o.SrcPort.Get()
	}
	if !isNil(o.SrcPortRange) {
		toSerialize["srcPortRange"] = o.SrcPortRange
	}
	if o.DstPort.IsSet() {
		toSerialize["dstPort"] = o.DstPort.Get()
	}
	if !isNil(o.DstPortRange) {
		toSerialize["dstPortRange"] = o.DstPortRange
	}
	if !isNil(o.Dscp) {
		toSerialize["dscp"] = o.Dscp
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject150 struct {
	value *InlineObject150
	isSet bool
}

func (v NullableInlineObject150) Get() *InlineObject150 {
	return v.value
}

func (v *NullableInlineObject150) Set(val *InlineObject150) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject150) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject150) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject150(val *InlineObject150) *NullableInlineObject150 {
	return &NullableInlineObject150{value: val, isSet: true}
}

func (v NullableInlineObject150) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject150) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


