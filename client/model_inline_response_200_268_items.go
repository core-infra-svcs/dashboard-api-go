/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 07 May, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.58.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200268Items struct for InlineResponse200268Items
type InlineResponse200268Items struct {
	// Id of packet capture file
	CaptureId *string `json:"captureId,omitempty"`
	Network *InlineResponse200268Network `json:"network,omitempty"`
	// Device(s) of the packet capture file
	Devices []map[string]interface{} `json:"devices,omitempty"`
	Device *InlineResponse200268Device `json:"device,omitempty"`
	Admin *InlineResponse200268Admin `json:"admin,omitempty"`
	Client *InlineResponse200268Client `json:"client,omitempty"`
	// Array of device specific details
	Details []InlineResponse200268Details `json:"details,omitempty"`
	// Name of packet capture file
	Name *string `json:"name,omitempty"`
	// Start time of creation of packet capture file
	StartTs *string `json:"startTs,omitempty"`
	// Ports of packet capture file
	Ports *string `json:"ports,omitempty"`
	// Status of packet capture file
	Status *string `json:"status,omitempty"`
	// Error log of packet capture file
	ErrorMessage *string `json:"errorMessage,omitempty"`
	// Destination of packet capture file
	Destination *string `json:"destination,omitempty"`
	// Source of packet capture file
	Process *string `json:"process,omitempty"`
	File *InlineResponse200268File `json:"file,omitempty"`
	// Duration of packet capture file
	Duration *int32 `json:"duration,omitempty"`
	// Filter expression for the packet capture
	FilterExpression *string `json:"filterExpression,omitempty"`
	Counts *InlineResponse200268Counts `json:"counts,omitempty"`
	// Interface of the packet capture
	Interface *string `json:"interface,omitempty"`
}

// NewInlineResponse200268Items instantiates a new InlineResponse200268Items object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200268Items() *InlineResponse200268Items {
	this := InlineResponse200268Items{}
	return &this
}

// NewInlineResponse200268ItemsWithDefaults instantiates a new InlineResponse200268Items object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200268ItemsWithDefaults() *InlineResponse200268Items {
	this := InlineResponse200268Items{}
	return &this
}

// GetCaptureId returns the CaptureId field value if set, zero value otherwise.
func (o *InlineResponse200268Items) GetCaptureId() string {
	if o == nil || isNil(o.CaptureId) {
		var ret string
		return ret
	}
	return *o.CaptureId
}

// GetCaptureIdOk returns a tuple with the CaptureId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200268Items) GetCaptureIdOk() (*string, bool) {
	if o == nil || isNil(o.CaptureId) {
    return nil, false
	}
	return o.CaptureId, true
}

// HasCaptureId returns a boolean if a field has been set.
func (o *InlineResponse200268Items) HasCaptureId() bool {
	if o != nil && !isNil(o.CaptureId) {
		return true
	}

	return false
}

// SetCaptureId gets a reference to the given string and assigns it to the CaptureId field.
func (o *InlineResponse200268Items) SetCaptureId(v string) {
	o.CaptureId = &v
}

// GetNetwork returns the Network field value if set, zero value otherwise.
func (o *InlineResponse200268Items) GetNetwork() InlineResponse200268Network {
	if o == nil || isNil(o.Network) {
		var ret InlineResponse200268Network
		return ret
	}
	return *o.Network
}

// GetNetworkOk returns a tuple with the Network field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200268Items) GetNetworkOk() (*InlineResponse200268Network, bool) {
	if o == nil || isNil(o.Network) {
    return nil, false
	}
	return o.Network, true
}

// HasNetwork returns a boolean if a field has been set.
func (o *InlineResponse200268Items) HasNetwork() bool {
	if o != nil && !isNil(o.Network) {
		return true
	}

	return false
}

// SetNetwork gets a reference to the given InlineResponse200268Network and assigns it to the Network field.
func (o *InlineResponse200268Items) SetNetwork(v InlineResponse200268Network) {
	o.Network = &v
}

// GetDevices returns the Devices field value if set, zero value otherwise.
func (o *InlineResponse200268Items) GetDevices() []map[string]interface{} {
	if o == nil || isNil(o.Devices) {
		var ret []map[string]interface{}
		return ret
	}
	return o.Devices
}

// GetDevicesOk returns a tuple with the Devices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200268Items) GetDevicesOk() ([]map[string]interface{}, bool) {
	if o == nil || isNil(o.Devices) {
    return nil, false
	}
	return o.Devices, true
}

// HasDevices returns a boolean if a field has been set.
func (o *InlineResponse200268Items) HasDevices() bool {
	if o != nil && !isNil(o.Devices) {
		return true
	}

	return false
}

// SetDevices gets a reference to the given []map[string]interface{} and assigns it to the Devices field.
func (o *InlineResponse200268Items) SetDevices(v []map[string]interface{}) {
	o.Devices = v
}

// GetDevice returns the Device field value if set, zero value otherwise.
func (o *InlineResponse200268Items) GetDevice() InlineResponse200268Device {
	if o == nil || isNil(o.Device) {
		var ret InlineResponse200268Device
		return ret
	}
	return *o.Device
}

// GetDeviceOk returns a tuple with the Device field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200268Items) GetDeviceOk() (*InlineResponse200268Device, bool) {
	if o == nil || isNil(o.Device) {
    return nil, false
	}
	return o.Device, true
}

// HasDevice returns a boolean if a field has been set.
func (o *InlineResponse200268Items) HasDevice() bool {
	if o != nil && !isNil(o.Device) {
		return true
	}

	return false
}

// SetDevice gets a reference to the given InlineResponse200268Device and assigns it to the Device field.
func (o *InlineResponse200268Items) SetDevice(v InlineResponse200268Device) {
	o.Device = &v
}

// GetAdmin returns the Admin field value if set, zero value otherwise.
func (o *InlineResponse200268Items) GetAdmin() InlineResponse200268Admin {
	if o == nil || isNil(o.Admin) {
		var ret InlineResponse200268Admin
		return ret
	}
	return *o.Admin
}

// GetAdminOk returns a tuple with the Admin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200268Items) GetAdminOk() (*InlineResponse200268Admin, bool) {
	if o == nil || isNil(o.Admin) {
    return nil, false
	}
	return o.Admin, true
}

// HasAdmin returns a boolean if a field has been set.
func (o *InlineResponse200268Items) HasAdmin() bool {
	if o != nil && !isNil(o.Admin) {
		return true
	}

	return false
}

// SetAdmin gets a reference to the given InlineResponse200268Admin and assigns it to the Admin field.
func (o *InlineResponse200268Items) SetAdmin(v InlineResponse200268Admin) {
	o.Admin = &v
}

// GetClient returns the Client field value if set, zero value otherwise.
func (o *InlineResponse200268Items) GetClient() InlineResponse200268Client {
	if o == nil || isNil(o.Client) {
		var ret InlineResponse200268Client
		return ret
	}
	return *o.Client
}

// GetClientOk returns a tuple with the Client field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200268Items) GetClientOk() (*InlineResponse200268Client, bool) {
	if o == nil || isNil(o.Client) {
    return nil, false
	}
	return o.Client, true
}

// HasClient returns a boolean if a field has been set.
func (o *InlineResponse200268Items) HasClient() bool {
	if o != nil && !isNil(o.Client) {
		return true
	}

	return false
}

// SetClient gets a reference to the given InlineResponse200268Client and assigns it to the Client field.
func (o *InlineResponse200268Items) SetClient(v InlineResponse200268Client) {
	o.Client = &v
}

// GetDetails returns the Details field value if set, zero value otherwise.
func (o *InlineResponse200268Items) GetDetails() []InlineResponse200268Details {
	if o == nil || isNil(o.Details) {
		var ret []InlineResponse200268Details
		return ret
	}
	return o.Details
}

// GetDetailsOk returns a tuple with the Details field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200268Items) GetDetailsOk() ([]InlineResponse200268Details, bool) {
	if o == nil || isNil(o.Details) {
    return nil, false
	}
	return o.Details, true
}

// HasDetails returns a boolean if a field has been set.
func (o *InlineResponse200268Items) HasDetails() bool {
	if o != nil && !isNil(o.Details) {
		return true
	}

	return false
}

// SetDetails gets a reference to the given []InlineResponse200268Details and assigns it to the Details field.
func (o *InlineResponse200268Items) SetDetails(v []InlineResponse200268Details) {
	o.Details = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *InlineResponse200268Items) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200268Items) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
    return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *InlineResponse200268Items) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *InlineResponse200268Items) SetName(v string) {
	o.Name = &v
}

// GetStartTs returns the StartTs field value if set, zero value otherwise.
func (o *InlineResponse200268Items) GetStartTs() string {
	if o == nil || isNil(o.StartTs) {
		var ret string
		return ret
	}
	return *o.StartTs
}

// GetStartTsOk returns a tuple with the StartTs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200268Items) GetStartTsOk() (*string, bool) {
	if o == nil || isNil(o.StartTs) {
    return nil, false
	}
	return o.StartTs, true
}

// HasStartTs returns a boolean if a field has been set.
func (o *InlineResponse200268Items) HasStartTs() bool {
	if o != nil && !isNil(o.StartTs) {
		return true
	}

	return false
}

// SetStartTs gets a reference to the given string and assigns it to the StartTs field.
func (o *InlineResponse200268Items) SetStartTs(v string) {
	o.StartTs = &v
}

// GetPorts returns the Ports field value if set, zero value otherwise.
func (o *InlineResponse200268Items) GetPorts() string {
	if o == nil || isNil(o.Ports) {
		var ret string
		return ret
	}
	return *o.Ports
}

// GetPortsOk returns a tuple with the Ports field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200268Items) GetPortsOk() (*string, bool) {
	if o == nil || isNil(o.Ports) {
    return nil, false
	}
	return o.Ports, true
}

// HasPorts returns a boolean if a field has been set.
func (o *InlineResponse200268Items) HasPorts() bool {
	if o != nil && !isNil(o.Ports) {
		return true
	}

	return false
}

// SetPorts gets a reference to the given string and assigns it to the Ports field.
func (o *InlineResponse200268Items) SetPorts(v string) {
	o.Ports = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *InlineResponse200268Items) GetStatus() string {
	if o == nil || isNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200268Items) GetStatusOk() (*string, bool) {
	if o == nil || isNil(o.Status) {
    return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *InlineResponse200268Items) HasStatus() bool {
	if o != nil && !isNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *InlineResponse200268Items) SetStatus(v string) {
	o.Status = &v
}

// GetErrorMessage returns the ErrorMessage field value if set, zero value otherwise.
func (o *InlineResponse200268Items) GetErrorMessage() string {
	if o == nil || isNil(o.ErrorMessage) {
		var ret string
		return ret
	}
	return *o.ErrorMessage
}

// GetErrorMessageOk returns a tuple with the ErrorMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200268Items) GetErrorMessageOk() (*string, bool) {
	if o == nil || isNil(o.ErrorMessage) {
    return nil, false
	}
	return o.ErrorMessage, true
}

// HasErrorMessage returns a boolean if a field has been set.
func (o *InlineResponse200268Items) HasErrorMessage() bool {
	if o != nil && !isNil(o.ErrorMessage) {
		return true
	}

	return false
}

// SetErrorMessage gets a reference to the given string and assigns it to the ErrorMessage field.
func (o *InlineResponse200268Items) SetErrorMessage(v string) {
	o.ErrorMessage = &v
}

// GetDestination returns the Destination field value if set, zero value otherwise.
func (o *InlineResponse200268Items) GetDestination() string {
	if o == nil || isNil(o.Destination) {
		var ret string
		return ret
	}
	return *o.Destination
}

// GetDestinationOk returns a tuple with the Destination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200268Items) GetDestinationOk() (*string, bool) {
	if o == nil || isNil(o.Destination) {
    return nil, false
	}
	return o.Destination, true
}

// HasDestination returns a boolean if a field has been set.
func (o *InlineResponse200268Items) HasDestination() bool {
	if o != nil && !isNil(o.Destination) {
		return true
	}

	return false
}

// SetDestination gets a reference to the given string and assigns it to the Destination field.
func (o *InlineResponse200268Items) SetDestination(v string) {
	o.Destination = &v
}

// GetProcess returns the Process field value if set, zero value otherwise.
func (o *InlineResponse200268Items) GetProcess() string {
	if o == nil || isNil(o.Process) {
		var ret string
		return ret
	}
	return *o.Process
}

// GetProcessOk returns a tuple with the Process field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200268Items) GetProcessOk() (*string, bool) {
	if o == nil || isNil(o.Process) {
    return nil, false
	}
	return o.Process, true
}

// HasProcess returns a boolean if a field has been set.
func (o *InlineResponse200268Items) HasProcess() bool {
	if o != nil && !isNil(o.Process) {
		return true
	}

	return false
}

// SetProcess gets a reference to the given string and assigns it to the Process field.
func (o *InlineResponse200268Items) SetProcess(v string) {
	o.Process = &v
}

// GetFile returns the File field value if set, zero value otherwise.
func (o *InlineResponse200268Items) GetFile() InlineResponse200268File {
	if o == nil || isNil(o.File) {
		var ret InlineResponse200268File
		return ret
	}
	return *o.File
}

// GetFileOk returns a tuple with the File field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200268Items) GetFileOk() (*InlineResponse200268File, bool) {
	if o == nil || isNil(o.File) {
    return nil, false
	}
	return o.File, true
}

// HasFile returns a boolean if a field has been set.
func (o *InlineResponse200268Items) HasFile() bool {
	if o != nil && !isNil(o.File) {
		return true
	}

	return false
}

// SetFile gets a reference to the given InlineResponse200268File and assigns it to the File field.
func (o *InlineResponse200268Items) SetFile(v InlineResponse200268File) {
	o.File = &v
}

// GetDuration returns the Duration field value if set, zero value otherwise.
func (o *InlineResponse200268Items) GetDuration() int32 {
	if o == nil || isNil(o.Duration) {
		var ret int32
		return ret
	}
	return *o.Duration
}

// GetDurationOk returns a tuple with the Duration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200268Items) GetDurationOk() (*int32, bool) {
	if o == nil || isNil(o.Duration) {
    return nil, false
	}
	return o.Duration, true
}

// HasDuration returns a boolean if a field has been set.
func (o *InlineResponse200268Items) HasDuration() bool {
	if o != nil && !isNil(o.Duration) {
		return true
	}

	return false
}

// SetDuration gets a reference to the given int32 and assigns it to the Duration field.
func (o *InlineResponse200268Items) SetDuration(v int32) {
	o.Duration = &v
}

// GetFilterExpression returns the FilterExpression field value if set, zero value otherwise.
func (o *InlineResponse200268Items) GetFilterExpression() string {
	if o == nil || isNil(o.FilterExpression) {
		var ret string
		return ret
	}
	return *o.FilterExpression
}

// GetFilterExpressionOk returns a tuple with the FilterExpression field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200268Items) GetFilterExpressionOk() (*string, bool) {
	if o == nil || isNil(o.FilterExpression) {
    return nil, false
	}
	return o.FilterExpression, true
}

// HasFilterExpression returns a boolean if a field has been set.
func (o *InlineResponse200268Items) HasFilterExpression() bool {
	if o != nil && !isNil(o.FilterExpression) {
		return true
	}

	return false
}

// SetFilterExpression gets a reference to the given string and assigns it to the FilterExpression field.
func (o *InlineResponse200268Items) SetFilterExpression(v string) {
	o.FilterExpression = &v
}

// GetCounts returns the Counts field value if set, zero value otherwise.
func (o *InlineResponse200268Items) GetCounts() InlineResponse200268Counts {
	if o == nil || isNil(o.Counts) {
		var ret InlineResponse200268Counts
		return ret
	}
	return *o.Counts
}

// GetCountsOk returns a tuple with the Counts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200268Items) GetCountsOk() (*InlineResponse200268Counts, bool) {
	if o == nil || isNil(o.Counts) {
    return nil, false
	}
	return o.Counts, true
}

// HasCounts returns a boolean if a field has been set.
func (o *InlineResponse200268Items) HasCounts() bool {
	if o != nil && !isNil(o.Counts) {
		return true
	}

	return false
}

// SetCounts gets a reference to the given InlineResponse200268Counts and assigns it to the Counts field.
func (o *InlineResponse200268Items) SetCounts(v InlineResponse200268Counts) {
	o.Counts = &v
}

// GetInterface returns the Interface field value if set, zero value otherwise.
func (o *InlineResponse200268Items) GetInterface() string {
	if o == nil || isNil(o.Interface) {
		var ret string
		return ret
	}
	return *o.Interface
}

// GetInterfaceOk returns a tuple with the Interface field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200268Items) GetInterfaceOk() (*string, bool) {
	if o == nil || isNil(o.Interface) {
    return nil, false
	}
	return o.Interface, true
}

// HasInterface returns a boolean if a field has been set.
func (o *InlineResponse200268Items) HasInterface() bool {
	if o != nil && !isNil(o.Interface) {
		return true
	}

	return false
}

// SetInterface gets a reference to the given string and assigns it to the Interface field.
func (o *InlineResponse200268Items) SetInterface(v string) {
	o.Interface = &v
}

func (o InlineResponse200268Items) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.CaptureId) {
		toSerialize["captureId"] = o.CaptureId
	}
	if !isNil(o.Network) {
		toSerialize["network"] = o.Network
	}
	if !isNil(o.Devices) {
		toSerialize["devices"] = o.Devices
	}
	if !isNil(o.Device) {
		toSerialize["device"] = o.Device
	}
	if !isNil(o.Admin) {
		toSerialize["admin"] = o.Admin
	}
	if !isNil(o.Client) {
		toSerialize["client"] = o.Client
	}
	if !isNil(o.Details) {
		toSerialize["details"] = o.Details
	}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.StartTs) {
		toSerialize["startTs"] = o.StartTs
	}
	if !isNil(o.Ports) {
		toSerialize["ports"] = o.Ports
	}
	if !isNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !isNil(o.ErrorMessage) {
		toSerialize["errorMessage"] = o.ErrorMessage
	}
	if !isNil(o.Destination) {
		toSerialize["destination"] = o.Destination
	}
	if !isNil(o.Process) {
		toSerialize["process"] = o.Process
	}
	if !isNil(o.File) {
		toSerialize["file"] = o.File
	}
	if !isNil(o.Duration) {
		toSerialize["duration"] = o.Duration
	}
	if !isNil(o.FilterExpression) {
		toSerialize["filterExpression"] = o.FilterExpression
	}
	if !isNil(o.Counts) {
		toSerialize["counts"] = o.Counts
	}
	if !isNil(o.Interface) {
		toSerialize["interface"] = o.Interface
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200268Items struct {
	value *InlineResponse200268Items
	isSet bool
}

func (v NullableInlineResponse200268Items) Get() *InlineResponse200268Items {
	return v.value
}

func (v *NullableInlineResponse200268Items) Set(val *InlineResponse200268Items) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200268Items) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200268Items) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200268Items(val *InlineResponse200268Items) *NullableInlineResponse200268Items {
	return &NullableInlineResponse200268Items{value: val, isSet: true}
}

func (v NullableInlineResponse200268Items) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200268Items) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


