/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 01 October, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.63.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200198Api Whether to enable collection of location and scanning analytics.
type InlineResponse200198Api struct {
	// Whether to enable push API for scanning events. Analytics must be enabled to enable scanning API.
	Enabled *bool `json:"enabled,omitempty"`
	Validator *InlineResponse200198ApiValidator `json:"validator,omitempty"`
}

// NewInlineResponse200198Api instantiates a new InlineResponse200198Api object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200198Api() *InlineResponse200198Api {
	this := InlineResponse200198Api{}
	return &this
}

// NewInlineResponse200198ApiWithDefaults instantiates a new InlineResponse200198Api object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200198ApiWithDefaults() *InlineResponse200198Api {
	this := InlineResponse200198Api{}
	return &this
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *InlineResponse200198Api) GetEnabled() bool {
	if o == nil || isNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200198Api) GetEnabledOk() (*bool, bool) {
	if o == nil || isNil(o.Enabled) {
    return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *InlineResponse200198Api) HasEnabled() bool {
	if o != nil && !isNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *InlineResponse200198Api) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetValidator returns the Validator field value if set, zero value otherwise.
func (o *InlineResponse200198Api) GetValidator() InlineResponse200198ApiValidator {
	if o == nil || isNil(o.Validator) {
		var ret InlineResponse200198ApiValidator
		return ret
	}
	return *o.Validator
}

// GetValidatorOk returns a tuple with the Validator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200198Api) GetValidatorOk() (*InlineResponse200198ApiValidator, bool) {
	if o == nil || isNil(o.Validator) {
    return nil, false
	}
	return o.Validator, true
}

// HasValidator returns a boolean if a field has been set.
func (o *InlineResponse200198Api) HasValidator() bool {
	if o != nil && !isNil(o.Validator) {
		return true
	}

	return false
}

// SetValidator gets a reference to the given InlineResponse200198ApiValidator and assigns it to the Validator field.
func (o *InlineResponse200198Api) SetValidator(v InlineResponse200198ApiValidator) {
	o.Validator = &v
}

func (o InlineResponse200198Api) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !isNil(o.Validator) {
		toSerialize["validator"] = o.Validator
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200198Api struct {
	value *InlineResponse200198Api
	isSet bool
}

func (v NullableInlineResponse200198Api) Get() *InlineResponse200198Api {
	return v.value
}

func (v *NullableInlineResponse200198Api) Set(val *InlineResponse200198Api) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200198Api) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200198Api) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200198Api(val *InlineResponse200198Api) *NullableInlineResponse200198Api {
	return &NullableInlineResponse200198Api{value: val, isSet: true}
}

func (v NullableInlineResponse200198Api) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200198Api) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


