/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 February, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.55.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200161 struct for InlineResponse200161
type InlineResponse200161 struct {
	DefaultSettings *InlineResponse200161DefaultSettings `json:"defaultSettings,omitempty"`
	// Array of paired switches/stacks/profiles and corresponding multicast settings.       An empty array will clear the multicast settings.
	Overrides []InlineResponse200161Overrides `json:"overrides,omitempty"`
}

// NewInlineResponse200161 instantiates a new InlineResponse200161 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200161() *InlineResponse200161 {
	this := InlineResponse200161{}
	return &this
}

// NewInlineResponse200161WithDefaults instantiates a new InlineResponse200161 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200161WithDefaults() *InlineResponse200161 {
	this := InlineResponse200161{}
	return &this
}

// GetDefaultSettings returns the DefaultSettings field value if set, zero value otherwise.
func (o *InlineResponse200161) GetDefaultSettings() InlineResponse200161DefaultSettings {
	if o == nil || isNil(o.DefaultSettings) {
		var ret InlineResponse200161DefaultSettings
		return ret
	}
	return *o.DefaultSettings
}

// GetDefaultSettingsOk returns a tuple with the DefaultSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200161) GetDefaultSettingsOk() (*InlineResponse200161DefaultSettings, bool) {
	if o == nil || isNil(o.DefaultSettings) {
    return nil, false
	}
	return o.DefaultSettings, true
}

// HasDefaultSettings returns a boolean if a field has been set.
func (o *InlineResponse200161) HasDefaultSettings() bool {
	if o != nil && !isNil(o.DefaultSettings) {
		return true
	}

	return false
}

// SetDefaultSettings gets a reference to the given InlineResponse200161DefaultSettings and assigns it to the DefaultSettings field.
func (o *InlineResponse200161) SetDefaultSettings(v InlineResponse200161DefaultSettings) {
	o.DefaultSettings = &v
}

// GetOverrides returns the Overrides field value if set, zero value otherwise.
func (o *InlineResponse200161) GetOverrides() []InlineResponse200161Overrides {
	if o == nil || isNil(o.Overrides) {
		var ret []InlineResponse200161Overrides
		return ret
	}
	return o.Overrides
}

// GetOverridesOk returns a tuple with the Overrides field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200161) GetOverridesOk() ([]InlineResponse200161Overrides, bool) {
	if o == nil || isNil(o.Overrides) {
    return nil, false
	}
	return o.Overrides, true
}

// HasOverrides returns a boolean if a field has been set.
func (o *InlineResponse200161) HasOverrides() bool {
	if o != nil && !isNil(o.Overrides) {
		return true
	}

	return false
}

// SetOverrides gets a reference to the given []InlineResponse200161Overrides and assigns it to the Overrides field.
func (o *InlineResponse200161) SetOverrides(v []InlineResponse200161Overrides) {
	o.Overrides = v
}

func (o InlineResponse200161) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.DefaultSettings) {
		toSerialize["defaultSettings"] = o.DefaultSettings
	}
	if !isNil(o.Overrides) {
		toSerialize["overrides"] = o.Overrides
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200161 struct {
	value *InlineResponse200161
	isSet bool
}

func (v NullableInlineResponse200161) Get() *InlineResponse200161 {
	return v.value
}

func (v *NullableInlineResponse200161) Set(val *InlineResponse200161) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200161) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200161) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200161(val *InlineResponse200161) *NullableInlineResponse200161 {
	return &NullableInlineResponse200161{value: val, isSet: true}
}

func (v NullableInlineResponse200161) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200161) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


