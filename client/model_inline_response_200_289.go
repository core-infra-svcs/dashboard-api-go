/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 07 May, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.58.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200289 struct for InlineResponse200289
type InlineResponse200289 struct {
	// List of networks that have XDR enabled
	Networks []InlineResponse200287Items `json:"networks,omitempty"`
}

// NewInlineResponse200289 instantiates a new InlineResponse200289 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200289() *InlineResponse200289 {
	this := InlineResponse200289{}
	return &this
}

// NewInlineResponse200289WithDefaults instantiates a new InlineResponse200289 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200289WithDefaults() *InlineResponse200289 {
	this := InlineResponse200289{}
	return &this
}

// GetNetworks returns the Networks field value if set, zero value otherwise.
func (o *InlineResponse200289) GetNetworks() []InlineResponse200287Items {
	if o == nil || isNil(o.Networks) {
		var ret []InlineResponse200287Items
		return ret
	}
	return o.Networks
}

// GetNetworksOk returns a tuple with the Networks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200289) GetNetworksOk() ([]InlineResponse200287Items, bool) {
	if o == nil || isNil(o.Networks) {
    return nil, false
	}
	return o.Networks, true
}

// HasNetworks returns a boolean if a field has been set.
func (o *InlineResponse200289) HasNetworks() bool {
	if o != nil && !isNil(o.Networks) {
		return true
	}

	return false
}

// SetNetworks gets a reference to the given []InlineResponse200287Items and assigns it to the Networks field.
func (o *InlineResponse200289) SetNetworks(v []InlineResponse200287Items) {
	o.Networks = v
}

func (o InlineResponse200289) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Networks) {
		toSerialize["networks"] = o.Networks
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200289 struct {
	value *InlineResponse200289
	isSet bool
}

func (v NullableInlineResponse200289) Get() *InlineResponse200289 {
	return v.value
}

func (v *NullableInlineResponse200289) Set(val *InlineResponse200289) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200289) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200289) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200289(val *InlineResponse200289) *NullableInlineResponse200289 {
	return &NullableInlineResponse200289{value: val, isSet: true}
}

func (v NullableInlineResponse200289) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200289) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


