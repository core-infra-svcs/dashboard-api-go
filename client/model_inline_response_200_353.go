/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 02 July, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.60.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200353 struct for InlineResponse200353
type InlineResponse200353 struct {
	// The serial number of the AP
	Serial *string `json:"serial,omitempty"`
	// The name of the AP
	Name *string `json:"name,omitempty"`
	Network *OrganizationsOrganizationIdWirelessDevicesEthernetStatusesNetwork `json:"network,omitempty"`
	Power *OrganizationsOrganizationIdWirelessDevicesEthernetStatusesPower `json:"power,omitempty"`
	// List of port details
	Ports []OrganizationsOrganizationIdWirelessDevicesEthernetStatusesPorts `json:"ports,omitempty"`
	Aggregation *OrganizationsOrganizationIdWirelessDevicesEthernetStatusesAggregation `json:"aggregation,omitempty"`
}

// NewInlineResponse200353 instantiates a new InlineResponse200353 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200353() *InlineResponse200353 {
	this := InlineResponse200353{}
	return &this
}

// NewInlineResponse200353WithDefaults instantiates a new InlineResponse200353 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200353WithDefaults() *InlineResponse200353 {
	this := InlineResponse200353{}
	return &this
}

// GetSerial returns the Serial field value if set, zero value otherwise.
func (o *InlineResponse200353) GetSerial() string {
	if o == nil || isNil(o.Serial) {
		var ret string
		return ret
	}
	return *o.Serial
}

// GetSerialOk returns a tuple with the Serial field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200353) GetSerialOk() (*string, bool) {
	if o == nil || isNil(o.Serial) {
    return nil, false
	}
	return o.Serial, true
}

// HasSerial returns a boolean if a field has been set.
func (o *InlineResponse200353) HasSerial() bool {
	if o != nil && !isNil(o.Serial) {
		return true
	}

	return false
}

// SetSerial gets a reference to the given string and assigns it to the Serial field.
func (o *InlineResponse200353) SetSerial(v string) {
	o.Serial = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *InlineResponse200353) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200353) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
    return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *InlineResponse200353) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *InlineResponse200353) SetName(v string) {
	o.Name = &v
}

// GetNetwork returns the Network field value if set, zero value otherwise.
func (o *InlineResponse200353) GetNetwork() OrganizationsOrganizationIdWirelessDevicesEthernetStatusesNetwork {
	if o == nil || isNil(o.Network) {
		var ret OrganizationsOrganizationIdWirelessDevicesEthernetStatusesNetwork
		return ret
	}
	return *o.Network
}

// GetNetworkOk returns a tuple with the Network field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200353) GetNetworkOk() (*OrganizationsOrganizationIdWirelessDevicesEthernetStatusesNetwork, bool) {
	if o == nil || isNil(o.Network) {
    return nil, false
	}
	return o.Network, true
}

// HasNetwork returns a boolean if a field has been set.
func (o *InlineResponse200353) HasNetwork() bool {
	if o != nil && !isNil(o.Network) {
		return true
	}

	return false
}

// SetNetwork gets a reference to the given OrganizationsOrganizationIdWirelessDevicesEthernetStatusesNetwork and assigns it to the Network field.
func (o *InlineResponse200353) SetNetwork(v OrganizationsOrganizationIdWirelessDevicesEthernetStatusesNetwork) {
	o.Network = &v
}

// GetPower returns the Power field value if set, zero value otherwise.
func (o *InlineResponse200353) GetPower() OrganizationsOrganizationIdWirelessDevicesEthernetStatusesPower {
	if o == nil || isNil(o.Power) {
		var ret OrganizationsOrganizationIdWirelessDevicesEthernetStatusesPower
		return ret
	}
	return *o.Power
}

// GetPowerOk returns a tuple with the Power field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200353) GetPowerOk() (*OrganizationsOrganizationIdWirelessDevicesEthernetStatusesPower, bool) {
	if o == nil || isNil(o.Power) {
    return nil, false
	}
	return o.Power, true
}

// HasPower returns a boolean if a field has been set.
func (o *InlineResponse200353) HasPower() bool {
	if o != nil && !isNil(o.Power) {
		return true
	}

	return false
}

// SetPower gets a reference to the given OrganizationsOrganizationIdWirelessDevicesEthernetStatusesPower and assigns it to the Power field.
func (o *InlineResponse200353) SetPower(v OrganizationsOrganizationIdWirelessDevicesEthernetStatusesPower) {
	o.Power = &v
}

// GetPorts returns the Ports field value if set, zero value otherwise.
func (o *InlineResponse200353) GetPorts() []OrganizationsOrganizationIdWirelessDevicesEthernetStatusesPorts {
	if o == nil || isNil(o.Ports) {
		var ret []OrganizationsOrganizationIdWirelessDevicesEthernetStatusesPorts
		return ret
	}
	return o.Ports
}

// GetPortsOk returns a tuple with the Ports field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200353) GetPortsOk() ([]OrganizationsOrganizationIdWirelessDevicesEthernetStatusesPorts, bool) {
	if o == nil || isNil(o.Ports) {
    return nil, false
	}
	return o.Ports, true
}

// HasPorts returns a boolean if a field has been set.
func (o *InlineResponse200353) HasPorts() bool {
	if o != nil && !isNil(o.Ports) {
		return true
	}

	return false
}

// SetPorts gets a reference to the given []OrganizationsOrganizationIdWirelessDevicesEthernetStatusesPorts and assigns it to the Ports field.
func (o *InlineResponse200353) SetPorts(v []OrganizationsOrganizationIdWirelessDevicesEthernetStatusesPorts) {
	o.Ports = v
}

// GetAggregation returns the Aggregation field value if set, zero value otherwise.
func (o *InlineResponse200353) GetAggregation() OrganizationsOrganizationIdWirelessDevicesEthernetStatusesAggregation {
	if o == nil || isNil(o.Aggregation) {
		var ret OrganizationsOrganizationIdWirelessDevicesEthernetStatusesAggregation
		return ret
	}
	return *o.Aggregation
}

// GetAggregationOk returns a tuple with the Aggregation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200353) GetAggregationOk() (*OrganizationsOrganizationIdWirelessDevicesEthernetStatusesAggregation, bool) {
	if o == nil || isNil(o.Aggregation) {
    return nil, false
	}
	return o.Aggregation, true
}

// HasAggregation returns a boolean if a field has been set.
func (o *InlineResponse200353) HasAggregation() bool {
	if o != nil && !isNil(o.Aggregation) {
		return true
	}

	return false
}

// SetAggregation gets a reference to the given OrganizationsOrganizationIdWirelessDevicesEthernetStatusesAggregation and assigns it to the Aggregation field.
func (o *InlineResponse200353) SetAggregation(v OrganizationsOrganizationIdWirelessDevicesEthernetStatusesAggregation) {
	o.Aggregation = &v
}

func (o InlineResponse200353) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Serial) {
		toSerialize["serial"] = o.Serial
	}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.Network) {
		toSerialize["network"] = o.Network
	}
	if !isNil(o.Power) {
		toSerialize["power"] = o.Power
	}
	if !isNil(o.Ports) {
		toSerialize["ports"] = o.Ports
	}
	if !isNil(o.Aggregation) {
		toSerialize["aggregation"] = o.Aggregation
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200353 struct {
	value *InlineResponse200353
	isSet bool
}

func (v NullableInlineResponse200353) Get() *InlineResponse200353 {
	return v.value
}

func (v *NullableInlineResponse200353) Set(val *InlineResponse200353) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200353) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200353) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200353(val *InlineResponse200353) *NullableInlineResponse200353 {
	return &NullableInlineResponse200353{value: val, isSet: true}
}

func (v NullableInlineResponse200353) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200353) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


