/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 03 September, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.62.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// NetworksNetworkIdSwitchAccessPoliciesRadius1 Object for RADIUS Settings
type NetworksNetworkIdSwitchAccessPoliciesRadius1 struct {
	CriticalAuth *NetworksNetworkIdSwitchAccessPoliciesRadius1CriticalAuth `json:"criticalAuth,omitempty"`
	// VLAN that clients will be placed on when RADIUS authentication fails. Will be null if hostMode is Multi-Auth
	FailedAuthVlanId *int32 `json:"failedAuthVlanId,omitempty"`
	// Group policy Number for failed authentication group policy
	FailedAuthGroupPolicyId *string `json:"failedAuthGroupPolicyId,omitempty"`
	// Security Group Tag ID for failed authentication group policy
	FailedAuthSgtId *int32 `json:"failedAuthSgtId,omitempty"`
	// Re-authentication period in seconds. Will be null if hostMode is Multi-Auth
	ReAuthenticationInterval *int32 `json:"reAuthenticationInterval,omitempty"`
	Cache *NetworksNetworkIdSwitchAccessPoliciesRadiusCache `json:"cache,omitempty"`
	Authentication *NetworksNetworkIdSwitchAccessPoliciesRadius1Authentication `json:"authentication,omitempty"`
	// Group policy Number for pre-authentication group policy
	PreAuthenticationGroupPolicyId *string `json:"preAuthenticationGroupPolicyId,omitempty"`
}

// NewNetworksNetworkIdSwitchAccessPoliciesRadius1 instantiates a new NetworksNetworkIdSwitchAccessPoliciesRadius1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworksNetworkIdSwitchAccessPoliciesRadius1() *NetworksNetworkIdSwitchAccessPoliciesRadius1 {
	this := NetworksNetworkIdSwitchAccessPoliciesRadius1{}
	return &this
}

// NewNetworksNetworkIdSwitchAccessPoliciesRadius1WithDefaults instantiates a new NetworksNetworkIdSwitchAccessPoliciesRadius1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworksNetworkIdSwitchAccessPoliciesRadius1WithDefaults() *NetworksNetworkIdSwitchAccessPoliciesRadius1 {
	this := NetworksNetworkIdSwitchAccessPoliciesRadius1{}
	return &this
}

// GetCriticalAuth returns the CriticalAuth field value if set, zero value otherwise.
func (o *NetworksNetworkIdSwitchAccessPoliciesRadius1) GetCriticalAuth() NetworksNetworkIdSwitchAccessPoliciesRadius1CriticalAuth {
	if o == nil || isNil(o.CriticalAuth) {
		var ret NetworksNetworkIdSwitchAccessPoliciesRadius1CriticalAuth
		return ret
	}
	return *o.CriticalAuth
}

// GetCriticalAuthOk returns a tuple with the CriticalAuth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworksNetworkIdSwitchAccessPoliciesRadius1) GetCriticalAuthOk() (*NetworksNetworkIdSwitchAccessPoliciesRadius1CriticalAuth, bool) {
	if o == nil || isNil(o.CriticalAuth) {
    return nil, false
	}
	return o.CriticalAuth, true
}

// HasCriticalAuth returns a boolean if a field has been set.
func (o *NetworksNetworkIdSwitchAccessPoliciesRadius1) HasCriticalAuth() bool {
	if o != nil && !isNil(o.CriticalAuth) {
		return true
	}

	return false
}

// SetCriticalAuth gets a reference to the given NetworksNetworkIdSwitchAccessPoliciesRadius1CriticalAuth and assigns it to the CriticalAuth field.
func (o *NetworksNetworkIdSwitchAccessPoliciesRadius1) SetCriticalAuth(v NetworksNetworkIdSwitchAccessPoliciesRadius1CriticalAuth) {
	o.CriticalAuth = &v
}

// GetFailedAuthVlanId returns the FailedAuthVlanId field value if set, zero value otherwise.
func (o *NetworksNetworkIdSwitchAccessPoliciesRadius1) GetFailedAuthVlanId() int32 {
	if o == nil || isNil(o.FailedAuthVlanId) {
		var ret int32
		return ret
	}
	return *o.FailedAuthVlanId
}

// GetFailedAuthVlanIdOk returns a tuple with the FailedAuthVlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworksNetworkIdSwitchAccessPoliciesRadius1) GetFailedAuthVlanIdOk() (*int32, bool) {
	if o == nil || isNil(o.FailedAuthVlanId) {
    return nil, false
	}
	return o.FailedAuthVlanId, true
}

// HasFailedAuthVlanId returns a boolean if a field has been set.
func (o *NetworksNetworkIdSwitchAccessPoliciesRadius1) HasFailedAuthVlanId() bool {
	if o != nil && !isNil(o.FailedAuthVlanId) {
		return true
	}

	return false
}

// SetFailedAuthVlanId gets a reference to the given int32 and assigns it to the FailedAuthVlanId field.
func (o *NetworksNetworkIdSwitchAccessPoliciesRadius1) SetFailedAuthVlanId(v int32) {
	o.FailedAuthVlanId = &v
}

// GetFailedAuthGroupPolicyId returns the FailedAuthGroupPolicyId field value if set, zero value otherwise.
func (o *NetworksNetworkIdSwitchAccessPoliciesRadius1) GetFailedAuthGroupPolicyId() string {
	if o == nil || isNil(o.FailedAuthGroupPolicyId) {
		var ret string
		return ret
	}
	return *o.FailedAuthGroupPolicyId
}

// GetFailedAuthGroupPolicyIdOk returns a tuple with the FailedAuthGroupPolicyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworksNetworkIdSwitchAccessPoliciesRadius1) GetFailedAuthGroupPolicyIdOk() (*string, bool) {
	if o == nil || isNil(o.FailedAuthGroupPolicyId) {
    return nil, false
	}
	return o.FailedAuthGroupPolicyId, true
}

// HasFailedAuthGroupPolicyId returns a boolean if a field has been set.
func (o *NetworksNetworkIdSwitchAccessPoliciesRadius1) HasFailedAuthGroupPolicyId() bool {
	if o != nil && !isNil(o.FailedAuthGroupPolicyId) {
		return true
	}

	return false
}

// SetFailedAuthGroupPolicyId gets a reference to the given string and assigns it to the FailedAuthGroupPolicyId field.
func (o *NetworksNetworkIdSwitchAccessPoliciesRadius1) SetFailedAuthGroupPolicyId(v string) {
	o.FailedAuthGroupPolicyId = &v
}

// GetFailedAuthSgtId returns the FailedAuthSgtId field value if set, zero value otherwise.
func (o *NetworksNetworkIdSwitchAccessPoliciesRadius1) GetFailedAuthSgtId() int32 {
	if o == nil || isNil(o.FailedAuthSgtId) {
		var ret int32
		return ret
	}
	return *o.FailedAuthSgtId
}

// GetFailedAuthSgtIdOk returns a tuple with the FailedAuthSgtId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworksNetworkIdSwitchAccessPoliciesRadius1) GetFailedAuthSgtIdOk() (*int32, bool) {
	if o == nil || isNil(o.FailedAuthSgtId) {
    return nil, false
	}
	return o.FailedAuthSgtId, true
}

// HasFailedAuthSgtId returns a boolean if a field has been set.
func (o *NetworksNetworkIdSwitchAccessPoliciesRadius1) HasFailedAuthSgtId() bool {
	if o != nil && !isNil(o.FailedAuthSgtId) {
		return true
	}

	return false
}

// SetFailedAuthSgtId gets a reference to the given int32 and assigns it to the FailedAuthSgtId field.
func (o *NetworksNetworkIdSwitchAccessPoliciesRadius1) SetFailedAuthSgtId(v int32) {
	o.FailedAuthSgtId = &v
}

// GetReAuthenticationInterval returns the ReAuthenticationInterval field value if set, zero value otherwise.
func (o *NetworksNetworkIdSwitchAccessPoliciesRadius1) GetReAuthenticationInterval() int32 {
	if o == nil || isNil(o.ReAuthenticationInterval) {
		var ret int32
		return ret
	}
	return *o.ReAuthenticationInterval
}

// GetReAuthenticationIntervalOk returns a tuple with the ReAuthenticationInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworksNetworkIdSwitchAccessPoliciesRadius1) GetReAuthenticationIntervalOk() (*int32, bool) {
	if o == nil || isNil(o.ReAuthenticationInterval) {
    return nil, false
	}
	return o.ReAuthenticationInterval, true
}

// HasReAuthenticationInterval returns a boolean if a field has been set.
func (o *NetworksNetworkIdSwitchAccessPoliciesRadius1) HasReAuthenticationInterval() bool {
	if o != nil && !isNil(o.ReAuthenticationInterval) {
		return true
	}

	return false
}

// SetReAuthenticationInterval gets a reference to the given int32 and assigns it to the ReAuthenticationInterval field.
func (o *NetworksNetworkIdSwitchAccessPoliciesRadius1) SetReAuthenticationInterval(v int32) {
	o.ReAuthenticationInterval = &v
}

// GetCache returns the Cache field value if set, zero value otherwise.
func (o *NetworksNetworkIdSwitchAccessPoliciesRadius1) GetCache() NetworksNetworkIdSwitchAccessPoliciesRadiusCache {
	if o == nil || isNil(o.Cache) {
		var ret NetworksNetworkIdSwitchAccessPoliciesRadiusCache
		return ret
	}
	return *o.Cache
}

// GetCacheOk returns a tuple with the Cache field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworksNetworkIdSwitchAccessPoliciesRadius1) GetCacheOk() (*NetworksNetworkIdSwitchAccessPoliciesRadiusCache, bool) {
	if o == nil || isNil(o.Cache) {
    return nil, false
	}
	return o.Cache, true
}

// HasCache returns a boolean if a field has been set.
func (o *NetworksNetworkIdSwitchAccessPoliciesRadius1) HasCache() bool {
	if o != nil && !isNil(o.Cache) {
		return true
	}

	return false
}

// SetCache gets a reference to the given NetworksNetworkIdSwitchAccessPoliciesRadiusCache and assigns it to the Cache field.
func (o *NetworksNetworkIdSwitchAccessPoliciesRadius1) SetCache(v NetworksNetworkIdSwitchAccessPoliciesRadiusCache) {
	o.Cache = &v
}

// GetAuthentication returns the Authentication field value if set, zero value otherwise.
func (o *NetworksNetworkIdSwitchAccessPoliciesRadius1) GetAuthentication() NetworksNetworkIdSwitchAccessPoliciesRadius1Authentication {
	if o == nil || isNil(o.Authentication) {
		var ret NetworksNetworkIdSwitchAccessPoliciesRadius1Authentication
		return ret
	}
	return *o.Authentication
}

// GetAuthenticationOk returns a tuple with the Authentication field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworksNetworkIdSwitchAccessPoliciesRadius1) GetAuthenticationOk() (*NetworksNetworkIdSwitchAccessPoliciesRadius1Authentication, bool) {
	if o == nil || isNil(o.Authentication) {
    return nil, false
	}
	return o.Authentication, true
}

// HasAuthentication returns a boolean if a field has been set.
func (o *NetworksNetworkIdSwitchAccessPoliciesRadius1) HasAuthentication() bool {
	if o != nil && !isNil(o.Authentication) {
		return true
	}

	return false
}

// SetAuthentication gets a reference to the given NetworksNetworkIdSwitchAccessPoliciesRadius1Authentication and assigns it to the Authentication field.
func (o *NetworksNetworkIdSwitchAccessPoliciesRadius1) SetAuthentication(v NetworksNetworkIdSwitchAccessPoliciesRadius1Authentication) {
	o.Authentication = &v
}

// GetPreAuthenticationGroupPolicyId returns the PreAuthenticationGroupPolicyId field value if set, zero value otherwise.
func (o *NetworksNetworkIdSwitchAccessPoliciesRadius1) GetPreAuthenticationGroupPolicyId() string {
	if o == nil || isNil(o.PreAuthenticationGroupPolicyId) {
		var ret string
		return ret
	}
	return *o.PreAuthenticationGroupPolicyId
}

// GetPreAuthenticationGroupPolicyIdOk returns a tuple with the PreAuthenticationGroupPolicyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworksNetworkIdSwitchAccessPoliciesRadius1) GetPreAuthenticationGroupPolicyIdOk() (*string, bool) {
	if o == nil || isNil(o.PreAuthenticationGroupPolicyId) {
    return nil, false
	}
	return o.PreAuthenticationGroupPolicyId, true
}

// HasPreAuthenticationGroupPolicyId returns a boolean if a field has been set.
func (o *NetworksNetworkIdSwitchAccessPoliciesRadius1) HasPreAuthenticationGroupPolicyId() bool {
	if o != nil && !isNil(o.PreAuthenticationGroupPolicyId) {
		return true
	}

	return false
}

// SetPreAuthenticationGroupPolicyId gets a reference to the given string and assigns it to the PreAuthenticationGroupPolicyId field.
func (o *NetworksNetworkIdSwitchAccessPoliciesRadius1) SetPreAuthenticationGroupPolicyId(v string) {
	o.PreAuthenticationGroupPolicyId = &v
}

func (o NetworksNetworkIdSwitchAccessPoliciesRadius1) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.CriticalAuth) {
		toSerialize["criticalAuth"] = o.CriticalAuth
	}
	if !isNil(o.FailedAuthVlanId) {
		toSerialize["failedAuthVlanId"] = o.FailedAuthVlanId
	}
	if !isNil(o.FailedAuthGroupPolicyId) {
		toSerialize["failedAuthGroupPolicyId"] = o.FailedAuthGroupPolicyId
	}
	if !isNil(o.FailedAuthSgtId) {
		toSerialize["failedAuthSgtId"] = o.FailedAuthSgtId
	}
	if !isNil(o.ReAuthenticationInterval) {
		toSerialize["reAuthenticationInterval"] = o.ReAuthenticationInterval
	}
	if !isNil(o.Cache) {
		toSerialize["cache"] = o.Cache
	}
	if !isNil(o.Authentication) {
		toSerialize["authentication"] = o.Authentication
	}
	if !isNil(o.PreAuthenticationGroupPolicyId) {
		toSerialize["preAuthenticationGroupPolicyId"] = o.PreAuthenticationGroupPolicyId
	}
	return json.Marshal(toSerialize)
}

type NullableNetworksNetworkIdSwitchAccessPoliciesRadius1 struct {
	value *NetworksNetworkIdSwitchAccessPoliciesRadius1
	isSet bool
}

func (v NullableNetworksNetworkIdSwitchAccessPoliciesRadius1) Get() *NetworksNetworkIdSwitchAccessPoliciesRadius1 {
	return v.value
}

func (v *NullableNetworksNetworkIdSwitchAccessPoliciesRadius1) Set(val *NetworksNetworkIdSwitchAccessPoliciesRadius1) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworksNetworkIdSwitchAccessPoliciesRadius1) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworksNetworkIdSwitchAccessPoliciesRadius1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworksNetworkIdSwitchAccessPoliciesRadius1(val *NetworksNetworkIdSwitchAccessPoliciesRadius1) *NullableNetworksNetworkIdSwitchAccessPoliciesRadius1 {
	return &NullableNetworksNetworkIdSwitchAccessPoliciesRadius1{value: val, isSet: true}
}

func (v NullableNetworksNetworkIdSwitchAccessPoliciesRadius1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworksNetworkIdSwitchAccessPoliciesRadius1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


