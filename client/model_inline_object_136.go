/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 04 May, 2022 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.21.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineObject136 struct for InlineObject136
type InlineObject136 struct {
	// General EAP timeout in seconds.
	Timeout *int32 `json:"timeout,omitempty"`
	Identity *NetworksNetworkIdWirelessSsidsNumberEapOverrideIdentity `json:"identity,omitempty"`
	// Maximum number of general EAP retries.
	MaxRetries *int32 `json:"maxRetries,omitempty"`
	EapolKey *NetworksNetworkIdWirelessSsidsNumberEapOverrideEapolKey `json:"eapolKey,omitempty"`
}

// NewInlineObject136 instantiates a new InlineObject136 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject136() *InlineObject136 {
	this := InlineObject136{}
	return &this
}

// NewInlineObject136WithDefaults instantiates a new InlineObject136 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject136WithDefaults() *InlineObject136 {
	this := InlineObject136{}
	return &this
}

// GetTimeout returns the Timeout field value if set, zero value otherwise.
func (o *InlineObject136) GetTimeout() int32 {
	if o == nil || o.Timeout == nil {
		var ret int32
		return ret
	}
	return *o.Timeout
}

// GetTimeoutOk returns a tuple with the Timeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject136) GetTimeoutOk() (*int32, bool) {
	if o == nil || o.Timeout == nil {
		return nil, false
	}
	return o.Timeout, true
}

// HasTimeout returns a boolean if a field has been set.
func (o *InlineObject136) HasTimeout() bool {
	if o != nil && o.Timeout != nil {
		return true
	}

	return false
}

// SetTimeout gets a reference to the given int32 and assigns it to the Timeout field.
func (o *InlineObject136) SetTimeout(v int32) {
	o.Timeout = &v
}

// GetIdentity returns the Identity field value if set, zero value otherwise.
func (o *InlineObject136) GetIdentity() NetworksNetworkIdWirelessSsidsNumberEapOverrideIdentity {
	if o == nil || o.Identity == nil {
		var ret NetworksNetworkIdWirelessSsidsNumberEapOverrideIdentity
		return ret
	}
	return *o.Identity
}

// GetIdentityOk returns a tuple with the Identity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject136) GetIdentityOk() (*NetworksNetworkIdWirelessSsidsNumberEapOverrideIdentity, bool) {
	if o == nil || o.Identity == nil {
		return nil, false
	}
	return o.Identity, true
}

// HasIdentity returns a boolean if a field has been set.
func (o *InlineObject136) HasIdentity() bool {
	if o != nil && o.Identity != nil {
		return true
	}

	return false
}

// SetIdentity gets a reference to the given NetworksNetworkIdWirelessSsidsNumberEapOverrideIdentity and assigns it to the Identity field.
func (o *InlineObject136) SetIdentity(v NetworksNetworkIdWirelessSsidsNumberEapOverrideIdentity) {
	o.Identity = &v
}

// GetMaxRetries returns the MaxRetries field value if set, zero value otherwise.
func (o *InlineObject136) GetMaxRetries() int32 {
	if o == nil || o.MaxRetries == nil {
		var ret int32
		return ret
	}
	return *o.MaxRetries
}

// GetMaxRetriesOk returns a tuple with the MaxRetries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject136) GetMaxRetriesOk() (*int32, bool) {
	if o == nil || o.MaxRetries == nil {
		return nil, false
	}
	return o.MaxRetries, true
}

// HasMaxRetries returns a boolean if a field has been set.
func (o *InlineObject136) HasMaxRetries() bool {
	if o != nil && o.MaxRetries != nil {
		return true
	}

	return false
}

// SetMaxRetries gets a reference to the given int32 and assigns it to the MaxRetries field.
func (o *InlineObject136) SetMaxRetries(v int32) {
	o.MaxRetries = &v
}

// GetEapolKey returns the EapolKey field value if set, zero value otherwise.
func (o *InlineObject136) GetEapolKey() NetworksNetworkIdWirelessSsidsNumberEapOverrideEapolKey {
	if o == nil || o.EapolKey == nil {
		var ret NetworksNetworkIdWirelessSsidsNumberEapOverrideEapolKey
		return ret
	}
	return *o.EapolKey
}

// GetEapolKeyOk returns a tuple with the EapolKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject136) GetEapolKeyOk() (*NetworksNetworkIdWirelessSsidsNumberEapOverrideEapolKey, bool) {
	if o == nil || o.EapolKey == nil {
		return nil, false
	}
	return o.EapolKey, true
}

// HasEapolKey returns a boolean if a field has been set.
func (o *InlineObject136) HasEapolKey() bool {
	if o != nil && o.EapolKey != nil {
		return true
	}

	return false
}

// SetEapolKey gets a reference to the given NetworksNetworkIdWirelessSsidsNumberEapOverrideEapolKey and assigns it to the EapolKey field.
func (o *InlineObject136) SetEapolKey(v NetworksNetworkIdWirelessSsidsNumberEapOverrideEapolKey) {
	o.EapolKey = &v
}

func (o InlineObject136) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Timeout != nil {
		toSerialize["timeout"] = o.Timeout
	}
	if o.Identity != nil {
		toSerialize["identity"] = o.Identity
	}
	if o.MaxRetries != nil {
		toSerialize["maxRetries"] = o.MaxRetries
	}
	if o.EapolKey != nil {
		toSerialize["eapolKey"] = o.EapolKey
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject136 struct {
	value *InlineObject136
	isSet bool
}

func (v NullableInlineObject136) Get() *InlineObject136 {
	return v.value
}

func (v *NullableInlineObject136) Set(val *InlineObject136) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject136) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject136) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject136(val *InlineObject136) *NullableInlineObject136 {
	return &NullableInlineObject136{value: val, isSet: true}
}

func (v NullableInlineObject136) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject136) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


