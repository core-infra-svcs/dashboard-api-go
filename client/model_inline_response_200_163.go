/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 04 October, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.38.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200163 struct for InlineResponse200163
type InlineResponse200163 struct {
	// The id of the VPP Account
	Id *string `json:"id,omitempty"`
	// The VPP Account's Service Token
	VppServiceToken *string `json:"vppServiceToken,omitempty"`
}

// NewInlineResponse200163 instantiates a new InlineResponse200163 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200163() *InlineResponse200163 {
	this := InlineResponse200163{}
	return &this
}

// NewInlineResponse200163WithDefaults instantiates a new InlineResponse200163 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200163WithDefaults() *InlineResponse200163 {
	this := InlineResponse200163{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *InlineResponse200163) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200163) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *InlineResponse200163) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *InlineResponse200163) SetId(v string) {
	o.Id = &v
}

// GetVppServiceToken returns the VppServiceToken field value if set, zero value otherwise.
func (o *InlineResponse200163) GetVppServiceToken() string {
	if o == nil || isNil(o.VppServiceToken) {
		var ret string
		return ret
	}
	return *o.VppServiceToken
}

// GetVppServiceTokenOk returns a tuple with the VppServiceToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200163) GetVppServiceTokenOk() (*string, bool) {
	if o == nil || isNil(o.VppServiceToken) {
    return nil, false
	}
	return o.VppServiceToken, true
}

// HasVppServiceToken returns a boolean if a field has been set.
func (o *InlineResponse200163) HasVppServiceToken() bool {
	if o != nil && !isNil(o.VppServiceToken) {
		return true
	}

	return false
}

// SetVppServiceToken gets a reference to the given string and assigns it to the VppServiceToken field.
func (o *InlineResponse200163) SetVppServiceToken(v string) {
	o.VppServiceToken = &v
}

func (o InlineResponse200163) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.VppServiceToken) {
		toSerialize["vppServiceToken"] = o.VppServiceToken
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200163 struct {
	value *InlineResponse200163
	isSet bool
}

func (v NullableInlineResponse200163) Get() *InlineResponse200163 {
	return v.value
}

func (v *NullableInlineResponse200163) Set(val *InlineResponse200163) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200163) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200163) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200163(val *InlineResponse200163) *NullableInlineResponse200163 {
	return &NullableInlineResponse200163{value: val, isSet: true}
}

func (v NullableInlineResponse200163) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200163) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


