/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 March, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.56.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200183 struct for InlineResponse200183
type InlineResponse200183 struct {
	// MAC address of the client
	Mac *string `json:"mac,omitempty"`
	ConnectionStats *InlineResponse200183ConnectionStats `json:"connectionStats,omitempty"`
}

// NewInlineResponse200183 instantiates a new InlineResponse200183 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200183() *InlineResponse200183 {
	this := InlineResponse200183{}
	return &this
}

// NewInlineResponse200183WithDefaults instantiates a new InlineResponse200183 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200183WithDefaults() *InlineResponse200183 {
	this := InlineResponse200183{}
	return &this
}

// GetMac returns the Mac field value if set, zero value otherwise.
func (o *InlineResponse200183) GetMac() string {
	if o == nil || isNil(o.Mac) {
		var ret string
		return ret
	}
	return *o.Mac
}

// GetMacOk returns a tuple with the Mac field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200183) GetMacOk() (*string, bool) {
	if o == nil || isNil(o.Mac) {
    return nil, false
	}
	return o.Mac, true
}

// HasMac returns a boolean if a field has been set.
func (o *InlineResponse200183) HasMac() bool {
	if o != nil && !isNil(o.Mac) {
		return true
	}

	return false
}

// SetMac gets a reference to the given string and assigns it to the Mac field.
func (o *InlineResponse200183) SetMac(v string) {
	o.Mac = &v
}

// GetConnectionStats returns the ConnectionStats field value if set, zero value otherwise.
func (o *InlineResponse200183) GetConnectionStats() InlineResponse200183ConnectionStats {
	if o == nil || isNil(o.ConnectionStats) {
		var ret InlineResponse200183ConnectionStats
		return ret
	}
	return *o.ConnectionStats
}

// GetConnectionStatsOk returns a tuple with the ConnectionStats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200183) GetConnectionStatsOk() (*InlineResponse200183ConnectionStats, bool) {
	if o == nil || isNil(o.ConnectionStats) {
    return nil, false
	}
	return o.ConnectionStats, true
}

// HasConnectionStats returns a boolean if a field has been set.
func (o *InlineResponse200183) HasConnectionStats() bool {
	if o != nil && !isNil(o.ConnectionStats) {
		return true
	}

	return false
}

// SetConnectionStats gets a reference to the given InlineResponse200183ConnectionStats and assigns it to the ConnectionStats field.
func (o *InlineResponse200183) SetConnectionStats(v InlineResponse200183ConnectionStats) {
	o.ConnectionStats = &v
}

func (o InlineResponse200183) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Mac) {
		toSerialize["mac"] = o.Mac
	}
	if !isNil(o.ConnectionStats) {
		toSerialize["connectionStats"] = o.ConnectionStats
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200183 struct {
	value *InlineResponse200183
	isSet bool
}

func (v NullableInlineResponse200183) Get() *InlineResponse200183 {
	return v.value
}

func (v *NullableInlineResponse200183) Set(val *InlineResponse200183) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200183) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200183) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200183(val *InlineResponse200183) *NullableInlineResponse200183 {
	return &NullableInlineResponse200183{value: val, isSet: true}
}

func (v NullableInlineResponse200183) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200183) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


