/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 03 September, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.62.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// NetworksNetworkIdSwitchAccessPoliciesRadius1Authentication Object for authentication mode settings
type NetworksNetworkIdSwitchAccessPoliciesRadius1Authentication struct {
	// Authentication mode of the policy  ( Open | Closed ) 
	Mode *string `json:"mode,omitempty"`
}

// NewNetworksNetworkIdSwitchAccessPoliciesRadius1Authentication instantiates a new NetworksNetworkIdSwitchAccessPoliciesRadius1Authentication object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworksNetworkIdSwitchAccessPoliciesRadius1Authentication() *NetworksNetworkIdSwitchAccessPoliciesRadius1Authentication {
	this := NetworksNetworkIdSwitchAccessPoliciesRadius1Authentication{}
	return &this
}

// NewNetworksNetworkIdSwitchAccessPoliciesRadius1AuthenticationWithDefaults instantiates a new NetworksNetworkIdSwitchAccessPoliciesRadius1Authentication object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworksNetworkIdSwitchAccessPoliciesRadius1AuthenticationWithDefaults() *NetworksNetworkIdSwitchAccessPoliciesRadius1Authentication {
	this := NetworksNetworkIdSwitchAccessPoliciesRadius1Authentication{}
	return &this
}

// GetMode returns the Mode field value if set, zero value otherwise.
func (o *NetworksNetworkIdSwitchAccessPoliciesRadius1Authentication) GetMode() string {
	if o == nil || isNil(o.Mode) {
		var ret string
		return ret
	}
	return *o.Mode
}

// GetModeOk returns a tuple with the Mode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworksNetworkIdSwitchAccessPoliciesRadius1Authentication) GetModeOk() (*string, bool) {
	if o == nil || isNil(o.Mode) {
    return nil, false
	}
	return o.Mode, true
}

// HasMode returns a boolean if a field has been set.
func (o *NetworksNetworkIdSwitchAccessPoliciesRadius1Authentication) HasMode() bool {
	if o != nil && !isNil(o.Mode) {
		return true
	}

	return false
}

// SetMode gets a reference to the given string and assigns it to the Mode field.
func (o *NetworksNetworkIdSwitchAccessPoliciesRadius1Authentication) SetMode(v string) {
	o.Mode = &v
}

func (o NetworksNetworkIdSwitchAccessPoliciesRadius1Authentication) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Mode) {
		toSerialize["mode"] = o.Mode
	}
	return json.Marshal(toSerialize)
}

type NullableNetworksNetworkIdSwitchAccessPoliciesRadius1Authentication struct {
	value *NetworksNetworkIdSwitchAccessPoliciesRadius1Authentication
	isSet bool
}

func (v NullableNetworksNetworkIdSwitchAccessPoliciesRadius1Authentication) Get() *NetworksNetworkIdSwitchAccessPoliciesRadius1Authentication {
	return v.value
}

func (v *NullableNetworksNetworkIdSwitchAccessPoliciesRadius1Authentication) Set(val *NetworksNetworkIdSwitchAccessPoliciesRadius1Authentication) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworksNetworkIdSwitchAccessPoliciesRadius1Authentication) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworksNetworkIdSwitchAccessPoliciesRadius1Authentication) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworksNetworkIdSwitchAccessPoliciesRadius1Authentication(val *NetworksNetworkIdSwitchAccessPoliciesRadius1Authentication) *NullableNetworksNetworkIdSwitchAccessPoliciesRadius1Authentication {
	return &NullableNetworksNetworkIdSwitchAccessPoliciesRadius1Authentication{value: val, isSet: true}
}

func (v NullableNetworksNetworkIdSwitchAccessPoliciesRadius1Authentication) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworksNetworkIdSwitchAccessPoliciesRadius1Authentication) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


