/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 02 April, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.57.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200330 struct for InlineResponse200330
type InlineResponse200330 struct {
	// The type ID of Meraki alert
	AlertTypeId *string `json:"alertTypeId,omitempty"`
	// The type of Meraki alert
	AlertType *string `json:"alertType,omitempty"`
	Example *InlineResponse200330Example `json:"example,omitempty"`
}

// NewInlineResponse200330 instantiates a new InlineResponse200330 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200330() *InlineResponse200330 {
	this := InlineResponse200330{}
	return &this
}

// NewInlineResponse200330WithDefaults instantiates a new InlineResponse200330 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200330WithDefaults() *InlineResponse200330 {
	this := InlineResponse200330{}
	return &this
}

// GetAlertTypeId returns the AlertTypeId field value if set, zero value otherwise.
func (o *InlineResponse200330) GetAlertTypeId() string {
	if o == nil || isNil(o.AlertTypeId) {
		var ret string
		return ret
	}
	return *o.AlertTypeId
}

// GetAlertTypeIdOk returns a tuple with the AlertTypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200330) GetAlertTypeIdOk() (*string, bool) {
	if o == nil || isNil(o.AlertTypeId) {
    return nil, false
	}
	return o.AlertTypeId, true
}

// HasAlertTypeId returns a boolean if a field has been set.
func (o *InlineResponse200330) HasAlertTypeId() bool {
	if o != nil && !isNil(o.AlertTypeId) {
		return true
	}

	return false
}

// SetAlertTypeId gets a reference to the given string and assigns it to the AlertTypeId field.
func (o *InlineResponse200330) SetAlertTypeId(v string) {
	o.AlertTypeId = &v
}

// GetAlertType returns the AlertType field value if set, zero value otherwise.
func (o *InlineResponse200330) GetAlertType() string {
	if o == nil || isNil(o.AlertType) {
		var ret string
		return ret
	}
	return *o.AlertType
}

// GetAlertTypeOk returns a tuple with the AlertType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200330) GetAlertTypeOk() (*string, bool) {
	if o == nil || isNil(o.AlertType) {
    return nil, false
	}
	return o.AlertType, true
}

// HasAlertType returns a boolean if a field has been set.
func (o *InlineResponse200330) HasAlertType() bool {
	if o != nil && !isNil(o.AlertType) {
		return true
	}

	return false
}

// SetAlertType gets a reference to the given string and assigns it to the AlertType field.
func (o *InlineResponse200330) SetAlertType(v string) {
	o.AlertType = &v
}

// GetExample returns the Example field value if set, zero value otherwise.
func (o *InlineResponse200330) GetExample() InlineResponse200330Example {
	if o == nil || isNil(o.Example) {
		var ret InlineResponse200330Example
		return ret
	}
	return *o.Example
}

// GetExampleOk returns a tuple with the Example field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200330) GetExampleOk() (*InlineResponse200330Example, bool) {
	if o == nil || isNil(o.Example) {
    return nil, false
	}
	return o.Example, true
}

// HasExample returns a boolean if a field has been set.
func (o *InlineResponse200330) HasExample() bool {
	if o != nil && !isNil(o.Example) {
		return true
	}

	return false
}

// SetExample gets a reference to the given InlineResponse200330Example and assigns it to the Example field.
func (o *InlineResponse200330) SetExample(v InlineResponse200330Example) {
	o.Example = &v
}

func (o InlineResponse200330) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.AlertTypeId) {
		toSerialize["alertTypeId"] = o.AlertTypeId
	}
	if !isNil(o.AlertType) {
		toSerialize["alertType"] = o.AlertType
	}
	if !isNil(o.Example) {
		toSerialize["example"] = o.Example
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200330 struct {
	value *InlineResponse200330
	isSet bool
}

func (v NullableInlineResponse200330) Get() *InlineResponse200330 {
	return v.value
}

func (v *NullableInlineResponse200330) Set(val *InlineResponse200330) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200330) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200330) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200330(val *InlineResponse200330) *NullableInlineResponse200330 {
	return &NullableInlineResponse200330{value: val, isSet: true}
}

func (v NullableInlineResponse200330) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200330) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


