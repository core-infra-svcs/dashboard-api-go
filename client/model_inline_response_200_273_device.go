/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 04 June, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.59.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200273Device One of the device(s) of the packet capture file
type InlineResponse200273Device struct {
	// Name of device
	Name *string `json:"name,omitempty"`
	// The serial of the device
	Serial *string `json:"serial,omitempty"`
}

// NewInlineResponse200273Device instantiates a new InlineResponse200273Device object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200273Device() *InlineResponse200273Device {
	this := InlineResponse200273Device{}
	return &this
}

// NewInlineResponse200273DeviceWithDefaults instantiates a new InlineResponse200273Device object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200273DeviceWithDefaults() *InlineResponse200273Device {
	this := InlineResponse200273Device{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *InlineResponse200273Device) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200273Device) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
    return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *InlineResponse200273Device) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *InlineResponse200273Device) SetName(v string) {
	o.Name = &v
}

// GetSerial returns the Serial field value if set, zero value otherwise.
func (o *InlineResponse200273Device) GetSerial() string {
	if o == nil || isNil(o.Serial) {
		var ret string
		return ret
	}
	return *o.Serial
}

// GetSerialOk returns a tuple with the Serial field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200273Device) GetSerialOk() (*string, bool) {
	if o == nil || isNil(o.Serial) {
    return nil, false
	}
	return o.Serial, true
}

// HasSerial returns a boolean if a field has been set.
func (o *InlineResponse200273Device) HasSerial() bool {
	if o != nil && !isNil(o.Serial) {
		return true
	}

	return false
}

// SetSerial gets a reference to the given string and assigns it to the Serial field.
func (o *InlineResponse200273Device) SetSerial(v string) {
	o.Serial = &v
}

func (o InlineResponse200273Device) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.Serial) {
		toSerialize["serial"] = o.Serial
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200273Device struct {
	value *InlineResponse200273Device
	isSet bool
}

func (v NullableInlineResponse200273Device) Get() *InlineResponse200273Device {
	return v.value
}

func (v *NullableInlineResponse200273Device) Set(val *InlineResponse200273Device) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200273Device) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200273Device) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200273Device(val *InlineResponse200273Device) *NullableInlineResponse200273Device {
	return &NullableInlineResponse200273Device{value: val, isSet: true}
}

func (v NullableInlineResponse200273Device) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200273Device) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


