/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 06 August, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.61.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"time"
)

// InlineResponse20073 struct for InlineResponse20073
type InlineResponse20073 struct {
	// Start time of interval
	StartTime *time.Time `json:"startTime,omitempty"`
	// End time of interval
	EndTime *time.Time `json:"endTime,omitempty"`
	// List of usage data for each interface
	ByInterface []NetworksNetworkIdApplianceUplinksUsageHistoryByInterface `json:"byInterface,omitempty"`
}

// NewInlineResponse20073 instantiates a new InlineResponse20073 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20073() *InlineResponse20073 {
	this := InlineResponse20073{}
	return &this
}

// NewInlineResponse20073WithDefaults instantiates a new InlineResponse20073 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20073WithDefaults() *InlineResponse20073 {
	this := InlineResponse20073{}
	return &this
}

// GetStartTime returns the StartTime field value if set, zero value otherwise.
func (o *InlineResponse20073) GetStartTime() time.Time {
	if o == nil || isNil(o.StartTime) {
		var ret time.Time
		return ret
	}
	return *o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20073) GetStartTimeOk() (*time.Time, bool) {
	if o == nil || isNil(o.StartTime) {
    return nil, false
	}
	return o.StartTime, true
}

// HasStartTime returns a boolean if a field has been set.
func (o *InlineResponse20073) HasStartTime() bool {
	if o != nil && !isNil(o.StartTime) {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given time.Time and assigns it to the StartTime field.
func (o *InlineResponse20073) SetStartTime(v time.Time) {
	o.StartTime = &v
}

// GetEndTime returns the EndTime field value if set, zero value otherwise.
func (o *InlineResponse20073) GetEndTime() time.Time {
	if o == nil || isNil(o.EndTime) {
		var ret time.Time
		return ret
	}
	return *o.EndTime
}

// GetEndTimeOk returns a tuple with the EndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20073) GetEndTimeOk() (*time.Time, bool) {
	if o == nil || isNil(o.EndTime) {
    return nil, false
	}
	return o.EndTime, true
}

// HasEndTime returns a boolean if a field has been set.
func (o *InlineResponse20073) HasEndTime() bool {
	if o != nil && !isNil(o.EndTime) {
		return true
	}

	return false
}

// SetEndTime gets a reference to the given time.Time and assigns it to the EndTime field.
func (o *InlineResponse20073) SetEndTime(v time.Time) {
	o.EndTime = &v
}

// GetByInterface returns the ByInterface field value if set, zero value otherwise.
func (o *InlineResponse20073) GetByInterface() []NetworksNetworkIdApplianceUplinksUsageHistoryByInterface {
	if o == nil || isNil(o.ByInterface) {
		var ret []NetworksNetworkIdApplianceUplinksUsageHistoryByInterface
		return ret
	}
	return o.ByInterface
}

// GetByInterfaceOk returns a tuple with the ByInterface field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20073) GetByInterfaceOk() ([]NetworksNetworkIdApplianceUplinksUsageHistoryByInterface, bool) {
	if o == nil || isNil(o.ByInterface) {
    return nil, false
	}
	return o.ByInterface, true
}

// HasByInterface returns a boolean if a field has been set.
func (o *InlineResponse20073) HasByInterface() bool {
	if o != nil && !isNil(o.ByInterface) {
		return true
	}

	return false
}

// SetByInterface gets a reference to the given []NetworksNetworkIdApplianceUplinksUsageHistoryByInterface and assigns it to the ByInterface field.
func (o *InlineResponse20073) SetByInterface(v []NetworksNetworkIdApplianceUplinksUsageHistoryByInterface) {
	o.ByInterface = v
}

func (o InlineResponse20073) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.StartTime) {
		toSerialize["startTime"] = o.StartTime
	}
	if !isNil(o.EndTime) {
		toSerialize["endTime"] = o.EndTime
	}
	if !isNil(o.ByInterface) {
		toSerialize["byInterface"] = o.ByInterface
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20073 struct {
	value *InlineResponse20073
	isSet bool
}

func (v NullableInlineResponse20073) Get() *InlineResponse20073 {
	return v.value
}

func (v *NullableInlineResponse20073) Set(val *InlineResponse20073) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20073) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20073) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20073(val *InlineResponse20073) *NullableInlineResponse20073 {
	return &NullableInlineResponse20073{value: val, isSet: true}
}

func (v NullableInlineResponse20073) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20073) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


