/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 04 June, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.59.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200172 struct for InlineResponse200172
type InlineResponse200172 struct {
	// Traffic application
	Application *string `json:"application,omitempty"`
	// Traffic destination
	Destination *string `json:"destination,omitempty"`
	// Traffic protocol
	Protocol *string `json:"protocol,omitempty"`
	// Traffic port
	Port *int32 `json:"port,omitempty"`
	// Traffic sent in kb
	Sent *float32 `json:"sent,omitempty"`
	// Traffic received in kb
	Recv *float32 `json:"recv,omitempty"`
	// Number of clients with traffic
	NumClients *int32 `json:"numClients,omitempty"`
	// Active time with traffic
	ActiveTime *int32 `json:"activeTime,omitempty"`
	// Number of traffic flows
	Flows *int32 `json:"flows,omitempty"`
}

// NewInlineResponse200172 instantiates a new InlineResponse200172 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200172() *InlineResponse200172 {
	this := InlineResponse200172{}
	return &this
}

// NewInlineResponse200172WithDefaults instantiates a new InlineResponse200172 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200172WithDefaults() *InlineResponse200172 {
	this := InlineResponse200172{}
	return &this
}

// GetApplication returns the Application field value if set, zero value otherwise.
func (o *InlineResponse200172) GetApplication() string {
	if o == nil || isNil(o.Application) {
		var ret string
		return ret
	}
	return *o.Application
}

// GetApplicationOk returns a tuple with the Application field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200172) GetApplicationOk() (*string, bool) {
	if o == nil || isNil(o.Application) {
    return nil, false
	}
	return o.Application, true
}

// HasApplication returns a boolean if a field has been set.
func (o *InlineResponse200172) HasApplication() bool {
	if o != nil && !isNil(o.Application) {
		return true
	}

	return false
}

// SetApplication gets a reference to the given string and assigns it to the Application field.
func (o *InlineResponse200172) SetApplication(v string) {
	o.Application = &v
}

// GetDestination returns the Destination field value if set, zero value otherwise.
func (o *InlineResponse200172) GetDestination() string {
	if o == nil || isNil(o.Destination) {
		var ret string
		return ret
	}
	return *o.Destination
}

// GetDestinationOk returns a tuple with the Destination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200172) GetDestinationOk() (*string, bool) {
	if o == nil || isNil(o.Destination) {
    return nil, false
	}
	return o.Destination, true
}

// HasDestination returns a boolean if a field has been set.
func (o *InlineResponse200172) HasDestination() bool {
	if o != nil && !isNil(o.Destination) {
		return true
	}

	return false
}

// SetDestination gets a reference to the given string and assigns it to the Destination field.
func (o *InlineResponse200172) SetDestination(v string) {
	o.Destination = &v
}

// GetProtocol returns the Protocol field value if set, zero value otherwise.
func (o *InlineResponse200172) GetProtocol() string {
	if o == nil || isNil(o.Protocol) {
		var ret string
		return ret
	}
	return *o.Protocol
}

// GetProtocolOk returns a tuple with the Protocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200172) GetProtocolOk() (*string, bool) {
	if o == nil || isNil(o.Protocol) {
    return nil, false
	}
	return o.Protocol, true
}

// HasProtocol returns a boolean if a field has been set.
func (o *InlineResponse200172) HasProtocol() bool {
	if o != nil && !isNil(o.Protocol) {
		return true
	}

	return false
}

// SetProtocol gets a reference to the given string and assigns it to the Protocol field.
func (o *InlineResponse200172) SetProtocol(v string) {
	o.Protocol = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *InlineResponse200172) GetPort() int32 {
	if o == nil || isNil(o.Port) {
		var ret int32
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200172) GetPortOk() (*int32, bool) {
	if o == nil || isNil(o.Port) {
    return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *InlineResponse200172) HasPort() bool {
	if o != nil && !isNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given int32 and assigns it to the Port field.
func (o *InlineResponse200172) SetPort(v int32) {
	o.Port = &v
}

// GetSent returns the Sent field value if set, zero value otherwise.
func (o *InlineResponse200172) GetSent() float32 {
	if o == nil || isNil(o.Sent) {
		var ret float32
		return ret
	}
	return *o.Sent
}

// GetSentOk returns a tuple with the Sent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200172) GetSentOk() (*float32, bool) {
	if o == nil || isNil(o.Sent) {
    return nil, false
	}
	return o.Sent, true
}

// HasSent returns a boolean if a field has been set.
func (o *InlineResponse200172) HasSent() bool {
	if o != nil && !isNil(o.Sent) {
		return true
	}

	return false
}

// SetSent gets a reference to the given float32 and assigns it to the Sent field.
func (o *InlineResponse200172) SetSent(v float32) {
	o.Sent = &v
}

// GetRecv returns the Recv field value if set, zero value otherwise.
func (o *InlineResponse200172) GetRecv() float32 {
	if o == nil || isNil(o.Recv) {
		var ret float32
		return ret
	}
	return *o.Recv
}

// GetRecvOk returns a tuple with the Recv field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200172) GetRecvOk() (*float32, bool) {
	if o == nil || isNil(o.Recv) {
    return nil, false
	}
	return o.Recv, true
}

// HasRecv returns a boolean if a field has been set.
func (o *InlineResponse200172) HasRecv() bool {
	if o != nil && !isNil(o.Recv) {
		return true
	}

	return false
}

// SetRecv gets a reference to the given float32 and assigns it to the Recv field.
func (o *InlineResponse200172) SetRecv(v float32) {
	o.Recv = &v
}

// GetNumClients returns the NumClients field value if set, zero value otherwise.
func (o *InlineResponse200172) GetNumClients() int32 {
	if o == nil || isNil(o.NumClients) {
		var ret int32
		return ret
	}
	return *o.NumClients
}

// GetNumClientsOk returns a tuple with the NumClients field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200172) GetNumClientsOk() (*int32, bool) {
	if o == nil || isNil(o.NumClients) {
    return nil, false
	}
	return o.NumClients, true
}

// HasNumClients returns a boolean if a field has been set.
func (o *InlineResponse200172) HasNumClients() bool {
	if o != nil && !isNil(o.NumClients) {
		return true
	}

	return false
}

// SetNumClients gets a reference to the given int32 and assigns it to the NumClients field.
func (o *InlineResponse200172) SetNumClients(v int32) {
	o.NumClients = &v
}

// GetActiveTime returns the ActiveTime field value if set, zero value otherwise.
func (o *InlineResponse200172) GetActiveTime() int32 {
	if o == nil || isNil(o.ActiveTime) {
		var ret int32
		return ret
	}
	return *o.ActiveTime
}

// GetActiveTimeOk returns a tuple with the ActiveTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200172) GetActiveTimeOk() (*int32, bool) {
	if o == nil || isNil(o.ActiveTime) {
    return nil, false
	}
	return o.ActiveTime, true
}

// HasActiveTime returns a boolean if a field has been set.
func (o *InlineResponse200172) HasActiveTime() bool {
	if o != nil && !isNil(o.ActiveTime) {
		return true
	}

	return false
}

// SetActiveTime gets a reference to the given int32 and assigns it to the ActiveTime field.
func (o *InlineResponse200172) SetActiveTime(v int32) {
	o.ActiveTime = &v
}

// GetFlows returns the Flows field value if set, zero value otherwise.
func (o *InlineResponse200172) GetFlows() int32 {
	if o == nil || isNil(o.Flows) {
		var ret int32
		return ret
	}
	return *o.Flows
}

// GetFlowsOk returns a tuple with the Flows field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200172) GetFlowsOk() (*int32, bool) {
	if o == nil || isNil(o.Flows) {
    return nil, false
	}
	return o.Flows, true
}

// HasFlows returns a boolean if a field has been set.
func (o *InlineResponse200172) HasFlows() bool {
	if o != nil && !isNil(o.Flows) {
		return true
	}

	return false
}

// SetFlows gets a reference to the given int32 and assigns it to the Flows field.
func (o *InlineResponse200172) SetFlows(v int32) {
	o.Flows = &v
}

func (o InlineResponse200172) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Application) {
		toSerialize["application"] = o.Application
	}
	if !isNil(o.Destination) {
		toSerialize["destination"] = o.Destination
	}
	if !isNil(o.Protocol) {
		toSerialize["protocol"] = o.Protocol
	}
	if !isNil(o.Port) {
		toSerialize["port"] = o.Port
	}
	if !isNil(o.Sent) {
		toSerialize["sent"] = o.Sent
	}
	if !isNil(o.Recv) {
		toSerialize["recv"] = o.Recv
	}
	if !isNil(o.NumClients) {
		toSerialize["numClients"] = o.NumClients
	}
	if !isNil(o.ActiveTime) {
		toSerialize["activeTime"] = o.ActiveTime
	}
	if !isNil(o.Flows) {
		toSerialize["flows"] = o.Flows
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200172 struct {
	value *InlineResponse200172
	isSet bool
}

func (v NullableInlineResponse200172) Get() *InlineResponse200172 {
	return v.value
}

func (v *NullableInlineResponse200172) Set(val *InlineResponse200172) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200172) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200172) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200172(val *InlineResponse200172) *NullableInlineResponse200172 {
	return &NullableInlineResponse200172{value: val, isSet: true}
}

func (v NullableInlineResponse200172) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200172) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


