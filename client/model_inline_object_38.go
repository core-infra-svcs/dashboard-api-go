/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 07 August, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.49.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineObject38 struct for InlineObject38
type InlineObject38 struct {
	DefaultDestinations *InlineResponse20046DefaultDestinations `json:"defaultDestinations,omitempty"`
	// Alert-specific configuration for each type. Only alerts that pertain to the network can be updated.
	Alerts []InlineResponse20046Alerts `json:"alerts,omitempty"`
	Muting *InlineResponse20046Muting `json:"muting,omitempty"`
}

// NewInlineObject38 instantiates a new InlineObject38 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject38() *InlineObject38 {
	this := InlineObject38{}
	return &this
}

// NewInlineObject38WithDefaults instantiates a new InlineObject38 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject38WithDefaults() *InlineObject38 {
	this := InlineObject38{}
	return &this
}

// GetDefaultDestinations returns the DefaultDestinations field value if set, zero value otherwise.
func (o *InlineObject38) GetDefaultDestinations() InlineResponse20046DefaultDestinations {
	if o == nil || isNil(o.DefaultDestinations) {
		var ret InlineResponse20046DefaultDestinations
		return ret
	}
	return *o.DefaultDestinations
}

// GetDefaultDestinationsOk returns a tuple with the DefaultDestinations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject38) GetDefaultDestinationsOk() (*InlineResponse20046DefaultDestinations, bool) {
	if o == nil || isNil(o.DefaultDestinations) {
    return nil, false
	}
	return o.DefaultDestinations, true
}

// HasDefaultDestinations returns a boolean if a field has been set.
func (o *InlineObject38) HasDefaultDestinations() bool {
	if o != nil && !isNil(o.DefaultDestinations) {
		return true
	}

	return false
}

// SetDefaultDestinations gets a reference to the given InlineResponse20046DefaultDestinations and assigns it to the DefaultDestinations field.
func (o *InlineObject38) SetDefaultDestinations(v InlineResponse20046DefaultDestinations) {
	o.DefaultDestinations = &v
}

// GetAlerts returns the Alerts field value if set, zero value otherwise.
func (o *InlineObject38) GetAlerts() []InlineResponse20046Alerts {
	if o == nil || isNil(o.Alerts) {
		var ret []InlineResponse20046Alerts
		return ret
	}
	return o.Alerts
}

// GetAlertsOk returns a tuple with the Alerts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject38) GetAlertsOk() ([]InlineResponse20046Alerts, bool) {
	if o == nil || isNil(o.Alerts) {
    return nil, false
	}
	return o.Alerts, true
}

// HasAlerts returns a boolean if a field has been set.
func (o *InlineObject38) HasAlerts() bool {
	if o != nil && !isNil(o.Alerts) {
		return true
	}

	return false
}

// SetAlerts gets a reference to the given []InlineResponse20046Alerts and assigns it to the Alerts field.
func (o *InlineObject38) SetAlerts(v []InlineResponse20046Alerts) {
	o.Alerts = v
}

// GetMuting returns the Muting field value if set, zero value otherwise.
func (o *InlineObject38) GetMuting() InlineResponse20046Muting {
	if o == nil || isNil(o.Muting) {
		var ret InlineResponse20046Muting
		return ret
	}
	return *o.Muting
}

// GetMutingOk returns a tuple with the Muting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject38) GetMutingOk() (*InlineResponse20046Muting, bool) {
	if o == nil || isNil(o.Muting) {
    return nil, false
	}
	return o.Muting, true
}

// HasMuting returns a boolean if a field has been set.
func (o *InlineObject38) HasMuting() bool {
	if o != nil && !isNil(o.Muting) {
		return true
	}

	return false
}

// SetMuting gets a reference to the given InlineResponse20046Muting and assigns it to the Muting field.
func (o *InlineObject38) SetMuting(v InlineResponse20046Muting) {
	o.Muting = &v
}

func (o InlineObject38) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.DefaultDestinations) {
		toSerialize["defaultDestinations"] = o.DefaultDestinations
	}
	if !isNil(o.Alerts) {
		toSerialize["alerts"] = o.Alerts
	}
	if !isNil(o.Muting) {
		toSerialize["muting"] = o.Muting
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject38 struct {
	value *InlineObject38
	isSet bool
}

func (v NullableInlineObject38) Get() *InlineObject38 {
	return v.value
}

func (v *NullableInlineObject38) Set(val *InlineObject38) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject38) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject38) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject38(val *InlineObject38) *NullableInlineObject38 {
	return &NullableInlineObject38{value: val, isSet: true}
}

func (v NullableInlineObject38) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject38) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


