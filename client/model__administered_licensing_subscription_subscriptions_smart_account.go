/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 01 October, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.63.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// AdministeredLicensingSubscriptionSubscriptionsSmartAccount Smart Account linkage information
type AdministeredLicensingSubscriptionSubscriptionsSmartAccount struct {
	// Subscription Smart Account status
	Status *string `json:"status,omitempty"`
	Account *AdministeredLicensingSubscriptionSubscriptionsSmartAccountAccount `json:"account,omitempty"`
}

// NewAdministeredLicensingSubscriptionSubscriptionsSmartAccount instantiates a new AdministeredLicensingSubscriptionSubscriptionsSmartAccount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdministeredLicensingSubscriptionSubscriptionsSmartAccount() *AdministeredLicensingSubscriptionSubscriptionsSmartAccount {
	this := AdministeredLicensingSubscriptionSubscriptionsSmartAccount{}
	return &this
}

// NewAdministeredLicensingSubscriptionSubscriptionsSmartAccountWithDefaults instantiates a new AdministeredLicensingSubscriptionSubscriptionsSmartAccount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdministeredLicensingSubscriptionSubscriptionsSmartAccountWithDefaults() *AdministeredLicensingSubscriptionSubscriptionsSmartAccount {
	this := AdministeredLicensingSubscriptionSubscriptionsSmartAccount{}
	return &this
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *AdministeredLicensingSubscriptionSubscriptionsSmartAccount) GetStatus() string {
	if o == nil || isNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdministeredLicensingSubscriptionSubscriptionsSmartAccount) GetStatusOk() (*string, bool) {
	if o == nil || isNil(o.Status) {
    return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *AdministeredLicensingSubscriptionSubscriptionsSmartAccount) HasStatus() bool {
	if o != nil && !isNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *AdministeredLicensingSubscriptionSubscriptionsSmartAccount) SetStatus(v string) {
	o.Status = &v
}

// GetAccount returns the Account field value if set, zero value otherwise.
func (o *AdministeredLicensingSubscriptionSubscriptionsSmartAccount) GetAccount() AdministeredLicensingSubscriptionSubscriptionsSmartAccountAccount {
	if o == nil || isNil(o.Account) {
		var ret AdministeredLicensingSubscriptionSubscriptionsSmartAccountAccount
		return ret
	}
	return *o.Account
}

// GetAccountOk returns a tuple with the Account field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdministeredLicensingSubscriptionSubscriptionsSmartAccount) GetAccountOk() (*AdministeredLicensingSubscriptionSubscriptionsSmartAccountAccount, bool) {
	if o == nil || isNil(o.Account) {
    return nil, false
	}
	return o.Account, true
}

// HasAccount returns a boolean if a field has been set.
func (o *AdministeredLicensingSubscriptionSubscriptionsSmartAccount) HasAccount() bool {
	if o != nil && !isNil(o.Account) {
		return true
	}

	return false
}

// SetAccount gets a reference to the given AdministeredLicensingSubscriptionSubscriptionsSmartAccountAccount and assigns it to the Account field.
func (o *AdministeredLicensingSubscriptionSubscriptionsSmartAccount) SetAccount(v AdministeredLicensingSubscriptionSubscriptionsSmartAccountAccount) {
	o.Account = &v
}

func (o AdministeredLicensingSubscriptionSubscriptionsSmartAccount) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !isNil(o.Account) {
		toSerialize["account"] = o.Account
	}
	return json.Marshal(toSerialize)
}

type NullableAdministeredLicensingSubscriptionSubscriptionsSmartAccount struct {
	value *AdministeredLicensingSubscriptionSubscriptionsSmartAccount
	isSet bool
}

func (v NullableAdministeredLicensingSubscriptionSubscriptionsSmartAccount) Get() *AdministeredLicensingSubscriptionSubscriptionsSmartAccount {
	return v.value
}

func (v *NullableAdministeredLicensingSubscriptionSubscriptionsSmartAccount) Set(val *AdministeredLicensingSubscriptionSubscriptionsSmartAccount) {
	v.value = val
	v.isSet = true
}

func (v NullableAdministeredLicensingSubscriptionSubscriptionsSmartAccount) IsSet() bool {
	return v.isSet
}

func (v *NullableAdministeredLicensingSubscriptionSubscriptionsSmartAccount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdministeredLicensingSubscriptionSubscriptionsSmartAccount(val *AdministeredLicensingSubscriptionSubscriptionsSmartAccount) *NullableAdministeredLicensingSubscriptionSubscriptionsSmartAccount {
	return &NullableAdministeredLicensingSubscriptionSubscriptionsSmartAccount{value: val, isSet: true}
}

func (v NullableAdministeredLicensingSubscriptionSubscriptionsSmartAccount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdministeredLicensingSubscriptionSubscriptionsSmartAccount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


