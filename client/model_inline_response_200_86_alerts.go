/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 07 February, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.43.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse20086Alerts Email alert settings for DHCP servers
type InlineResponse20086Alerts struct {
	Email *InlineResponse20086AlertsEmail `json:"email,omitempty"`
}

// NewInlineResponse20086Alerts instantiates a new InlineResponse20086Alerts object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20086Alerts() *InlineResponse20086Alerts {
	this := InlineResponse20086Alerts{}
	return &this
}

// NewInlineResponse20086AlertsWithDefaults instantiates a new InlineResponse20086Alerts object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20086AlertsWithDefaults() *InlineResponse20086Alerts {
	this := InlineResponse20086Alerts{}
	return &this
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *InlineResponse20086Alerts) GetEmail() InlineResponse20086AlertsEmail {
	if o == nil || isNil(o.Email) {
		var ret InlineResponse20086AlertsEmail
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20086Alerts) GetEmailOk() (*InlineResponse20086AlertsEmail, bool) {
	if o == nil || isNil(o.Email) {
    return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *InlineResponse20086Alerts) HasEmail() bool {
	if o != nil && !isNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given InlineResponse20086AlertsEmail and assigns it to the Email field.
func (o *InlineResponse20086Alerts) SetEmail(v InlineResponse20086AlertsEmail) {
	o.Email = &v
}

func (o InlineResponse20086Alerts) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20086Alerts struct {
	value *InlineResponse20086Alerts
	isSet bool
}

func (v NullableInlineResponse20086Alerts) Get() *InlineResponse20086Alerts {
	return v.value
}

func (v *NullableInlineResponse20086Alerts) Set(val *InlineResponse20086Alerts) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20086Alerts) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20086Alerts) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20086Alerts(val *InlineResponse20086Alerts) *NullableInlineResponse20086Alerts {
	return &NullableInlineResponse20086Alerts{value: val, isSet: true}
}

func (v NullableInlineResponse20086Alerts) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20086Alerts) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


