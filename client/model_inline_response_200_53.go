/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 06 March, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.44.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse20053 struct for InlineResponse20053
type InlineResponse20053 struct {
	Products *InlineResponse20053Products `json:"products,omitempty"`
	// The ordered stages in the network
	Stages []InlineResponse20053Stages `json:"stages,omitempty"`
	// Reasons for the rollback
	Reasons []InlineResponse20052Reasons `json:"reasons,omitempty"`
}

// NewInlineResponse20053 instantiates a new InlineResponse20053 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20053() *InlineResponse20053 {
	this := InlineResponse20053{}
	return &this
}

// NewInlineResponse20053WithDefaults instantiates a new InlineResponse20053 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20053WithDefaults() *InlineResponse20053 {
	this := InlineResponse20053{}
	return &this
}

// GetProducts returns the Products field value if set, zero value otherwise.
func (o *InlineResponse20053) GetProducts() InlineResponse20053Products {
	if o == nil || isNil(o.Products) {
		var ret InlineResponse20053Products
		return ret
	}
	return *o.Products
}

// GetProductsOk returns a tuple with the Products field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20053) GetProductsOk() (*InlineResponse20053Products, bool) {
	if o == nil || isNil(o.Products) {
    return nil, false
	}
	return o.Products, true
}

// HasProducts returns a boolean if a field has been set.
func (o *InlineResponse20053) HasProducts() bool {
	if o != nil && !isNil(o.Products) {
		return true
	}

	return false
}

// SetProducts gets a reference to the given InlineResponse20053Products and assigns it to the Products field.
func (o *InlineResponse20053) SetProducts(v InlineResponse20053Products) {
	o.Products = &v
}

// GetStages returns the Stages field value if set, zero value otherwise.
func (o *InlineResponse20053) GetStages() []InlineResponse20053Stages {
	if o == nil || isNil(o.Stages) {
		var ret []InlineResponse20053Stages
		return ret
	}
	return o.Stages
}

// GetStagesOk returns a tuple with the Stages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20053) GetStagesOk() ([]InlineResponse20053Stages, bool) {
	if o == nil || isNil(o.Stages) {
    return nil, false
	}
	return o.Stages, true
}

// HasStages returns a boolean if a field has been set.
func (o *InlineResponse20053) HasStages() bool {
	if o != nil && !isNil(o.Stages) {
		return true
	}

	return false
}

// SetStages gets a reference to the given []InlineResponse20053Stages and assigns it to the Stages field.
func (o *InlineResponse20053) SetStages(v []InlineResponse20053Stages) {
	o.Stages = v
}

// GetReasons returns the Reasons field value if set, zero value otherwise.
func (o *InlineResponse20053) GetReasons() []InlineResponse20052Reasons {
	if o == nil || isNil(o.Reasons) {
		var ret []InlineResponse20052Reasons
		return ret
	}
	return o.Reasons
}

// GetReasonsOk returns a tuple with the Reasons field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20053) GetReasonsOk() ([]InlineResponse20052Reasons, bool) {
	if o == nil || isNil(o.Reasons) {
    return nil, false
	}
	return o.Reasons, true
}

// HasReasons returns a boolean if a field has been set.
func (o *InlineResponse20053) HasReasons() bool {
	if o != nil && !isNil(o.Reasons) {
		return true
	}

	return false
}

// SetReasons gets a reference to the given []InlineResponse20052Reasons and assigns it to the Reasons field.
func (o *InlineResponse20053) SetReasons(v []InlineResponse20052Reasons) {
	o.Reasons = v
}

func (o InlineResponse20053) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Products) {
		toSerialize["products"] = o.Products
	}
	if !isNil(o.Stages) {
		toSerialize["stages"] = o.Stages
	}
	if !isNil(o.Reasons) {
		toSerialize["reasons"] = o.Reasons
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20053 struct {
	value *InlineResponse20053
	isSet bool
}

func (v NullableInlineResponse20053) Get() *InlineResponse20053 {
	return v.value
}

func (v *NullableInlineResponse20053) Set(val *InlineResponse20053) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20053) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20053) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20053(val *InlineResponse20053) *NullableInlineResponse20053 {
	return &NullableInlineResponse20053{value: val, isSet: true}
}

func (v NullableInlineResponse20053) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20053) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


