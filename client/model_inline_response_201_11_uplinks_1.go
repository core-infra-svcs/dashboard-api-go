/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 06 August, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.61.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse20111Uplinks1 struct for InlineResponse20111Uplinks1
type InlineResponse20111Uplinks1 struct {
	// Uplink interface name
	Interface *string `json:"interface,omitempty"`
	// Uplink IP addresses of the device
	Addresses []InlineResponse20111Addresses2 `json:"addresses,omitempty"`
}

// NewInlineResponse20111Uplinks1 instantiates a new InlineResponse20111Uplinks1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20111Uplinks1() *InlineResponse20111Uplinks1 {
	this := InlineResponse20111Uplinks1{}
	return &this
}

// NewInlineResponse20111Uplinks1WithDefaults instantiates a new InlineResponse20111Uplinks1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20111Uplinks1WithDefaults() *InlineResponse20111Uplinks1 {
	this := InlineResponse20111Uplinks1{}
	return &this
}

// GetInterface returns the Interface field value if set, zero value otherwise.
func (o *InlineResponse20111Uplinks1) GetInterface() string {
	if o == nil || isNil(o.Interface) {
		var ret string
		return ret
	}
	return *o.Interface
}

// GetInterfaceOk returns a tuple with the Interface field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20111Uplinks1) GetInterfaceOk() (*string, bool) {
	if o == nil || isNil(o.Interface) {
    return nil, false
	}
	return o.Interface, true
}

// HasInterface returns a boolean if a field has been set.
func (o *InlineResponse20111Uplinks1) HasInterface() bool {
	if o != nil && !isNil(o.Interface) {
		return true
	}

	return false
}

// SetInterface gets a reference to the given string and assigns it to the Interface field.
func (o *InlineResponse20111Uplinks1) SetInterface(v string) {
	o.Interface = &v
}

// GetAddresses returns the Addresses field value if set, zero value otherwise.
func (o *InlineResponse20111Uplinks1) GetAddresses() []InlineResponse20111Addresses2 {
	if o == nil || isNil(o.Addresses) {
		var ret []InlineResponse20111Addresses2
		return ret
	}
	return o.Addresses
}

// GetAddressesOk returns a tuple with the Addresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20111Uplinks1) GetAddressesOk() ([]InlineResponse20111Addresses2, bool) {
	if o == nil || isNil(o.Addresses) {
    return nil, false
	}
	return o.Addresses, true
}

// HasAddresses returns a boolean if a field has been set.
func (o *InlineResponse20111Uplinks1) HasAddresses() bool {
	if o != nil && !isNil(o.Addresses) {
		return true
	}

	return false
}

// SetAddresses gets a reference to the given []InlineResponse20111Addresses2 and assigns it to the Addresses field.
func (o *InlineResponse20111Uplinks1) SetAddresses(v []InlineResponse20111Addresses2) {
	o.Addresses = v
}

func (o InlineResponse20111Uplinks1) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Interface) {
		toSerialize["interface"] = o.Interface
	}
	if !isNil(o.Addresses) {
		toSerialize["addresses"] = o.Addresses
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20111Uplinks1 struct {
	value *InlineResponse20111Uplinks1
	isSet bool
}

func (v NullableInlineResponse20111Uplinks1) Get() *InlineResponse20111Uplinks1 {
	return v.value
}

func (v *NullableInlineResponse20111Uplinks1) Set(val *InlineResponse20111Uplinks1) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20111Uplinks1) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20111Uplinks1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20111Uplinks1(val *InlineResponse20111Uplinks1) *NullableInlineResponse20111Uplinks1 {
	return &NullableInlineResponse20111Uplinks1{value: val, isSet: true}
}

func (v NullableInlineResponse20111Uplinks1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20111Uplinks1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


