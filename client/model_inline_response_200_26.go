/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 03 September, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.62.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse20026 struct for InlineResponse20026
type InlineResponse20026 struct {
	// ID of the Multicast routing request. Used to check the status of the request.
	MulticastRoutingId *string `json:"multicastRoutingId,omitempty"`
	// GET this URL to check the status of your Multicast routing request.
	Url *string `json:"url,omitempty"`
	Request *InlineResponse2015Request `json:"request,omitempty"`
	// Status of the Multicast routing request.
	Status *string `json:"status,omitempty"`
	// The interfaces that have PIM enabled
	Interfaces []InlineResponse20026Interfaces `json:"interfaces,omitempty"`
	// The multicast routes
	Routes []InlineResponse20026Routes `json:"routes,omitempty"`
	// Description of the error.
	Error *string `json:"error,omitempty"`
}

// NewInlineResponse20026 instantiates a new InlineResponse20026 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20026() *InlineResponse20026 {
	this := InlineResponse20026{}
	return &this
}

// NewInlineResponse20026WithDefaults instantiates a new InlineResponse20026 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20026WithDefaults() *InlineResponse20026 {
	this := InlineResponse20026{}
	return &this
}

// GetMulticastRoutingId returns the MulticastRoutingId field value if set, zero value otherwise.
func (o *InlineResponse20026) GetMulticastRoutingId() string {
	if o == nil || isNil(o.MulticastRoutingId) {
		var ret string
		return ret
	}
	return *o.MulticastRoutingId
}

// GetMulticastRoutingIdOk returns a tuple with the MulticastRoutingId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20026) GetMulticastRoutingIdOk() (*string, bool) {
	if o == nil || isNil(o.MulticastRoutingId) {
    return nil, false
	}
	return o.MulticastRoutingId, true
}

// HasMulticastRoutingId returns a boolean if a field has been set.
func (o *InlineResponse20026) HasMulticastRoutingId() bool {
	if o != nil && !isNil(o.MulticastRoutingId) {
		return true
	}

	return false
}

// SetMulticastRoutingId gets a reference to the given string and assigns it to the MulticastRoutingId field.
func (o *InlineResponse20026) SetMulticastRoutingId(v string) {
	o.MulticastRoutingId = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *InlineResponse20026) GetUrl() string {
	if o == nil || isNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20026) GetUrlOk() (*string, bool) {
	if o == nil || isNil(o.Url) {
    return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *InlineResponse20026) HasUrl() bool {
	if o != nil && !isNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *InlineResponse20026) SetUrl(v string) {
	o.Url = &v
}

// GetRequest returns the Request field value if set, zero value otherwise.
func (o *InlineResponse20026) GetRequest() InlineResponse2015Request {
	if o == nil || isNil(o.Request) {
		var ret InlineResponse2015Request
		return ret
	}
	return *o.Request
}

// GetRequestOk returns a tuple with the Request field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20026) GetRequestOk() (*InlineResponse2015Request, bool) {
	if o == nil || isNil(o.Request) {
    return nil, false
	}
	return o.Request, true
}

// HasRequest returns a boolean if a field has been set.
func (o *InlineResponse20026) HasRequest() bool {
	if o != nil && !isNil(o.Request) {
		return true
	}

	return false
}

// SetRequest gets a reference to the given InlineResponse2015Request and assigns it to the Request field.
func (o *InlineResponse20026) SetRequest(v InlineResponse2015Request) {
	o.Request = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *InlineResponse20026) GetStatus() string {
	if o == nil || isNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20026) GetStatusOk() (*string, bool) {
	if o == nil || isNil(o.Status) {
    return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *InlineResponse20026) HasStatus() bool {
	if o != nil && !isNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *InlineResponse20026) SetStatus(v string) {
	o.Status = &v
}

// GetInterfaces returns the Interfaces field value if set, zero value otherwise.
func (o *InlineResponse20026) GetInterfaces() []InlineResponse20026Interfaces {
	if o == nil || isNil(o.Interfaces) {
		var ret []InlineResponse20026Interfaces
		return ret
	}
	return o.Interfaces
}

// GetInterfacesOk returns a tuple with the Interfaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20026) GetInterfacesOk() ([]InlineResponse20026Interfaces, bool) {
	if o == nil || isNil(o.Interfaces) {
    return nil, false
	}
	return o.Interfaces, true
}

// HasInterfaces returns a boolean if a field has been set.
func (o *InlineResponse20026) HasInterfaces() bool {
	if o != nil && !isNil(o.Interfaces) {
		return true
	}

	return false
}

// SetInterfaces gets a reference to the given []InlineResponse20026Interfaces and assigns it to the Interfaces field.
func (o *InlineResponse20026) SetInterfaces(v []InlineResponse20026Interfaces) {
	o.Interfaces = v
}

// GetRoutes returns the Routes field value if set, zero value otherwise.
func (o *InlineResponse20026) GetRoutes() []InlineResponse20026Routes {
	if o == nil || isNil(o.Routes) {
		var ret []InlineResponse20026Routes
		return ret
	}
	return o.Routes
}

// GetRoutesOk returns a tuple with the Routes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20026) GetRoutesOk() ([]InlineResponse20026Routes, bool) {
	if o == nil || isNil(o.Routes) {
    return nil, false
	}
	return o.Routes, true
}

// HasRoutes returns a boolean if a field has been set.
func (o *InlineResponse20026) HasRoutes() bool {
	if o != nil && !isNil(o.Routes) {
		return true
	}

	return false
}

// SetRoutes gets a reference to the given []InlineResponse20026Routes and assigns it to the Routes field.
func (o *InlineResponse20026) SetRoutes(v []InlineResponse20026Routes) {
	o.Routes = v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *InlineResponse20026) GetError() string {
	if o == nil || isNil(o.Error) {
		var ret string
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20026) GetErrorOk() (*string, bool) {
	if o == nil || isNil(o.Error) {
    return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *InlineResponse20026) HasError() bool {
	if o != nil && !isNil(o.Error) {
		return true
	}

	return false
}

// SetError gets a reference to the given string and assigns it to the Error field.
func (o *InlineResponse20026) SetError(v string) {
	o.Error = &v
}

func (o InlineResponse20026) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.MulticastRoutingId) {
		toSerialize["multicastRoutingId"] = o.MulticastRoutingId
	}
	if !isNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !isNil(o.Request) {
		toSerialize["request"] = o.Request
	}
	if !isNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !isNil(o.Interfaces) {
		toSerialize["interfaces"] = o.Interfaces
	}
	if !isNil(o.Routes) {
		toSerialize["routes"] = o.Routes
	}
	if !isNil(o.Error) {
		toSerialize["error"] = o.Error
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20026 struct {
	value *InlineResponse20026
	isSet bool
}

func (v NullableInlineResponse20026) Get() *InlineResponse20026 {
	return v.value
}

func (v *NullableInlineResponse20026) Set(val *InlineResponse20026) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20026) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20026) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20026(val *InlineResponse20026) *NullableInlineResponse20026 {
	return &NullableInlineResponse20026{value: val, isSet: true}
}

func (v NullableInlineResponse20026) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20026) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


