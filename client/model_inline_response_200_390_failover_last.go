/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 03 September, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.62.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"time"
)

// InlineResponse200390FailoverLast Wireless LAN controller last failover information
type InlineResponse200390FailoverLast struct {
	// Wireless LAN controller last redundancy switchover time
	Ts *time.Time `json:"ts,omitempty"`
	// Wireless LAN controller last redundancy switchover reason
	Reason *string `json:"reason,omitempty"`
}

// NewInlineResponse200390FailoverLast instantiates a new InlineResponse200390FailoverLast object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200390FailoverLast() *InlineResponse200390FailoverLast {
	this := InlineResponse200390FailoverLast{}
	return &this
}

// NewInlineResponse200390FailoverLastWithDefaults instantiates a new InlineResponse200390FailoverLast object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200390FailoverLastWithDefaults() *InlineResponse200390FailoverLast {
	this := InlineResponse200390FailoverLast{}
	return &this
}

// GetTs returns the Ts field value if set, zero value otherwise.
func (o *InlineResponse200390FailoverLast) GetTs() time.Time {
	if o == nil || isNil(o.Ts) {
		var ret time.Time
		return ret
	}
	return *o.Ts
}

// GetTsOk returns a tuple with the Ts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200390FailoverLast) GetTsOk() (*time.Time, bool) {
	if o == nil || isNil(o.Ts) {
    return nil, false
	}
	return o.Ts, true
}

// HasTs returns a boolean if a field has been set.
func (o *InlineResponse200390FailoverLast) HasTs() bool {
	if o != nil && !isNil(o.Ts) {
		return true
	}

	return false
}

// SetTs gets a reference to the given time.Time and assigns it to the Ts field.
func (o *InlineResponse200390FailoverLast) SetTs(v time.Time) {
	o.Ts = &v
}

// GetReason returns the Reason field value if set, zero value otherwise.
func (o *InlineResponse200390FailoverLast) GetReason() string {
	if o == nil || isNil(o.Reason) {
		var ret string
		return ret
	}
	return *o.Reason
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200390FailoverLast) GetReasonOk() (*string, bool) {
	if o == nil || isNil(o.Reason) {
    return nil, false
	}
	return o.Reason, true
}

// HasReason returns a boolean if a field has been set.
func (o *InlineResponse200390FailoverLast) HasReason() bool {
	if o != nil && !isNil(o.Reason) {
		return true
	}

	return false
}

// SetReason gets a reference to the given string and assigns it to the Reason field.
func (o *InlineResponse200390FailoverLast) SetReason(v string) {
	o.Reason = &v
}

func (o InlineResponse200390FailoverLast) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Ts) {
		toSerialize["ts"] = o.Ts
	}
	if !isNil(o.Reason) {
		toSerialize["reason"] = o.Reason
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200390FailoverLast struct {
	value *InlineResponse200390FailoverLast
	isSet bool
}

func (v NullableInlineResponse200390FailoverLast) Get() *InlineResponse200390FailoverLast {
	return v.value
}

func (v *NullableInlineResponse200390FailoverLast) Set(val *InlineResponse200390FailoverLast) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200390FailoverLast) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200390FailoverLast) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200390FailoverLast(val *InlineResponse200390FailoverLast) *NullableInlineResponse200390FailoverLast {
	return &NullableInlineResponse200390FailoverLast{value: val, isSet: true}
}

func (v NullableInlineResponse200390FailoverLast) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200390FailoverLast) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


