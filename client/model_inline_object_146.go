/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 01 June, 2022 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.22.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineObject146 struct for InlineObject146
type InlineObject146 struct {
	// Whether traffic shaping rules are applied to clients on your SSID.
	TrafficShapingEnabled *bool `json:"trafficShapingEnabled,omitempty"`
	// Whether default traffic shaping rules are enabled (true) or disabled (false). There are 4 default rules, which can be seen on your network's traffic shaping page. Note that default rules count against the rule limit of 8.
	DefaultRulesEnabled *bool `json:"defaultRulesEnabled,omitempty"`
	//     An array of traffic shaping rules. Rules are applied in the order that     they are specified in. An empty list (or null) means no rules. Note that     you are allowed a maximum of 8 rules. 
	Rules *[]NetworksNetworkIdWirelessSsidsNumberTrafficShapingRulesRules `json:"rules,omitempty"`
}

// NewInlineObject146 instantiates a new InlineObject146 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject146() *InlineObject146 {
	this := InlineObject146{}
	return &this
}

// NewInlineObject146WithDefaults instantiates a new InlineObject146 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject146WithDefaults() *InlineObject146 {
	this := InlineObject146{}
	return &this
}

// GetTrafficShapingEnabled returns the TrafficShapingEnabled field value if set, zero value otherwise.
func (o *InlineObject146) GetTrafficShapingEnabled() bool {
	if o == nil || o.TrafficShapingEnabled == nil {
		var ret bool
		return ret
	}
	return *o.TrafficShapingEnabled
}

// GetTrafficShapingEnabledOk returns a tuple with the TrafficShapingEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject146) GetTrafficShapingEnabledOk() (*bool, bool) {
	if o == nil || o.TrafficShapingEnabled == nil {
		return nil, false
	}
	return o.TrafficShapingEnabled, true
}

// HasTrafficShapingEnabled returns a boolean if a field has been set.
func (o *InlineObject146) HasTrafficShapingEnabled() bool {
	if o != nil && o.TrafficShapingEnabled != nil {
		return true
	}

	return false
}

// SetTrafficShapingEnabled gets a reference to the given bool and assigns it to the TrafficShapingEnabled field.
func (o *InlineObject146) SetTrafficShapingEnabled(v bool) {
	o.TrafficShapingEnabled = &v
}

// GetDefaultRulesEnabled returns the DefaultRulesEnabled field value if set, zero value otherwise.
func (o *InlineObject146) GetDefaultRulesEnabled() bool {
	if o == nil || o.DefaultRulesEnabled == nil {
		var ret bool
		return ret
	}
	return *o.DefaultRulesEnabled
}

// GetDefaultRulesEnabledOk returns a tuple with the DefaultRulesEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject146) GetDefaultRulesEnabledOk() (*bool, bool) {
	if o == nil || o.DefaultRulesEnabled == nil {
		return nil, false
	}
	return o.DefaultRulesEnabled, true
}

// HasDefaultRulesEnabled returns a boolean if a field has been set.
func (o *InlineObject146) HasDefaultRulesEnabled() bool {
	if o != nil && o.DefaultRulesEnabled != nil {
		return true
	}

	return false
}

// SetDefaultRulesEnabled gets a reference to the given bool and assigns it to the DefaultRulesEnabled field.
func (o *InlineObject146) SetDefaultRulesEnabled(v bool) {
	o.DefaultRulesEnabled = &v
}

// GetRules returns the Rules field value if set, zero value otherwise.
func (o *InlineObject146) GetRules() []NetworksNetworkIdWirelessSsidsNumberTrafficShapingRulesRules {
	if o == nil || o.Rules == nil {
		var ret []NetworksNetworkIdWirelessSsidsNumberTrafficShapingRulesRules
		return ret
	}
	return *o.Rules
}

// GetRulesOk returns a tuple with the Rules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject146) GetRulesOk() (*[]NetworksNetworkIdWirelessSsidsNumberTrafficShapingRulesRules, bool) {
	if o == nil || o.Rules == nil {
		return nil, false
	}
	return o.Rules, true
}

// HasRules returns a boolean if a field has been set.
func (o *InlineObject146) HasRules() bool {
	if o != nil && o.Rules != nil {
		return true
	}

	return false
}

// SetRules gets a reference to the given []NetworksNetworkIdWirelessSsidsNumberTrafficShapingRulesRules and assigns it to the Rules field.
func (o *InlineObject146) SetRules(v []NetworksNetworkIdWirelessSsidsNumberTrafficShapingRulesRules) {
	o.Rules = &v
}

func (o InlineObject146) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TrafficShapingEnabled != nil {
		toSerialize["trafficShapingEnabled"] = o.TrafficShapingEnabled
	}
	if o.DefaultRulesEnabled != nil {
		toSerialize["defaultRulesEnabled"] = o.DefaultRulesEnabled
	}
	if o.Rules != nil {
		toSerialize["rules"] = o.Rules
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject146 struct {
	value *InlineObject146
	isSet bool
}

func (v NullableInlineObject146) Get() *InlineObject146 {
	return v.value
}

func (v *NullableInlineObject146) Set(val *InlineObject146) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject146) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject146) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject146(val *InlineObject146) *NullableInlineObject146 {
	return &NullableInlineObject146{value: val, isSet: true}
}

func (v NullableInlineObject146) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject146) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


