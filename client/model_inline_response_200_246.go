/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 March, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.56.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200246 struct for InlineResponse200246
type InlineResponse200246 struct {
	// List of eSIM Devices
	Items []InlineResponse200246Items `json:"items,omitempty"`
	Meta *InlineResponse200246Meta `json:"meta,omitempty"`
}

// NewInlineResponse200246 instantiates a new InlineResponse200246 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200246() *InlineResponse200246 {
	this := InlineResponse200246{}
	return &this
}

// NewInlineResponse200246WithDefaults instantiates a new InlineResponse200246 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200246WithDefaults() *InlineResponse200246 {
	this := InlineResponse200246{}
	return &this
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *InlineResponse200246) GetItems() []InlineResponse200246Items {
	if o == nil || isNil(o.Items) {
		var ret []InlineResponse200246Items
		return ret
	}
	return o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200246) GetItemsOk() ([]InlineResponse200246Items, bool) {
	if o == nil || isNil(o.Items) {
    return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *InlineResponse200246) HasItems() bool {
	if o != nil && !isNil(o.Items) {
		return true
	}

	return false
}

// SetItems gets a reference to the given []InlineResponse200246Items and assigns it to the Items field.
func (o *InlineResponse200246) SetItems(v []InlineResponse200246Items) {
	o.Items = v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *InlineResponse200246) GetMeta() InlineResponse200246Meta {
	if o == nil || isNil(o.Meta) {
		var ret InlineResponse200246Meta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200246) GetMetaOk() (*InlineResponse200246Meta, bool) {
	if o == nil || isNil(o.Meta) {
    return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *InlineResponse200246) HasMeta() bool {
	if o != nil && !isNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given InlineResponse200246Meta and assigns it to the Meta field.
func (o *InlineResponse200246) SetMeta(v InlineResponse200246Meta) {
	o.Meta = &v
}

func (o InlineResponse200246) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Items) {
		toSerialize["items"] = o.Items
	}
	if !isNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200246 struct {
	value *InlineResponse200246
	isSet bool
}

func (v NullableInlineResponse200246) Get() *InlineResponse200246 {
	return v.value
}

func (v *NullableInlineResponse200246) Set(val *InlineResponse200246) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200246) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200246) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200246(val *InlineResponse200246) *NullableInlineResponse200246 {
	return &NullableInlineResponse200246{value: val, isSet: true}
}

func (v NullableInlineResponse200246) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200246) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


