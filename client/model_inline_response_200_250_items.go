/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 01 January, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.54.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"time"
)

// InlineResponse200250Items struct for InlineResponse200250Items
type InlineResponse200250Items struct {
	// The device serial
	Serial *string `json:"serial,omitempty"`
	// The migration target destination
	Target *string `json:"target,omitempty"`
	// The time at which a migration was created
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	// The time at which the device initiated migration
	MigratedAt *time.Time `json:"migratedAt,omitempty"`
}

// NewInlineResponse200250Items instantiates a new InlineResponse200250Items object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200250Items() *InlineResponse200250Items {
	this := InlineResponse200250Items{}
	return &this
}

// NewInlineResponse200250ItemsWithDefaults instantiates a new InlineResponse200250Items object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200250ItemsWithDefaults() *InlineResponse200250Items {
	this := InlineResponse200250Items{}
	return &this
}

// GetSerial returns the Serial field value if set, zero value otherwise.
func (o *InlineResponse200250Items) GetSerial() string {
	if o == nil || isNil(o.Serial) {
		var ret string
		return ret
	}
	return *o.Serial
}

// GetSerialOk returns a tuple with the Serial field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200250Items) GetSerialOk() (*string, bool) {
	if o == nil || isNil(o.Serial) {
    return nil, false
	}
	return o.Serial, true
}

// HasSerial returns a boolean if a field has been set.
func (o *InlineResponse200250Items) HasSerial() bool {
	if o != nil && !isNil(o.Serial) {
		return true
	}

	return false
}

// SetSerial gets a reference to the given string and assigns it to the Serial field.
func (o *InlineResponse200250Items) SetSerial(v string) {
	o.Serial = &v
}

// GetTarget returns the Target field value if set, zero value otherwise.
func (o *InlineResponse200250Items) GetTarget() string {
	if o == nil || isNil(o.Target) {
		var ret string
		return ret
	}
	return *o.Target
}

// GetTargetOk returns a tuple with the Target field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200250Items) GetTargetOk() (*string, bool) {
	if o == nil || isNil(o.Target) {
    return nil, false
	}
	return o.Target, true
}

// HasTarget returns a boolean if a field has been set.
func (o *InlineResponse200250Items) HasTarget() bool {
	if o != nil && !isNil(o.Target) {
		return true
	}

	return false
}

// SetTarget gets a reference to the given string and assigns it to the Target field.
func (o *InlineResponse200250Items) SetTarget(v string) {
	o.Target = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *InlineResponse200250Items) GetCreatedAt() time.Time {
	if o == nil || isNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200250Items) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || isNil(o.CreatedAt) {
    return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *InlineResponse200250Items) HasCreatedAt() bool {
	if o != nil && !isNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *InlineResponse200250Items) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetMigratedAt returns the MigratedAt field value if set, zero value otherwise.
func (o *InlineResponse200250Items) GetMigratedAt() time.Time {
	if o == nil || isNil(o.MigratedAt) {
		var ret time.Time
		return ret
	}
	return *o.MigratedAt
}

// GetMigratedAtOk returns a tuple with the MigratedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200250Items) GetMigratedAtOk() (*time.Time, bool) {
	if o == nil || isNil(o.MigratedAt) {
    return nil, false
	}
	return o.MigratedAt, true
}

// HasMigratedAt returns a boolean if a field has been set.
func (o *InlineResponse200250Items) HasMigratedAt() bool {
	if o != nil && !isNil(o.MigratedAt) {
		return true
	}

	return false
}

// SetMigratedAt gets a reference to the given time.Time and assigns it to the MigratedAt field.
func (o *InlineResponse200250Items) SetMigratedAt(v time.Time) {
	o.MigratedAt = &v
}

func (o InlineResponse200250Items) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Serial) {
		toSerialize["serial"] = o.Serial
	}
	if !isNil(o.Target) {
		toSerialize["target"] = o.Target
	}
	if !isNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !isNil(o.MigratedAt) {
		toSerialize["migratedAt"] = o.MigratedAt
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200250Items struct {
	value *InlineResponse200250Items
	isSet bool
}

func (v NullableInlineResponse200250Items) Get() *InlineResponse200250Items {
	return v.value
}

func (v *NullableInlineResponse200250Items) Set(val *InlineResponse200250Items) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200250Items) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200250Items) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200250Items(val *InlineResponse200250Items) *NullableInlineResponse200250Items {
	return &NullableInlineResponse200250Items{value: val, isSet: true}
}

func (v NullableInlineResponse200250Items) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200250Items) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


