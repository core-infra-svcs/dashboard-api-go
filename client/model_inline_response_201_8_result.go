/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 01 October, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.63.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse2018Result Result of the throughput test request
type InlineResponse2018Result struct {
	Speeds *InlineResponse2018ResultSpeeds `json:"speeds,omitempty"`
}

// NewInlineResponse2018Result instantiates a new InlineResponse2018Result object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse2018Result() *InlineResponse2018Result {
	this := InlineResponse2018Result{}
	return &this
}

// NewInlineResponse2018ResultWithDefaults instantiates a new InlineResponse2018Result object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse2018ResultWithDefaults() *InlineResponse2018Result {
	this := InlineResponse2018Result{}
	return &this
}

// GetSpeeds returns the Speeds field value if set, zero value otherwise.
func (o *InlineResponse2018Result) GetSpeeds() InlineResponse2018ResultSpeeds {
	if o == nil || isNil(o.Speeds) {
		var ret InlineResponse2018ResultSpeeds
		return ret
	}
	return *o.Speeds
}

// GetSpeedsOk returns a tuple with the Speeds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2018Result) GetSpeedsOk() (*InlineResponse2018ResultSpeeds, bool) {
	if o == nil || isNil(o.Speeds) {
    return nil, false
	}
	return o.Speeds, true
}

// HasSpeeds returns a boolean if a field has been set.
func (o *InlineResponse2018Result) HasSpeeds() bool {
	if o != nil && !isNil(o.Speeds) {
		return true
	}

	return false
}

// SetSpeeds gets a reference to the given InlineResponse2018ResultSpeeds and assigns it to the Speeds field.
func (o *InlineResponse2018Result) SetSpeeds(v InlineResponse2018ResultSpeeds) {
	o.Speeds = &v
}

func (o InlineResponse2018Result) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Speeds) {
		toSerialize["speeds"] = o.Speeds
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse2018Result struct {
	value *InlineResponse2018Result
	isSet bool
}

func (v NullableInlineResponse2018Result) Get() *InlineResponse2018Result {
	return v.value
}

func (v *NullableInlineResponse2018Result) Set(val *InlineResponse2018Result) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse2018Result) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse2018Result) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse2018Result(val *InlineResponse2018Result) *NullableInlineResponse2018Result {
	return &NullableInlineResponse2018Result{value: val, isSet: true}
}

func (v NullableInlineResponse2018Result) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse2018Result) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


