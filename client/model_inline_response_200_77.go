/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 03 January, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.42.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse20077 struct for InlineResponse20077
type InlineResponse20077 struct {
	// Networks after the split
	ResultingNetworks []InlineResponse20018 `json:"resultingNetworks,omitempty"`
}

// NewInlineResponse20077 instantiates a new InlineResponse20077 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20077() *InlineResponse20077 {
	this := InlineResponse20077{}
	return &this
}

// NewInlineResponse20077WithDefaults instantiates a new InlineResponse20077 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20077WithDefaults() *InlineResponse20077 {
	this := InlineResponse20077{}
	return &this
}

// GetResultingNetworks returns the ResultingNetworks field value if set, zero value otherwise.
func (o *InlineResponse20077) GetResultingNetworks() []InlineResponse20018 {
	if o == nil || isNil(o.ResultingNetworks) {
		var ret []InlineResponse20018
		return ret
	}
	return o.ResultingNetworks
}

// GetResultingNetworksOk returns a tuple with the ResultingNetworks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20077) GetResultingNetworksOk() ([]InlineResponse20018, bool) {
	if o == nil || isNil(o.ResultingNetworks) {
    return nil, false
	}
	return o.ResultingNetworks, true
}

// HasResultingNetworks returns a boolean if a field has been set.
func (o *InlineResponse20077) HasResultingNetworks() bool {
	if o != nil && !isNil(o.ResultingNetworks) {
		return true
	}

	return false
}

// SetResultingNetworks gets a reference to the given []InlineResponse20018 and assigns it to the ResultingNetworks field.
func (o *InlineResponse20077) SetResultingNetworks(v []InlineResponse20018) {
	o.ResultingNetworks = v
}

func (o InlineResponse20077) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.ResultingNetworks) {
		toSerialize["resultingNetworks"] = o.ResultingNetworks
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20077 struct {
	value *InlineResponse20077
	isSet bool
}

func (v NullableInlineResponse20077) Get() *InlineResponse20077 {
	return v.value
}

func (v *NullableInlineResponse20077) Set(val *InlineResponse20077) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20077) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20077) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20077(val *InlineResponse20077) *NullableInlineResponse20077 {
	return &NullableInlineResponse20077{value: val, isSet: true}
}

func (v NullableInlineResponse20077) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20077) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


