/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 04 September, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.50.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// AdministeredLicensingSubscriptionSubscriptionsEnterpriseAgreement enterprise agreement details
type AdministeredLicensingSubscriptionSubscriptionsEnterpriseAgreement struct {
	// List of suites included. Empty for non-EA subscriptions.
	Suites []string `json:"suites,omitempty"`
}

// NewAdministeredLicensingSubscriptionSubscriptionsEnterpriseAgreement instantiates a new AdministeredLicensingSubscriptionSubscriptionsEnterpriseAgreement object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdministeredLicensingSubscriptionSubscriptionsEnterpriseAgreement() *AdministeredLicensingSubscriptionSubscriptionsEnterpriseAgreement {
	this := AdministeredLicensingSubscriptionSubscriptionsEnterpriseAgreement{}
	return &this
}

// NewAdministeredLicensingSubscriptionSubscriptionsEnterpriseAgreementWithDefaults instantiates a new AdministeredLicensingSubscriptionSubscriptionsEnterpriseAgreement object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdministeredLicensingSubscriptionSubscriptionsEnterpriseAgreementWithDefaults() *AdministeredLicensingSubscriptionSubscriptionsEnterpriseAgreement {
	this := AdministeredLicensingSubscriptionSubscriptionsEnterpriseAgreement{}
	return &this
}

// GetSuites returns the Suites field value if set, zero value otherwise.
func (o *AdministeredLicensingSubscriptionSubscriptionsEnterpriseAgreement) GetSuites() []string {
	if o == nil || isNil(o.Suites) {
		var ret []string
		return ret
	}
	return o.Suites
}

// GetSuitesOk returns a tuple with the Suites field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdministeredLicensingSubscriptionSubscriptionsEnterpriseAgreement) GetSuitesOk() ([]string, bool) {
	if o == nil || isNil(o.Suites) {
    return nil, false
	}
	return o.Suites, true
}

// HasSuites returns a boolean if a field has been set.
func (o *AdministeredLicensingSubscriptionSubscriptionsEnterpriseAgreement) HasSuites() bool {
	if o != nil && !isNil(o.Suites) {
		return true
	}

	return false
}

// SetSuites gets a reference to the given []string and assigns it to the Suites field.
func (o *AdministeredLicensingSubscriptionSubscriptionsEnterpriseAgreement) SetSuites(v []string) {
	o.Suites = v
}

func (o AdministeredLicensingSubscriptionSubscriptionsEnterpriseAgreement) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Suites) {
		toSerialize["suites"] = o.Suites
	}
	return json.Marshal(toSerialize)
}

type NullableAdministeredLicensingSubscriptionSubscriptionsEnterpriseAgreement struct {
	value *AdministeredLicensingSubscriptionSubscriptionsEnterpriseAgreement
	isSet bool
}

func (v NullableAdministeredLicensingSubscriptionSubscriptionsEnterpriseAgreement) Get() *AdministeredLicensingSubscriptionSubscriptionsEnterpriseAgreement {
	return v.value
}

func (v *NullableAdministeredLicensingSubscriptionSubscriptionsEnterpriseAgreement) Set(val *AdministeredLicensingSubscriptionSubscriptionsEnterpriseAgreement) {
	v.value = val
	v.isSet = true
}

func (v NullableAdministeredLicensingSubscriptionSubscriptionsEnterpriseAgreement) IsSet() bool {
	return v.isSet
}

func (v *NullableAdministeredLicensingSubscriptionSubscriptionsEnterpriseAgreement) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdministeredLicensingSubscriptionSubscriptionsEnterpriseAgreement(val *AdministeredLicensingSubscriptionSubscriptionsEnterpriseAgreement) *NullableAdministeredLicensingSubscriptionSubscriptionsEnterpriseAgreement {
	return &NullableAdministeredLicensingSubscriptionSubscriptionsEnterpriseAgreement{value: val, isSet: true}
}

func (v NullableAdministeredLicensingSubscriptionSubscriptionsEnterpriseAgreement) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdministeredLicensingSubscriptionSubscriptionsEnterpriseAgreement) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


