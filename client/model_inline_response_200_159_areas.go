/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 06 November, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.52.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200159Areas struct for InlineResponse200159Areas
type InlineResponse200159Areas struct {
	// OSPF area ID
	AreaId *string `json:"areaId,omitempty"`
	// Name of the OSPF area
	AreaName *string `json:"areaName,omitempty"`
	// Area types in OSPF. Must be one of: [\"normal\", \"stub\", \"nssa\"]
	AreaType *string `json:"areaType,omitempty"`
}

// NewInlineResponse200159Areas instantiates a new InlineResponse200159Areas object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200159Areas() *InlineResponse200159Areas {
	this := InlineResponse200159Areas{}
	return &this
}

// NewInlineResponse200159AreasWithDefaults instantiates a new InlineResponse200159Areas object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200159AreasWithDefaults() *InlineResponse200159Areas {
	this := InlineResponse200159Areas{}
	return &this
}

// GetAreaId returns the AreaId field value if set, zero value otherwise.
func (o *InlineResponse200159Areas) GetAreaId() string {
	if o == nil || isNil(o.AreaId) {
		var ret string
		return ret
	}
	return *o.AreaId
}

// GetAreaIdOk returns a tuple with the AreaId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200159Areas) GetAreaIdOk() (*string, bool) {
	if o == nil || isNil(o.AreaId) {
    return nil, false
	}
	return o.AreaId, true
}

// HasAreaId returns a boolean if a field has been set.
func (o *InlineResponse200159Areas) HasAreaId() bool {
	if o != nil && !isNil(o.AreaId) {
		return true
	}

	return false
}

// SetAreaId gets a reference to the given string and assigns it to the AreaId field.
func (o *InlineResponse200159Areas) SetAreaId(v string) {
	o.AreaId = &v
}

// GetAreaName returns the AreaName field value if set, zero value otherwise.
func (o *InlineResponse200159Areas) GetAreaName() string {
	if o == nil || isNil(o.AreaName) {
		var ret string
		return ret
	}
	return *o.AreaName
}

// GetAreaNameOk returns a tuple with the AreaName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200159Areas) GetAreaNameOk() (*string, bool) {
	if o == nil || isNil(o.AreaName) {
    return nil, false
	}
	return o.AreaName, true
}

// HasAreaName returns a boolean if a field has been set.
func (o *InlineResponse200159Areas) HasAreaName() bool {
	if o != nil && !isNil(o.AreaName) {
		return true
	}

	return false
}

// SetAreaName gets a reference to the given string and assigns it to the AreaName field.
func (o *InlineResponse200159Areas) SetAreaName(v string) {
	o.AreaName = &v
}

// GetAreaType returns the AreaType field value if set, zero value otherwise.
func (o *InlineResponse200159Areas) GetAreaType() string {
	if o == nil || isNil(o.AreaType) {
		var ret string
		return ret
	}
	return *o.AreaType
}

// GetAreaTypeOk returns a tuple with the AreaType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200159Areas) GetAreaTypeOk() (*string, bool) {
	if o == nil || isNil(o.AreaType) {
    return nil, false
	}
	return o.AreaType, true
}

// HasAreaType returns a boolean if a field has been set.
func (o *InlineResponse200159Areas) HasAreaType() bool {
	if o != nil && !isNil(o.AreaType) {
		return true
	}

	return false
}

// SetAreaType gets a reference to the given string and assigns it to the AreaType field.
func (o *InlineResponse200159Areas) SetAreaType(v string) {
	o.AreaType = &v
}

func (o InlineResponse200159Areas) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.AreaId) {
		toSerialize["areaId"] = o.AreaId
	}
	if !isNil(o.AreaName) {
		toSerialize["areaName"] = o.AreaName
	}
	if !isNil(o.AreaType) {
		toSerialize["areaType"] = o.AreaType
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200159Areas struct {
	value *InlineResponse200159Areas
	isSet bool
}

func (v NullableInlineResponse200159Areas) Get() *InlineResponse200159Areas {
	return v.value
}

func (v *NullableInlineResponse200159Areas) Set(val *InlineResponse200159Areas) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200159Areas) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200159Areas) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200159Areas(val *InlineResponse200159Areas) *NullableInlineResponse200159Areas {
	return &NullableInlineResponse200159Areas{value: val, isSet: true}
}

func (v NullableInlineResponse200159Areas) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200159Areas) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


