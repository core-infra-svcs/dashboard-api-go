/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 01 October, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.63.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse20026Routes struct for InlineResponse20026Routes
type InlineResponse20026Routes struct {
	// Source IP or \"Any\"
	Source *string `json:"source,omitempty"`
	// Group IP address
	Group *string `json:"group,omitempty"`
	// IP address of the rendezvous point
	RendezvousPoint *string `json:"rendezvousPoint,omitempty"`
	// Name of the Virtual Interface traffic is arriving on
	IncomingInterfaceName *string `json:"incomingInterfaceName,omitempty"`
	// Array of outgoing Virtual Interface names
	OutgoingInterfaceNames []string `json:"outgoingInterfaceNames,omitempty"`
	// List of flags (unordered)
	Flags []string `json:"flags,omitempty"`
}

// NewInlineResponse20026Routes instantiates a new InlineResponse20026Routes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20026Routes() *InlineResponse20026Routes {
	this := InlineResponse20026Routes{}
	return &this
}

// NewInlineResponse20026RoutesWithDefaults instantiates a new InlineResponse20026Routes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20026RoutesWithDefaults() *InlineResponse20026Routes {
	this := InlineResponse20026Routes{}
	return &this
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *InlineResponse20026Routes) GetSource() string {
	if o == nil || isNil(o.Source) {
		var ret string
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20026Routes) GetSourceOk() (*string, bool) {
	if o == nil || isNil(o.Source) {
    return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *InlineResponse20026Routes) HasSource() bool {
	if o != nil && !isNil(o.Source) {
		return true
	}

	return false
}

// SetSource gets a reference to the given string and assigns it to the Source field.
func (o *InlineResponse20026Routes) SetSource(v string) {
	o.Source = &v
}

// GetGroup returns the Group field value if set, zero value otherwise.
func (o *InlineResponse20026Routes) GetGroup() string {
	if o == nil || isNil(o.Group) {
		var ret string
		return ret
	}
	return *o.Group
}

// GetGroupOk returns a tuple with the Group field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20026Routes) GetGroupOk() (*string, bool) {
	if o == nil || isNil(o.Group) {
    return nil, false
	}
	return o.Group, true
}

// HasGroup returns a boolean if a field has been set.
func (o *InlineResponse20026Routes) HasGroup() bool {
	if o != nil && !isNil(o.Group) {
		return true
	}

	return false
}

// SetGroup gets a reference to the given string and assigns it to the Group field.
func (o *InlineResponse20026Routes) SetGroup(v string) {
	o.Group = &v
}

// GetRendezvousPoint returns the RendezvousPoint field value if set, zero value otherwise.
func (o *InlineResponse20026Routes) GetRendezvousPoint() string {
	if o == nil || isNil(o.RendezvousPoint) {
		var ret string
		return ret
	}
	return *o.RendezvousPoint
}

// GetRendezvousPointOk returns a tuple with the RendezvousPoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20026Routes) GetRendezvousPointOk() (*string, bool) {
	if o == nil || isNil(o.RendezvousPoint) {
    return nil, false
	}
	return o.RendezvousPoint, true
}

// HasRendezvousPoint returns a boolean if a field has been set.
func (o *InlineResponse20026Routes) HasRendezvousPoint() bool {
	if o != nil && !isNil(o.RendezvousPoint) {
		return true
	}

	return false
}

// SetRendezvousPoint gets a reference to the given string and assigns it to the RendezvousPoint field.
func (o *InlineResponse20026Routes) SetRendezvousPoint(v string) {
	o.RendezvousPoint = &v
}

// GetIncomingInterfaceName returns the IncomingInterfaceName field value if set, zero value otherwise.
func (o *InlineResponse20026Routes) GetIncomingInterfaceName() string {
	if o == nil || isNil(o.IncomingInterfaceName) {
		var ret string
		return ret
	}
	return *o.IncomingInterfaceName
}

// GetIncomingInterfaceNameOk returns a tuple with the IncomingInterfaceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20026Routes) GetIncomingInterfaceNameOk() (*string, bool) {
	if o == nil || isNil(o.IncomingInterfaceName) {
    return nil, false
	}
	return o.IncomingInterfaceName, true
}

// HasIncomingInterfaceName returns a boolean if a field has been set.
func (o *InlineResponse20026Routes) HasIncomingInterfaceName() bool {
	if o != nil && !isNil(o.IncomingInterfaceName) {
		return true
	}

	return false
}

// SetIncomingInterfaceName gets a reference to the given string and assigns it to the IncomingInterfaceName field.
func (o *InlineResponse20026Routes) SetIncomingInterfaceName(v string) {
	o.IncomingInterfaceName = &v
}

// GetOutgoingInterfaceNames returns the OutgoingInterfaceNames field value if set, zero value otherwise.
func (o *InlineResponse20026Routes) GetOutgoingInterfaceNames() []string {
	if o == nil || isNil(o.OutgoingInterfaceNames) {
		var ret []string
		return ret
	}
	return o.OutgoingInterfaceNames
}

// GetOutgoingInterfaceNamesOk returns a tuple with the OutgoingInterfaceNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20026Routes) GetOutgoingInterfaceNamesOk() ([]string, bool) {
	if o == nil || isNil(o.OutgoingInterfaceNames) {
    return nil, false
	}
	return o.OutgoingInterfaceNames, true
}

// HasOutgoingInterfaceNames returns a boolean if a field has been set.
func (o *InlineResponse20026Routes) HasOutgoingInterfaceNames() bool {
	if o != nil && !isNil(o.OutgoingInterfaceNames) {
		return true
	}

	return false
}

// SetOutgoingInterfaceNames gets a reference to the given []string and assigns it to the OutgoingInterfaceNames field.
func (o *InlineResponse20026Routes) SetOutgoingInterfaceNames(v []string) {
	o.OutgoingInterfaceNames = v
}

// GetFlags returns the Flags field value if set, zero value otherwise.
func (o *InlineResponse20026Routes) GetFlags() []string {
	if o == nil || isNil(o.Flags) {
		var ret []string
		return ret
	}
	return o.Flags
}

// GetFlagsOk returns a tuple with the Flags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20026Routes) GetFlagsOk() ([]string, bool) {
	if o == nil || isNil(o.Flags) {
    return nil, false
	}
	return o.Flags, true
}

// HasFlags returns a boolean if a field has been set.
func (o *InlineResponse20026Routes) HasFlags() bool {
	if o != nil && !isNil(o.Flags) {
		return true
	}

	return false
}

// SetFlags gets a reference to the given []string and assigns it to the Flags field.
func (o *InlineResponse20026Routes) SetFlags(v []string) {
	o.Flags = v
}

func (o InlineResponse20026Routes) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Source) {
		toSerialize["source"] = o.Source
	}
	if !isNil(o.Group) {
		toSerialize["group"] = o.Group
	}
	if !isNil(o.RendezvousPoint) {
		toSerialize["rendezvousPoint"] = o.RendezvousPoint
	}
	if !isNil(o.IncomingInterfaceName) {
		toSerialize["incomingInterfaceName"] = o.IncomingInterfaceName
	}
	if !isNil(o.OutgoingInterfaceNames) {
		toSerialize["outgoingInterfaceNames"] = o.OutgoingInterfaceNames
	}
	if !isNil(o.Flags) {
		toSerialize["flags"] = o.Flags
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20026Routes struct {
	value *InlineResponse20026Routes
	isSet bool
}

func (v NullableInlineResponse20026Routes) Get() *InlineResponse20026Routes {
	return v.value
}

func (v *NullableInlineResponse20026Routes) Set(val *InlineResponse20026Routes) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20026Routes) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20026Routes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20026Routes(val *InlineResponse20026Routes) *NullableInlineResponse20026Routes {
	return &NullableInlineResponse20026Routes{value: val, isSet: true}
}

func (v NullableInlineResponse20026Routes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20026Routes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


