/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 01 May, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.46.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// OrganizationsOrganizationIdSensorReadingsHistoryRealPower Reading for the 'realPower' metric. This will only be present if the 'metric' property equals 'realPower'.
type OrganizationsOrganizationIdSensorReadingsHistoryRealPower struct {
	// Real power reading in watts.
	Draw *float32 `json:"draw,omitempty"`
}

// NewOrganizationsOrganizationIdSensorReadingsHistoryRealPower instantiates a new OrganizationsOrganizationIdSensorReadingsHistoryRealPower object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationsOrganizationIdSensorReadingsHistoryRealPower() *OrganizationsOrganizationIdSensorReadingsHistoryRealPower {
	this := OrganizationsOrganizationIdSensorReadingsHistoryRealPower{}
	return &this
}

// NewOrganizationsOrganizationIdSensorReadingsHistoryRealPowerWithDefaults instantiates a new OrganizationsOrganizationIdSensorReadingsHistoryRealPower object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationsOrganizationIdSensorReadingsHistoryRealPowerWithDefaults() *OrganizationsOrganizationIdSensorReadingsHistoryRealPower {
	this := OrganizationsOrganizationIdSensorReadingsHistoryRealPower{}
	return &this
}

// GetDraw returns the Draw field value if set, zero value otherwise.
func (o *OrganizationsOrganizationIdSensorReadingsHistoryRealPower) GetDraw() float32 {
	if o == nil || isNil(o.Draw) {
		var ret float32
		return ret
	}
	return *o.Draw
}

// GetDrawOk returns a tuple with the Draw field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationsOrganizationIdSensorReadingsHistoryRealPower) GetDrawOk() (*float32, bool) {
	if o == nil || isNil(o.Draw) {
    return nil, false
	}
	return o.Draw, true
}

// HasDraw returns a boolean if a field has been set.
func (o *OrganizationsOrganizationIdSensorReadingsHistoryRealPower) HasDraw() bool {
	if o != nil && !isNil(o.Draw) {
		return true
	}

	return false
}

// SetDraw gets a reference to the given float32 and assigns it to the Draw field.
func (o *OrganizationsOrganizationIdSensorReadingsHistoryRealPower) SetDraw(v float32) {
	o.Draw = &v
}

func (o OrganizationsOrganizationIdSensorReadingsHistoryRealPower) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Draw) {
		toSerialize["draw"] = o.Draw
	}
	return json.Marshal(toSerialize)
}

type NullableOrganizationsOrganizationIdSensorReadingsHistoryRealPower struct {
	value *OrganizationsOrganizationIdSensorReadingsHistoryRealPower
	isSet bool
}

func (v NullableOrganizationsOrganizationIdSensorReadingsHistoryRealPower) Get() *OrganizationsOrganizationIdSensorReadingsHistoryRealPower {
	return v.value
}

func (v *NullableOrganizationsOrganizationIdSensorReadingsHistoryRealPower) Set(val *OrganizationsOrganizationIdSensorReadingsHistoryRealPower) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationsOrganizationIdSensorReadingsHistoryRealPower) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationsOrganizationIdSensorReadingsHistoryRealPower) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationsOrganizationIdSensorReadingsHistoryRealPower(val *OrganizationsOrganizationIdSensorReadingsHistoryRealPower) *NullableOrganizationsOrganizationIdSensorReadingsHistoryRealPower {
	return &NullableOrganizationsOrganizationIdSensorReadingsHistoryRealPower{value: val, isSet: true}
}

func (v NullableOrganizationsOrganizationIdSensorReadingsHistoryRealPower) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationsOrganizationIdSensorReadingsHistoryRealPower) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


