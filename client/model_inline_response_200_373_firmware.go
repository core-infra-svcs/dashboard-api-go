/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 07 May, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.58.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200373Firmware Wireless LAN controller device firmware information
type InlineResponse200373Firmware struct {
	Version *InlineResponse200373FirmwareVersion `json:"version,omitempty"`
}

// NewInlineResponse200373Firmware instantiates a new InlineResponse200373Firmware object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200373Firmware() *InlineResponse200373Firmware {
	this := InlineResponse200373Firmware{}
	return &this
}

// NewInlineResponse200373FirmwareWithDefaults instantiates a new InlineResponse200373Firmware object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200373FirmwareWithDefaults() *InlineResponse200373Firmware {
	this := InlineResponse200373Firmware{}
	return &this
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *InlineResponse200373Firmware) GetVersion() InlineResponse200373FirmwareVersion {
	if o == nil || isNil(o.Version) {
		var ret InlineResponse200373FirmwareVersion
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200373Firmware) GetVersionOk() (*InlineResponse200373FirmwareVersion, bool) {
	if o == nil || isNil(o.Version) {
    return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *InlineResponse200373Firmware) HasVersion() bool {
	if o != nil && !isNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given InlineResponse200373FirmwareVersion and assigns it to the Version field.
func (o *InlineResponse200373Firmware) SetVersion(v InlineResponse200373FirmwareVersion) {
	o.Version = &v
}

func (o InlineResponse200373Firmware) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200373Firmware struct {
	value *InlineResponse200373Firmware
	isSet bool
}

func (v NullableInlineResponse200373Firmware) Get() *InlineResponse200373Firmware {
	return v.value
}

func (v *NullableInlineResponse200373Firmware) Set(val *InlineResponse200373Firmware) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200373Firmware) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200373Firmware) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200373Firmware(val *InlineResponse200373Firmware) *NullableInlineResponse200373Firmware {
	return &NullableInlineResponse200373Firmware{value: val, isSet: true}
}

func (v NullableInlineResponse200373Firmware) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200373Firmware) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


