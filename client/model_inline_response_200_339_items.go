/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 06 November, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.52.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200339Items struct for InlineResponse200339Items
type InlineResponse200339Items struct {
	// Wireless LAN controller cloud ID
	Serial *string `json:"serial,omitempty"`
	Network *InlineResponse200326Network `json:"network,omitempty"`
	Counts *InlineResponse200339Counts `json:"counts,omitempty"`
	Redundancy *InlineResponse200339Redundancy `json:"redundancy,omitempty"`
	Firmware *InlineResponse200339Firmware `json:"firmware,omitempty"`
}

// NewInlineResponse200339Items instantiates a new InlineResponse200339Items object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200339Items() *InlineResponse200339Items {
	this := InlineResponse200339Items{}
	return &this
}

// NewInlineResponse200339ItemsWithDefaults instantiates a new InlineResponse200339Items object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200339ItemsWithDefaults() *InlineResponse200339Items {
	this := InlineResponse200339Items{}
	return &this
}

// GetSerial returns the Serial field value if set, zero value otherwise.
func (o *InlineResponse200339Items) GetSerial() string {
	if o == nil || isNil(o.Serial) {
		var ret string
		return ret
	}
	return *o.Serial
}

// GetSerialOk returns a tuple with the Serial field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200339Items) GetSerialOk() (*string, bool) {
	if o == nil || isNil(o.Serial) {
    return nil, false
	}
	return o.Serial, true
}

// HasSerial returns a boolean if a field has been set.
func (o *InlineResponse200339Items) HasSerial() bool {
	if o != nil && !isNil(o.Serial) {
		return true
	}

	return false
}

// SetSerial gets a reference to the given string and assigns it to the Serial field.
func (o *InlineResponse200339Items) SetSerial(v string) {
	o.Serial = &v
}

// GetNetwork returns the Network field value if set, zero value otherwise.
func (o *InlineResponse200339Items) GetNetwork() InlineResponse200326Network {
	if o == nil || isNil(o.Network) {
		var ret InlineResponse200326Network
		return ret
	}
	return *o.Network
}

// GetNetworkOk returns a tuple with the Network field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200339Items) GetNetworkOk() (*InlineResponse200326Network, bool) {
	if o == nil || isNil(o.Network) {
    return nil, false
	}
	return o.Network, true
}

// HasNetwork returns a boolean if a field has been set.
func (o *InlineResponse200339Items) HasNetwork() bool {
	if o != nil && !isNil(o.Network) {
		return true
	}

	return false
}

// SetNetwork gets a reference to the given InlineResponse200326Network and assigns it to the Network field.
func (o *InlineResponse200339Items) SetNetwork(v InlineResponse200326Network) {
	o.Network = &v
}

// GetCounts returns the Counts field value if set, zero value otherwise.
func (o *InlineResponse200339Items) GetCounts() InlineResponse200339Counts {
	if o == nil || isNil(o.Counts) {
		var ret InlineResponse200339Counts
		return ret
	}
	return *o.Counts
}

// GetCountsOk returns a tuple with the Counts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200339Items) GetCountsOk() (*InlineResponse200339Counts, bool) {
	if o == nil || isNil(o.Counts) {
    return nil, false
	}
	return o.Counts, true
}

// HasCounts returns a boolean if a field has been set.
func (o *InlineResponse200339Items) HasCounts() bool {
	if o != nil && !isNil(o.Counts) {
		return true
	}

	return false
}

// SetCounts gets a reference to the given InlineResponse200339Counts and assigns it to the Counts field.
func (o *InlineResponse200339Items) SetCounts(v InlineResponse200339Counts) {
	o.Counts = &v
}

// GetRedundancy returns the Redundancy field value if set, zero value otherwise.
func (o *InlineResponse200339Items) GetRedundancy() InlineResponse200339Redundancy {
	if o == nil || isNil(o.Redundancy) {
		var ret InlineResponse200339Redundancy
		return ret
	}
	return *o.Redundancy
}

// GetRedundancyOk returns a tuple with the Redundancy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200339Items) GetRedundancyOk() (*InlineResponse200339Redundancy, bool) {
	if o == nil || isNil(o.Redundancy) {
    return nil, false
	}
	return o.Redundancy, true
}

// HasRedundancy returns a boolean if a field has been set.
func (o *InlineResponse200339Items) HasRedundancy() bool {
	if o != nil && !isNil(o.Redundancy) {
		return true
	}

	return false
}

// SetRedundancy gets a reference to the given InlineResponse200339Redundancy and assigns it to the Redundancy field.
func (o *InlineResponse200339Items) SetRedundancy(v InlineResponse200339Redundancy) {
	o.Redundancy = &v
}

// GetFirmware returns the Firmware field value if set, zero value otherwise.
func (o *InlineResponse200339Items) GetFirmware() InlineResponse200339Firmware {
	if o == nil || isNil(o.Firmware) {
		var ret InlineResponse200339Firmware
		return ret
	}
	return *o.Firmware
}

// GetFirmwareOk returns a tuple with the Firmware field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200339Items) GetFirmwareOk() (*InlineResponse200339Firmware, bool) {
	if o == nil || isNil(o.Firmware) {
    return nil, false
	}
	return o.Firmware, true
}

// HasFirmware returns a boolean if a field has been set.
func (o *InlineResponse200339Items) HasFirmware() bool {
	if o != nil && !isNil(o.Firmware) {
		return true
	}

	return false
}

// SetFirmware gets a reference to the given InlineResponse200339Firmware and assigns it to the Firmware field.
func (o *InlineResponse200339Items) SetFirmware(v InlineResponse200339Firmware) {
	o.Firmware = &v
}

func (o InlineResponse200339Items) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Serial) {
		toSerialize["serial"] = o.Serial
	}
	if !isNil(o.Network) {
		toSerialize["network"] = o.Network
	}
	if !isNil(o.Counts) {
		toSerialize["counts"] = o.Counts
	}
	if !isNil(o.Redundancy) {
		toSerialize["redundancy"] = o.Redundancy
	}
	if !isNil(o.Firmware) {
		toSerialize["firmware"] = o.Firmware
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200339Items struct {
	value *InlineResponse200339Items
	isSet bool
}

func (v NullableInlineResponse200339Items) Get() *InlineResponse200339Items {
	return v.value
}

func (v *NullableInlineResponse200339Items) Set(val *InlineResponse200339Items) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200339Items) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200339Items) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200339Items(val *InlineResponse200339Items) *NullableInlineResponse200339Items {
	return &NullableInlineResponse200339Items{value: val, isSet: true}
}

func (v NullableInlineResponse200339Items) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200339Items) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


