/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 07 August, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.49.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200142Switches struct for InlineResponse200142Switches
type InlineResponse200142Switches struct {
	// Switch serial number
	Serial *string `json:"serial,omitempty"`
	// Switch alternative management IP. To remove a prior IP setting, provide an empty string
	AlternateManagementIp *string `json:"alternateManagementIp,omitempty"`
	// Switch subnet mask must be in IP format. Only and must be specified for Polaris switches
	SubnetMask *string `json:"subnetMask,omitempty"`
	// Switch gateway must be in IP format. Only and must be specified for Polaris switches
	Gateway *string `json:"gateway,omitempty"`
}

// NewInlineResponse200142Switches instantiates a new InlineResponse200142Switches object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200142Switches() *InlineResponse200142Switches {
	this := InlineResponse200142Switches{}
	return &this
}

// NewInlineResponse200142SwitchesWithDefaults instantiates a new InlineResponse200142Switches object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200142SwitchesWithDefaults() *InlineResponse200142Switches {
	this := InlineResponse200142Switches{}
	return &this
}

// GetSerial returns the Serial field value if set, zero value otherwise.
func (o *InlineResponse200142Switches) GetSerial() string {
	if o == nil || isNil(o.Serial) {
		var ret string
		return ret
	}
	return *o.Serial
}

// GetSerialOk returns a tuple with the Serial field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200142Switches) GetSerialOk() (*string, bool) {
	if o == nil || isNil(o.Serial) {
    return nil, false
	}
	return o.Serial, true
}

// HasSerial returns a boolean if a field has been set.
func (o *InlineResponse200142Switches) HasSerial() bool {
	if o != nil && !isNil(o.Serial) {
		return true
	}

	return false
}

// SetSerial gets a reference to the given string and assigns it to the Serial field.
func (o *InlineResponse200142Switches) SetSerial(v string) {
	o.Serial = &v
}

// GetAlternateManagementIp returns the AlternateManagementIp field value if set, zero value otherwise.
func (o *InlineResponse200142Switches) GetAlternateManagementIp() string {
	if o == nil || isNil(o.AlternateManagementIp) {
		var ret string
		return ret
	}
	return *o.AlternateManagementIp
}

// GetAlternateManagementIpOk returns a tuple with the AlternateManagementIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200142Switches) GetAlternateManagementIpOk() (*string, bool) {
	if o == nil || isNil(o.AlternateManagementIp) {
    return nil, false
	}
	return o.AlternateManagementIp, true
}

// HasAlternateManagementIp returns a boolean if a field has been set.
func (o *InlineResponse200142Switches) HasAlternateManagementIp() bool {
	if o != nil && !isNil(o.AlternateManagementIp) {
		return true
	}

	return false
}

// SetAlternateManagementIp gets a reference to the given string and assigns it to the AlternateManagementIp field.
func (o *InlineResponse200142Switches) SetAlternateManagementIp(v string) {
	o.AlternateManagementIp = &v
}

// GetSubnetMask returns the SubnetMask field value if set, zero value otherwise.
func (o *InlineResponse200142Switches) GetSubnetMask() string {
	if o == nil || isNil(o.SubnetMask) {
		var ret string
		return ret
	}
	return *o.SubnetMask
}

// GetSubnetMaskOk returns a tuple with the SubnetMask field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200142Switches) GetSubnetMaskOk() (*string, bool) {
	if o == nil || isNil(o.SubnetMask) {
    return nil, false
	}
	return o.SubnetMask, true
}

// HasSubnetMask returns a boolean if a field has been set.
func (o *InlineResponse200142Switches) HasSubnetMask() bool {
	if o != nil && !isNil(o.SubnetMask) {
		return true
	}

	return false
}

// SetSubnetMask gets a reference to the given string and assigns it to the SubnetMask field.
func (o *InlineResponse200142Switches) SetSubnetMask(v string) {
	o.SubnetMask = &v
}

// GetGateway returns the Gateway field value if set, zero value otherwise.
func (o *InlineResponse200142Switches) GetGateway() string {
	if o == nil || isNil(o.Gateway) {
		var ret string
		return ret
	}
	return *o.Gateway
}

// GetGatewayOk returns a tuple with the Gateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200142Switches) GetGatewayOk() (*string, bool) {
	if o == nil || isNil(o.Gateway) {
    return nil, false
	}
	return o.Gateway, true
}

// HasGateway returns a boolean if a field has been set.
func (o *InlineResponse200142Switches) HasGateway() bool {
	if o != nil && !isNil(o.Gateway) {
		return true
	}

	return false
}

// SetGateway gets a reference to the given string and assigns it to the Gateway field.
func (o *InlineResponse200142Switches) SetGateway(v string) {
	o.Gateway = &v
}

func (o InlineResponse200142Switches) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Serial) {
		toSerialize["serial"] = o.Serial
	}
	if !isNil(o.AlternateManagementIp) {
		toSerialize["alternateManagementIp"] = o.AlternateManagementIp
	}
	if !isNil(o.SubnetMask) {
		toSerialize["subnetMask"] = o.SubnetMask
	}
	if !isNil(o.Gateway) {
		toSerialize["gateway"] = o.Gateway
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200142Switches struct {
	value *InlineResponse200142Switches
	isSet bool
}

func (v NullableInlineResponse200142Switches) Get() *InlineResponse200142Switches {
	return v.value
}

func (v *NullableInlineResponse200142Switches) Set(val *InlineResponse200142Switches) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200142Switches) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200142Switches) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200142Switches(val *InlineResponse200142Switches) *NullableInlineResponse200142Switches {
	return &NullableInlineResponse200142Switches{value: val, isSet: true}
}

func (v NullableInlineResponse200142Switches) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200142Switches) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


