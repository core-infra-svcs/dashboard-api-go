/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 01 October, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.63.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// OrganizationsOrganizationIdApplianceVpnStatusesUplinks struct for OrganizationsOrganizationIdApplianceVpnStatusesUplinks
type OrganizationsOrganizationIdApplianceVpnStatusesUplinks struct {
	// Uplink Interface Name
	Interface *string `json:"interface,omitempty"`
	// Uplink IP address (in IP or CIDR notation)
	PublicIp *string `json:"publicIp,omitempty"`
}

// NewOrganizationsOrganizationIdApplianceVpnStatusesUplinks instantiates a new OrganizationsOrganizationIdApplianceVpnStatusesUplinks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationsOrganizationIdApplianceVpnStatusesUplinks() *OrganizationsOrganizationIdApplianceVpnStatusesUplinks {
	this := OrganizationsOrganizationIdApplianceVpnStatusesUplinks{}
	return &this
}

// NewOrganizationsOrganizationIdApplianceVpnStatusesUplinksWithDefaults instantiates a new OrganizationsOrganizationIdApplianceVpnStatusesUplinks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationsOrganizationIdApplianceVpnStatusesUplinksWithDefaults() *OrganizationsOrganizationIdApplianceVpnStatusesUplinks {
	this := OrganizationsOrganizationIdApplianceVpnStatusesUplinks{}
	return &this
}

// GetInterface returns the Interface field value if set, zero value otherwise.
func (o *OrganizationsOrganizationIdApplianceVpnStatusesUplinks) GetInterface() string {
	if o == nil || isNil(o.Interface) {
		var ret string
		return ret
	}
	return *o.Interface
}

// GetInterfaceOk returns a tuple with the Interface field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationsOrganizationIdApplianceVpnStatusesUplinks) GetInterfaceOk() (*string, bool) {
	if o == nil || isNil(o.Interface) {
    return nil, false
	}
	return o.Interface, true
}

// HasInterface returns a boolean if a field has been set.
func (o *OrganizationsOrganizationIdApplianceVpnStatusesUplinks) HasInterface() bool {
	if o != nil && !isNil(o.Interface) {
		return true
	}

	return false
}

// SetInterface gets a reference to the given string and assigns it to the Interface field.
func (o *OrganizationsOrganizationIdApplianceVpnStatusesUplinks) SetInterface(v string) {
	o.Interface = &v
}

// GetPublicIp returns the PublicIp field value if set, zero value otherwise.
func (o *OrganizationsOrganizationIdApplianceVpnStatusesUplinks) GetPublicIp() string {
	if o == nil || isNil(o.PublicIp) {
		var ret string
		return ret
	}
	return *o.PublicIp
}

// GetPublicIpOk returns a tuple with the PublicIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationsOrganizationIdApplianceVpnStatusesUplinks) GetPublicIpOk() (*string, bool) {
	if o == nil || isNil(o.PublicIp) {
    return nil, false
	}
	return o.PublicIp, true
}

// HasPublicIp returns a boolean if a field has been set.
func (o *OrganizationsOrganizationIdApplianceVpnStatusesUplinks) HasPublicIp() bool {
	if o != nil && !isNil(o.PublicIp) {
		return true
	}

	return false
}

// SetPublicIp gets a reference to the given string and assigns it to the PublicIp field.
func (o *OrganizationsOrganizationIdApplianceVpnStatusesUplinks) SetPublicIp(v string) {
	o.PublicIp = &v
}

func (o OrganizationsOrganizationIdApplianceVpnStatusesUplinks) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Interface) {
		toSerialize["interface"] = o.Interface
	}
	if !isNil(o.PublicIp) {
		toSerialize["publicIp"] = o.PublicIp
	}
	return json.Marshal(toSerialize)
}

type NullableOrganizationsOrganizationIdApplianceVpnStatusesUplinks struct {
	value *OrganizationsOrganizationIdApplianceVpnStatusesUplinks
	isSet bool
}

func (v NullableOrganizationsOrganizationIdApplianceVpnStatusesUplinks) Get() *OrganizationsOrganizationIdApplianceVpnStatusesUplinks {
	return v.value
}

func (v *NullableOrganizationsOrganizationIdApplianceVpnStatusesUplinks) Set(val *OrganizationsOrganizationIdApplianceVpnStatusesUplinks) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationsOrganizationIdApplianceVpnStatusesUplinks) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationsOrganizationIdApplianceVpnStatusesUplinks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationsOrganizationIdApplianceVpnStatusesUplinks(val *OrganizationsOrganizationIdApplianceVpnStatusesUplinks) *NullableOrganizationsOrganizationIdApplianceVpnStatusesUplinks {
	return &NullableOrganizationsOrganizationIdApplianceVpnStatusesUplinks{value: val, isSet: true}
}

func (v NullableOrganizationsOrganizationIdApplianceVpnStatusesUplinks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationsOrganizationIdApplianceVpnStatusesUplinks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


