/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 01 October, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.63.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// OrganizationsOrganizationIdApplianceDnsSplitProfilesNameservers1 Contains the nameserver information for redirection.
type OrganizationsOrganizationIdApplianceDnsSplitProfilesNameservers1 struct {
	// The nameserver address(es) to use for redirection. A maximum of one address is supported.
	Addresses []string `json:"addresses"`
}

// NewOrganizationsOrganizationIdApplianceDnsSplitProfilesNameservers1 instantiates a new OrganizationsOrganizationIdApplianceDnsSplitProfilesNameservers1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationsOrganizationIdApplianceDnsSplitProfilesNameservers1(addresses []string) *OrganizationsOrganizationIdApplianceDnsSplitProfilesNameservers1 {
	this := OrganizationsOrganizationIdApplianceDnsSplitProfilesNameservers1{}
	this.Addresses = addresses
	return &this
}

// NewOrganizationsOrganizationIdApplianceDnsSplitProfilesNameservers1WithDefaults instantiates a new OrganizationsOrganizationIdApplianceDnsSplitProfilesNameservers1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationsOrganizationIdApplianceDnsSplitProfilesNameservers1WithDefaults() *OrganizationsOrganizationIdApplianceDnsSplitProfilesNameservers1 {
	this := OrganizationsOrganizationIdApplianceDnsSplitProfilesNameservers1{}
	return &this
}

// GetAddresses returns the Addresses field value
func (o *OrganizationsOrganizationIdApplianceDnsSplitProfilesNameservers1) GetAddresses() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Addresses
}

// GetAddressesOk returns a tuple with the Addresses field value
// and a boolean to check if the value has been set.
func (o *OrganizationsOrganizationIdApplianceDnsSplitProfilesNameservers1) GetAddressesOk() ([]string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Addresses, true
}

// SetAddresses sets field value
func (o *OrganizationsOrganizationIdApplianceDnsSplitProfilesNameservers1) SetAddresses(v []string) {
	o.Addresses = v
}

func (o OrganizationsOrganizationIdApplianceDnsSplitProfilesNameservers1) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["addresses"] = o.Addresses
	}
	return json.Marshal(toSerialize)
}

type NullableOrganizationsOrganizationIdApplianceDnsSplitProfilesNameservers1 struct {
	value *OrganizationsOrganizationIdApplianceDnsSplitProfilesNameservers1
	isSet bool
}

func (v NullableOrganizationsOrganizationIdApplianceDnsSplitProfilesNameservers1) Get() *OrganizationsOrganizationIdApplianceDnsSplitProfilesNameservers1 {
	return v.value
}

func (v *NullableOrganizationsOrganizationIdApplianceDnsSplitProfilesNameservers1) Set(val *OrganizationsOrganizationIdApplianceDnsSplitProfilesNameservers1) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationsOrganizationIdApplianceDnsSplitProfilesNameservers1) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationsOrganizationIdApplianceDnsSplitProfilesNameservers1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationsOrganizationIdApplianceDnsSplitProfilesNameservers1(val *OrganizationsOrganizationIdApplianceDnsSplitProfilesNameservers1) *NullableOrganizationsOrganizationIdApplianceDnsSplitProfilesNameservers1 {
	return &NullableOrganizationsOrganizationIdApplianceDnsSplitProfilesNameservers1{value: val, isSet: true}
}

func (v NullableOrganizationsOrganizationIdApplianceDnsSplitProfilesNameservers1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationsOrganizationIdApplianceDnsSplitProfilesNameservers1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


