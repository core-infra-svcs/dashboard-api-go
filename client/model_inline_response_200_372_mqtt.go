/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 01 October, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.63.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200372Mqtt MQTT Settings for network
type InlineResponse200372Mqtt struct {
	// MQTT ID
	SettingsId *string `json:"settingsId,omitempty"`
	// MQTT Enabled
	Enabled *bool `json:"enabled,omitempty"`
	// MQTT Topic
	Topic *string `json:"topic,omitempty"`
	// Select fields to populate in MQTT messages. Valid types are: RSSI, AP MAC address, Client MAC address, Timestamp, Radio, Network ID, Beacon type, Raw payload, Client UUID, Client major value, Client minor value, Signal power, Band, Slot ID
	MessageFields []string `json:"messageFields,omitempty"`
	Publishing *InlineResponse200372MqttPublishing `json:"publishing,omitempty"`
	Broker *InlineResponse200372MqttBroker `json:"broker,omitempty"`
}

// NewInlineResponse200372Mqtt instantiates a new InlineResponse200372Mqtt object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200372Mqtt() *InlineResponse200372Mqtt {
	this := InlineResponse200372Mqtt{}
	return &this
}

// NewInlineResponse200372MqttWithDefaults instantiates a new InlineResponse200372Mqtt object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200372MqttWithDefaults() *InlineResponse200372Mqtt {
	this := InlineResponse200372Mqtt{}
	return &this
}

// GetSettingsId returns the SettingsId field value if set, zero value otherwise.
func (o *InlineResponse200372Mqtt) GetSettingsId() string {
	if o == nil || isNil(o.SettingsId) {
		var ret string
		return ret
	}
	return *o.SettingsId
}

// GetSettingsIdOk returns a tuple with the SettingsId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200372Mqtt) GetSettingsIdOk() (*string, bool) {
	if o == nil || isNil(o.SettingsId) {
    return nil, false
	}
	return o.SettingsId, true
}

// HasSettingsId returns a boolean if a field has been set.
func (o *InlineResponse200372Mqtt) HasSettingsId() bool {
	if o != nil && !isNil(o.SettingsId) {
		return true
	}

	return false
}

// SetSettingsId gets a reference to the given string and assigns it to the SettingsId field.
func (o *InlineResponse200372Mqtt) SetSettingsId(v string) {
	o.SettingsId = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *InlineResponse200372Mqtt) GetEnabled() bool {
	if o == nil || isNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200372Mqtt) GetEnabledOk() (*bool, bool) {
	if o == nil || isNil(o.Enabled) {
    return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *InlineResponse200372Mqtt) HasEnabled() bool {
	if o != nil && !isNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *InlineResponse200372Mqtt) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetTopic returns the Topic field value if set, zero value otherwise.
func (o *InlineResponse200372Mqtt) GetTopic() string {
	if o == nil || isNil(o.Topic) {
		var ret string
		return ret
	}
	return *o.Topic
}

// GetTopicOk returns a tuple with the Topic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200372Mqtt) GetTopicOk() (*string, bool) {
	if o == nil || isNil(o.Topic) {
    return nil, false
	}
	return o.Topic, true
}

// HasTopic returns a boolean if a field has been set.
func (o *InlineResponse200372Mqtt) HasTopic() bool {
	if o != nil && !isNil(o.Topic) {
		return true
	}

	return false
}

// SetTopic gets a reference to the given string and assigns it to the Topic field.
func (o *InlineResponse200372Mqtt) SetTopic(v string) {
	o.Topic = &v
}

// GetMessageFields returns the MessageFields field value if set, zero value otherwise.
func (o *InlineResponse200372Mqtt) GetMessageFields() []string {
	if o == nil || isNil(o.MessageFields) {
		var ret []string
		return ret
	}
	return o.MessageFields
}

// GetMessageFieldsOk returns a tuple with the MessageFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200372Mqtt) GetMessageFieldsOk() ([]string, bool) {
	if o == nil || isNil(o.MessageFields) {
    return nil, false
	}
	return o.MessageFields, true
}

// HasMessageFields returns a boolean if a field has been set.
func (o *InlineResponse200372Mqtt) HasMessageFields() bool {
	if o != nil && !isNil(o.MessageFields) {
		return true
	}

	return false
}

// SetMessageFields gets a reference to the given []string and assigns it to the MessageFields field.
func (o *InlineResponse200372Mqtt) SetMessageFields(v []string) {
	o.MessageFields = v
}

// GetPublishing returns the Publishing field value if set, zero value otherwise.
func (o *InlineResponse200372Mqtt) GetPublishing() InlineResponse200372MqttPublishing {
	if o == nil || isNil(o.Publishing) {
		var ret InlineResponse200372MqttPublishing
		return ret
	}
	return *o.Publishing
}

// GetPublishingOk returns a tuple with the Publishing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200372Mqtt) GetPublishingOk() (*InlineResponse200372MqttPublishing, bool) {
	if o == nil || isNil(o.Publishing) {
    return nil, false
	}
	return o.Publishing, true
}

// HasPublishing returns a boolean if a field has been set.
func (o *InlineResponse200372Mqtt) HasPublishing() bool {
	if o != nil && !isNil(o.Publishing) {
		return true
	}

	return false
}

// SetPublishing gets a reference to the given InlineResponse200372MqttPublishing and assigns it to the Publishing field.
func (o *InlineResponse200372Mqtt) SetPublishing(v InlineResponse200372MqttPublishing) {
	o.Publishing = &v
}

// GetBroker returns the Broker field value if set, zero value otherwise.
func (o *InlineResponse200372Mqtt) GetBroker() InlineResponse200372MqttBroker {
	if o == nil || isNil(o.Broker) {
		var ret InlineResponse200372MqttBroker
		return ret
	}
	return *o.Broker
}

// GetBrokerOk returns a tuple with the Broker field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200372Mqtt) GetBrokerOk() (*InlineResponse200372MqttBroker, bool) {
	if o == nil || isNil(o.Broker) {
    return nil, false
	}
	return o.Broker, true
}

// HasBroker returns a boolean if a field has been set.
func (o *InlineResponse200372Mqtt) HasBroker() bool {
	if o != nil && !isNil(o.Broker) {
		return true
	}

	return false
}

// SetBroker gets a reference to the given InlineResponse200372MqttBroker and assigns it to the Broker field.
func (o *InlineResponse200372Mqtt) SetBroker(v InlineResponse200372MqttBroker) {
	o.Broker = &v
}

func (o InlineResponse200372Mqtt) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.SettingsId) {
		toSerialize["settingsId"] = o.SettingsId
	}
	if !isNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !isNil(o.Topic) {
		toSerialize["topic"] = o.Topic
	}
	if !isNil(o.MessageFields) {
		toSerialize["messageFields"] = o.MessageFields
	}
	if !isNil(o.Publishing) {
		toSerialize["publishing"] = o.Publishing
	}
	if !isNil(o.Broker) {
		toSerialize["broker"] = o.Broker
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200372Mqtt struct {
	value *InlineResponse200372Mqtt
	isSet bool
}

func (v NullableInlineResponse200372Mqtt) Get() *InlineResponse200372Mqtt {
	return v.value
}

func (v *NullableInlineResponse200372Mqtt) Set(val *InlineResponse200372Mqtt) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200372Mqtt) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200372Mqtt) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200372Mqtt(val *InlineResponse200372Mqtt) *NullableInlineResponse200372Mqtt {
	return &NullableInlineResponse200372Mqtt{value: val, isSet: true}
}

func (v NullableInlineResponse200372Mqtt) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200372Mqtt) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


