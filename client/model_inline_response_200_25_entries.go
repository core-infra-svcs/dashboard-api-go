/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 04 June, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.59.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse20025Entries struct for InlineResponse20025Entries
type InlineResponse20025Entries struct {
	// The MAC address of the MAC entry
	Mac *string `json:"mac,omitempty"`
	// The name of the interface of the MAC entry
	Port *string `json:"port,omitempty"`
	// The vlan id of the MAC entry
	VlanId *int32 `json:"vlanId,omitempty"`
}

// NewInlineResponse20025Entries instantiates a new InlineResponse20025Entries object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20025Entries() *InlineResponse20025Entries {
	this := InlineResponse20025Entries{}
	return &this
}

// NewInlineResponse20025EntriesWithDefaults instantiates a new InlineResponse20025Entries object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20025EntriesWithDefaults() *InlineResponse20025Entries {
	this := InlineResponse20025Entries{}
	return &this
}

// GetMac returns the Mac field value if set, zero value otherwise.
func (o *InlineResponse20025Entries) GetMac() string {
	if o == nil || isNil(o.Mac) {
		var ret string
		return ret
	}
	return *o.Mac
}

// GetMacOk returns a tuple with the Mac field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20025Entries) GetMacOk() (*string, bool) {
	if o == nil || isNil(o.Mac) {
    return nil, false
	}
	return o.Mac, true
}

// HasMac returns a boolean if a field has been set.
func (o *InlineResponse20025Entries) HasMac() bool {
	if o != nil && !isNil(o.Mac) {
		return true
	}

	return false
}

// SetMac gets a reference to the given string and assigns it to the Mac field.
func (o *InlineResponse20025Entries) SetMac(v string) {
	o.Mac = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *InlineResponse20025Entries) GetPort() string {
	if o == nil || isNil(o.Port) {
		var ret string
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20025Entries) GetPortOk() (*string, bool) {
	if o == nil || isNil(o.Port) {
    return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *InlineResponse20025Entries) HasPort() bool {
	if o != nil && !isNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given string and assigns it to the Port field.
func (o *InlineResponse20025Entries) SetPort(v string) {
	o.Port = &v
}

// GetVlanId returns the VlanId field value if set, zero value otherwise.
func (o *InlineResponse20025Entries) GetVlanId() int32 {
	if o == nil || isNil(o.VlanId) {
		var ret int32
		return ret
	}
	return *o.VlanId
}

// GetVlanIdOk returns a tuple with the VlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20025Entries) GetVlanIdOk() (*int32, bool) {
	if o == nil || isNil(o.VlanId) {
    return nil, false
	}
	return o.VlanId, true
}

// HasVlanId returns a boolean if a field has been set.
func (o *InlineResponse20025Entries) HasVlanId() bool {
	if o != nil && !isNil(o.VlanId) {
		return true
	}

	return false
}

// SetVlanId gets a reference to the given int32 and assigns it to the VlanId field.
func (o *InlineResponse20025Entries) SetVlanId(v int32) {
	o.VlanId = &v
}

func (o InlineResponse20025Entries) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Mac) {
		toSerialize["mac"] = o.Mac
	}
	if !isNil(o.Port) {
		toSerialize["port"] = o.Port
	}
	if !isNil(o.VlanId) {
		toSerialize["vlanId"] = o.VlanId
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20025Entries struct {
	value *InlineResponse20025Entries
	isSet bool
}

func (v NullableInlineResponse20025Entries) Get() *InlineResponse20025Entries {
	return v.value
}

func (v *NullableInlineResponse20025Entries) Set(val *InlineResponse20025Entries) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20025Entries) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20025Entries) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20025Entries(val *InlineResponse20025Entries) *NullableInlineResponse20025Entries {
	return &NullableInlineResponse20025Entries{value: val, isSet: true}
}

func (v NullableInlineResponse20025Entries) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20025Entries) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


