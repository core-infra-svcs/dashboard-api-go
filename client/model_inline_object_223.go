/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 04 December, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.53.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineObject223 struct for InlineObject223
type InlineObject223 struct {
	//       An ordered list of branding policy IDs that determines the priority order of how to apply the policies 
	BrandingPolicyIds []string `json:"brandingPolicyIds,omitempty"`
}

// NewInlineObject223 instantiates a new InlineObject223 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject223() *InlineObject223 {
	this := InlineObject223{}
	return &this
}

// NewInlineObject223WithDefaults instantiates a new InlineObject223 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject223WithDefaults() *InlineObject223 {
	this := InlineObject223{}
	return &this
}

// GetBrandingPolicyIds returns the BrandingPolicyIds field value if set, zero value otherwise.
func (o *InlineObject223) GetBrandingPolicyIds() []string {
	if o == nil || isNil(o.BrandingPolicyIds) {
		var ret []string
		return ret
	}
	return o.BrandingPolicyIds
}

// GetBrandingPolicyIdsOk returns a tuple with the BrandingPolicyIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject223) GetBrandingPolicyIdsOk() ([]string, bool) {
	if o == nil || isNil(o.BrandingPolicyIds) {
    return nil, false
	}
	return o.BrandingPolicyIds, true
}

// HasBrandingPolicyIds returns a boolean if a field has been set.
func (o *InlineObject223) HasBrandingPolicyIds() bool {
	if o != nil && !isNil(o.BrandingPolicyIds) {
		return true
	}

	return false
}

// SetBrandingPolicyIds gets a reference to the given []string and assigns it to the BrandingPolicyIds field.
func (o *InlineObject223) SetBrandingPolicyIds(v []string) {
	o.BrandingPolicyIds = v
}

func (o InlineObject223) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.BrandingPolicyIds) {
		toSerialize["brandingPolicyIds"] = o.BrandingPolicyIds
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject223 struct {
	value *InlineObject223
	isSet bool
}

func (v NullableInlineObject223) Get() *InlineObject223 {
	return v.value
}

func (v *NullableInlineObject223) Set(val *InlineObject223) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject223) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject223) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject223(val *InlineObject223) *NullableInlineObject223 {
	return &NullableInlineObject223{value: val, isSet: true}
}

func (v NullableInlineObject223) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject223) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


