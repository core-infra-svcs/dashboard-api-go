/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 03 September, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.62.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse20026Interfaces struct for InlineResponse20026Interfaces
type InlineResponse20026Interfaces struct {
	// Interface IP address
	Ip *string `json:"ip,omitempty"`
	// Interface name
	Name *string `json:"name,omitempty"`
	// Subnet containing the interface
	Subnet *string `json:"subnet,omitempty"`
	// List of flags (unordered)
	Flags []string `json:"flags,omitempty"`
	// Array of PIM Neighbor IP Addresses
	Neighbors []string `json:"neighbors,omitempty"`
}

// NewInlineResponse20026Interfaces instantiates a new InlineResponse20026Interfaces object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20026Interfaces() *InlineResponse20026Interfaces {
	this := InlineResponse20026Interfaces{}
	return &this
}

// NewInlineResponse20026InterfacesWithDefaults instantiates a new InlineResponse20026Interfaces object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20026InterfacesWithDefaults() *InlineResponse20026Interfaces {
	this := InlineResponse20026Interfaces{}
	return &this
}

// GetIp returns the Ip field value if set, zero value otherwise.
func (o *InlineResponse20026Interfaces) GetIp() string {
	if o == nil || isNil(o.Ip) {
		var ret string
		return ret
	}
	return *o.Ip
}

// GetIpOk returns a tuple with the Ip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20026Interfaces) GetIpOk() (*string, bool) {
	if o == nil || isNil(o.Ip) {
    return nil, false
	}
	return o.Ip, true
}

// HasIp returns a boolean if a field has been set.
func (o *InlineResponse20026Interfaces) HasIp() bool {
	if o != nil && !isNil(o.Ip) {
		return true
	}

	return false
}

// SetIp gets a reference to the given string and assigns it to the Ip field.
func (o *InlineResponse20026Interfaces) SetIp(v string) {
	o.Ip = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *InlineResponse20026Interfaces) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20026Interfaces) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
    return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *InlineResponse20026Interfaces) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *InlineResponse20026Interfaces) SetName(v string) {
	o.Name = &v
}

// GetSubnet returns the Subnet field value if set, zero value otherwise.
func (o *InlineResponse20026Interfaces) GetSubnet() string {
	if o == nil || isNil(o.Subnet) {
		var ret string
		return ret
	}
	return *o.Subnet
}

// GetSubnetOk returns a tuple with the Subnet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20026Interfaces) GetSubnetOk() (*string, bool) {
	if o == nil || isNil(o.Subnet) {
    return nil, false
	}
	return o.Subnet, true
}

// HasSubnet returns a boolean if a field has been set.
func (o *InlineResponse20026Interfaces) HasSubnet() bool {
	if o != nil && !isNil(o.Subnet) {
		return true
	}

	return false
}

// SetSubnet gets a reference to the given string and assigns it to the Subnet field.
func (o *InlineResponse20026Interfaces) SetSubnet(v string) {
	o.Subnet = &v
}

// GetFlags returns the Flags field value if set, zero value otherwise.
func (o *InlineResponse20026Interfaces) GetFlags() []string {
	if o == nil || isNil(o.Flags) {
		var ret []string
		return ret
	}
	return o.Flags
}

// GetFlagsOk returns a tuple with the Flags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20026Interfaces) GetFlagsOk() ([]string, bool) {
	if o == nil || isNil(o.Flags) {
    return nil, false
	}
	return o.Flags, true
}

// HasFlags returns a boolean if a field has been set.
func (o *InlineResponse20026Interfaces) HasFlags() bool {
	if o != nil && !isNil(o.Flags) {
		return true
	}

	return false
}

// SetFlags gets a reference to the given []string and assigns it to the Flags field.
func (o *InlineResponse20026Interfaces) SetFlags(v []string) {
	o.Flags = v
}

// GetNeighbors returns the Neighbors field value if set, zero value otherwise.
func (o *InlineResponse20026Interfaces) GetNeighbors() []string {
	if o == nil || isNil(o.Neighbors) {
		var ret []string
		return ret
	}
	return o.Neighbors
}

// GetNeighborsOk returns a tuple with the Neighbors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20026Interfaces) GetNeighborsOk() ([]string, bool) {
	if o == nil || isNil(o.Neighbors) {
    return nil, false
	}
	return o.Neighbors, true
}

// HasNeighbors returns a boolean if a field has been set.
func (o *InlineResponse20026Interfaces) HasNeighbors() bool {
	if o != nil && !isNil(o.Neighbors) {
		return true
	}

	return false
}

// SetNeighbors gets a reference to the given []string and assigns it to the Neighbors field.
func (o *InlineResponse20026Interfaces) SetNeighbors(v []string) {
	o.Neighbors = v
}

func (o InlineResponse20026Interfaces) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Ip) {
		toSerialize["ip"] = o.Ip
	}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.Subnet) {
		toSerialize["subnet"] = o.Subnet
	}
	if !isNil(o.Flags) {
		toSerialize["flags"] = o.Flags
	}
	if !isNil(o.Neighbors) {
		toSerialize["neighbors"] = o.Neighbors
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20026Interfaces struct {
	value *InlineResponse20026Interfaces
	isSet bool
}

func (v NullableInlineResponse20026Interfaces) Get() *InlineResponse20026Interfaces {
	return v.value
}

func (v *NullableInlineResponse20026Interfaces) Set(val *InlineResponse20026Interfaces) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20026Interfaces) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20026Interfaces) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20026Interfaces(val *InlineResponse20026Interfaces) *NullableInlineResponse20026Interfaces {
	return &NullableInlineResponse20026Interfaces{value: val, isSet: true}
}

func (v NullableInlineResponse20026Interfaces) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20026Interfaces) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


