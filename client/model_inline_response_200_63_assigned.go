/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 03 September, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.62.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse20063Assigned struct for InlineResponse20063Assigned
type InlineResponse20063Assigned struct {
	// ID of the RF Profile.
	Id *string `json:"id,omitempty"`
	// ID of network this RF Profile belongs in.
	NetworkId *string `json:"networkId,omitempty"`
	// The name of the profile.
	Name *string `json:"name,omitempty"`
	TwoFourGhzSettings *InlineResponse20063TwoFourGhzSettings `json:"twoFourGhzSettings,omitempty"`
	FiveGhzSettings *InlineResponse20063FiveGhzSettings `json:"fiveGhzSettings,omitempty"`
	PerSsidSettings *InlineResponse20063PerSsidSettings `json:"perSsidSettings,omitempty"`
}

// NewInlineResponse20063Assigned instantiates a new InlineResponse20063Assigned object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20063Assigned() *InlineResponse20063Assigned {
	this := InlineResponse20063Assigned{}
	return &this
}

// NewInlineResponse20063AssignedWithDefaults instantiates a new InlineResponse20063Assigned object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20063AssignedWithDefaults() *InlineResponse20063Assigned {
	this := InlineResponse20063Assigned{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *InlineResponse20063Assigned) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20063Assigned) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *InlineResponse20063Assigned) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *InlineResponse20063Assigned) SetId(v string) {
	o.Id = &v
}

// GetNetworkId returns the NetworkId field value if set, zero value otherwise.
func (o *InlineResponse20063Assigned) GetNetworkId() string {
	if o == nil || isNil(o.NetworkId) {
		var ret string
		return ret
	}
	return *o.NetworkId
}

// GetNetworkIdOk returns a tuple with the NetworkId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20063Assigned) GetNetworkIdOk() (*string, bool) {
	if o == nil || isNil(o.NetworkId) {
    return nil, false
	}
	return o.NetworkId, true
}

// HasNetworkId returns a boolean if a field has been set.
func (o *InlineResponse20063Assigned) HasNetworkId() bool {
	if o != nil && !isNil(o.NetworkId) {
		return true
	}

	return false
}

// SetNetworkId gets a reference to the given string and assigns it to the NetworkId field.
func (o *InlineResponse20063Assigned) SetNetworkId(v string) {
	o.NetworkId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *InlineResponse20063Assigned) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20063Assigned) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
    return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *InlineResponse20063Assigned) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *InlineResponse20063Assigned) SetName(v string) {
	o.Name = &v
}

// GetTwoFourGhzSettings returns the TwoFourGhzSettings field value if set, zero value otherwise.
func (o *InlineResponse20063Assigned) GetTwoFourGhzSettings() InlineResponse20063TwoFourGhzSettings {
	if o == nil || isNil(o.TwoFourGhzSettings) {
		var ret InlineResponse20063TwoFourGhzSettings
		return ret
	}
	return *o.TwoFourGhzSettings
}

// GetTwoFourGhzSettingsOk returns a tuple with the TwoFourGhzSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20063Assigned) GetTwoFourGhzSettingsOk() (*InlineResponse20063TwoFourGhzSettings, bool) {
	if o == nil || isNil(o.TwoFourGhzSettings) {
    return nil, false
	}
	return o.TwoFourGhzSettings, true
}

// HasTwoFourGhzSettings returns a boolean if a field has been set.
func (o *InlineResponse20063Assigned) HasTwoFourGhzSettings() bool {
	if o != nil && !isNil(o.TwoFourGhzSettings) {
		return true
	}

	return false
}

// SetTwoFourGhzSettings gets a reference to the given InlineResponse20063TwoFourGhzSettings and assigns it to the TwoFourGhzSettings field.
func (o *InlineResponse20063Assigned) SetTwoFourGhzSettings(v InlineResponse20063TwoFourGhzSettings) {
	o.TwoFourGhzSettings = &v
}

// GetFiveGhzSettings returns the FiveGhzSettings field value if set, zero value otherwise.
func (o *InlineResponse20063Assigned) GetFiveGhzSettings() InlineResponse20063FiveGhzSettings {
	if o == nil || isNil(o.FiveGhzSettings) {
		var ret InlineResponse20063FiveGhzSettings
		return ret
	}
	return *o.FiveGhzSettings
}

// GetFiveGhzSettingsOk returns a tuple with the FiveGhzSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20063Assigned) GetFiveGhzSettingsOk() (*InlineResponse20063FiveGhzSettings, bool) {
	if o == nil || isNil(o.FiveGhzSettings) {
    return nil, false
	}
	return o.FiveGhzSettings, true
}

// HasFiveGhzSettings returns a boolean if a field has been set.
func (o *InlineResponse20063Assigned) HasFiveGhzSettings() bool {
	if o != nil && !isNil(o.FiveGhzSettings) {
		return true
	}

	return false
}

// SetFiveGhzSettings gets a reference to the given InlineResponse20063FiveGhzSettings and assigns it to the FiveGhzSettings field.
func (o *InlineResponse20063Assigned) SetFiveGhzSettings(v InlineResponse20063FiveGhzSettings) {
	o.FiveGhzSettings = &v
}

// GetPerSsidSettings returns the PerSsidSettings field value if set, zero value otherwise.
func (o *InlineResponse20063Assigned) GetPerSsidSettings() InlineResponse20063PerSsidSettings {
	if o == nil || isNil(o.PerSsidSettings) {
		var ret InlineResponse20063PerSsidSettings
		return ret
	}
	return *o.PerSsidSettings
}

// GetPerSsidSettingsOk returns a tuple with the PerSsidSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20063Assigned) GetPerSsidSettingsOk() (*InlineResponse20063PerSsidSettings, bool) {
	if o == nil || isNil(o.PerSsidSettings) {
    return nil, false
	}
	return o.PerSsidSettings, true
}

// HasPerSsidSettings returns a boolean if a field has been set.
func (o *InlineResponse20063Assigned) HasPerSsidSettings() bool {
	if o != nil && !isNil(o.PerSsidSettings) {
		return true
	}

	return false
}

// SetPerSsidSettings gets a reference to the given InlineResponse20063PerSsidSettings and assigns it to the PerSsidSettings field.
func (o *InlineResponse20063Assigned) SetPerSsidSettings(v InlineResponse20063PerSsidSettings) {
	o.PerSsidSettings = &v
}

func (o InlineResponse20063Assigned) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.NetworkId) {
		toSerialize["networkId"] = o.NetworkId
	}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.TwoFourGhzSettings) {
		toSerialize["twoFourGhzSettings"] = o.TwoFourGhzSettings
	}
	if !isNil(o.FiveGhzSettings) {
		toSerialize["fiveGhzSettings"] = o.FiveGhzSettings
	}
	if !isNil(o.PerSsidSettings) {
		toSerialize["perSsidSettings"] = o.PerSsidSettings
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20063Assigned struct {
	value *InlineResponse20063Assigned
	isSet bool
}

func (v NullableInlineResponse20063Assigned) Get() *InlineResponse20063Assigned {
	return v.value
}

func (v *NullableInlineResponse20063Assigned) Set(val *InlineResponse20063Assigned) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20063Assigned) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20063Assigned) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20063Assigned(val *InlineResponse20063Assigned) *NullableInlineResponse20063Assigned {
	return &NullableInlineResponse20063Assigned{value: val, isSet: true}
}

func (v NullableInlineResponse20063Assigned) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20063Assigned) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


