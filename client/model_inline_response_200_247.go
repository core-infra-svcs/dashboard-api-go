/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 03 September, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.62.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200247 struct for InlineResponse200247
type InlineResponse200247 struct {
	// Category type
	Type string `json:"type"`
	// Category title
	Title string `json:"title"`
}

// NewInlineResponse200247 instantiates a new InlineResponse200247 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200247(type_ string, title string) *InlineResponse200247 {
	this := InlineResponse200247{}
	this.Type = type_
	this.Title = title
	return &this
}

// NewInlineResponse200247WithDefaults instantiates a new InlineResponse200247 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200247WithDefaults() *InlineResponse200247 {
	this := InlineResponse200247{}
	return &this
}

// GetType returns the Type field value
func (o *InlineResponse200247) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *InlineResponse200247) GetTypeOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *InlineResponse200247) SetType(v string) {
	o.Type = v
}

// GetTitle returns the Title field value
func (o *InlineResponse200247) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *InlineResponse200247) GetTitleOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *InlineResponse200247) SetTitle(v string) {
	o.Title = v
}

func (o InlineResponse200247) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["title"] = o.Title
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200247 struct {
	value *InlineResponse200247
	isSet bool
}

func (v NullableInlineResponse200247) Get() *InlineResponse200247 {
	return v.value
}

func (v *NullableInlineResponse200247) Set(val *InlineResponse200247) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200247) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200247) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200247(val *InlineResponse200247) *NullableInlineResponse200247 {
	return &NullableInlineResponse200247{value: val, isSet: true}
}

func (v NullableInlineResponse200247) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200247) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


