/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 June, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.47.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200143ArpInspection Dynamic ARP Inspection settings
type InlineResponse200143ArpInspection struct {
	// Enable or disable Dynamic ARP Inspection on the network. Default value is false.
	Enabled *bool `json:"enabled,omitempty"`
	// List of switch models that does not support dynamic ARP inspection
	UnsupportedModels []string `json:"unsupportedModels,omitempty"`
}

// NewInlineResponse200143ArpInspection instantiates a new InlineResponse200143ArpInspection object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200143ArpInspection() *InlineResponse200143ArpInspection {
	this := InlineResponse200143ArpInspection{}
	return &this
}

// NewInlineResponse200143ArpInspectionWithDefaults instantiates a new InlineResponse200143ArpInspection object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200143ArpInspectionWithDefaults() *InlineResponse200143ArpInspection {
	this := InlineResponse200143ArpInspection{}
	return &this
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *InlineResponse200143ArpInspection) GetEnabled() bool {
	if o == nil || isNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200143ArpInspection) GetEnabledOk() (*bool, bool) {
	if o == nil || isNil(o.Enabled) {
    return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *InlineResponse200143ArpInspection) HasEnabled() bool {
	if o != nil && !isNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *InlineResponse200143ArpInspection) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetUnsupportedModels returns the UnsupportedModels field value if set, zero value otherwise.
func (o *InlineResponse200143ArpInspection) GetUnsupportedModels() []string {
	if o == nil || isNil(o.UnsupportedModels) {
		var ret []string
		return ret
	}
	return o.UnsupportedModels
}

// GetUnsupportedModelsOk returns a tuple with the UnsupportedModels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200143ArpInspection) GetUnsupportedModelsOk() ([]string, bool) {
	if o == nil || isNil(o.UnsupportedModels) {
    return nil, false
	}
	return o.UnsupportedModels, true
}

// HasUnsupportedModels returns a boolean if a field has been set.
func (o *InlineResponse200143ArpInspection) HasUnsupportedModels() bool {
	if o != nil && !isNil(o.UnsupportedModels) {
		return true
	}

	return false
}

// SetUnsupportedModels gets a reference to the given []string and assigns it to the UnsupportedModels field.
func (o *InlineResponse200143ArpInspection) SetUnsupportedModels(v []string) {
	o.UnsupportedModels = v
}

func (o InlineResponse200143ArpInspection) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !isNil(o.UnsupportedModels) {
		toSerialize["unsupportedModels"] = o.UnsupportedModels
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200143ArpInspection struct {
	value *InlineResponse200143ArpInspection
	isSet bool
}

func (v NullableInlineResponse200143ArpInspection) Get() *InlineResponse200143ArpInspection {
	return v.value
}

func (v *NullableInlineResponse200143ArpInspection) Set(val *InlineResponse200143ArpInspection) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200143ArpInspection) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200143ArpInspection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200143ArpInspection(val *InlineResponse200143ArpInspection) *NullableInlineResponse200143ArpInspection {
	return &NullableInlineResponse200143ArpInspection{value: val, isSet: true}
}

func (v NullableInlineResponse200143ArpInspection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200143ArpInspection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


