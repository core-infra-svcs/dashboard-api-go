/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 07 May, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.58.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200372Intervals struct for InlineResponse200372Intervals
type InlineResponse200372Intervals struct {
	// The start time of the query range with iso8601 format
	StartTs *string `json:"startTs,omitempty"`
	// The end time of the query range  with iso8601 format
	EndTs *string `json:"endTs,omitempty"`
	Overall *InlineResponse200372Overall `json:"overall,omitempty"`
	// The CPU usage per core of the wireless LAN controller
	ByCore []InlineResponse200372ByCore `json:"byCore,omitempty"`
}

// NewInlineResponse200372Intervals instantiates a new InlineResponse200372Intervals object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200372Intervals() *InlineResponse200372Intervals {
	this := InlineResponse200372Intervals{}
	return &this
}

// NewInlineResponse200372IntervalsWithDefaults instantiates a new InlineResponse200372Intervals object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200372IntervalsWithDefaults() *InlineResponse200372Intervals {
	this := InlineResponse200372Intervals{}
	return &this
}

// GetStartTs returns the StartTs field value if set, zero value otherwise.
func (o *InlineResponse200372Intervals) GetStartTs() string {
	if o == nil || isNil(o.StartTs) {
		var ret string
		return ret
	}
	return *o.StartTs
}

// GetStartTsOk returns a tuple with the StartTs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200372Intervals) GetStartTsOk() (*string, bool) {
	if o == nil || isNil(o.StartTs) {
    return nil, false
	}
	return o.StartTs, true
}

// HasStartTs returns a boolean if a field has been set.
func (o *InlineResponse200372Intervals) HasStartTs() bool {
	if o != nil && !isNil(o.StartTs) {
		return true
	}

	return false
}

// SetStartTs gets a reference to the given string and assigns it to the StartTs field.
func (o *InlineResponse200372Intervals) SetStartTs(v string) {
	o.StartTs = &v
}

// GetEndTs returns the EndTs field value if set, zero value otherwise.
func (o *InlineResponse200372Intervals) GetEndTs() string {
	if o == nil || isNil(o.EndTs) {
		var ret string
		return ret
	}
	return *o.EndTs
}

// GetEndTsOk returns a tuple with the EndTs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200372Intervals) GetEndTsOk() (*string, bool) {
	if o == nil || isNil(o.EndTs) {
    return nil, false
	}
	return o.EndTs, true
}

// HasEndTs returns a boolean if a field has been set.
func (o *InlineResponse200372Intervals) HasEndTs() bool {
	if o != nil && !isNil(o.EndTs) {
		return true
	}

	return false
}

// SetEndTs gets a reference to the given string and assigns it to the EndTs field.
func (o *InlineResponse200372Intervals) SetEndTs(v string) {
	o.EndTs = &v
}

// GetOverall returns the Overall field value if set, zero value otherwise.
func (o *InlineResponse200372Intervals) GetOverall() InlineResponse200372Overall {
	if o == nil || isNil(o.Overall) {
		var ret InlineResponse200372Overall
		return ret
	}
	return *o.Overall
}

// GetOverallOk returns a tuple with the Overall field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200372Intervals) GetOverallOk() (*InlineResponse200372Overall, bool) {
	if o == nil || isNil(o.Overall) {
    return nil, false
	}
	return o.Overall, true
}

// HasOverall returns a boolean if a field has been set.
func (o *InlineResponse200372Intervals) HasOverall() bool {
	if o != nil && !isNil(o.Overall) {
		return true
	}

	return false
}

// SetOverall gets a reference to the given InlineResponse200372Overall and assigns it to the Overall field.
func (o *InlineResponse200372Intervals) SetOverall(v InlineResponse200372Overall) {
	o.Overall = &v
}

// GetByCore returns the ByCore field value if set, zero value otherwise.
func (o *InlineResponse200372Intervals) GetByCore() []InlineResponse200372ByCore {
	if o == nil || isNil(o.ByCore) {
		var ret []InlineResponse200372ByCore
		return ret
	}
	return o.ByCore
}

// GetByCoreOk returns a tuple with the ByCore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200372Intervals) GetByCoreOk() ([]InlineResponse200372ByCore, bool) {
	if o == nil || isNil(o.ByCore) {
    return nil, false
	}
	return o.ByCore, true
}

// HasByCore returns a boolean if a field has been set.
func (o *InlineResponse200372Intervals) HasByCore() bool {
	if o != nil && !isNil(o.ByCore) {
		return true
	}

	return false
}

// SetByCore gets a reference to the given []InlineResponse200372ByCore and assigns it to the ByCore field.
func (o *InlineResponse200372Intervals) SetByCore(v []InlineResponse200372ByCore) {
	o.ByCore = v
}

func (o InlineResponse200372Intervals) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.StartTs) {
		toSerialize["startTs"] = o.StartTs
	}
	if !isNil(o.EndTs) {
		toSerialize["endTs"] = o.EndTs
	}
	if !isNil(o.Overall) {
		toSerialize["overall"] = o.Overall
	}
	if !isNil(o.ByCore) {
		toSerialize["byCore"] = o.ByCore
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200372Intervals struct {
	value *InlineResponse200372Intervals
	isSet bool
}

func (v NullableInlineResponse200372Intervals) Get() *InlineResponse200372Intervals {
	return v.value
}

func (v *NullableInlineResponse200372Intervals) Set(val *InlineResponse200372Intervals) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200372Intervals) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200372Intervals) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200372Intervals(val *InlineResponse200372Intervals) *NullableInlineResponse200372Intervals {
	return &NullableInlineResponse200372Intervals{value: val, isSet: true}
}

func (v NullableInlineResponse200372Intervals) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200372Intervals) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


