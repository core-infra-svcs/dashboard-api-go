/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 01 June, 2022 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.22.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineObject158 struct for InlineObject158
type InlineObject158 struct {
	// List of network IDs with adaptive policy enabled
	EnabledNetworks *[]string `json:"enabledNetworks,omitempty"`
}

// NewInlineObject158 instantiates a new InlineObject158 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject158() *InlineObject158 {
	this := InlineObject158{}
	return &this
}

// NewInlineObject158WithDefaults instantiates a new InlineObject158 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject158WithDefaults() *InlineObject158 {
	this := InlineObject158{}
	return &this
}

// GetEnabledNetworks returns the EnabledNetworks field value if set, zero value otherwise.
func (o *InlineObject158) GetEnabledNetworks() []string {
	if o == nil || o.EnabledNetworks == nil {
		var ret []string
		return ret
	}
	return *o.EnabledNetworks
}

// GetEnabledNetworksOk returns a tuple with the EnabledNetworks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject158) GetEnabledNetworksOk() (*[]string, bool) {
	if o == nil || o.EnabledNetworks == nil {
		return nil, false
	}
	return o.EnabledNetworks, true
}

// HasEnabledNetworks returns a boolean if a field has been set.
func (o *InlineObject158) HasEnabledNetworks() bool {
	if o != nil && o.EnabledNetworks != nil {
		return true
	}

	return false
}

// SetEnabledNetworks gets a reference to the given []string and assigns it to the EnabledNetworks field.
func (o *InlineObject158) SetEnabledNetworks(v []string) {
	o.EnabledNetworks = &v
}

func (o InlineObject158) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.EnabledNetworks != nil {
		toSerialize["enabledNetworks"] = o.EnabledNetworks
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject158 struct {
	value *InlineObject158
	isSet bool
}

func (v NullableInlineObject158) Get() *InlineObject158 {
	return v.value
}

func (v *NullableInlineObject158) Set(val *InlineObject158) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject158) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject158) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject158(val *InlineObject158) *NullableInlineObject158 {
	return &NullableInlineObject158{value: val, isSet: true}
}

func (v NullableInlineObject158) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject158) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


