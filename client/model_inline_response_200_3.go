/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 03 July, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.48.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse2003 struct for InlineResponse2003
type InlineResponse2003 struct {
	Subscription *AdministeredLicensingSubscriptionSubscriptionsComplianceStatusesSubscription `json:"subscription,omitempty"`
	Violations *AdministeredLicensingSubscriptionSubscriptionsComplianceStatusesViolations `json:"violations,omitempty"`
}

// NewInlineResponse2003 instantiates a new InlineResponse2003 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse2003() *InlineResponse2003 {
	this := InlineResponse2003{}
	return &this
}

// NewInlineResponse2003WithDefaults instantiates a new InlineResponse2003 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse2003WithDefaults() *InlineResponse2003 {
	this := InlineResponse2003{}
	return &this
}

// GetSubscription returns the Subscription field value if set, zero value otherwise.
func (o *InlineResponse2003) GetSubscription() AdministeredLicensingSubscriptionSubscriptionsComplianceStatusesSubscription {
	if o == nil || isNil(o.Subscription) {
		var ret AdministeredLicensingSubscriptionSubscriptionsComplianceStatusesSubscription
		return ret
	}
	return *o.Subscription
}

// GetSubscriptionOk returns a tuple with the Subscription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2003) GetSubscriptionOk() (*AdministeredLicensingSubscriptionSubscriptionsComplianceStatusesSubscription, bool) {
	if o == nil || isNil(o.Subscription) {
    return nil, false
	}
	return o.Subscription, true
}

// HasSubscription returns a boolean if a field has been set.
func (o *InlineResponse2003) HasSubscription() bool {
	if o != nil && !isNil(o.Subscription) {
		return true
	}

	return false
}

// SetSubscription gets a reference to the given AdministeredLicensingSubscriptionSubscriptionsComplianceStatusesSubscription and assigns it to the Subscription field.
func (o *InlineResponse2003) SetSubscription(v AdministeredLicensingSubscriptionSubscriptionsComplianceStatusesSubscription) {
	o.Subscription = &v
}

// GetViolations returns the Violations field value if set, zero value otherwise.
func (o *InlineResponse2003) GetViolations() AdministeredLicensingSubscriptionSubscriptionsComplianceStatusesViolations {
	if o == nil || isNil(o.Violations) {
		var ret AdministeredLicensingSubscriptionSubscriptionsComplianceStatusesViolations
		return ret
	}
	return *o.Violations
}

// GetViolationsOk returns a tuple with the Violations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2003) GetViolationsOk() (*AdministeredLicensingSubscriptionSubscriptionsComplianceStatusesViolations, bool) {
	if o == nil || isNil(o.Violations) {
    return nil, false
	}
	return o.Violations, true
}

// HasViolations returns a boolean if a field has been set.
func (o *InlineResponse2003) HasViolations() bool {
	if o != nil && !isNil(o.Violations) {
		return true
	}

	return false
}

// SetViolations gets a reference to the given AdministeredLicensingSubscriptionSubscriptionsComplianceStatusesViolations and assigns it to the Violations field.
func (o *InlineResponse2003) SetViolations(v AdministeredLicensingSubscriptionSubscriptionsComplianceStatusesViolations) {
	o.Violations = &v
}

func (o InlineResponse2003) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Subscription) {
		toSerialize["subscription"] = o.Subscription
	}
	if !isNil(o.Violations) {
		toSerialize["violations"] = o.Violations
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse2003 struct {
	value *InlineResponse2003
	isSet bool
}

func (v NullableInlineResponse2003) Get() *InlineResponse2003 {
	return v.value
}

func (v *NullableInlineResponse2003) Set(val *InlineResponse2003) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse2003) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse2003) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse2003(val *InlineResponse2003) *NullableInlineResponse2003 {
	return &NullableInlineResponse2003{value: val, isSet: true}
}

func (v NullableInlineResponse2003) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse2003) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


