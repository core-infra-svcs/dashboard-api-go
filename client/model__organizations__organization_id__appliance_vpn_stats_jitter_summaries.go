/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 03 September, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.62.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// OrganizationsOrganizationIdApplianceVpnStatsJitterSummaries struct for OrganizationsOrganizationIdApplianceVpnStatsJitterSummaries
type OrganizationsOrganizationIdApplianceVpnStatsJitterSummaries struct {
	// Sender uplink interface
	SenderUplink *string `json:"senderUplink,omitempty"`
	// Receiver uplink interface
	ReceiverUplink *string `json:"receiverUplink,omitempty"`
	// Average jitter
	AvgJitter *float32 `json:"avgJitter,omitempty"`
	// Minimum jitter
	MinJitter *float32 `json:"minJitter,omitempty"`
	// Maximum jitter
	MaxJitter *float32 `json:"maxJitter,omitempty"`
}

// NewOrganizationsOrganizationIdApplianceVpnStatsJitterSummaries instantiates a new OrganizationsOrganizationIdApplianceVpnStatsJitterSummaries object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationsOrganizationIdApplianceVpnStatsJitterSummaries() *OrganizationsOrganizationIdApplianceVpnStatsJitterSummaries {
	this := OrganizationsOrganizationIdApplianceVpnStatsJitterSummaries{}
	return &this
}

// NewOrganizationsOrganizationIdApplianceVpnStatsJitterSummariesWithDefaults instantiates a new OrganizationsOrganizationIdApplianceVpnStatsJitterSummaries object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationsOrganizationIdApplianceVpnStatsJitterSummariesWithDefaults() *OrganizationsOrganizationIdApplianceVpnStatsJitterSummaries {
	this := OrganizationsOrganizationIdApplianceVpnStatsJitterSummaries{}
	return &this
}

// GetSenderUplink returns the SenderUplink field value if set, zero value otherwise.
func (o *OrganizationsOrganizationIdApplianceVpnStatsJitterSummaries) GetSenderUplink() string {
	if o == nil || isNil(o.SenderUplink) {
		var ret string
		return ret
	}
	return *o.SenderUplink
}

// GetSenderUplinkOk returns a tuple with the SenderUplink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationsOrganizationIdApplianceVpnStatsJitterSummaries) GetSenderUplinkOk() (*string, bool) {
	if o == nil || isNil(o.SenderUplink) {
    return nil, false
	}
	return o.SenderUplink, true
}

// HasSenderUplink returns a boolean if a field has been set.
func (o *OrganizationsOrganizationIdApplianceVpnStatsJitterSummaries) HasSenderUplink() bool {
	if o != nil && !isNil(o.SenderUplink) {
		return true
	}

	return false
}

// SetSenderUplink gets a reference to the given string and assigns it to the SenderUplink field.
func (o *OrganizationsOrganizationIdApplianceVpnStatsJitterSummaries) SetSenderUplink(v string) {
	o.SenderUplink = &v
}

// GetReceiverUplink returns the ReceiverUplink field value if set, zero value otherwise.
func (o *OrganizationsOrganizationIdApplianceVpnStatsJitterSummaries) GetReceiverUplink() string {
	if o == nil || isNil(o.ReceiverUplink) {
		var ret string
		return ret
	}
	return *o.ReceiverUplink
}

// GetReceiverUplinkOk returns a tuple with the ReceiverUplink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationsOrganizationIdApplianceVpnStatsJitterSummaries) GetReceiverUplinkOk() (*string, bool) {
	if o == nil || isNil(o.ReceiverUplink) {
    return nil, false
	}
	return o.ReceiverUplink, true
}

// HasReceiverUplink returns a boolean if a field has been set.
func (o *OrganizationsOrganizationIdApplianceVpnStatsJitterSummaries) HasReceiverUplink() bool {
	if o != nil && !isNil(o.ReceiverUplink) {
		return true
	}

	return false
}

// SetReceiverUplink gets a reference to the given string and assigns it to the ReceiverUplink field.
func (o *OrganizationsOrganizationIdApplianceVpnStatsJitterSummaries) SetReceiverUplink(v string) {
	o.ReceiverUplink = &v
}

// GetAvgJitter returns the AvgJitter field value if set, zero value otherwise.
func (o *OrganizationsOrganizationIdApplianceVpnStatsJitterSummaries) GetAvgJitter() float32 {
	if o == nil || isNil(o.AvgJitter) {
		var ret float32
		return ret
	}
	return *o.AvgJitter
}

// GetAvgJitterOk returns a tuple with the AvgJitter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationsOrganizationIdApplianceVpnStatsJitterSummaries) GetAvgJitterOk() (*float32, bool) {
	if o == nil || isNil(o.AvgJitter) {
    return nil, false
	}
	return o.AvgJitter, true
}

// HasAvgJitter returns a boolean if a field has been set.
func (o *OrganizationsOrganizationIdApplianceVpnStatsJitterSummaries) HasAvgJitter() bool {
	if o != nil && !isNil(o.AvgJitter) {
		return true
	}

	return false
}

// SetAvgJitter gets a reference to the given float32 and assigns it to the AvgJitter field.
func (o *OrganizationsOrganizationIdApplianceVpnStatsJitterSummaries) SetAvgJitter(v float32) {
	o.AvgJitter = &v
}

// GetMinJitter returns the MinJitter field value if set, zero value otherwise.
func (o *OrganizationsOrganizationIdApplianceVpnStatsJitterSummaries) GetMinJitter() float32 {
	if o == nil || isNil(o.MinJitter) {
		var ret float32
		return ret
	}
	return *o.MinJitter
}

// GetMinJitterOk returns a tuple with the MinJitter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationsOrganizationIdApplianceVpnStatsJitterSummaries) GetMinJitterOk() (*float32, bool) {
	if o == nil || isNil(o.MinJitter) {
    return nil, false
	}
	return o.MinJitter, true
}

// HasMinJitter returns a boolean if a field has been set.
func (o *OrganizationsOrganizationIdApplianceVpnStatsJitterSummaries) HasMinJitter() bool {
	if o != nil && !isNil(o.MinJitter) {
		return true
	}

	return false
}

// SetMinJitter gets a reference to the given float32 and assigns it to the MinJitter field.
func (o *OrganizationsOrganizationIdApplianceVpnStatsJitterSummaries) SetMinJitter(v float32) {
	o.MinJitter = &v
}

// GetMaxJitter returns the MaxJitter field value if set, zero value otherwise.
func (o *OrganizationsOrganizationIdApplianceVpnStatsJitterSummaries) GetMaxJitter() float32 {
	if o == nil || isNil(o.MaxJitter) {
		var ret float32
		return ret
	}
	return *o.MaxJitter
}

// GetMaxJitterOk returns a tuple with the MaxJitter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationsOrganizationIdApplianceVpnStatsJitterSummaries) GetMaxJitterOk() (*float32, bool) {
	if o == nil || isNil(o.MaxJitter) {
    return nil, false
	}
	return o.MaxJitter, true
}

// HasMaxJitter returns a boolean if a field has been set.
func (o *OrganizationsOrganizationIdApplianceVpnStatsJitterSummaries) HasMaxJitter() bool {
	if o != nil && !isNil(o.MaxJitter) {
		return true
	}

	return false
}

// SetMaxJitter gets a reference to the given float32 and assigns it to the MaxJitter field.
func (o *OrganizationsOrganizationIdApplianceVpnStatsJitterSummaries) SetMaxJitter(v float32) {
	o.MaxJitter = &v
}

func (o OrganizationsOrganizationIdApplianceVpnStatsJitterSummaries) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.SenderUplink) {
		toSerialize["senderUplink"] = o.SenderUplink
	}
	if !isNil(o.ReceiverUplink) {
		toSerialize["receiverUplink"] = o.ReceiverUplink
	}
	if !isNil(o.AvgJitter) {
		toSerialize["avgJitter"] = o.AvgJitter
	}
	if !isNil(o.MinJitter) {
		toSerialize["minJitter"] = o.MinJitter
	}
	if !isNil(o.MaxJitter) {
		toSerialize["maxJitter"] = o.MaxJitter
	}
	return json.Marshal(toSerialize)
}

type NullableOrganizationsOrganizationIdApplianceVpnStatsJitterSummaries struct {
	value *OrganizationsOrganizationIdApplianceVpnStatsJitterSummaries
	isSet bool
}

func (v NullableOrganizationsOrganizationIdApplianceVpnStatsJitterSummaries) Get() *OrganizationsOrganizationIdApplianceVpnStatsJitterSummaries {
	return v.value
}

func (v *NullableOrganizationsOrganizationIdApplianceVpnStatsJitterSummaries) Set(val *OrganizationsOrganizationIdApplianceVpnStatsJitterSummaries) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationsOrganizationIdApplianceVpnStatsJitterSummaries) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationsOrganizationIdApplianceVpnStatsJitterSummaries) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationsOrganizationIdApplianceVpnStatsJitterSummaries(val *OrganizationsOrganizationIdApplianceVpnStatsJitterSummaries) *NullableOrganizationsOrganizationIdApplianceVpnStatsJitterSummaries {
	return &NullableOrganizationsOrganizationIdApplianceVpnStatsJitterSummaries{value: val, isSet: true}
}

func (v NullableOrganizationsOrganizationIdApplianceVpnStatsJitterSummaries) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationsOrganizationIdApplianceVpnStatsJitterSummaries) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


