/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 02 July, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.60.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineObject36 struct for InlineObject36
type InlineObject36 struct {
	// Desired UUID of the beacon. If the value is set to null it will reset to Dashboard's           automatically generated value.
	Uuid NullableString `json:"uuid,omitempty"`
	// Desired major value of the beacon. If the value is set to null it will reset to           Dashboard's automatically generated value.
	Major NullableInt32 `json:"major,omitempty"`
	// Desired minor value of the beacon. If the value is set to null it will reset to           Dashboard's automatically generated value.
	Minor NullableInt32 `json:"minor,omitempty"`
}

// NewInlineObject36 instantiates a new InlineObject36 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject36() *InlineObject36 {
	this := InlineObject36{}
	return &this
}

// NewInlineObject36WithDefaults instantiates a new InlineObject36 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject36WithDefaults() *InlineObject36 {
	this := InlineObject36{}
	return &this
}

// GetUuid returns the Uuid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject36) GetUuid() string {
	if o == nil || isNil(o.Uuid.Get()) {
		var ret string
		return ret
	}
	return *o.Uuid.Get()
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject36) GetUuidOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Uuid.Get(), o.Uuid.IsSet()
}

// HasUuid returns a boolean if a field has been set.
func (o *InlineObject36) HasUuid() bool {
	if o != nil && o.Uuid.IsSet() {
		return true
	}

	return false
}

// SetUuid gets a reference to the given NullableString and assigns it to the Uuid field.
func (o *InlineObject36) SetUuid(v string) {
	o.Uuid.Set(&v)
}
// SetUuidNil sets the value for Uuid to be an explicit nil
func (o *InlineObject36) SetUuidNil() {
	o.Uuid.Set(nil)
}

// UnsetUuid ensures that no value is present for Uuid, not even an explicit nil
func (o *InlineObject36) UnsetUuid() {
	o.Uuid.Unset()
}

// GetMajor returns the Major field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject36) GetMajor() int32 {
	if o == nil || isNil(o.Major.Get()) {
		var ret int32
		return ret
	}
	return *o.Major.Get()
}

// GetMajorOk returns a tuple with the Major field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject36) GetMajorOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return o.Major.Get(), o.Major.IsSet()
}

// HasMajor returns a boolean if a field has been set.
func (o *InlineObject36) HasMajor() bool {
	if o != nil && o.Major.IsSet() {
		return true
	}

	return false
}

// SetMajor gets a reference to the given NullableInt32 and assigns it to the Major field.
func (o *InlineObject36) SetMajor(v int32) {
	o.Major.Set(&v)
}
// SetMajorNil sets the value for Major to be an explicit nil
func (o *InlineObject36) SetMajorNil() {
	o.Major.Set(nil)
}

// UnsetMajor ensures that no value is present for Major, not even an explicit nil
func (o *InlineObject36) UnsetMajor() {
	o.Major.Unset()
}

// GetMinor returns the Minor field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineObject36) GetMinor() int32 {
	if o == nil || isNil(o.Minor.Get()) {
		var ret int32
		return ret
	}
	return *o.Minor.Get()
}

// GetMinorOk returns a tuple with the Minor field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject36) GetMinorOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return o.Minor.Get(), o.Minor.IsSet()
}

// HasMinor returns a boolean if a field has been set.
func (o *InlineObject36) HasMinor() bool {
	if o != nil && o.Minor.IsSet() {
		return true
	}

	return false
}

// SetMinor gets a reference to the given NullableInt32 and assigns it to the Minor field.
func (o *InlineObject36) SetMinor(v int32) {
	o.Minor.Set(&v)
}
// SetMinorNil sets the value for Minor to be an explicit nil
func (o *InlineObject36) SetMinorNil() {
	o.Minor.Set(nil)
}

// UnsetMinor ensures that no value is present for Minor, not even an explicit nil
func (o *InlineObject36) UnsetMinor() {
	o.Minor.Unset()
}

func (o InlineObject36) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Uuid.IsSet() {
		toSerialize["uuid"] = o.Uuid.Get()
	}
	if o.Major.IsSet() {
		toSerialize["major"] = o.Major.Get()
	}
	if o.Minor.IsSet() {
		toSerialize["minor"] = o.Minor.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject36 struct {
	value *InlineObject36
	isSet bool
}

func (v NullableInlineObject36) Get() *InlineObject36 {
	return v.value
}

func (v *NullableInlineObject36) Set(val *InlineObject36) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject36) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject36) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject36(val *InlineObject36) *NullableInlineObject36 {
	return &NullableInlineObject36{value: val, isSet: true}
}

func (v NullableInlineObject36) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject36) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


