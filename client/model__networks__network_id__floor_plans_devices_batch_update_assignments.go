/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 07 May, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.58.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// NetworksNetworkIdFloorPlansDevicesBatchUpdateAssignments struct for NetworksNetworkIdFloorPlansDevicesBatchUpdateAssignments
type NetworksNetworkIdFloorPlansDevicesBatchUpdateAssignments struct {
	// Serial of the device to change the floor plan assignment for
	Serial string `json:"serial"`
	FloorPlan NetworksNetworkIdFloorPlansDevicesBatchUpdateFloorPlan `json:"floorPlan"`
}

// NewNetworksNetworkIdFloorPlansDevicesBatchUpdateAssignments instantiates a new NetworksNetworkIdFloorPlansDevicesBatchUpdateAssignments object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworksNetworkIdFloorPlansDevicesBatchUpdateAssignments(serial string, floorPlan NetworksNetworkIdFloorPlansDevicesBatchUpdateFloorPlan) *NetworksNetworkIdFloorPlansDevicesBatchUpdateAssignments {
	this := NetworksNetworkIdFloorPlansDevicesBatchUpdateAssignments{}
	this.Serial = serial
	this.FloorPlan = floorPlan
	return &this
}

// NewNetworksNetworkIdFloorPlansDevicesBatchUpdateAssignmentsWithDefaults instantiates a new NetworksNetworkIdFloorPlansDevicesBatchUpdateAssignments object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworksNetworkIdFloorPlansDevicesBatchUpdateAssignmentsWithDefaults() *NetworksNetworkIdFloorPlansDevicesBatchUpdateAssignments {
	this := NetworksNetworkIdFloorPlansDevicesBatchUpdateAssignments{}
	return &this
}

// GetSerial returns the Serial field value
func (o *NetworksNetworkIdFloorPlansDevicesBatchUpdateAssignments) GetSerial() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Serial
}

// GetSerialOk returns a tuple with the Serial field value
// and a boolean to check if the value has been set.
func (o *NetworksNetworkIdFloorPlansDevicesBatchUpdateAssignments) GetSerialOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Serial, true
}

// SetSerial sets field value
func (o *NetworksNetworkIdFloorPlansDevicesBatchUpdateAssignments) SetSerial(v string) {
	o.Serial = v
}

// GetFloorPlan returns the FloorPlan field value
func (o *NetworksNetworkIdFloorPlansDevicesBatchUpdateAssignments) GetFloorPlan() NetworksNetworkIdFloorPlansDevicesBatchUpdateFloorPlan {
	if o == nil {
		var ret NetworksNetworkIdFloorPlansDevicesBatchUpdateFloorPlan
		return ret
	}

	return o.FloorPlan
}

// GetFloorPlanOk returns a tuple with the FloorPlan field value
// and a boolean to check if the value has been set.
func (o *NetworksNetworkIdFloorPlansDevicesBatchUpdateAssignments) GetFloorPlanOk() (*NetworksNetworkIdFloorPlansDevicesBatchUpdateFloorPlan, bool) {
	if o == nil {
    return nil, false
	}
	return &o.FloorPlan, true
}

// SetFloorPlan sets field value
func (o *NetworksNetworkIdFloorPlansDevicesBatchUpdateAssignments) SetFloorPlan(v NetworksNetworkIdFloorPlansDevicesBatchUpdateFloorPlan) {
	o.FloorPlan = v
}

func (o NetworksNetworkIdFloorPlansDevicesBatchUpdateAssignments) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["serial"] = o.Serial
	}
	if true {
		toSerialize["floorPlan"] = o.FloorPlan
	}
	return json.Marshal(toSerialize)
}

type NullableNetworksNetworkIdFloorPlansDevicesBatchUpdateAssignments struct {
	value *NetworksNetworkIdFloorPlansDevicesBatchUpdateAssignments
	isSet bool
}

func (v NullableNetworksNetworkIdFloorPlansDevicesBatchUpdateAssignments) Get() *NetworksNetworkIdFloorPlansDevicesBatchUpdateAssignments {
	return v.value
}

func (v *NullableNetworksNetworkIdFloorPlansDevicesBatchUpdateAssignments) Set(val *NetworksNetworkIdFloorPlansDevicesBatchUpdateAssignments) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworksNetworkIdFloorPlansDevicesBatchUpdateAssignments) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworksNetworkIdFloorPlansDevicesBatchUpdateAssignments) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworksNetworkIdFloorPlansDevicesBatchUpdateAssignments(val *NetworksNetworkIdFloorPlansDevicesBatchUpdateAssignments) *NullableNetworksNetworkIdFloorPlansDevicesBatchUpdateAssignments {
	return &NullableNetworksNetworkIdFloorPlansDevicesBatchUpdateAssignments{value: val, isSet: true}
}

func (v NullableNetworksNetworkIdFloorPlansDevicesBatchUpdateAssignments) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworksNetworkIdFloorPlansDevicesBatchUpdateAssignments) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


