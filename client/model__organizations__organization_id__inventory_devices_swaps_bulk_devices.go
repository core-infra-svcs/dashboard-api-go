/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 07 August, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.49.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// OrganizationsOrganizationIdInventoryDevicesSwapsBulkDevices The devices involved in the swap.
type OrganizationsOrganizationIdInventoryDevicesSwapsBulkDevices struct {
	// The serial of the device to be cloned.
	Old string `json:"old"`
	// The serial of the device that the old device's settings will be cloned to.
	New string `json:"new"`
}

// NewOrganizationsOrganizationIdInventoryDevicesSwapsBulkDevices instantiates a new OrganizationsOrganizationIdInventoryDevicesSwapsBulkDevices object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationsOrganizationIdInventoryDevicesSwapsBulkDevices(old string, new string) *OrganizationsOrganizationIdInventoryDevicesSwapsBulkDevices {
	this := OrganizationsOrganizationIdInventoryDevicesSwapsBulkDevices{}
	this.Old = old
	this.New = new
	return &this
}

// NewOrganizationsOrganizationIdInventoryDevicesSwapsBulkDevicesWithDefaults instantiates a new OrganizationsOrganizationIdInventoryDevicesSwapsBulkDevices object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationsOrganizationIdInventoryDevicesSwapsBulkDevicesWithDefaults() *OrganizationsOrganizationIdInventoryDevicesSwapsBulkDevices {
	this := OrganizationsOrganizationIdInventoryDevicesSwapsBulkDevices{}
	return &this
}

// GetOld returns the Old field value
func (o *OrganizationsOrganizationIdInventoryDevicesSwapsBulkDevices) GetOld() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Old
}

// GetOldOk returns a tuple with the Old field value
// and a boolean to check if the value has been set.
func (o *OrganizationsOrganizationIdInventoryDevicesSwapsBulkDevices) GetOldOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Old, true
}

// SetOld sets field value
func (o *OrganizationsOrganizationIdInventoryDevicesSwapsBulkDevices) SetOld(v string) {
	o.Old = v
}

// GetNew returns the New field value
func (o *OrganizationsOrganizationIdInventoryDevicesSwapsBulkDevices) GetNew() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.New
}

// GetNewOk returns a tuple with the New field value
// and a boolean to check if the value has been set.
func (o *OrganizationsOrganizationIdInventoryDevicesSwapsBulkDevices) GetNewOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.New, true
}

// SetNew sets field value
func (o *OrganizationsOrganizationIdInventoryDevicesSwapsBulkDevices) SetNew(v string) {
	o.New = v
}

func (o OrganizationsOrganizationIdInventoryDevicesSwapsBulkDevices) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["old"] = o.Old
	}
	if true {
		toSerialize["new"] = o.New
	}
	return json.Marshal(toSerialize)
}

type NullableOrganizationsOrganizationIdInventoryDevicesSwapsBulkDevices struct {
	value *OrganizationsOrganizationIdInventoryDevicesSwapsBulkDevices
	isSet bool
}

func (v NullableOrganizationsOrganizationIdInventoryDevicesSwapsBulkDevices) Get() *OrganizationsOrganizationIdInventoryDevicesSwapsBulkDevices {
	return v.value
}

func (v *NullableOrganizationsOrganizationIdInventoryDevicesSwapsBulkDevices) Set(val *OrganizationsOrganizationIdInventoryDevicesSwapsBulkDevices) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationsOrganizationIdInventoryDevicesSwapsBulkDevices) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationsOrganizationIdInventoryDevicesSwapsBulkDevices) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationsOrganizationIdInventoryDevicesSwapsBulkDevices(val *OrganizationsOrganizationIdInventoryDevicesSwapsBulkDevices) *NullableOrganizationsOrganizationIdInventoryDevicesSwapsBulkDevices {
	return &NullableOrganizationsOrganizationIdInventoryDevicesSwapsBulkDevices{value: val, isSet: true}
}

func (v NullableOrganizationsOrganizationIdInventoryDevicesSwapsBulkDevices) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationsOrganizationIdInventoryDevicesSwapsBulkDevices) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


