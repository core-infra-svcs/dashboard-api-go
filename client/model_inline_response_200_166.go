/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 03 September, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.62.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200166 struct for InlineResponse200166
type InlineResponse200166 struct {
	DefaultSettings *InlineResponse200166DefaultSettings `json:"defaultSettings,omitempty"`
	// Array of paired switches/stacks/profiles and corresponding multicast settings.       An empty array will clear the multicast settings.
	Overrides []InlineResponse200166Overrides `json:"overrides,omitempty"`
}

// NewInlineResponse200166 instantiates a new InlineResponse200166 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200166() *InlineResponse200166 {
	this := InlineResponse200166{}
	return &this
}

// NewInlineResponse200166WithDefaults instantiates a new InlineResponse200166 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200166WithDefaults() *InlineResponse200166 {
	this := InlineResponse200166{}
	return &this
}

// GetDefaultSettings returns the DefaultSettings field value if set, zero value otherwise.
func (o *InlineResponse200166) GetDefaultSettings() InlineResponse200166DefaultSettings {
	if o == nil || isNil(o.DefaultSettings) {
		var ret InlineResponse200166DefaultSettings
		return ret
	}
	return *o.DefaultSettings
}

// GetDefaultSettingsOk returns a tuple with the DefaultSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200166) GetDefaultSettingsOk() (*InlineResponse200166DefaultSettings, bool) {
	if o == nil || isNil(o.DefaultSettings) {
    return nil, false
	}
	return o.DefaultSettings, true
}

// HasDefaultSettings returns a boolean if a field has been set.
func (o *InlineResponse200166) HasDefaultSettings() bool {
	if o != nil && !isNil(o.DefaultSettings) {
		return true
	}

	return false
}

// SetDefaultSettings gets a reference to the given InlineResponse200166DefaultSettings and assigns it to the DefaultSettings field.
func (o *InlineResponse200166) SetDefaultSettings(v InlineResponse200166DefaultSettings) {
	o.DefaultSettings = &v
}

// GetOverrides returns the Overrides field value if set, zero value otherwise.
func (o *InlineResponse200166) GetOverrides() []InlineResponse200166Overrides {
	if o == nil || isNil(o.Overrides) {
		var ret []InlineResponse200166Overrides
		return ret
	}
	return o.Overrides
}

// GetOverridesOk returns a tuple with the Overrides field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200166) GetOverridesOk() ([]InlineResponse200166Overrides, bool) {
	if o == nil || isNil(o.Overrides) {
    return nil, false
	}
	return o.Overrides, true
}

// HasOverrides returns a boolean if a field has been set.
func (o *InlineResponse200166) HasOverrides() bool {
	if o != nil && !isNil(o.Overrides) {
		return true
	}

	return false
}

// SetOverrides gets a reference to the given []InlineResponse200166Overrides and assigns it to the Overrides field.
func (o *InlineResponse200166) SetOverrides(v []InlineResponse200166Overrides) {
	o.Overrides = v
}

func (o InlineResponse200166) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.DefaultSettings) {
		toSerialize["defaultSettings"] = o.DefaultSettings
	}
	if !isNil(o.Overrides) {
		toSerialize["overrides"] = o.Overrides
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200166 struct {
	value *InlineResponse200166
	isSet bool
}

func (v NullableInlineResponse200166) Get() *InlineResponse200166 {
	return v.value
}

func (v *NullableInlineResponse200166) Set(val *InlineResponse200166) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200166) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200166) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200166(val *InlineResponse200166) *NullableInlineResponse200166 {
	return &NullableInlineResponse200166{value: val, isSet: true}
}

func (v NullableInlineResponse200166) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200166) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


