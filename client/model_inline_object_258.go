/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 03 September, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.62.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineObject258 struct for InlineObject258
type InlineObject258 struct {
	// The serial(s) of the device(s)
	Serials []string `json:"serials"`
	// Name of packet capture file
	Name string `json:"name"`
	// Output type of packet capture file. Possible values: text, pcap, cloudshark, or upload_to_cloud
	OutputType *string `json:"outputType,omitempty"`
	// Destination of packet capture file. Possible values: [upload_to_cloud]
	Destination *string `json:"destination,omitempty"`
	// Ports of packet capture file, comma-separated
	Ports *string `json:"ports,omitempty"`
	// Reason for taking the packet capture
	Notes *string `json:"notes,omitempty"`
	// Duration in seconds of packet capture
	Duration *int32 `json:"duration,omitempty"`
	// Filter expression for packet capture
	FilterExpression *string `json:"filterExpression,omitempty"`
	// Interface of the device
	Interface *string `json:"interface,omitempty"`
}

// NewInlineObject258 instantiates a new InlineObject258 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject258(serials []string, name string) *InlineObject258 {
	this := InlineObject258{}
	this.Serials = serials
	this.Name = name
	return &this
}

// NewInlineObject258WithDefaults instantiates a new InlineObject258 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject258WithDefaults() *InlineObject258 {
	this := InlineObject258{}
	return &this
}

// GetSerials returns the Serials field value
func (o *InlineObject258) GetSerials() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Serials
}

// GetSerialsOk returns a tuple with the Serials field value
// and a boolean to check if the value has been set.
func (o *InlineObject258) GetSerialsOk() ([]string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Serials, true
}

// SetSerials sets field value
func (o *InlineObject258) SetSerials(v []string) {
	o.Serials = v
}

// GetName returns the Name field value
func (o *InlineObject258) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *InlineObject258) GetNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *InlineObject258) SetName(v string) {
	o.Name = v
}

// GetOutputType returns the OutputType field value if set, zero value otherwise.
func (o *InlineObject258) GetOutputType() string {
	if o == nil || isNil(o.OutputType) {
		var ret string
		return ret
	}
	return *o.OutputType
}

// GetOutputTypeOk returns a tuple with the OutputType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject258) GetOutputTypeOk() (*string, bool) {
	if o == nil || isNil(o.OutputType) {
    return nil, false
	}
	return o.OutputType, true
}

// HasOutputType returns a boolean if a field has been set.
func (o *InlineObject258) HasOutputType() bool {
	if o != nil && !isNil(o.OutputType) {
		return true
	}

	return false
}

// SetOutputType gets a reference to the given string and assigns it to the OutputType field.
func (o *InlineObject258) SetOutputType(v string) {
	o.OutputType = &v
}

// GetDestination returns the Destination field value if set, zero value otherwise.
func (o *InlineObject258) GetDestination() string {
	if o == nil || isNil(o.Destination) {
		var ret string
		return ret
	}
	return *o.Destination
}

// GetDestinationOk returns a tuple with the Destination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject258) GetDestinationOk() (*string, bool) {
	if o == nil || isNil(o.Destination) {
    return nil, false
	}
	return o.Destination, true
}

// HasDestination returns a boolean if a field has been set.
func (o *InlineObject258) HasDestination() bool {
	if o != nil && !isNil(o.Destination) {
		return true
	}

	return false
}

// SetDestination gets a reference to the given string and assigns it to the Destination field.
func (o *InlineObject258) SetDestination(v string) {
	o.Destination = &v
}

// GetPorts returns the Ports field value if set, zero value otherwise.
func (o *InlineObject258) GetPorts() string {
	if o == nil || isNil(o.Ports) {
		var ret string
		return ret
	}
	return *o.Ports
}

// GetPortsOk returns a tuple with the Ports field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject258) GetPortsOk() (*string, bool) {
	if o == nil || isNil(o.Ports) {
    return nil, false
	}
	return o.Ports, true
}

// HasPorts returns a boolean if a field has been set.
func (o *InlineObject258) HasPorts() bool {
	if o != nil && !isNil(o.Ports) {
		return true
	}

	return false
}

// SetPorts gets a reference to the given string and assigns it to the Ports field.
func (o *InlineObject258) SetPorts(v string) {
	o.Ports = &v
}

// GetNotes returns the Notes field value if set, zero value otherwise.
func (o *InlineObject258) GetNotes() string {
	if o == nil || isNil(o.Notes) {
		var ret string
		return ret
	}
	return *o.Notes
}

// GetNotesOk returns a tuple with the Notes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject258) GetNotesOk() (*string, bool) {
	if o == nil || isNil(o.Notes) {
    return nil, false
	}
	return o.Notes, true
}

// HasNotes returns a boolean if a field has been set.
func (o *InlineObject258) HasNotes() bool {
	if o != nil && !isNil(o.Notes) {
		return true
	}

	return false
}

// SetNotes gets a reference to the given string and assigns it to the Notes field.
func (o *InlineObject258) SetNotes(v string) {
	o.Notes = &v
}

// GetDuration returns the Duration field value if set, zero value otherwise.
func (o *InlineObject258) GetDuration() int32 {
	if o == nil || isNil(o.Duration) {
		var ret int32
		return ret
	}
	return *o.Duration
}

// GetDurationOk returns a tuple with the Duration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject258) GetDurationOk() (*int32, bool) {
	if o == nil || isNil(o.Duration) {
    return nil, false
	}
	return o.Duration, true
}

// HasDuration returns a boolean if a field has been set.
func (o *InlineObject258) HasDuration() bool {
	if o != nil && !isNil(o.Duration) {
		return true
	}

	return false
}

// SetDuration gets a reference to the given int32 and assigns it to the Duration field.
func (o *InlineObject258) SetDuration(v int32) {
	o.Duration = &v
}

// GetFilterExpression returns the FilterExpression field value if set, zero value otherwise.
func (o *InlineObject258) GetFilterExpression() string {
	if o == nil || isNil(o.FilterExpression) {
		var ret string
		return ret
	}
	return *o.FilterExpression
}

// GetFilterExpressionOk returns a tuple with the FilterExpression field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject258) GetFilterExpressionOk() (*string, bool) {
	if o == nil || isNil(o.FilterExpression) {
    return nil, false
	}
	return o.FilterExpression, true
}

// HasFilterExpression returns a boolean if a field has been set.
func (o *InlineObject258) HasFilterExpression() bool {
	if o != nil && !isNil(o.FilterExpression) {
		return true
	}

	return false
}

// SetFilterExpression gets a reference to the given string and assigns it to the FilterExpression field.
func (o *InlineObject258) SetFilterExpression(v string) {
	o.FilterExpression = &v
}

// GetInterface returns the Interface field value if set, zero value otherwise.
func (o *InlineObject258) GetInterface() string {
	if o == nil || isNil(o.Interface) {
		var ret string
		return ret
	}
	return *o.Interface
}

// GetInterfaceOk returns a tuple with the Interface field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject258) GetInterfaceOk() (*string, bool) {
	if o == nil || isNil(o.Interface) {
    return nil, false
	}
	return o.Interface, true
}

// HasInterface returns a boolean if a field has been set.
func (o *InlineObject258) HasInterface() bool {
	if o != nil && !isNil(o.Interface) {
		return true
	}

	return false
}

// SetInterface gets a reference to the given string and assigns it to the Interface field.
func (o *InlineObject258) SetInterface(v string) {
	o.Interface = &v
}

func (o InlineObject258) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["serials"] = o.Serials
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.OutputType) {
		toSerialize["outputType"] = o.OutputType
	}
	if !isNil(o.Destination) {
		toSerialize["destination"] = o.Destination
	}
	if !isNil(o.Ports) {
		toSerialize["ports"] = o.Ports
	}
	if !isNil(o.Notes) {
		toSerialize["notes"] = o.Notes
	}
	if !isNil(o.Duration) {
		toSerialize["duration"] = o.Duration
	}
	if !isNil(o.FilterExpression) {
		toSerialize["filterExpression"] = o.FilterExpression
	}
	if !isNil(o.Interface) {
		toSerialize["interface"] = o.Interface
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject258 struct {
	value *InlineObject258
	isSet bool
}

func (v NullableInlineObject258) Get() *InlineObject258 {
	return v.value
}

func (v *NullableInlineObject258) Set(val *InlineObject258) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject258) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject258) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject258(val *InlineObject258) *NullableInlineObject258 {
	return &NullableInlineObject258{value: val, isSet: true}
}

func (v NullableInlineObject258) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject258) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


