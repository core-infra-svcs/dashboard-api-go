/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 02 July, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.60.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// OrganizationsOrganizationIdApplianceVpnThirdPartyVPNPeersGroup [optional] Contains the mapping between primary tunnel and backup tunnels.
type OrganizationsOrganizationIdApplianceVpnThirdPartyVPNPeersGroup struct {
	// [optional] Represents the ordering of primary and backup tunnels group. primary and backup tunnels are grouped by this number. If you submit a request with the numbers [1, 9, 999], these numbers will be automatically adjusted to a sequential order starting from 1. So, they will be changed to [1, 2, 3] to reflect their positions in the sequence.
	Number *int32 `json:"number,omitempty"`
	Failover *InlineResponse200237GroupFailover `json:"failover,omitempty"`
	// [optional] Both primary and backup tunnels are active.
	ActiveActiveTunnel *bool `json:"activeActiveTunnel,omitempty"`
}

// NewOrganizationsOrganizationIdApplianceVpnThirdPartyVPNPeersGroup instantiates a new OrganizationsOrganizationIdApplianceVpnThirdPartyVPNPeersGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationsOrganizationIdApplianceVpnThirdPartyVPNPeersGroup() *OrganizationsOrganizationIdApplianceVpnThirdPartyVPNPeersGroup {
	this := OrganizationsOrganizationIdApplianceVpnThirdPartyVPNPeersGroup{}
	return &this
}

// NewOrganizationsOrganizationIdApplianceVpnThirdPartyVPNPeersGroupWithDefaults instantiates a new OrganizationsOrganizationIdApplianceVpnThirdPartyVPNPeersGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationsOrganizationIdApplianceVpnThirdPartyVPNPeersGroupWithDefaults() *OrganizationsOrganizationIdApplianceVpnThirdPartyVPNPeersGroup {
	this := OrganizationsOrganizationIdApplianceVpnThirdPartyVPNPeersGroup{}
	return &this
}

// GetNumber returns the Number field value if set, zero value otherwise.
func (o *OrganizationsOrganizationIdApplianceVpnThirdPartyVPNPeersGroup) GetNumber() int32 {
	if o == nil || isNil(o.Number) {
		var ret int32
		return ret
	}
	return *o.Number
}

// GetNumberOk returns a tuple with the Number field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationsOrganizationIdApplianceVpnThirdPartyVPNPeersGroup) GetNumberOk() (*int32, bool) {
	if o == nil || isNil(o.Number) {
    return nil, false
	}
	return o.Number, true
}

// HasNumber returns a boolean if a field has been set.
func (o *OrganizationsOrganizationIdApplianceVpnThirdPartyVPNPeersGroup) HasNumber() bool {
	if o != nil && !isNil(o.Number) {
		return true
	}

	return false
}

// SetNumber gets a reference to the given int32 and assigns it to the Number field.
func (o *OrganizationsOrganizationIdApplianceVpnThirdPartyVPNPeersGroup) SetNumber(v int32) {
	o.Number = &v
}

// GetFailover returns the Failover field value if set, zero value otherwise.
func (o *OrganizationsOrganizationIdApplianceVpnThirdPartyVPNPeersGroup) GetFailover() InlineResponse200237GroupFailover {
	if o == nil || isNil(o.Failover) {
		var ret InlineResponse200237GroupFailover
		return ret
	}
	return *o.Failover
}

// GetFailoverOk returns a tuple with the Failover field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationsOrganizationIdApplianceVpnThirdPartyVPNPeersGroup) GetFailoverOk() (*InlineResponse200237GroupFailover, bool) {
	if o == nil || isNil(o.Failover) {
    return nil, false
	}
	return o.Failover, true
}

// HasFailover returns a boolean if a field has been set.
func (o *OrganizationsOrganizationIdApplianceVpnThirdPartyVPNPeersGroup) HasFailover() bool {
	if o != nil && !isNil(o.Failover) {
		return true
	}

	return false
}

// SetFailover gets a reference to the given InlineResponse200237GroupFailover and assigns it to the Failover field.
func (o *OrganizationsOrganizationIdApplianceVpnThirdPartyVPNPeersGroup) SetFailover(v InlineResponse200237GroupFailover) {
	o.Failover = &v
}

// GetActiveActiveTunnel returns the ActiveActiveTunnel field value if set, zero value otherwise.
func (o *OrganizationsOrganizationIdApplianceVpnThirdPartyVPNPeersGroup) GetActiveActiveTunnel() bool {
	if o == nil || isNil(o.ActiveActiveTunnel) {
		var ret bool
		return ret
	}
	return *o.ActiveActiveTunnel
}

// GetActiveActiveTunnelOk returns a tuple with the ActiveActiveTunnel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationsOrganizationIdApplianceVpnThirdPartyVPNPeersGroup) GetActiveActiveTunnelOk() (*bool, bool) {
	if o == nil || isNil(o.ActiveActiveTunnel) {
    return nil, false
	}
	return o.ActiveActiveTunnel, true
}

// HasActiveActiveTunnel returns a boolean if a field has been set.
func (o *OrganizationsOrganizationIdApplianceVpnThirdPartyVPNPeersGroup) HasActiveActiveTunnel() bool {
	if o != nil && !isNil(o.ActiveActiveTunnel) {
		return true
	}

	return false
}

// SetActiveActiveTunnel gets a reference to the given bool and assigns it to the ActiveActiveTunnel field.
func (o *OrganizationsOrganizationIdApplianceVpnThirdPartyVPNPeersGroup) SetActiveActiveTunnel(v bool) {
	o.ActiveActiveTunnel = &v
}

func (o OrganizationsOrganizationIdApplianceVpnThirdPartyVPNPeersGroup) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Number) {
		toSerialize["number"] = o.Number
	}
	if !isNil(o.Failover) {
		toSerialize["failover"] = o.Failover
	}
	if !isNil(o.ActiveActiveTunnel) {
		toSerialize["activeActiveTunnel"] = o.ActiveActiveTunnel
	}
	return json.Marshal(toSerialize)
}

type NullableOrganizationsOrganizationIdApplianceVpnThirdPartyVPNPeersGroup struct {
	value *OrganizationsOrganizationIdApplianceVpnThirdPartyVPNPeersGroup
	isSet bool
}

func (v NullableOrganizationsOrganizationIdApplianceVpnThirdPartyVPNPeersGroup) Get() *OrganizationsOrganizationIdApplianceVpnThirdPartyVPNPeersGroup {
	return v.value
}

func (v *NullableOrganizationsOrganizationIdApplianceVpnThirdPartyVPNPeersGroup) Set(val *OrganizationsOrganizationIdApplianceVpnThirdPartyVPNPeersGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationsOrganizationIdApplianceVpnThirdPartyVPNPeersGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationsOrganizationIdApplianceVpnThirdPartyVPNPeersGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationsOrganizationIdApplianceVpnThirdPartyVPNPeersGroup(val *OrganizationsOrganizationIdApplianceVpnThirdPartyVPNPeersGroup) *NullableOrganizationsOrganizationIdApplianceVpnThirdPartyVPNPeersGroup {
	return &NullableOrganizationsOrganizationIdApplianceVpnThirdPartyVPNPeersGroup{value: val, isSet: true}
}

func (v NullableOrganizationsOrganizationIdApplianceVpnThirdPartyVPNPeersGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationsOrganizationIdApplianceVpnThirdPartyVPNPeersGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


