/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 June, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.47.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200155 struct for InlineResponse200155
type InlineResponse200155 struct {
	// Management VLAN
	Vlan *int32 `json:"vlan,omitempty"`
	// The use Combined Power as the default behavior of secondary power supplies on supported devices.
	UseCombinedPower *bool `json:"useCombinedPower,omitempty"`
	// Exceptions on a per switch basis to \"useCombinedPower\"
	PowerExceptions []InlineResponse200155PowerExceptions `json:"powerExceptions,omitempty"`
	UplinkClientSampling *InlineResponse200155UplinkClientSampling `json:"uplinkClientSampling,omitempty"`
	MacBlocklist *InlineResponse200155MacBlocklist `json:"macBlocklist,omitempty"`
}

// NewInlineResponse200155 instantiates a new InlineResponse200155 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200155() *InlineResponse200155 {
	this := InlineResponse200155{}
	return &this
}

// NewInlineResponse200155WithDefaults instantiates a new InlineResponse200155 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200155WithDefaults() *InlineResponse200155 {
	this := InlineResponse200155{}
	return &this
}

// GetVlan returns the Vlan field value if set, zero value otherwise.
func (o *InlineResponse200155) GetVlan() int32 {
	if o == nil || isNil(o.Vlan) {
		var ret int32
		return ret
	}
	return *o.Vlan
}

// GetVlanOk returns a tuple with the Vlan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200155) GetVlanOk() (*int32, bool) {
	if o == nil || isNil(o.Vlan) {
    return nil, false
	}
	return o.Vlan, true
}

// HasVlan returns a boolean if a field has been set.
func (o *InlineResponse200155) HasVlan() bool {
	if o != nil && !isNil(o.Vlan) {
		return true
	}

	return false
}

// SetVlan gets a reference to the given int32 and assigns it to the Vlan field.
func (o *InlineResponse200155) SetVlan(v int32) {
	o.Vlan = &v
}

// GetUseCombinedPower returns the UseCombinedPower field value if set, zero value otherwise.
func (o *InlineResponse200155) GetUseCombinedPower() bool {
	if o == nil || isNil(o.UseCombinedPower) {
		var ret bool
		return ret
	}
	return *o.UseCombinedPower
}

// GetUseCombinedPowerOk returns a tuple with the UseCombinedPower field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200155) GetUseCombinedPowerOk() (*bool, bool) {
	if o == nil || isNil(o.UseCombinedPower) {
    return nil, false
	}
	return o.UseCombinedPower, true
}

// HasUseCombinedPower returns a boolean if a field has been set.
func (o *InlineResponse200155) HasUseCombinedPower() bool {
	if o != nil && !isNil(o.UseCombinedPower) {
		return true
	}

	return false
}

// SetUseCombinedPower gets a reference to the given bool and assigns it to the UseCombinedPower field.
func (o *InlineResponse200155) SetUseCombinedPower(v bool) {
	o.UseCombinedPower = &v
}

// GetPowerExceptions returns the PowerExceptions field value if set, zero value otherwise.
func (o *InlineResponse200155) GetPowerExceptions() []InlineResponse200155PowerExceptions {
	if o == nil || isNil(o.PowerExceptions) {
		var ret []InlineResponse200155PowerExceptions
		return ret
	}
	return o.PowerExceptions
}

// GetPowerExceptionsOk returns a tuple with the PowerExceptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200155) GetPowerExceptionsOk() ([]InlineResponse200155PowerExceptions, bool) {
	if o == nil || isNil(o.PowerExceptions) {
    return nil, false
	}
	return o.PowerExceptions, true
}

// HasPowerExceptions returns a boolean if a field has been set.
func (o *InlineResponse200155) HasPowerExceptions() bool {
	if o != nil && !isNil(o.PowerExceptions) {
		return true
	}

	return false
}

// SetPowerExceptions gets a reference to the given []InlineResponse200155PowerExceptions and assigns it to the PowerExceptions field.
func (o *InlineResponse200155) SetPowerExceptions(v []InlineResponse200155PowerExceptions) {
	o.PowerExceptions = v
}

// GetUplinkClientSampling returns the UplinkClientSampling field value if set, zero value otherwise.
func (o *InlineResponse200155) GetUplinkClientSampling() InlineResponse200155UplinkClientSampling {
	if o == nil || isNil(o.UplinkClientSampling) {
		var ret InlineResponse200155UplinkClientSampling
		return ret
	}
	return *o.UplinkClientSampling
}

// GetUplinkClientSamplingOk returns a tuple with the UplinkClientSampling field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200155) GetUplinkClientSamplingOk() (*InlineResponse200155UplinkClientSampling, bool) {
	if o == nil || isNil(o.UplinkClientSampling) {
    return nil, false
	}
	return o.UplinkClientSampling, true
}

// HasUplinkClientSampling returns a boolean if a field has been set.
func (o *InlineResponse200155) HasUplinkClientSampling() bool {
	if o != nil && !isNil(o.UplinkClientSampling) {
		return true
	}

	return false
}

// SetUplinkClientSampling gets a reference to the given InlineResponse200155UplinkClientSampling and assigns it to the UplinkClientSampling field.
func (o *InlineResponse200155) SetUplinkClientSampling(v InlineResponse200155UplinkClientSampling) {
	o.UplinkClientSampling = &v
}

// GetMacBlocklist returns the MacBlocklist field value if set, zero value otherwise.
func (o *InlineResponse200155) GetMacBlocklist() InlineResponse200155MacBlocklist {
	if o == nil || isNil(o.MacBlocklist) {
		var ret InlineResponse200155MacBlocklist
		return ret
	}
	return *o.MacBlocklist
}

// GetMacBlocklistOk returns a tuple with the MacBlocklist field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200155) GetMacBlocklistOk() (*InlineResponse200155MacBlocklist, bool) {
	if o == nil || isNil(o.MacBlocklist) {
    return nil, false
	}
	return o.MacBlocklist, true
}

// HasMacBlocklist returns a boolean if a field has been set.
func (o *InlineResponse200155) HasMacBlocklist() bool {
	if o != nil && !isNil(o.MacBlocklist) {
		return true
	}

	return false
}

// SetMacBlocklist gets a reference to the given InlineResponse200155MacBlocklist and assigns it to the MacBlocklist field.
func (o *InlineResponse200155) SetMacBlocklist(v InlineResponse200155MacBlocklist) {
	o.MacBlocklist = &v
}

func (o InlineResponse200155) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Vlan) {
		toSerialize["vlan"] = o.Vlan
	}
	if !isNil(o.UseCombinedPower) {
		toSerialize["useCombinedPower"] = o.UseCombinedPower
	}
	if !isNil(o.PowerExceptions) {
		toSerialize["powerExceptions"] = o.PowerExceptions
	}
	if !isNil(o.UplinkClientSampling) {
		toSerialize["uplinkClientSampling"] = o.UplinkClientSampling
	}
	if !isNil(o.MacBlocklist) {
		toSerialize["macBlocklist"] = o.MacBlocklist
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200155 struct {
	value *InlineResponse200155
	isSet bool
}

func (v NullableInlineResponse200155) Get() *InlineResponse200155 {
	return v.value
}

func (v *NullableInlineResponse200155) Set(val *InlineResponse200155) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200155) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200155) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200155(val *InlineResponse200155) *NullableInlineResponse200155 {
	return &NullableInlineResponse200155{value: val, isSet: true}
}

func (v NullableInlineResponse200155) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200155) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


