/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 07 August, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.49.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200213MerakiVpnPeers struct for InlineResponse200213MerakiVpnPeers
type InlineResponse200213MerakiVpnPeers struct {
	// Network ID
	NetworkId *string `json:"networkId,omitempty"`
	// Network Name
	NetworkName *string `json:"networkName,omitempty"`
	// Reachability
	Reachability *string `json:"reachability,omitempty"`
}

// NewInlineResponse200213MerakiVpnPeers instantiates a new InlineResponse200213MerakiVpnPeers object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200213MerakiVpnPeers() *InlineResponse200213MerakiVpnPeers {
	this := InlineResponse200213MerakiVpnPeers{}
	return &this
}

// NewInlineResponse200213MerakiVpnPeersWithDefaults instantiates a new InlineResponse200213MerakiVpnPeers object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200213MerakiVpnPeersWithDefaults() *InlineResponse200213MerakiVpnPeers {
	this := InlineResponse200213MerakiVpnPeers{}
	return &this
}

// GetNetworkId returns the NetworkId field value if set, zero value otherwise.
func (o *InlineResponse200213MerakiVpnPeers) GetNetworkId() string {
	if o == nil || isNil(o.NetworkId) {
		var ret string
		return ret
	}
	return *o.NetworkId
}

// GetNetworkIdOk returns a tuple with the NetworkId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200213MerakiVpnPeers) GetNetworkIdOk() (*string, bool) {
	if o == nil || isNil(o.NetworkId) {
    return nil, false
	}
	return o.NetworkId, true
}

// HasNetworkId returns a boolean if a field has been set.
func (o *InlineResponse200213MerakiVpnPeers) HasNetworkId() bool {
	if o != nil && !isNil(o.NetworkId) {
		return true
	}

	return false
}

// SetNetworkId gets a reference to the given string and assigns it to the NetworkId field.
func (o *InlineResponse200213MerakiVpnPeers) SetNetworkId(v string) {
	o.NetworkId = &v
}

// GetNetworkName returns the NetworkName field value if set, zero value otherwise.
func (o *InlineResponse200213MerakiVpnPeers) GetNetworkName() string {
	if o == nil || isNil(o.NetworkName) {
		var ret string
		return ret
	}
	return *o.NetworkName
}

// GetNetworkNameOk returns a tuple with the NetworkName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200213MerakiVpnPeers) GetNetworkNameOk() (*string, bool) {
	if o == nil || isNil(o.NetworkName) {
    return nil, false
	}
	return o.NetworkName, true
}

// HasNetworkName returns a boolean if a field has been set.
func (o *InlineResponse200213MerakiVpnPeers) HasNetworkName() bool {
	if o != nil && !isNil(o.NetworkName) {
		return true
	}

	return false
}

// SetNetworkName gets a reference to the given string and assigns it to the NetworkName field.
func (o *InlineResponse200213MerakiVpnPeers) SetNetworkName(v string) {
	o.NetworkName = &v
}

// GetReachability returns the Reachability field value if set, zero value otherwise.
func (o *InlineResponse200213MerakiVpnPeers) GetReachability() string {
	if o == nil || isNil(o.Reachability) {
		var ret string
		return ret
	}
	return *o.Reachability
}

// GetReachabilityOk returns a tuple with the Reachability field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200213MerakiVpnPeers) GetReachabilityOk() (*string, bool) {
	if o == nil || isNil(o.Reachability) {
    return nil, false
	}
	return o.Reachability, true
}

// HasReachability returns a boolean if a field has been set.
func (o *InlineResponse200213MerakiVpnPeers) HasReachability() bool {
	if o != nil && !isNil(o.Reachability) {
		return true
	}

	return false
}

// SetReachability gets a reference to the given string and assigns it to the Reachability field.
func (o *InlineResponse200213MerakiVpnPeers) SetReachability(v string) {
	o.Reachability = &v
}

func (o InlineResponse200213MerakiVpnPeers) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.NetworkId) {
		toSerialize["networkId"] = o.NetworkId
	}
	if !isNil(o.NetworkName) {
		toSerialize["networkName"] = o.NetworkName
	}
	if !isNil(o.Reachability) {
		toSerialize["reachability"] = o.Reachability
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200213MerakiVpnPeers struct {
	value *InlineResponse200213MerakiVpnPeers
	isSet bool
}

func (v NullableInlineResponse200213MerakiVpnPeers) Get() *InlineResponse200213MerakiVpnPeers {
	return v.value
}

func (v *NullableInlineResponse200213MerakiVpnPeers) Set(val *InlineResponse200213MerakiVpnPeers) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200213MerakiVpnPeers) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200213MerakiVpnPeers) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200213MerakiVpnPeers(val *InlineResponse200213MerakiVpnPeers) *NullableInlineResponse200213MerakiVpnPeers {
	return &NullableInlineResponse200213MerakiVpnPeers{value: val, isSet: true}
}

func (v NullableInlineResponse200213MerakiVpnPeers) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200213MerakiVpnPeers) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


