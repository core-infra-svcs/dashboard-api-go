/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 04 June, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.59.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200252Uplink Uplink setting of the cluster
type InlineResponse200252Uplink struct {
	// Name of the interface
	Interface *string `json:"interface,omitempty"`
	// VLAN of the interface
	Vlan *int32 `json:"vlan,omitempty"`
	// Addresses of the interface
	Addresses []InlineResponse200252UplinkAddresses `json:"addresses,omitempty"`
}

// NewInlineResponse200252Uplink instantiates a new InlineResponse200252Uplink object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200252Uplink() *InlineResponse200252Uplink {
	this := InlineResponse200252Uplink{}
	return &this
}

// NewInlineResponse200252UplinkWithDefaults instantiates a new InlineResponse200252Uplink object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200252UplinkWithDefaults() *InlineResponse200252Uplink {
	this := InlineResponse200252Uplink{}
	return &this
}

// GetInterface returns the Interface field value if set, zero value otherwise.
func (o *InlineResponse200252Uplink) GetInterface() string {
	if o == nil || isNil(o.Interface) {
		var ret string
		return ret
	}
	return *o.Interface
}

// GetInterfaceOk returns a tuple with the Interface field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200252Uplink) GetInterfaceOk() (*string, bool) {
	if o == nil || isNil(o.Interface) {
    return nil, false
	}
	return o.Interface, true
}

// HasInterface returns a boolean if a field has been set.
func (o *InlineResponse200252Uplink) HasInterface() bool {
	if o != nil && !isNil(o.Interface) {
		return true
	}

	return false
}

// SetInterface gets a reference to the given string and assigns it to the Interface field.
func (o *InlineResponse200252Uplink) SetInterface(v string) {
	o.Interface = &v
}

// GetVlan returns the Vlan field value if set, zero value otherwise.
func (o *InlineResponse200252Uplink) GetVlan() int32 {
	if o == nil || isNil(o.Vlan) {
		var ret int32
		return ret
	}
	return *o.Vlan
}

// GetVlanOk returns a tuple with the Vlan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200252Uplink) GetVlanOk() (*int32, bool) {
	if o == nil || isNil(o.Vlan) {
    return nil, false
	}
	return o.Vlan, true
}

// HasVlan returns a boolean if a field has been set.
func (o *InlineResponse200252Uplink) HasVlan() bool {
	if o != nil && !isNil(o.Vlan) {
		return true
	}

	return false
}

// SetVlan gets a reference to the given int32 and assigns it to the Vlan field.
func (o *InlineResponse200252Uplink) SetVlan(v int32) {
	o.Vlan = &v
}

// GetAddresses returns the Addresses field value if set, zero value otherwise.
func (o *InlineResponse200252Uplink) GetAddresses() []InlineResponse200252UplinkAddresses {
	if o == nil || isNil(o.Addresses) {
		var ret []InlineResponse200252UplinkAddresses
		return ret
	}
	return o.Addresses
}

// GetAddressesOk returns a tuple with the Addresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200252Uplink) GetAddressesOk() ([]InlineResponse200252UplinkAddresses, bool) {
	if o == nil || isNil(o.Addresses) {
    return nil, false
	}
	return o.Addresses, true
}

// HasAddresses returns a boolean if a field has been set.
func (o *InlineResponse200252Uplink) HasAddresses() bool {
	if o != nil && !isNil(o.Addresses) {
		return true
	}

	return false
}

// SetAddresses gets a reference to the given []InlineResponse200252UplinkAddresses and assigns it to the Addresses field.
func (o *InlineResponse200252Uplink) SetAddresses(v []InlineResponse200252UplinkAddresses) {
	o.Addresses = v
}

func (o InlineResponse200252Uplink) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Interface) {
		toSerialize["interface"] = o.Interface
	}
	if !isNil(o.Vlan) {
		toSerialize["vlan"] = o.Vlan
	}
	if !isNil(o.Addresses) {
		toSerialize["addresses"] = o.Addresses
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200252Uplink struct {
	value *InlineResponse200252Uplink
	isSet bool
}

func (v NullableInlineResponse200252Uplink) Get() *InlineResponse200252Uplink {
	return v.value
}

func (v *NullableInlineResponse200252Uplink) Set(val *InlineResponse200252Uplink) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200252Uplink) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200252Uplink) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200252Uplink(val *InlineResponse200252Uplink) *NullableInlineResponse200252Uplink {
	return &NullableInlineResponse200252Uplink{value: val, isSet: true}
}

func (v NullableInlineResponse200252Uplink) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200252Uplink) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


