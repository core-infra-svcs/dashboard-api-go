/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 October, 2022 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.26.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse20017 struct for InlineResponse20017
type InlineResponse20017 struct {
	Products *InlineResponse20017Products `json:"products,omitempty"`
	// The ordered stages in the network
	Stages *[]InlineResponse20017Stages `json:"stages,omitempty"`
	// Reasons for the rollback
	Reasons *[]InlineResponse20016Reasons `json:"reasons,omitempty"`
}

// NewInlineResponse20017 instantiates a new InlineResponse20017 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20017() *InlineResponse20017 {
	this := InlineResponse20017{}
	return &this
}

// NewInlineResponse20017WithDefaults instantiates a new InlineResponse20017 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20017WithDefaults() *InlineResponse20017 {
	this := InlineResponse20017{}
	return &this
}

// GetProducts returns the Products field value if set, zero value otherwise.
func (o *InlineResponse20017) GetProducts() InlineResponse20017Products {
	if o == nil || o.Products == nil {
		var ret InlineResponse20017Products
		return ret
	}
	return *o.Products
}

// GetProductsOk returns a tuple with the Products field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20017) GetProductsOk() (*InlineResponse20017Products, bool) {
	if o == nil || o.Products == nil {
		return nil, false
	}
	return o.Products, true
}

// HasProducts returns a boolean if a field has been set.
func (o *InlineResponse20017) HasProducts() bool {
	if o != nil && o.Products != nil {
		return true
	}

	return false
}

// SetProducts gets a reference to the given InlineResponse20017Products and assigns it to the Products field.
func (o *InlineResponse20017) SetProducts(v InlineResponse20017Products) {
	o.Products = &v
}

// GetStages returns the Stages field value if set, zero value otherwise.
func (o *InlineResponse20017) GetStages() []InlineResponse20017Stages {
	if o == nil || o.Stages == nil {
		var ret []InlineResponse20017Stages
		return ret
	}
	return *o.Stages
}

// GetStagesOk returns a tuple with the Stages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20017) GetStagesOk() (*[]InlineResponse20017Stages, bool) {
	if o == nil || o.Stages == nil {
		return nil, false
	}
	return o.Stages, true
}

// HasStages returns a boolean if a field has been set.
func (o *InlineResponse20017) HasStages() bool {
	if o != nil && o.Stages != nil {
		return true
	}

	return false
}

// SetStages gets a reference to the given []InlineResponse20017Stages and assigns it to the Stages field.
func (o *InlineResponse20017) SetStages(v []InlineResponse20017Stages) {
	o.Stages = &v
}

// GetReasons returns the Reasons field value if set, zero value otherwise.
func (o *InlineResponse20017) GetReasons() []InlineResponse20016Reasons {
	if o == nil || o.Reasons == nil {
		var ret []InlineResponse20016Reasons
		return ret
	}
	return *o.Reasons
}

// GetReasonsOk returns a tuple with the Reasons field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20017) GetReasonsOk() (*[]InlineResponse20016Reasons, bool) {
	if o == nil || o.Reasons == nil {
		return nil, false
	}
	return o.Reasons, true
}

// HasReasons returns a boolean if a field has been set.
func (o *InlineResponse20017) HasReasons() bool {
	if o != nil && o.Reasons != nil {
		return true
	}

	return false
}

// SetReasons gets a reference to the given []InlineResponse20016Reasons and assigns it to the Reasons field.
func (o *InlineResponse20017) SetReasons(v []InlineResponse20016Reasons) {
	o.Reasons = &v
}

func (o InlineResponse20017) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Products != nil {
		toSerialize["products"] = o.Products
	}
	if o.Stages != nil {
		toSerialize["stages"] = o.Stages
	}
	if o.Reasons != nil {
		toSerialize["reasons"] = o.Reasons
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20017 struct {
	value *InlineResponse20017
	isSet bool
}

func (v NullableInlineResponse20017) Get() *InlineResponse20017 {
	return v.value
}

func (v *NullableInlineResponse20017) Set(val *InlineResponse20017) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20017) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20017) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20017(val *InlineResponse20017) *NullableInlineResponse20017 {
	return &NullableInlineResponse20017{value: val, isSet: true}
}

func (v NullableInlineResponse20017) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20017) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


