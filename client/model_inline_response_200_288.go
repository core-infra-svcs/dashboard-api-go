/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 07 May, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.58.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200288 struct for InlineResponse200288
type InlineResponse200288 struct {
	// List of networks that have XDR disabled
	Networks []InlineResponse200288Networks `json:"networks,omitempty"`
}

// NewInlineResponse200288 instantiates a new InlineResponse200288 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200288() *InlineResponse200288 {
	this := InlineResponse200288{}
	return &this
}

// NewInlineResponse200288WithDefaults instantiates a new InlineResponse200288 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200288WithDefaults() *InlineResponse200288 {
	this := InlineResponse200288{}
	return &this
}

// GetNetworks returns the Networks field value if set, zero value otherwise.
func (o *InlineResponse200288) GetNetworks() []InlineResponse200288Networks {
	if o == nil || isNil(o.Networks) {
		var ret []InlineResponse200288Networks
		return ret
	}
	return o.Networks
}

// GetNetworksOk returns a tuple with the Networks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200288) GetNetworksOk() ([]InlineResponse200288Networks, bool) {
	if o == nil || isNil(o.Networks) {
    return nil, false
	}
	return o.Networks, true
}

// HasNetworks returns a boolean if a field has been set.
func (o *InlineResponse200288) HasNetworks() bool {
	if o != nil && !isNil(o.Networks) {
		return true
	}

	return false
}

// SetNetworks gets a reference to the given []InlineResponse200288Networks and assigns it to the Networks field.
func (o *InlineResponse200288) SetNetworks(v []InlineResponse200288Networks) {
	o.Networks = v
}

func (o InlineResponse200288) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Networks) {
		toSerialize["networks"] = o.Networks
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200288 struct {
	value *InlineResponse200288
	isSet bool
}

func (v NullableInlineResponse200288) Get() *InlineResponse200288 {
	return v.value
}

func (v *NullableInlineResponse200288) Set(val *InlineResponse200288) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200288) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200288) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200288(val *InlineResponse200288) *NullableInlineResponse200288 {
	return &NullableInlineResponse200288{value: val, isSet: true}
}

func (v NullableInlineResponse200288) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200288) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


