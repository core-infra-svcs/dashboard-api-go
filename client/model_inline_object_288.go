/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 02 April, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.57.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineObject288 struct for InlineObject288
type InlineObject288 struct {
	// A list of network ids (limit: 15).
	NetworkIds []string `json:"networkIds"`
}

// NewInlineObject288 instantiates a new InlineObject288 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject288(networkIds []string) *InlineObject288 {
	this := InlineObject288{}
	this.NetworkIds = networkIds
	return &this
}

// NewInlineObject288WithDefaults instantiates a new InlineObject288 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject288WithDefaults() *InlineObject288 {
	this := InlineObject288{}
	return &this
}

// GetNetworkIds returns the NetworkIds field value
func (o *InlineObject288) GetNetworkIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.NetworkIds
}

// GetNetworkIdsOk returns a tuple with the NetworkIds field value
// and a boolean to check if the value has been set.
func (o *InlineObject288) GetNetworkIdsOk() ([]string, bool) {
	if o == nil {
    return nil, false
	}
	return o.NetworkIds, true
}

// SetNetworkIds sets field value
func (o *InlineObject288) SetNetworkIds(v []string) {
	o.NetworkIds = v
}

func (o InlineObject288) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["networkIds"] = o.NetworkIds
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject288 struct {
	value *InlineObject288
	isSet bool
}

func (v NullableInlineObject288) Get() *InlineObject288 {
	return v.value
}

func (v *NullableInlineObject288) Set(val *InlineObject288) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject288) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject288) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject288(val *InlineObject288) *NullableInlineObject288 {
	return &NullableInlineObject288{value: val, isSet: true}
}

func (v NullableInlineObject288) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject288) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


