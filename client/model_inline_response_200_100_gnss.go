/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 February, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.55.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200100Gnss GNSS (e.g. GPS) status and progress information
type InlineResponse200100Gnss struct {
	// GNSS status. Possible values: 'scheduled', 'in progress', 'error', 'finished', 'not applicable', 'canceled'
	Status *string `json:"status,omitempty"`
	Completed *InlineResponse200100GnssCompleted `json:"completed,omitempty"`
}

// NewInlineResponse200100Gnss instantiates a new InlineResponse200100Gnss object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200100Gnss() *InlineResponse200100Gnss {
	this := InlineResponse200100Gnss{}
	return &this
}

// NewInlineResponse200100GnssWithDefaults instantiates a new InlineResponse200100Gnss object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200100GnssWithDefaults() *InlineResponse200100Gnss {
	this := InlineResponse200100Gnss{}
	return &this
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *InlineResponse200100Gnss) GetStatus() string {
	if o == nil || isNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200100Gnss) GetStatusOk() (*string, bool) {
	if o == nil || isNil(o.Status) {
    return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *InlineResponse200100Gnss) HasStatus() bool {
	if o != nil && !isNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *InlineResponse200100Gnss) SetStatus(v string) {
	o.Status = &v
}

// GetCompleted returns the Completed field value if set, zero value otherwise.
func (o *InlineResponse200100Gnss) GetCompleted() InlineResponse200100GnssCompleted {
	if o == nil || isNil(o.Completed) {
		var ret InlineResponse200100GnssCompleted
		return ret
	}
	return *o.Completed
}

// GetCompletedOk returns a tuple with the Completed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200100Gnss) GetCompletedOk() (*InlineResponse200100GnssCompleted, bool) {
	if o == nil || isNil(o.Completed) {
    return nil, false
	}
	return o.Completed, true
}

// HasCompleted returns a boolean if a field has been set.
func (o *InlineResponse200100Gnss) HasCompleted() bool {
	if o != nil && !isNil(o.Completed) {
		return true
	}

	return false
}

// SetCompleted gets a reference to the given InlineResponse200100GnssCompleted and assigns it to the Completed field.
func (o *InlineResponse200100Gnss) SetCompleted(v InlineResponse200100GnssCompleted) {
	o.Completed = &v
}

func (o InlineResponse200100Gnss) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !isNil(o.Completed) {
		toSerialize["completed"] = o.Completed
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200100Gnss struct {
	value *InlineResponse200100Gnss
	isSet bool
}

func (v NullableInlineResponse200100Gnss) Get() *InlineResponse200100Gnss {
	return v.value
}

func (v *NullableInlineResponse200100Gnss) Set(val *InlineResponse200100Gnss) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200100Gnss) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200100Gnss) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200100Gnss(val *InlineResponse200100Gnss) *NullableInlineResponse200100Gnss {
	return &NullableInlineResponse200100Gnss{value: val, isSet: true}
}

func (v NullableInlineResponse200100Gnss) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200100Gnss) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


