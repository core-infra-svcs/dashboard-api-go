/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 01 October, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.63.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// OrganizationsOrganizationIdPoliciesAssignmentsByClientLimitTo struct for OrganizationsOrganizationIdPoliciesAssignmentsByClientLimitTo
type OrganizationsOrganizationIdPoliciesAssignmentsByClientLimitTo struct {
	// true if policy is applied to the appliance
	Appliance *bool `json:"appliance,omitempty"`
	// ssids
	Ssids []OrganizationsOrganizationIdPoliciesAssignmentsByClientSsids `json:"ssids,omitempty"`
}

// NewOrganizationsOrganizationIdPoliciesAssignmentsByClientLimitTo instantiates a new OrganizationsOrganizationIdPoliciesAssignmentsByClientLimitTo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationsOrganizationIdPoliciesAssignmentsByClientLimitTo() *OrganizationsOrganizationIdPoliciesAssignmentsByClientLimitTo {
	this := OrganizationsOrganizationIdPoliciesAssignmentsByClientLimitTo{}
	return &this
}

// NewOrganizationsOrganizationIdPoliciesAssignmentsByClientLimitToWithDefaults instantiates a new OrganizationsOrganizationIdPoliciesAssignmentsByClientLimitTo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationsOrganizationIdPoliciesAssignmentsByClientLimitToWithDefaults() *OrganizationsOrganizationIdPoliciesAssignmentsByClientLimitTo {
	this := OrganizationsOrganizationIdPoliciesAssignmentsByClientLimitTo{}
	return &this
}

// GetAppliance returns the Appliance field value if set, zero value otherwise.
func (o *OrganizationsOrganizationIdPoliciesAssignmentsByClientLimitTo) GetAppliance() bool {
	if o == nil || isNil(o.Appliance) {
		var ret bool
		return ret
	}
	return *o.Appliance
}

// GetApplianceOk returns a tuple with the Appliance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationsOrganizationIdPoliciesAssignmentsByClientLimitTo) GetApplianceOk() (*bool, bool) {
	if o == nil || isNil(o.Appliance) {
    return nil, false
	}
	return o.Appliance, true
}

// HasAppliance returns a boolean if a field has been set.
func (o *OrganizationsOrganizationIdPoliciesAssignmentsByClientLimitTo) HasAppliance() bool {
	if o != nil && !isNil(o.Appliance) {
		return true
	}

	return false
}

// SetAppliance gets a reference to the given bool and assigns it to the Appliance field.
func (o *OrganizationsOrganizationIdPoliciesAssignmentsByClientLimitTo) SetAppliance(v bool) {
	o.Appliance = &v
}

// GetSsids returns the Ssids field value if set, zero value otherwise.
func (o *OrganizationsOrganizationIdPoliciesAssignmentsByClientLimitTo) GetSsids() []OrganizationsOrganizationIdPoliciesAssignmentsByClientSsids {
	if o == nil || isNil(o.Ssids) {
		var ret []OrganizationsOrganizationIdPoliciesAssignmentsByClientSsids
		return ret
	}
	return o.Ssids
}

// GetSsidsOk returns a tuple with the Ssids field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationsOrganizationIdPoliciesAssignmentsByClientLimitTo) GetSsidsOk() ([]OrganizationsOrganizationIdPoliciesAssignmentsByClientSsids, bool) {
	if o == nil || isNil(o.Ssids) {
    return nil, false
	}
	return o.Ssids, true
}

// HasSsids returns a boolean if a field has been set.
func (o *OrganizationsOrganizationIdPoliciesAssignmentsByClientLimitTo) HasSsids() bool {
	if o != nil && !isNil(o.Ssids) {
		return true
	}

	return false
}

// SetSsids gets a reference to the given []OrganizationsOrganizationIdPoliciesAssignmentsByClientSsids and assigns it to the Ssids field.
func (o *OrganizationsOrganizationIdPoliciesAssignmentsByClientLimitTo) SetSsids(v []OrganizationsOrganizationIdPoliciesAssignmentsByClientSsids) {
	o.Ssids = v
}

func (o OrganizationsOrganizationIdPoliciesAssignmentsByClientLimitTo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Appliance) {
		toSerialize["appliance"] = o.Appliance
	}
	if !isNil(o.Ssids) {
		toSerialize["ssids"] = o.Ssids
	}
	return json.Marshal(toSerialize)
}

type NullableOrganizationsOrganizationIdPoliciesAssignmentsByClientLimitTo struct {
	value *OrganizationsOrganizationIdPoliciesAssignmentsByClientLimitTo
	isSet bool
}

func (v NullableOrganizationsOrganizationIdPoliciesAssignmentsByClientLimitTo) Get() *OrganizationsOrganizationIdPoliciesAssignmentsByClientLimitTo {
	return v.value
}

func (v *NullableOrganizationsOrganizationIdPoliciesAssignmentsByClientLimitTo) Set(val *OrganizationsOrganizationIdPoliciesAssignmentsByClientLimitTo) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationsOrganizationIdPoliciesAssignmentsByClientLimitTo) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationsOrganizationIdPoliciesAssignmentsByClientLimitTo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationsOrganizationIdPoliciesAssignmentsByClientLimitTo(val *OrganizationsOrganizationIdPoliciesAssignmentsByClientLimitTo) *NullableOrganizationsOrganizationIdPoliciesAssignmentsByClientLimitTo {
	return &NullableOrganizationsOrganizationIdPoliciesAssignmentsByClientLimitTo{value: val, isSet: true}
}

func (v NullableOrganizationsOrganizationIdPoliciesAssignmentsByClientLimitTo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationsOrganizationIdPoliciesAssignmentsByClientLimitTo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


