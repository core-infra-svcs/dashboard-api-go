/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 07 May, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.58.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse20057Rules struct for InlineResponse20057Rules
type InlineResponse20057Rules struct {
	// IP address of the device subject to port forwarding
	LanIp *string `json:"lanIp,omitempty"`
	// An array of ranges of WAN IP addresses that are allowed to make inbound connections on the specified ports or port ranges (or any)
	AllowedIps []string `json:"allowedIps,omitempty"`
	// Name of the rule
	Name *string `json:"name,omitempty"`
	// Protocol the rule applies to
	Protocol *string `json:"protocol,omitempty"`
	// The port or port range forwarded to the host on the LAN
	PublicPort *string `json:"publicPort,omitempty"`
	// The port or port range that receives forwarded traffic from the WAN
	LocalPort *string `json:"localPort,omitempty"`
	// The physical WAN interface on which the traffic arrives; allowed values vary by appliance model and configuration
	Uplink *string `json:"uplink,omitempty"`
}

// NewInlineResponse20057Rules instantiates a new InlineResponse20057Rules object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20057Rules() *InlineResponse20057Rules {
	this := InlineResponse20057Rules{}
	return &this
}

// NewInlineResponse20057RulesWithDefaults instantiates a new InlineResponse20057Rules object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20057RulesWithDefaults() *InlineResponse20057Rules {
	this := InlineResponse20057Rules{}
	return &this
}

// GetLanIp returns the LanIp field value if set, zero value otherwise.
func (o *InlineResponse20057Rules) GetLanIp() string {
	if o == nil || isNil(o.LanIp) {
		var ret string
		return ret
	}
	return *o.LanIp
}

// GetLanIpOk returns a tuple with the LanIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20057Rules) GetLanIpOk() (*string, bool) {
	if o == nil || isNil(o.LanIp) {
    return nil, false
	}
	return o.LanIp, true
}

// HasLanIp returns a boolean if a field has been set.
func (o *InlineResponse20057Rules) HasLanIp() bool {
	if o != nil && !isNil(o.LanIp) {
		return true
	}

	return false
}

// SetLanIp gets a reference to the given string and assigns it to the LanIp field.
func (o *InlineResponse20057Rules) SetLanIp(v string) {
	o.LanIp = &v
}

// GetAllowedIps returns the AllowedIps field value if set, zero value otherwise.
func (o *InlineResponse20057Rules) GetAllowedIps() []string {
	if o == nil || isNil(o.AllowedIps) {
		var ret []string
		return ret
	}
	return o.AllowedIps
}

// GetAllowedIpsOk returns a tuple with the AllowedIps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20057Rules) GetAllowedIpsOk() ([]string, bool) {
	if o == nil || isNil(o.AllowedIps) {
    return nil, false
	}
	return o.AllowedIps, true
}

// HasAllowedIps returns a boolean if a field has been set.
func (o *InlineResponse20057Rules) HasAllowedIps() bool {
	if o != nil && !isNil(o.AllowedIps) {
		return true
	}

	return false
}

// SetAllowedIps gets a reference to the given []string and assigns it to the AllowedIps field.
func (o *InlineResponse20057Rules) SetAllowedIps(v []string) {
	o.AllowedIps = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *InlineResponse20057Rules) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20057Rules) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
    return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *InlineResponse20057Rules) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *InlineResponse20057Rules) SetName(v string) {
	o.Name = &v
}

// GetProtocol returns the Protocol field value if set, zero value otherwise.
func (o *InlineResponse20057Rules) GetProtocol() string {
	if o == nil || isNil(o.Protocol) {
		var ret string
		return ret
	}
	return *o.Protocol
}

// GetProtocolOk returns a tuple with the Protocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20057Rules) GetProtocolOk() (*string, bool) {
	if o == nil || isNil(o.Protocol) {
    return nil, false
	}
	return o.Protocol, true
}

// HasProtocol returns a boolean if a field has been set.
func (o *InlineResponse20057Rules) HasProtocol() bool {
	if o != nil && !isNil(o.Protocol) {
		return true
	}

	return false
}

// SetProtocol gets a reference to the given string and assigns it to the Protocol field.
func (o *InlineResponse20057Rules) SetProtocol(v string) {
	o.Protocol = &v
}

// GetPublicPort returns the PublicPort field value if set, zero value otherwise.
func (o *InlineResponse20057Rules) GetPublicPort() string {
	if o == nil || isNil(o.PublicPort) {
		var ret string
		return ret
	}
	return *o.PublicPort
}

// GetPublicPortOk returns a tuple with the PublicPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20057Rules) GetPublicPortOk() (*string, bool) {
	if o == nil || isNil(o.PublicPort) {
    return nil, false
	}
	return o.PublicPort, true
}

// HasPublicPort returns a boolean if a field has been set.
func (o *InlineResponse20057Rules) HasPublicPort() bool {
	if o != nil && !isNil(o.PublicPort) {
		return true
	}

	return false
}

// SetPublicPort gets a reference to the given string and assigns it to the PublicPort field.
func (o *InlineResponse20057Rules) SetPublicPort(v string) {
	o.PublicPort = &v
}

// GetLocalPort returns the LocalPort field value if set, zero value otherwise.
func (o *InlineResponse20057Rules) GetLocalPort() string {
	if o == nil || isNil(o.LocalPort) {
		var ret string
		return ret
	}
	return *o.LocalPort
}

// GetLocalPortOk returns a tuple with the LocalPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20057Rules) GetLocalPortOk() (*string, bool) {
	if o == nil || isNil(o.LocalPort) {
    return nil, false
	}
	return o.LocalPort, true
}

// HasLocalPort returns a boolean if a field has been set.
func (o *InlineResponse20057Rules) HasLocalPort() bool {
	if o != nil && !isNil(o.LocalPort) {
		return true
	}

	return false
}

// SetLocalPort gets a reference to the given string and assigns it to the LocalPort field.
func (o *InlineResponse20057Rules) SetLocalPort(v string) {
	o.LocalPort = &v
}

// GetUplink returns the Uplink field value if set, zero value otherwise.
func (o *InlineResponse20057Rules) GetUplink() string {
	if o == nil || isNil(o.Uplink) {
		var ret string
		return ret
	}
	return *o.Uplink
}

// GetUplinkOk returns a tuple with the Uplink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20057Rules) GetUplinkOk() (*string, bool) {
	if o == nil || isNil(o.Uplink) {
    return nil, false
	}
	return o.Uplink, true
}

// HasUplink returns a boolean if a field has been set.
func (o *InlineResponse20057Rules) HasUplink() bool {
	if o != nil && !isNil(o.Uplink) {
		return true
	}

	return false
}

// SetUplink gets a reference to the given string and assigns it to the Uplink field.
func (o *InlineResponse20057Rules) SetUplink(v string) {
	o.Uplink = &v
}

func (o InlineResponse20057Rules) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.LanIp) {
		toSerialize["lanIp"] = o.LanIp
	}
	if !isNil(o.AllowedIps) {
		toSerialize["allowedIps"] = o.AllowedIps
	}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.Protocol) {
		toSerialize["protocol"] = o.Protocol
	}
	if !isNil(o.PublicPort) {
		toSerialize["publicPort"] = o.PublicPort
	}
	if !isNil(o.LocalPort) {
		toSerialize["localPort"] = o.LocalPort
	}
	if !isNil(o.Uplink) {
		toSerialize["uplink"] = o.Uplink
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20057Rules struct {
	value *InlineResponse20057Rules
	isSet bool
}

func (v NullableInlineResponse20057Rules) Get() *InlineResponse20057Rules {
	return v.value
}

func (v *NullableInlineResponse20057Rules) Set(val *InlineResponse20057Rules) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20057Rules) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20057Rules) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20057Rules(val *InlineResponse20057Rules) *NullableInlineResponse20057Rules {
	return &NullableInlineResponse20057Rules{value: val, isSet: true}
}

func (v NullableInlineResponse20057Rules) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20057Rules) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


