/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 October, 2022 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.26.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"time"
)

// InlineResponse20015ProductsWirelessNextUpgrade Details of the next firmware upgrade on the device
type InlineResponse20015ProductsWirelessNextUpgrade struct {
	// Timestamp of the next scheduled firmware upgrade
	Time *time.Time `json:"time,omitempty"`
	ToVersion *InlineResponse20015ProductsWirelessNextUpgradeToVersion `json:"toVersion,omitempty"`
}

// NewInlineResponse20015ProductsWirelessNextUpgrade instantiates a new InlineResponse20015ProductsWirelessNextUpgrade object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20015ProductsWirelessNextUpgrade() *InlineResponse20015ProductsWirelessNextUpgrade {
	this := InlineResponse20015ProductsWirelessNextUpgrade{}
	return &this
}

// NewInlineResponse20015ProductsWirelessNextUpgradeWithDefaults instantiates a new InlineResponse20015ProductsWirelessNextUpgrade object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20015ProductsWirelessNextUpgradeWithDefaults() *InlineResponse20015ProductsWirelessNextUpgrade {
	this := InlineResponse20015ProductsWirelessNextUpgrade{}
	return &this
}

// GetTime returns the Time field value if set, zero value otherwise.
func (o *InlineResponse20015ProductsWirelessNextUpgrade) GetTime() time.Time {
	if o == nil || o.Time == nil {
		var ret time.Time
		return ret
	}
	return *o.Time
}

// GetTimeOk returns a tuple with the Time field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20015ProductsWirelessNextUpgrade) GetTimeOk() (*time.Time, bool) {
	if o == nil || o.Time == nil {
		return nil, false
	}
	return o.Time, true
}

// HasTime returns a boolean if a field has been set.
func (o *InlineResponse20015ProductsWirelessNextUpgrade) HasTime() bool {
	if o != nil && o.Time != nil {
		return true
	}

	return false
}

// SetTime gets a reference to the given time.Time and assigns it to the Time field.
func (o *InlineResponse20015ProductsWirelessNextUpgrade) SetTime(v time.Time) {
	o.Time = &v
}

// GetToVersion returns the ToVersion field value if set, zero value otherwise.
func (o *InlineResponse20015ProductsWirelessNextUpgrade) GetToVersion() InlineResponse20015ProductsWirelessNextUpgradeToVersion {
	if o == nil || o.ToVersion == nil {
		var ret InlineResponse20015ProductsWirelessNextUpgradeToVersion
		return ret
	}
	return *o.ToVersion
}

// GetToVersionOk returns a tuple with the ToVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20015ProductsWirelessNextUpgrade) GetToVersionOk() (*InlineResponse20015ProductsWirelessNextUpgradeToVersion, bool) {
	if o == nil || o.ToVersion == nil {
		return nil, false
	}
	return o.ToVersion, true
}

// HasToVersion returns a boolean if a field has been set.
func (o *InlineResponse20015ProductsWirelessNextUpgrade) HasToVersion() bool {
	if o != nil && o.ToVersion != nil {
		return true
	}

	return false
}

// SetToVersion gets a reference to the given InlineResponse20015ProductsWirelessNextUpgradeToVersion and assigns it to the ToVersion field.
func (o *InlineResponse20015ProductsWirelessNextUpgrade) SetToVersion(v InlineResponse20015ProductsWirelessNextUpgradeToVersion) {
	o.ToVersion = &v
}

func (o InlineResponse20015ProductsWirelessNextUpgrade) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Time != nil {
		toSerialize["time"] = o.Time
	}
	if o.ToVersion != nil {
		toSerialize["toVersion"] = o.ToVersion
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20015ProductsWirelessNextUpgrade struct {
	value *InlineResponse20015ProductsWirelessNextUpgrade
	isSet bool
}

func (v NullableInlineResponse20015ProductsWirelessNextUpgrade) Get() *InlineResponse20015ProductsWirelessNextUpgrade {
	return v.value
}

func (v *NullableInlineResponse20015ProductsWirelessNextUpgrade) Set(val *InlineResponse20015ProductsWirelessNextUpgrade) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20015ProductsWirelessNextUpgrade) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20015ProductsWirelessNextUpgrade) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20015ProductsWirelessNextUpgrade(val *InlineResponse20015ProductsWirelessNextUpgrade) *NullableInlineResponse20015ProductsWirelessNextUpgrade {
	return &NullableInlineResponse20015ProductsWirelessNextUpgrade{value: val, isSet: true}
}

func (v NullableInlineResponse20015ProductsWirelessNextUpgrade) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20015ProductsWirelessNextUpgrade) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


