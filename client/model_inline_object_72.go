/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 07 December, 2022 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.28.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineObject72 struct for InlineObject72
type InlineObject72 struct {
	Ssids NetworksNetworkIdClientsClientIdSplashAuthorizationStatusSsids `json:"ssids"`
}

// NewInlineObject72 instantiates a new InlineObject72 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject72(ssids NetworksNetworkIdClientsClientIdSplashAuthorizationStatusSsids) *InlineObject72 {
	this := InlineObject72{}
	this.Ssids = ssids
	return &this
}

// NewInlineObject72WithDefaults instantiates a new InlineObject72 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject72WithDefaults() *InlineObject72 {
	this := InlineObject72{}
	return &this
}

// GetSsids returns the Ssids field value
func (o *InlineObject72) GetSsids() NetworksNetworkIdClientsClientIdSplashAuthorizationStatusSsids {
	if o == nil {
		var ret NetworksNetworkIdClientsClientIdSplashAuthorizationStatusSsids
		return ret
	}

	return o.Ssids
}

// GetSsidsOk returns a tuple with the Ssids field value
// and a boolean to check if the value has been set.
func (o *InlineObject72) GetSsidsOk() (*NetworksNetworkIdClientsClientIdSplashAuthorizationStatusSsids, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Ssids, true
}

// SetSsids sets field value
func (o *InlineObject72) SetSsids(v NetworksNetworkIdClientsClientIdSplashAuthorizationStatusSsids) {
	o.Ssids = v
}

func (o InlineObject72) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["ssids"] = o.Ssids
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject72 struct {
	value *InlineObject72
	isSet bool
}

func (v NullableInlineObject72) Get() *InlineObject72 {
	return v.value
}

func (v *NullableInlineObject72) Set(val *InlineObject72) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject72) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject72) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject72(val *InlineObject72) *NullableInlineObject72 {
	return &NullableInlineObject72{value: val, isSet: true}
}

func (v NullableInlineObject72) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject72) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


