/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 07 December, 2022 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.28.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse20021Products The network devices to be updated
type InlineResponse20021Products struct {
	Switch *InlineResponse20021ProductsSwitch `json:"switch,omitempty"`
}

// NewInlineResponse20021Products instantiates a new InlineResponse20021Products object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20021Products() *InlineResponse20021Products {
	this := InlineResponse20021Products{}
	return &this
}

// NewInlineResponse20021ProductsWithDefaults instantiates a new InlineResponse20021Products object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20021ProductsWithDefaults() *InlineResponse20021Products {
	this := InlineResponse20021Products{}
	return &this
}

// GetSwitch returns the Switch field value if set, zero value otherwise.
func (o *InlineResponse20021Products) GetSwitch() InlineResponse20021ProductsSwitch {
	if o == nil || isNil(o.Switch) {
		var ret InlineResponse20021ProductsSwitch
		return ret
	}
	return *o.Switch
}

// GetSwitchOk returns a tuple with the Switch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20021Products) GetSwitchOk() (*InlineResponse20021ProductsSwitch, bool) {
	if o == nil || isNil(o.Switch) {
    return nil, false
	}
	return o.Switch, true
}

// HasSwitch returns a boolean if a field has been set.
func (o *InlineResponse20021Products) HasSwitch() bool {
	if o != nil && !isNil(o.Switch) {
		return true
	}

	return false
}

// SetSwitch gets a reference to the given InlineResponse20021ProductsSwitch and assigns it to the Switch field.
func (o *InlineResponse20021Products) SetSwitch(v InlineResponse20021ProductsSwitch) {
	o.Switch = &v
}

func (o InlineResponse20021Products) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Switch) {
		toSerialize["switch"] = o.Switch
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20021Products struct {
	value *InlineResponse20021Products
	isSet bool
}

func (v NullableInlineResponse20021Products) Get() *InlineResponse20021Products {
	return v.value
}

func (v *NullableInlineResponse20021Products) Set(val *InlineResponse20021Products) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20021Products) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20021Products) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20021Products(val *InlineResponse20021Products) *NullableInlineResponse20021Products {
	return &NullableInlineResponse20021Products{value: val, isSet: true}
}

func (v NullableInlineResponse20021Products) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20021Products) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


