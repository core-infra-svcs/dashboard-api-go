/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 01 May, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.46.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200214SeverityCounts struct for InlineResponse200214SeverityCounts
type InlineResponse200214SeverityCounts struct {
	// Type
	Type string `json:"type"`
	// Count
	Count int32 `json:"count"`
}

// NewInlineResponse200214SeverityCounts instantiates a new InlineResponse200214SeverityCounts object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200214SeverityCounts(type_ string, count int32) *InlineResponse200214SeverityCounts {
	this := InlineResponse200214SeverityCounts{}
	this.Type = type_
	this.Count = count
	return &this
}

// NewInlineResponse200214SeverityCountsWithDefaults instantiates a new InlineResponse200214SeverityCounts object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200214SeverityCountsWithDefaults() *InlineResponse200214SeverityCounts {
	this := InlineResponse200214SeverityCounts{}
	return &this
}

// GetType returns the Type field value
func (o *InlineResponse200214SeverityCounts) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *InlineResponse200214SeverityCounts) GetTypeOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *InlineResponse200214SeverityCounts) SetType(v string) {
	o.Type = v
}

// GetCount returns the Count field value
func (o *InlineResponse200214SeverityCounts) GetCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Count
}

// GetCountOk returns a tuple with the Count field value
// and a boolean to check if the value has been set.
func (o *InlineResponse200214SeverityCounts) GetCountOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Count, true
}

// SetCount sets field value
func (o *InlineResponse200214SeverityCounts) SetCount(v int32) {
	o.Count = v
}

func (o InlineResponse200214SeverityCounts) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["count"] = o.Count
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200214SeverityCounts struct {
	value *InlineResponse200214SeverityCounts
	isSet bool
}

func (v NullableInlineResponse200214SeverityCounts) Get() *InlineResponse200214SeverityCounts {
	return v.value
}

func (v *NullableInlineResponse200214SeverityCounts) Set(val *InlineResponse200214SeverityCounts) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200214SeverityCounts) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200214SeverityCounts) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200214SeverityCounts(val *InlineResponse200214SeverityCounts) *NullableInlineResponse200214SeverityCounts {
	return &NullableInlineResponse200214SeverityCounts{value: val, isSet: true}
}

func (v NullableInlineResponse200214SeverityCounts) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200214SeverityCounts) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


