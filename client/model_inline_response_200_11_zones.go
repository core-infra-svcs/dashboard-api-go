/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 01 October, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.63.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse20011Zones The zones state
type InlineResponse20011Zones struct {
	ZoneId *InlineResponse20011ZonesZoneId `json:"zoneId,omitempty"`
}

// NewInlineResponse20011Zones instantiates a new InlineResponse20011Zones object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20011Zones() *InlineResponse20011Zones {
	this := InlineResponse20011Zones{}
	return &this
}

// NewInlineResponse20011ZonesWithDefaults instantiates a new InlineResponse20011Zones object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20011ZonesWithDefaults() *InlineResponse20011Zones {
	this := InlineResponse20011Zones{}
	return &this
}

// GetZoneId returns the ZoneId field value if set, zero value otherwise.
func (o *InlineResponse20011Zones) GetZoneId() InlineResponse20011ZonesZoneId {
	if o == nil || isNil(o.ZoneId) {
		var ret InlineResponse20011ZonesZoneId
		return ret
	}
	return *o.ZoneId
}

// GetZoneIdOk returns a tuple with the ZoneId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20011Zones) GetZoneIdOk() (*InlineResponse20011ZonesZoneId, bool) {
	if o == nil || isNil(o.ZoneId) {
    return nil, false
	}
	return o.ZoneId, true
}

// HasZoneId returns a boolean if a field has been set.
func (o *InlineResponse20011Zones) HasZoneId() bool {
	if o != nil && !isNil(o.ZoneId) {
		return true
	}

	return false
}

// SetZoneId gets a reference to the given InlineResponse20011ZonesZoneId and assigns it to the ZoneId field.
func (o *InlineResponse20011Zones) SetZoneId(v InlineResponse20011ZonesZoneId) {
	o.ZoneId = &v
}

func (o InlineResponse20011Zones) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.ZoneId) {
		toSerialize["zoneId"] = o.ZoneId
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20011Zones struct {
	value *InlineResponse20011Zones
	isSet bool
}

func (v NullableInlineResponse20011Zones) Get() *InlineResponse20011Zones {
	return v.value
}

func (v *NullableInlineResponse20011Zones) Set(val *InlineResponse20011Zones) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20011Zones) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20011Zones) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20011Zones(val *InlineResponse20011Zones) *NullableInlineResponse20011Zones {
	return &NullableInlineResponse20011Zones{value: val, isSet: true}
}

func (v NullableInlineResponse20011Zones) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20011Zones) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


