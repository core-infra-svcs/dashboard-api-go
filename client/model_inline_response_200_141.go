/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 July, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.35.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200141 struct for InlineResponse200141
type InlineResponse200141 struct {
	// Remainder licenses created in the source organization as a result of moving a subset of the counts of a license
	RemainderLicenses []InlineResponse200140 `json:"remainderLicenses,omitempty"`
	// Newly moved licenses created in the destination organization of the license move operation
	MovedLicenses []InlineResponse200140 `json:"movedLicenses,omitempty"`
}

// NewInlineResponse200141 instantiates a new InlineResponse200141 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200141() *InlineResponse200141 {
	this := InlineResponse200141{}
	return &this
}

// NewInlineResponse200141WithDefaults instantiates a new InlineResponse200141 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200141WithDefaults() *InlineResponse200141 {
	this := InlineResponse200141{}
	return &this
}

// GetRemainderLicenses returns the RemainderLicenses field value if set, zero value otherwise.
func (o *InlineResponse200141) GetRemainderLicenses() []InlineResponse200140 {
	if o == nil || isNil(o.RemainderLicenses) {
		var ret []InlineResponse200140
		return ret
	}
	return o.RemainderLicenses
}

// GetRemainderLicensesOk returns a tuple with the RemainderLicenses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200141) GetRemainderLicensesOk() ([]InlineResponse200140, bool) {
	if o == nil || isNil(o.RemainderLicenses) {
    return nil, false
	}
	return o.RemainderLicenses, true
}

// HasRemainderLicenses returns a boolean if a field has been set.
func (o *InlineResponse200141) HasRemainderLicenses() bool {
	if o != nil && !isNil(o.RemainderLicenses) {
		return true
	}

	return false
}

// SetRemainderLicenses gets a reference to the given []InlineResponse200140 and assigns it to the RemainderLicenses field.
func (o *InlineResponse200141) SetRemainderLicenses(v []InlineResponse200140) {
	o.RemainderLicenses = v
}

// GetMovedLicenses returns the MovedLicenses field value if set, zero value otherwise.
func (o *InlineResponse200141) GetMovedLicenses() []InlineResponse200140 {
	if o == nil || isNil(o.MovedLicenses) {
		var ret []InlineResponse200140
		return ret
	}
	return o.MovedLicenses
}

// GetMovedLicensesOk returns a tuple with the MovedLicenses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200141) GetMovedLicensesOk() ([]InlineResponse200140, bool) {
	if o == nil || isNil(o.MovedLicenses) {
    return nil, false
	}
	return o.MovedLicenses, true
}

// HasMovedLicenses returns a boolean if a field has been set.
func (o *InlineResponse200141) HasMovedLicenses() bool {
	if o != nil && !isNil(o.MovedLicenses) {
		return true
	}

	return false
}

// SetMovedLicenses gets a reference to the given []InlineResponse200140 and assigns it to the MovedLicenses field.
func (o *InlineResponse200141) SetMovedLicenses(v []InlineResponse200140) {
	o.MovedLicenses = v
}

func (o InlineResponse200141) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.RemainderLicenses) {
		toSerialize["remainderLicenses"] = o.RemainderLicenses
	}
	if !isNil(o.MovedLicenses) {
		toSerialize["movedLicenses"] = o.MovedLicenses
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200141 struct {
	value *InlineResponse200141
	isSet bool
}

func (v NullableInlineResponse200141) Get() *InlineResponse200141 {
	return v.value
}

func (v *NullableInlineResponse200141) Set(val *InlineResponse200141) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200141) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200141) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200141(val *InlineResponse200141) *NullableInlineResponse200141 {
	return &NullableInlineResponse200141{value: val, isSet: true}
}

func (v NullableInlineResponse200141) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200141) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


