/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 01 October, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.63.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// OrganizationsOrganizationIdDevicesPacketCaptureSchedulesDevices struct for OrganizationsOrganizationIdDevicesPacketCaptureSchedulesDevices
type OrganizationsOrganizationIdDevicesPacketCaptureSchedulesDevices struct {
	// Serial of the devices to schedule packet capture
	Serial *string `json:"serial,omitempty"`
	// switchports to capture
	Switchports *string `json:"switchports,omitempty"`
	// interface to capture
	Interface *string `json:"interface,omitempty"`
}

// NewOrganizationsOrganizationIdDevicesPacketCaptureSchedulesDevices instantiates a new OrganizationsOrganizationIdDevicesPacketCaptureSchedulesDevices object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationsOrganizationIdDevicesPacketCaptureSchedulesDevices() *OrganizationsOrganizationIdDevicesPacketCaptureSchedulesDevices {
	this := OrganizationsOrganizationIdDevicesPacketCaptureSchedulesDevices{}
	return &this
}

// NewOrganizationsOrganizationIdDevicesPacketCaptureSchedulesDevicesWithDefaults instantiates a new OrganizationsOrganizationIdDevicesPacketCaptureSchedulesDevices object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationsOrganizationIdDevicesPacketCaptureSchedulesDevicesWithDefaults() *OrganizationsOrganizationIdDevicesPacketCaptureSchedulesDevices {
	this := OrganizationsOrganizationIdDevicesPacketCaptureSchedulesDevices{}
	return &this
}

// GetSerial returns the Serial field value if set, zero value otherwise.
func (o *OrganizationsOrganizationIdDevicesPacketCaptureSchedulesDevices) GetSerial() string {
	if o == nil || isNil(o.Serial) {
		var ret string
		return ret
	}
	return *o.Serial
}

// GetSerialOk returns a tuple with the Serial field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationsOrganizationIdDevicesPacketCaptureSchedulesDevices) GetSerialOk() (*string, bool) {
	if o == nil || isNil(o.Serial) {
    return nil, false
	}
	return o.Serial, true
}

// HasSerial returns a boolean if a field has been set.
func (o *OrganizationsOrganizationIdDevicesPacketCaptureSchedulesDevices) HasSerial() bool {
	if o != nil && !isNil(o.Serial) {
		return true
	}

	return false
}

// SetSerial gets a reference to the given string and assigns it to the Serial field.
func (o *OrganizationsOrganizationIdDevicesPacketCaptureSchedulesDevices) SetSerial(v string) {
	o.Serial = &v
}

// GetSwitchports returns the Switchports field value if set, zero value otherwise.
func (o *OrganizationsOrganizationIdDevicesPacketCaptureSchedulesDevices) GetSwitchports() string {
	if o == nil || isNil(o.Switchports) {
		var ret string
		return ret
	}
	return *o.Switchports
}

// GetSwitchportsOk returns a tuple with the Switchports field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationsOrganizationIdDevicesPacketCaptureSchedulesDevices) GetSwitchportsOk() (*string, bool) {
	if o == nil || isNil(o.Switchports) {
    return nil, false
	}
	return o.Switchports, true
}

// HasSwitchports returns a boolean if a field has been set.
func (o *OrganizationsOrganizationIdDevicesPacketCaptureSchedulesDevices) HasSwitchports() bool {
	if o != nil && !isNil(o.Switchports) {
		return true
	}

	return false
}

// SetSwitchports gets a reference to the given string and assigns it to the Switchports field.
func (o *OrganizationsOrganizationIdDevicesPacketCaptureSchedulesDevices) SetSwitchports(v string) {
	o.Switchports = &v
}

// GetInterface returns the Interface field value if set, zero value otherwise.
func (o *OrganizationsOrganizationIdDevicesPacketCaptureSchedulesDevices) GetInterface() string {
	if o == nil || isNil(o.Interface) {
		var ret string
		return ret
	}
	return *o.Interface
}

// GetInterfaceOk returns a tuple with the Interface field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationsOrganizationIdDevicesPacketCaptureSchedulesDevices) GetInterfaceOk() (*string, bool) {
	if o == nil || isNil(o.Interface) {
    return nil, false
	}
	return o.Interface, true
}

// HasInterface returns a boolean if a field has been set.
func (o *OrganizationsOrganizationIdDevicesPacketCaptureSchedulesDevices) HasInterface() bool {
	if o != nil && !isNil(o.Interface) {
		return true
	}

	return false
}

// SetInterface gets a reference to the given string and assigns it to the Interface field.
func (o *OrganizationsOrganizationIdDevicesPacketCaptureSchedulesDevices) SetInterface(v string) {
	o.Interface = &v
}

func (o OrganizationsOrganizationIdDevicesPacketCaptureSchedulesDevices) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Serial) {
		toSerialize["serial"] = o.Serial
	}
	if !isNil(o.Switchports) {
		toSerialize["switchports"] = o.Switchports
	}
	if !isNil(o.Interface) {
		toSerialize["interface"] = o.Interface
	}
	return json.Marshal(toSerialize)
}

type NullableOrganizationsOrganizationIdDevicesPacketCaptureSchedulesDevices struct {
	value *OrganizationsOrganizationIdDevicesPacketCaptureSchedulesDevices
	isSet bool
}

func (v NullableOrganizationsOrganizationIdDevicesPacketCaptureSchedulesDevices) Get() *OrganizationsOrganizationIdDevicesPacketCaptureSchedulesDevices {
	return v.value
}

func (v *NullableOrganizationsOrganizationIdDevicesPacketCaptureSchedulesDevices) Set(val *OrganizationsOrganizationIdDevicesPacketCaptureSchedulesDevices) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationsOrganizationIdDevicesPacketCaptureSchedulesDevices) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationsOrganizationIdDevicesPacketCaptureSchedulesDevices) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationsOrganizationIdDevicesPacketCaptureSchedulesDevices(val *OrganizationsOrganizationIdDevicesPacketCaptureSchedulesDevices) *NullableOrganizationsOrganizationIdDevicesPacketCaptureSchedulesDevices {
	return &NullableOrganizationsOrganizationIdDevicesPacketCaptureSchedulesDevices{value: val, isSet: true}
}

func (v NullableOrganizationsOrganizationIdDevicesPacketCaptureSchedulesDevices) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationsOrganizationIdDevicesPacketCaptureSchedulesDevices) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


