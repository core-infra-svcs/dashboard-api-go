/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 04 December, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.53.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse20047Alerts struct for InlineResponse20047Alerts
type InlineResponse20047Alerts struct {
	// The type of alert
	Type string `json:"type"`
	// A boolean depicting if the alert is turned on or off
	Enabled *bool `json:"enabled,omitempty"`
	AlertDestinations *InlineResponse20047AlertDestinations `json:"alertDestinations,omitempty"`
	Filters *InlineResponse20047Filters `json:"filters,omitempty"`
}

// NewInlineResponse20047Alerts instantiates a new InlineResponse20047Alerts object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20047Alerts(type_ string) *InlineResponse20047Alerts {
	this := InlineResponse20047Alerts{}
	this.Type = type_
	return &this
}

// NewInlineResponse20047AlertsWithDefaults instantiates a new InlineResponse20047Alerts object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20047AlertsWithDefaults() *InlineResponse20047Alerts {
	this := InlineResponse20047Alerts{}
	return &this
}

// GetType returns the Type field value
func (o *InlineResponse20047Alerts) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20047Alerts) GetTypeOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *InlineResponse20047Alerts) SetType(v string) {
	o.Type = v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *InlineResponse20047Alerts) GetEnabled() bool {
	if o == nil || isNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20047Alerts) GetEnabledOk() (*bool, bool) {
	if o == nil || isNil(o.Enabled) {
    return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *InlineResponse20047Alerts) HasEnabled() bool {
	if o != nil && !isNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *InlineResponse20047Alerts) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetAlertDestinations returns the AlertDestinations field value if set, zero value otherwise.
func (o *InlineResponse20047Alerts) GetAlertDestinations() InlineResponse20047AlertDestinations {
	if o == nil || isNil(o.AlertDestinations) {
		var ret InlineResponse20047AlertDestinations
		return ret
	}
	return *o.AlertDestinations
}

// GetAlertDestinationsOk returns a tuple with the AlertDestinations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20047Alerts) GetAlertDestinationsOk() (*InlineResponse20047AlertDestinations, bool) {
	if o == nil || isNil(o.AlertDestinations) {
    return nil, false
	}
	return o.AlertDestinations, true
}

// HasAlertDestinations returns a boolean if a field has been set.
func (o *InlineResponse20047Alerts) HasAlertDestinations() bool {
	if o != nil && !isNil(o.AlertDestinations) {
		return true
	}

	return false
}

// SetAlertDestinations gets a reference to the given InlineResponse20047AlertDestinations and assigns it to the AlertDestinations field.
func (o *InlineResponse20047Alerts) SetAlertDestinations(v InlineResponse20047AlertDestinations) {
	o.AlertDestinations = &v
}

// GetFilters returns the Filters field value if set, zero value otherwise.
func (o *InlineResponse20047Alerts) GetFilters() InlineResponse20047Filters {
	if o == nil || isNil(o.Filters) {
		var ret InlineResponse20047Filters
		return ret
	}
	return *o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20047Alerts) GetFiltersOk() (*InlineResponse20047Filters, bool) {
	if o == nil || isNil(o.Filters) {
    return nil, false
	}
	return o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *InlineResponse20047Alerts) HasFilters() bool {
	if o != nil && !isNil(o.Filters) {
		return true
	}

	return false
}

// SetFilters gets a reference to the given InlineResponse20047Filters and assigns it to the Filters field.
func (o *InlineResponse20047Alerts) SetFilters(v InlineResponse20047Filters) {
	o.Filters = &v
}

func (o InlineResponse20047Alerts) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["type"] = o.Type
	}
	if !isNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !isNil(o.AlertDestinations) {
		toSerialize["alertDestinations"] = o.AlertDestinations
	}
	if !isNil(o.Filters) {
		toSerialize["filters"] = o.Filters
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20047Alerts struct {
	value *InlineResponse20047Alerts
	isSet bool
}

func (v NullableInlineResponse20047Alerts) Get() *InlineResponse20047Alerts {
	return v.value
}

func (v *NullableInlineResponse20047Alerts) Set(val *InlineResponse20047Alerts) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20047Alerts) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20047Alerts) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20047Alerts(val *InlineResponse20047Alerts) *NullableInlineResponse20047Alerts {
	return &NullableInlineResponse20047Alerts{value: val, isSet: true}
}

func (v NullableInlineResponse20047Alerts) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20047Alerts) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


