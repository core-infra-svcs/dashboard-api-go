/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 18 December, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.41.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse2004InterfacesWan1 WAN 1 settings.
type InlineResponse2004InterfacesWan1 struct {
	// Enable or disable the interface.
	Enabled *bool `json:"enabled,omitempty"`
	VlanTagging *InlineResponse2004InterfacesWan1VlanTagging `json:"vlanTagging,omitempty"`
	Svis *InlineResponse2004InterfacesWan1Svis `json:"svis,omitempty"`
	Pppoe *InlineResponse2004InterfacesWan1Pppoe `json:"pppoe,omitempty"`
}

// NewInlineResponse2004InterfacesWan1 instantiates a new InlineResponse2004InterfacesWan1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse2004InterfacesWan1() *InlineResponse2004InterfacesWan1 {
	this := InlineResponse2004InterfacesWan1{}
	return &this
}

// NewInlineResponse2004InterfacesWan1WithDefaults instantiates a new InlineResponse2004InterfacesWan1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse2004InterfacesWan1WithDefaults() *InlineResponse2004InterfacesWan1 {
	this := InlineResponse2004InterfacesWan1{}
	return &this
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *InlineResponse2004InterfacesWan1) GetEnabled() bool {
	if o == nil || isNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2004InterfacesWan1) GetEnabledOk() (*bool, bool) {
	if o == nil || isNil(o.Enabled) {
    return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *InlineResponse2004InterfacesWan1) HasEnabled() bool {
	if o != nil && !isNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *InlineResponse2004InterfacesWan1) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetVlanTagging returns the VlanTagging field value if set, zero value otherwise.
func (o *InlineResponse2004InterfacesWan1) GetVlanTagging() InlineResponse2004InterfacesWan1VlanTagging {
	if o == nil || isNil(o.VlanTagging) {
		var ret InlineResponse2004InterfacesWan1VlanTagging
		return ret
	}
	return *o.VlanTagging
}

// GetVlanTaggingOk returns a tuple with the VlanTagging field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2004InterfacesWan1) GetVlanTaggingOk() (*InlineResponse2004InterfacesWan1VlanTagging, bool) {
	if o == nil || isNil(o.VlanTagging) {
    return nil, false
	}
	return o.VlanTagging, true
}

// HasVlanTagging returns a boolean if a field has been set.
func (o *InlineResponse2004InterfacesWan1) HasVlanTagging() bool {
	if o != nil && !isNil(o.VlanTagging) {
		return true
	}

	return false
}

// SetVlanTagging gets a reference to the given InlineResponse2004InterfacesWan1VlanTagging and assigns it to the VlanTagging field.
func (o *InlineResponse2004InterfacesWan1) SetVlanTagging(v InlineResponse2004InterfacesWan1VlanTagging) {
	o.VlanTagging = &v
}

// GetSvis returns the Svis field value if set, zero value otherwise.
func (o *InlineResponse2004InterfacesWan1) GetSvis() InlineResponse2004InterfacesWan1Svis {
	if o == nil || isNil(o.Svis) {
		var ret InlineResponse2004InterfacesWan1Svis
		return ret
	}
	return *o.Svis
}

// GetSvisOk returns a tuple with the Svis field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2004InterfacesWan1) GetSvisOk() (*InlineResponse2004InterfacesWan1Svis, bool) {
	if o == nil || isNil(o.Svis) {
    return nil, false
	}
	return o.Svis, true
}

// HasSvis returns a boolean if a field has been set.
func (o *InlineResponse2004InterfacesWan1) HasSvis() bool {
	if o != nil && !isNil(o.Svis) {
		return true
	}

	return false
}

// SetSvis gets a reference to the given InlineResponse2004InterfacesWan1Svis and assigns it to the Svis field.
func (o *InlineResponse2004InterfacesWan1) SetSvis(v InlineResponse2004InterfacesWan1Svis) {
	o.Svis = &v
}

// GetPppoe returns the Pppoe field value if set, zero value otherwise.
func (o *InlineResponse2004InterfacesWan1) GetPppoe() InlineResponse2004InterfacesWan1Pppoe {
	if o == nil || isNil(o.Pppoe) {
		var ret InlineResponse2004InterfacesWan1Pppoe
		return ret
	}
	return *o.Pppoe
}

// GetPppoeOk returns a tuple with the Pppoe field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2004InterfacesWan1) GetPppoeOk() (*InlineResponse2004InterfacesWan1Pppoe, bool) {
	if o == nil || isNil(o.Pppoe) {
    return nil, false
	}
	return o.Pppoe, true
}

// HasPppoe returns a boolean if a field has been set.
func (o *InlineResponse2004InterfacesWan1) HasPppoe() bool {
	if o != nil && !isNil(o.Pppoe) {
		return true
	}

	return false
}

// SetPppoe gets a reference to the given InlineResponse2004InterfacesWan1Pppoe and assigns it to the Pppoe field.
func (o *InlineResponse2004InterfacesWan1) SetPppoe(v InlineResponse2004InterfacesWan1Pppoe) {
	o.Pppoe = &v
}

func (o InlineResponse2004InterfacesWan1) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !isNil(o.VlanTagging) {
		toSerialize["vlanTagging"] = o.VlanTagging
	}
	if !isNil(o.Svis) {
		toSerialize["svis"] = o.Svis
	}
	if !isNil(o.Pppoe) {
		toSerialize["pppoe"] = o.Pppoe
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse2004InterfacesWan1 struct {
	value *InlineResponse2004InterfacesWan1
	isSet bool
}

func (v NullableInlineResponse2004InterfacesWan1) Get() *InlineResponse2004InterfacesWan1 {
	return v.value
}

func (v *NullableInlineResponse2004InterfacesWan1) Set(val *InlineResponse2004InterfacesWan1) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse2004InterfacesWan1) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse2004InterfacesWan1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse2004InterfacesWan1(val *InlineResponse2004InterfacesWan1) *NullableInlineResponse2004InterfacesWan1 {
	return &NullableInlineResponse2004InterfacesWan1{value: val, isSet: true}
}

func (v NullableInlineResponse2004InterfacesWan1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse2004InterfacesWan1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


