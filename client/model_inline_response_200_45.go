/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 02 April, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.57.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse20045 struct for InlineResponse20045
type InlineResponse20045 struct {
	// An identifier for the device used by the ESL system
	ApEslId *int32 `json:"apEslId,omitempty"`
	// The serial number of the device
	Serial *string `json:"serial,omitempty"`
	// Desired ESL channel for the device, or 'Auto' (case insensitive) to use the recommended channel
	Channel *string `json:"channel,omitempty"`
	// Turn ESL features on and off for this device
	Enabled *bool `json:"enabled,omitempty"`
	// The identifier for the device's network
	NetworkId *string `json:"networkId,omitempty"`
	// Hostname of the ESL management service
	Hostname *string `json:"hostname,omitempty"`
	// The service providing ESL functionality
	Provider *string `json:"provider,omitempty"`
}

// NewInlineResponse20045 instantiates a new InlineResponse20045 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20045() *InlineResponse20045 {
	this := InlineResponse20045{}
	return &this
}

// NewInlineResponse20045WithDefaults instantiates a new InlineResponse20045 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20045WithDefaults() *InlineResponse20045 {
	this := InlineResponse20045{}
	return &this
}

// GetApEslId returns the ApEslId field value if set, zero value otherwise.
func (o *InlineResponse20045) GetApEslId() int32 {
	if o == nil || isNil(o.ApEslId) {
		var ret int32
		return ret
	}
	return *o.ApEslId
}

// GetApEslIdOk returns a tuple with the ApEslId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20045) GetApEslIdOk() (*int32, bool) {
	if o == nil || isNil(o.ApEslId) {
    return nil, false
	}
	return o.ApEslId, true
}

// HasApEslId returns a boolean if a field has been set.
func (o *InlineResponse20045) HasApEslId() bool {
	if o != nil && !isNil(o.ApEslId) {
		return true
	}

	return false
}

// SetApEslId gets a reference to the given int32 and assigns it to the ApEslId field.
func (o *InlineResponse20045) SetApEslId(v int32) {
	o.ApEslId = &v
}

// GetSerial returns the Serial field value if set, zero value otherwise.
func (o *InlineResponse20045) GetSerial() string {
	if o == nil || isNil(o.Serial) {
		var ret string
		return ret
	}
	return *o.Serial
}

// GetSerialOk returns a tuple with the Serial field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20045) GetSerialOk() (*string, bool) {
	if o == nil || isNil(o.Serial) {
    return nil, false
	}
	return o.Serial, true
}

// HasSerial returns a boolean if a field has been set.
func (o *InlineResponse20045) HasSerial() bool {
	if o != nil && !isNil(o.Serial) {
		return true
	}

	return false
}

// SetSerial gets a reference to the given string and assigns it to the Serial field.
func (o *InlineResponse20045) SetSerial(v string) {
	o.Serial = &v
}

// GetChannel returns the Channel field value if set, zero value otherwise.
func (o *InlineResponse20045) GetChannel() string {
	if o == nil || isNil(o.Channel) {
		var ret string
		return ret
	}
	return *o.Channel
}

// GetChannelOk returns a tuple with the Channel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20045) GetChannelOk() (*string, bool) {
	if o == nil || isNil(o.Channel) {
    return nil, false
	}
	return o.Channel, true
}

// HasChannel returns a boolean if a field has been set.
func (o *InlineResponse20045) HasChannel() bool {
	if o != nil && !isNil(o.Channel) {
		return true
	}

	return false
}

// SetChannel gets a reference to the given string and assigns it to the Channel field.
func (o *InlineResponse20045) SetChannel(v string) {
	o.Channel = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *InlineResponse20045) GetEnabled() bool {
	if o == nil || isNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20045) GetEnabledOk() (*bool, bool) {
	if o == nil || isNil(o.Enabled) {
    return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *InlineResponse20045) HasEnabled() bool {
	if o != nil && !isNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *InlineResponse20045) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetNetworkId returns the NetworkId field value if set, zero value otherwise.
func (o *InlineResponse20045) GetNetworkId() string {
	if o == nil || isNil(o.NetworkId) {
		var ret string
		return ret
	}
	return *o.NetworkId
}

// GetNetworkIdOk returns a tuple with the NetworkId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20045) GetNetworkIdOk() (*string, bool) {
	if o == nil || isNil(o.NetworkId) {
    return nil, false
	}
	return o.NetworkId, true
}

// HasNetworkId returns a boolean if a field has been set.
func (o *InlineResponse20045) HasNetworkId() bool {
	if o != nil && !isNil(o.NetworkId) {
		return true
	}

	return false
}

// SetNetworkId gets a reference to the given string and assigns it to the NetworkId field.
func (o *InlineResponse20045) SetNetworkId(v string) {
	o.NetworkId = &v
}

// GetHostname returns the Hostname field value if set, zero value otherwise.
func (o *InlineResponse20045) GetHostname() string {
	if o == nil || isNil(o.Hostname) {
		var ret string
		return ret
	}
	return *o.Hostname
}

// GetHostnameOk returns a tuple with the Hostname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20045) GetHostnameOk() (*string, bool) {
	if o == nil || isNil(o.Hostname) {
    return nil, false
	}
	return o.Hostname, true
}

// HasHostname returns a boolean if a field has been set.
func (o *InlineResponse20045) HasHostname() bool {
	if o != nil && !isNil(o.Hostname) {
		return true
	}

	return false
}

// SetHostname gets a reference to the given string and assigns it to the Hostname field.
func (o *InlineResponse20045) SetHostname(v string) {
	o.Hostname = &v
}

// GetProvider returns the Provider field value if set, zero value otherwise.
func (o *InlineResponse20045) GetProvider() string {
	if o == nil || isNil(o.Provider) {
		var ret string
		return ret
	}
	return *o.Provider
}

// GetProviderOk returns a tuple with the Provider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20045) GetProviderOk() (*string, bool) {
	if o == nil || isNil(o.Provider) {
    return nil, false
	}
	return o.Provider, true
}

// HasProvider returns a boolean if a field has been set.
func (o *InlineResponse20045) HasProvider() bool {
	if o != nil && !isNil(o.Provider) {
		return true
	}

	return false
}

// SetProvider gets a reference to the given string and assigns it to the Provider field.
func (o *InlineResponse20045) SetProvider(v string) {
	o.Provider = &v
}

func (o InlineResponse20045) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.ApEslId) {
		toSerialize["apEslId"] = o.ApEslId
	}
	if !isNil(o.Serial) {
		toSerialize["serial"] = o.Serial
	}
	if !isNil(o.Channel) {
		toSerialize["channel"] = o.Channel
	}
	if !isNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !isNil(o.NetworkId) {
		toSerialize["networkId"] = o.NetworkId
	}
	if !isNil(o.Hostname) {
		toSerialize["hostname"] = o.Hostname
	}
	if !isNil(o.Provider) {
		toSerialize["provider"] = o.Provider
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20045 struct {
	value *InlineResponse20045
	isSet bool
}

func (v NullableInlineResponse20045) Get() *InlineResponse20045 {
	return v.value
}

func (v *NullableInlineResponse20045) Set(val *InlineResponse20045) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20045) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20045) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20045(val *InlineResponse20045) *NullableInlineResponse20045 {
	return &NullableInlineResponse20045{value: val, isSet: true}
}

func (v NullableInlineResponse20045) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20045) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


