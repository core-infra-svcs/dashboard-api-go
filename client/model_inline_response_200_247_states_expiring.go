/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 03 April, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.45.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200247StatesExpiring Data for expiring licenses
type InlineResponse200247StatesExpiring struct {
	// The number of expiring licenses
	Count *int32 `json:"count,omitempty"`
	Critical *InlineResponse200247StatesExpiringCritical `json:"critical,omitempty"`
	Warning *InlineResponse200247StatesExpiringWarning `json:"warning,omitempty"`
}

// NewInlineResponse200247StatesExpiring instantiates a new InlineResponse200247StatesExpiring object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200247StatesExpiring() *InlineResponse200247StatesExpiring {
	this := InlineResponse200247StatesExpiring{}
	return &this
}

// NewInlineResponse200247StatesExpiringWithDefaults instantiates a new InlineResponse200247StatesExpiring object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200247StatesExpiringWithDefaults() *InlineResponse200247StatesExpiring {
	this := InlineResponse200247StatesExpiring{}
	return &this
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *InlineResponse200247StatesExpiring) GetCount() int32 {
	if o == nil || isNil(o.Count) {
		var ret int32
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200247StatesExpiring) GetCountOk() (*int32, bool) {
	if o == nil || isNil(o.Count) {
    return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *InlineResponse200247StatesExpiring) HasCount() bool {
	if o != nil && !isNil(o.Count) {
		return true
	}

	return false
}

// SetCount gets a reference to the given int32 and assigns it to the Count field.
func (o *InlineResponse200247StatesExpiring) SetCount(v int32) {
	o.Count = &v
}

// GetCritical returns the Critical field value if set, zero value otherwise.
func (o *InlineResponse200247StatesExpiring) GetCritical() InlineResponse200247StatesExpiringCritical {
	if o == nil || isNil(o.Critical) {
		var ret InlineResponse200247StatesExpiringCritical
		return ret
	}
	return *o.Critical
}

// GetCriticalOk returns a tuple with the Critical field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200247StatesExpiring) GetCriticalOk() (*InlineResponse200247StatesExpiringCritical, bool) {
	if o == nil || isNil(o.Critical) {
    return nil, false
	}
	return o.Critical, true
}

// HasCritical returns a boolean if a field has been set.
func (o *InlineResponse200247StatesExpiring) HasCritical() bool {
	if o != nil && !isNil(o.Critical) {
		return true
	}

	return false
}

// SetCritical gets a reference to the given InlineResponse200247StatesExpiringCritical and assigns it to the Critical field.
func (o *InlineResponse200247StatesExpiring) SetCritical(v InlineResponse200247StatesExpiringCritical) {
	o.Critical = &v
}

// GetWarning returns the Warning field value if set, zero value otherwise.
func (o *InlineResponse200247StatesExpiring) GetWarning() InlineResponse200247StatesExpiringWarning {
	if o == nil || isNil(o.Warning) {
		var ret InlineResponse200247StatesExpiringWarning
		return ret
	}
	return *o.Warning
}

// GetWarningOk returns a tuple with the Warning field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200247StatesExpiring) GetWarningOk() (*InlineResponse200247StatesExpiringWarning, bool) {
	if o == nil || isNil(o.Warning) {
    return nil, false
	}
	return o.Warning, true
}

// HasWarning returns a boolean if a field has been set.
func (o *InlineResponse200247StatesExpiring) HasWarning() bool {
	if o != nil && !isNil(o.Warning) {
		return true
	}

	return false
}

// SetWarning gets a reference to the given InlineResponse200247StatesExpiringWarning and assigns it to the Warning field.
func (o *InlineResponse200247StatesExpiring) SetWarning(v InlineResponse200247StatesExpiringWarning) {
	o.Warning = &v
}

func (o InlineResponse200247StatesExpiring) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Count) {
		toSerialize["count"] = o.Count
	}
	if !isNil(o.Critical) {
		toSerialize["critical"] = o.Critical
	}
	if !isNil(o.Warning) {
		toSerialize["warning"] = o.Warning
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200247StatesExpiring struct {
	value *InlineResponse200247StatesExpiring
	isSet bool
}

func (v NullableInlineResponse200247StatesExpiring) Get() *InlineResponse200247StatesExpiring {
	return v.value
}

func (v *NullableInlineResponse200247StatesExpiring) Set(val *InlineResponse200247StatesExpiring) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200247StatesExpiring) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200247StatesExpiring) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200247StatesExpiring(val *InlineResponse200247StatesExpiring) *NullableInlineResponse200247StatesExpiring {
	return &NullableInlineResponse200247StatesExpiring{value: val, isSet: true}
}

func (v NullableInlineResponse200247StatesExpiring) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200247StatesExpiring) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


