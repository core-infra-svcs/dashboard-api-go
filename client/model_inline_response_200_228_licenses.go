/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 07 August, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.49.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200228Licenses struct for InlineResponse200228Licenses
type InlineResponse200228Licenses struct {
	// The key of the license
	Key *string `json:"key,omitempty"`
	// The mode of the license
	Mode *string `json:"mode,omitempty"`
}

// NewInlineResponse200228Licenses instantiates a new InlineResponse200228Licenses object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200228Licenses() *InlineResponse200228Licenses {
	this := InlineResponse200228Licenses{}
	return &this
}

// NewInlineResponse200228LicensesWithDefaults instantiates a new InlineResponse200228Licenses object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200228LicensesWithDefaults() *InlineResponse200228Licenses {
	this := InlineResponse200228Licenses{}
	return &this
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *InlineResponse200228Licenses) GetKey() string {
	if o == nil || isNil(o.Key) {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200228Licenses) GetKeyOk() (*string, bool) {
	if o == nil || isNil(o.Key) {
    return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *InlineResponse200228Licenses) HasKey() bool {
	if o != nil && !isNil(o.Key) {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *InlineResponse200228Licenses) SetKey(v string) {
	o.Key = &v
}

// GetMode returns the Mode field value if set, zero value otherwise.
func (o *InlineResponse200228Licenses) GetMode() string {
	if o == nil || isNil(o.Mode) {
		var ret string
		return ret
	}
	return *o.Mode
}

// GetModeOk returns a tuple with the Mode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200228Licenses) GetModeOk() (*string, bool) {
	if o == nil || isNil(o.Mode) {
    return nil, false
	}
	return o.Mode, true
}

// HasMode returns a boolean if a field has been set.
func (o *InlineResponse200228Licenses) HasMode() bool {
	if o != nil && !isNil(o.Mode) {
		return true
	}

	return false
}

// SetMode gets a reference to the given string and assigns it to the Mode field.
func (o *InlineResponse200228Licenses) SetMode(v string) {
	o.Mode = &v
}

func (o InlineResponse200228Licenses) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Key) {
		toSerialize["key"] = o.Key
	}
	if !isNil(o.Mode) {
		toSerialize["mode"] = o.Mode
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200228Licenses struct {
	value *InlineResponse200228Licenses
	isSet bool
}

func (v NullableInlineResponse200228Licenses) Get() *InlineResponse200228Licenses {
	return v.value
}

func (v *NullableInlineResponse200228Licenses) Set(val *InlineResponse200228Licenses) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200228Licenses) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200228Licenses) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200228Licenses(val *InlineResponse200228Licenses) *NullableInlineResponse200228Licenses {
	return &NullableInlineResponse200228Licenses{value: val, isSet: true}
}

func (v NullableInlineResponse200228Licenses) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200228Licenses) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


