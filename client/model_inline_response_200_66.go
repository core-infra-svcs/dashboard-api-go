/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 06 December, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.40.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse20066 struct for InlineResponse20066
type InlineResponse20066 struct {
	// The percentage of CPU used as a decimal format.
	CpuPercentUsed *float32 `json:"cpuPercentUsed,omitempty"`
	// Memory that is not yet in use by the system.
	MemFree *int32 `json:"memFree,omitempty"`
	// Memory used for core OS functions on the device.
	MemWired *int32 `json:"memWired,omitempty"`
	// The active RAM on the device.
	MemActive *int32 `json:"memActive,omitempty"`
	// The inactive RAM on the device.
	MemInactive *int32 `json:"memInactive,omitempty"`
	// Network bandwith transmitted.
	NetworkSent *int32 `json:"networkSent,omitempty"`
	// Network bandwith received.
	NetworkReceived *int32 `json:"networkReceived,omitempty"`
	// The amount of space being used on the startup disk to swap unused files to and from RAM.
	SwapUsed *int32 `json:"swapUsed,omitempty"`
	DiskUsage *NetworksNetworkIdSmDevicesDeviceIdPerformanceHistoryDiskUsage `json:"diskUsage,omitempty"`
	// The time at which the performance was measured.
	Ts *string `json:"ts,omitempty"`
}

// NewInlineResponse20066 instantiates a new InlineResponse20066 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20066() *InlineResponse20066 {
	this := InlineResponse20066{}
	return &this
}

// NewInlineResponse20066WithDefaults instantiates a new InlineResponse20066 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20066WithDefaults() *InlineResponse20066 {
	this := InlineResponse20066{}
	return &this
}

// GetCpuPercentUsed returns the CpuPercentUsed field value if set, zero value otherwise.
func (o *InlineResponse20066) GetCpuPercentUsed() float32 {
	if o == nil || isNil(o.CpuPercentUsed) {
		var ret float32
		return ret
	}
	return *o.CpuPercentUsed
}

// GetCpuPercentUsedOk returns a tuple with the CpuPercentUsed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20066) GetCpuPercentUsedOk() (*float32, bool) {
	if o == nil || isNil(o.CpuPercentUsed) {
    return nil, false
	}
	return o.CpuPercentUsed, true
}

// HasCpuPercentUsed returns a boolean if a field has been set.
func (o *InlineResponse20066) HasCpuPercentUsed() bool {
	if o != nil && !isNil(o.CpuPercentUsed) {
		return true
	}

	return false
}

// SetCpuPercentUsed gets a reference to the given float32 and assigns it to the CpuPercentUsed field.
func (o *InlineResponse20066) SetCpuPercentUsed(v float32) {
	o.CpuPercentUsed = &v
}

// GetMemFree returns the MemFree field value if set, zero value otherwise.
func (o *InlineResponse20066) GetMemFree() int32 {
	if o == nil || isNil(o.MemFree) {
		var ret int32
		return ret
	}
	return *o.MemFree
}

// GetMemFreeOk returns a tuple with the MemFree field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20066) GetMemFreeOk() (*int32, bool) {
	if o == nil || isNil(o.MemFree) {
    return nil, false
	}
	return o.MemFree, true
}

// HasMemFree returns a boolean if a field has been set.
func (o *InlineResponse20066) HasMemFree() bool {
	if o != nil && !isNil(o.MemFree) {
		return true
	}

	return false
}

// SetMemFree gets a reference to the given int32 and assigns it to the MemFree field.
func (o *InlineResponse20066) SetMemFree(v int32) {
	o.MemFree = &v
}

// GetMemWired returns the MemWired field value if set, zero value otherwise.
func (o *InlineResponse20066) GetMemWired() int32 {
	if o == nil || isNil(o.MemWired) {
		var ret int32
		return ret
	}
	return *o.MemWired
}

// GetMemWiredOk returns a tuple with the MemWired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20066) GetMemWiredOk() (*int32, bool) {
	if o == nil || isNil(o.MemWired) {
    return nil, false
	}
	return o.MemWired, true
}

// HasMemWired returns a boolean if a field has been set.
func (o *InlineResponse20066) HasMemWired() bool {
	if o != nil && !isNil(o.MemWired) {
		return true
	}

	return false
}

// SetMemWired gets a reference to the given int32 and assigns it to the MemWired field.
func (o *InlineResponse20066) SetMemWired(v int32) {
	o.MemWired = &v
}

// GetMemActive returns the MemActive field value if set, zero value otherwise.
func (o *InlineResponse20066) GetMemActive() int32 {
	if o == nil || isNil(o.MemActive) {
		var ret int32
		return ret
	}
	return *o.MemActive
}

// GetMemActiveOk returns a tuple with the MemActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20066) GetMemActiveOk() (*int32, bool) {
	if o == nil || isNil(o.MemActive) {
    return nil, false
	}
	return o.MemActive, true
}

// HasMemActive returns a boolean if a field has been set.
func (o *InlineResponse20066) HasMemActive() bool {
	if o != nil && !isNil(o.MemActive) {
		return true
	}

	return false
}

// SetMemActive gets a reference to the given int32 and assigns it to the MemActive field.
func (o *InlineResponse20066) SetMemActive(v int32) {
	o.MemActive = &v
}

// GetMemInactive returns the MemInactive field value if set, zero value otherwise.
func (o *InlineResponse20066) GetMemInactive() int32 {
	if o == nil || isNil(o.MemInactive) {
		var ret int32
		return ret
	}
	return *o.MemInactive
}

// GetMemInactiveOk returns a tuple with the MemInactive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20066) GetMemInactiveOk() (*int32, bool) {
	if o == nil || isNil(o.MemInactive) {
    return nil, false
	}
	return o.MemInactive, true
}

// HasMemInactive returns a boolean if a field has been set.
func (o *InlineResponse20066) HasMemInactive() bool {
	if o != nil && !isNil(o.MemInactive) {
		return true
	}

	return false
}

// SetMemInactive gets a reference to the given int32 and assigns it to the MemInactive field.
func (o *InlineResponse20066) SetMemInactive(v int32) {
	o.MemInactive = &v
}

// GetNetworkSent returns the NetworkSent field value if set, zero value otherwise.
func (o *InlineResponse20066) GetNetworkSent() int32 {
	if o == nil || isNil(o.NetworkSent) {
		var ret int32
		return ret
	}
	return *o.NetworkSent
}

// GetNetworkSentOk returns a tuple with the NetworkSent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20066) GetNetworkSentOk() (*int32, bool) {
	if o == nil || isNil(o.NetworkSent) {
    return nil, false
	}
	return o.NetworkSent, true
}

// HasNetworkSent returns a boolean if a field has been set.
func (o *InlineResponse20066) HasNetworkSent() bool {
	if o != nil && !isNil(o.NetworkSent) {
		return true
	}

	return false
}

// SetNetworkSent gets a reference to the given int32 and assigns it to the NetworkSent field.
func (o *InlineResponse20066) SetNetworkSent(v int32) {
	o.NetworkSent = &v
}

// GetNetworkReceived returns the NetworkReceived field value if set, zero value otherwise.
func (o *InlineResponse20066) GetNetworkReceived() int32 {
	if o == nil || isNil(o.NetworkReceived) {
		var ret int32
		return ret
	}
	return *o.NetworkReceived
}

// GetNetworkReceivedOk returns a tuple with the NetworkReceived field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20066) GetNetworkReceivedOk() (*int32, bool) {
	if o == nil || isNil(o.NetworkReceived) {
    return nil, false
	}
	return o.NetworkReceived, true
}

// HasNetworkReceived returns a boolean if a field has been set.
func (o *InlineResponse20066) HasNetworkReceived() bool {
	if o != nil && !isNil(o.NetworkReceived) {
		return true
	}

	return false
}

// SetNetworkReceived gets a reference to the given int32 and assigns it to the NetworkReceived field.
func (o *InlineResponse20066) SetNetworkReceived(v int32) {
	o.NetworkReceived = &v
}

// GetSwapUsed returns the SwapUsed field value if set, zero value otherwise.
func (o *InlineResponse20066) GetSwapUsed() int32 {
	if o == nil || isNil(o.SwapUsed) {
		var ret int32
		return ret
	}
	return *o.SwapUsed
}

// GetSwapUsedOk returns a tuple with the SwapUsed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20066) GetSwapUsedOk() (*int32, bool) {
	if o == nil || isNil(o.SwapUsed) {
    return nil, false
	}
	return o.SwapUsed, true
}

// HasSwapUsed returns a boolean if a field has been set.
func (o *InlineResponse20066) HasSwapUsed() bool {
	if o != nil && !isNil(o.SwapUsed) {
		return true
	}

	return false
}

// SetSwapUsed gets a reference to the given int32 and assigns it to the SwapUsed field.
func (o *InlineResponse20066) SetSwapUsed(v int32) {
	o.SwapUsed = &v
}

// GetDiskUsage returns the DiskUsage field value if set, zero value otherwise.
func (o *InlineResponse20066) GetDiskUsage() NetworksNetworkIdSmDevicesDeviceIdPerformanceHistoryDiskUsage {
	if o == nil || isNil(o.DiskUsage) {
		var ret NetworksNetworkIdSmDevicesDeviceIdPerformanceHistoryDiskUsage
		return ret
	}
	return *o.DiskUsage
}

// GetDiskUsageOk returns a tuple with the DiskUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20066) GetDiskUsageOk() (*NetworksNetworkIdSmDevicesDeviceIdPerformanceHistoryDiskUsage, bool) {
	if o == nil || isNil(o.DiskUsage) {
    return nil, false
	}
	return o.DiskUsage, true
}

// HasDiskUsage returns a boolean if a field has been set.
func (o *InlineResponse20066) HasDiskUsage() bool {
	if o != nil && !isNil(o.DiskUsage) {
		return true
	}

	return false
}

// SetDiskUsage gets a reference to the given NetworksNetworkIdSmDevicesDeviceIdPerformanceHistoryDiskUsage and assigns it to the DiskUsage field.
func (o *InlineResponse20066) SetDiskUsage(v NetworksNetworkIdSmDevicesDeviceIdPerformanceHistoryDiskUsage) {
	o.DiskUsage = &v
}

// GetTs returns the Ts field value if set, zero value otherwise.
func (o *InlineResponse20066) GetTs() string {
	if o == nil || isNil(o.Ts) {
		var ret string
		return ret
	}
	return *o.Ts
}

// GetTsOk returns a tuple with the Ts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20066) GetTsOk() (*string, bool) {
	if o == nil || isNil(o.Ts) {
    return nil, false
	}
	return o.Ts, true
}

// HasTs returns a boolean if a field has been set.
func (o *InlineResponse20066) HasTs() bool {
	if o != nil && !isNil(o.Ts) {
		return true
	}

	return false
}

// SetTs gets a reference to the given string and assigns it to the Ts field.
func (o *InlineResponse20066) SetTs(v string) {
	o.Ts = &v
}

func (o InlineResponse20066) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.CpuPercentUsed) {
		toSerialize["cpuPercentUsed"] = o.CpuPercentUsed
	}
	if !isNil(o.MemFree) {
		toSerialize["memFree"] = o.MemFree
	}
	if !isNil(o.MemWired) {
		toSerialize["memWired"] = o.MemWired
	}
	if !isNil(o.MemActive) {
		toSerialize["memActive"] = o.MemActive
	}
	if !isNil(o.MemInactive) {
		toSerialize["memInactive"] = o.MemInactive
	}
	if !isNil(o.NetworkSent) {
		toSerialize["networkSent"] = o.NetworkSent
	}
	if !isNil(o.NetworkReceived) {
		toSerialize["networkReceived"] = o.NetworkReceived
	}
	if !isNil(o.SwapUsed) {
		toSerialize["swapUsed"] = o.SwapUsed
	}
	if !isNil(o.DiskUsage) {
		toSerialize["diskUsage"] = o.DiskUsage
	}
	if !isNil(o.Ts) {
		toSerialize["ts"] = o.Ts
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20066 struct {
	value *InlineResponse20066
	isSet bool
}

func (v NullableInlineResponse20066) Get() *InlineResponse20066 {
	return v.value
}

func (v *NullableInlineResponse20066) Set(val *InlineResponse20066) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20066) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20066) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20066(val *InlineResponse20066) *NullableInlineResponse20066 {
	return &NullableInlineResponse20066{value: val, isSet: true}
}

func (v NullableInlineResponse20066) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20066) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


