/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 03 September, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.62.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200384Interfaces struct for InlineResponse200384Interfaces
type InlineResponse200384Interfaces struct {
	// The name of the wireless LAN controller interface
	Name *string `json:"name,omitempty"`
	// The description of the wireless LAN controller interface
	Description *string `json:"description,omitempty"`
	// The MAC address of the wireless LAN controller interface
	Mac *string `json:"mac,omitempty"`
	// The status of the wireless LAN controller interface
	Status *string `json:"status,omitempty"`
	// The current data transfer rate which the interface is operating at. enum = [1 Gbps, 2 Gbps, 5 Gbps, 10 Gbps, 20 Gbps, 40 Gbps, 100 Gbps]
	Speed *string `json:"speed,omitempty"`
	// Available addresses for the interface.
	Addresses []InlineResponse200384Addresses `json:"addresses,omitempty"`
	Vrf *InlineResponse200384Vrf `json:"vrf,omitempty"`
	// Indicate whether the interface is uplink
	IsUplink *bool `json:"isUplink,omitempty"`
	// The VLAN of the switch port. For a trunk port, this is the native VLAN. A null value will clear the value set for trunk ports.
	Vlan *int32 `json:"vlan,omitempty"`
	// The interface negotiation mode
	LinkNegotiation *string `json:"linkNegotiation,omitempty"`
	ChannelGroup *InlineResponse200381ChannelGroup `json:"channelGroup,omitempty"`
	Module *InlineResponse200381Module `json:"module,omitempty"`
}

// NewInlineResponse200384Interfaces instantiates a new InlineResponse200384Interfaces object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200384Interfaces() *InlineResponse200384Interfaces {
	this := InlineResponse200384Interfaces{}
	return &this
}

// NewInlineResponse200384InterfacesWithDefaults instantiates a new InlineResponse200384Interfaces object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200384InterfacesWithDefaults() *InlineResponse200384Interfaces {
	this := InlineResponse200384Interfaces{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *InlineResponse200384Interfaces) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200384Interfaces) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
    return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *InlineResponse200384Interfaces) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *InlineResponse200384Interfaces) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *InlineResponse200384Interfaces) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200384Interfaces) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
    return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *InlineResponse200384Interfaces) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *InlineResponse200384Interfaces) SetDescription(v string) {
	o.Description = &v
}

// GetMac returns the Mac field value if set, zero value otherwise.
func (o *InlineResponse200384Interfaces) GetMac() string {
	if o == nil || isNil(o.Mac) {
		var ret string
		return ret
	}
	return *o.Mac
}

// GetMacOk returns a tuple with the Mac field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200384Interfaces) GetMacOk() (*string, bool) {
	if o == nil || isNil(o.Mac) {
    return nil, false
	}
	return o.Mac, true
}

// HasMac returns a boolean if a field has been set.
func (o *InlineResponse200384Interfaces) HasMac() bool {
	if o != nil && !isNil(o.Mac) {
		return true
	}

	return false
}

// SetMac gets a reference to the given string and assigns it to the Mac field.
func (o *InlineResponse200384Interfaces) SetMac(v string) {
	o.Mac = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *InlineResponse200384Interfaces) GetStatus() string {
	if o == nil || isNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200384Interfaces) GetStatusOk() (*string, bool) {
	if o == nil || isNil(o.Status) {
    return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *InlineResponse200384Interfaces) HasStatus() bool {
	if o != nil && !isNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *InlineResponse200384Interfaces) SetStatus(v string) {
	o.Status = &v
}

// GetSpeed returns the Speed field value if set, zero value otherwise.
func (o *InlineResponse200384Interfaces) GetSpeed() string {
	if o == nil || isNil(o.Speed) {
		var ret string
		return ret
	}
	return *o.Speed
}

// GetSpeedOk returns a tuple with the Speed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200384Interfaces) GetSpeedOk() (*string, bool) {
	if o == nil || isNil(o.Speed) {
    return nil, false
	}
	return o.Speed, true
}

// HasSpeed returns a boolean if a field has been set.
func (o *InlineResponse200384Interfaces) HasSpeed() bool {
	if o != nil && !isNil(o.Speed) {
		return true
	}

	return false
}

// SetSpeed gets a reference to the given string and assigns it to the Speed field.
func (o *InlineResponse200384Interfaces) SetSpeed(v string) {
	o.Speed = &v
}

// GetAddresses returns the Addresses field value if set, zero value otherwise.
func (o *InlineResponse200384Interfaces) GetAddresses() []InlineResponse200384Addresses {
	if o == nil || isNil(o.Addresses) {
		var ret []InlineResponse200384Addresses
		return ret
	}
	return o.Addresses
}

// GetAddressesOk returns a tuple with the Addresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200384Interfaces) GetAddressesOk() ([]InlineResponse200384Addresses, bool) {
	if o == nil || isNil(o.Addresses) {
    return nil, false
	}
	return o.Addresses, true
}

// HasAddresses returns a boolean if a field has been set.
func (o *InlineResponse200384Interfaces) HasAddresses() bool {
	if o != nil && !isNil(o.Addresses) {
		return true
	}

	return false
}

// SetAddresses gets a reference to the given []InlineResponse200384Addresses and assigns it to the Addresses field.
func (o *InlineResponse200384Interfaces) SetAddresses(v []InlineResponse200384Addresses) {
	o.Addresses = v
}

// GetVrf returns the Vrf field value if set, zero value otherwise.
func (o *InlineResponse200384Interfaces) GetVrf() InlineResponse200384Vrf {
	if o == nil || isNil(o.Vrf) {
		var ret InlineResponse200384Vrf
		return ret
	}
	return *o.Vrf
}

// GetVrfOk returns a tuple with the Vrf field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200384Interfaces) GetVrfOk() (*InlineResponse200384Vrf, bool) {
	if o == nil || isNil(o.Vrf) {
    return nil, false
	}
	return o.Vrf, true
}

// HasVrf returns a boolean if a field has been set.
func (o *InlineResponse200384Interfaces) HasVrf() bool {
	if o != nil && !isNil(o.Vrf) {
		return true
	}

	return false
}

// SetVrf gets a reference to the given InlineResponse200384Vrf and assigns it to the Vrf field.
func (o *InlineResponse200384Interfaces) SetVrf(v InlineResponse200384Vrf) {
	o.Vrf = &v
}

// GetIsUplink returns the IsUplink field value if set, zero value otherwise.
func (o *InlineResponse200384Interfaces) GetIsUplink() bool {
	if o == nil || isNil(o.IsUplink) {
		var ret bool
		return ret
	}
	return *o.IsUplink
}

// GetIsUplinkOk returns a tuple with the IsUplink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200384Interfaces) GetIsUplinkOk() (*bool, bool) {
	if o == nil || isNil(o.IsUplink) {
    return nil, false
	}
	return o.IsUplink, true
}

// HasIsUplink returns a boolean if a field has been set.
func (o *InlineResponse200384Interfaces) HasIsUplink() bool {
	if o != nil && !isNil(o.IsUplink) {
		return true
	}

	return false
}

// SetIsUplink gets a reference to the given bool and assigns it to the IsUplink field.
func (o *InlineResponse200384Interfaces) SetIsUplink(v bool) {
	o.IsUplink = &v
}

// GetVlan returns the Vlan field value if set, zero value otherwise.
func (o *InlineResponse200384Interfaces) GetVlan() int32 {
	if o == nil || isNil(o.Vlan) {
		var ret int32
		return ret
	}
	return *o.Vlan
}

// GetVlanOk returns a tuple with the Vlan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200384Interfaces) GetVlanOk() (*int32, bool) {
	if o == nil || isNil(o.Vlan) {
    return nil, false
	}
	return o.Vlan, true
}

// HasVlan returns a boolean if a field has been set.
func (o *InlineResponse200384Interfaces) HasVlan() bool {
	if o != nil && !isNil(o.Vlan) {
		return true
	}

	return false
}

// SetVlan gets a reference to the given int32 and assigns it to the Vlan field.
func (o *InlineResponse200384Interfaces) SetVlan(v int32) {
	o.Vlan = &v
}

// GetLinkNegotiation returns the LinkNegotiation field value if set, zero value otherwise.
func (o *InlineResponse200384Interfaces) GetLinkNegotiation() string {
	if o == nil || isNil(o.LinkNegotiation) {
		var ret string
		return ret
	}
	return *o.LinkNegotiation
}

// GetLinkNegotiationOk returns a tuple with the LinkNegotiation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200384Interfaces) GetLinkNegotiationOk() (*string, bool) {
	if o == nil || isNil(o.LinkNegotiation) {
    return nil, false
	}
	return o.LinkNegotiation, true
}

// HasLinkNegotiation returns a boolean if a field has been set.
func (o *InlineResponse200384Interfaces) HasLinkNegotiation() bool {
	if o != nil && !isNil(o.LinkNegotiation) {
		return true
	}

	return false
}

// SetLinkNegotiation gets a reference to the given string and assigns it to the LinkNegotiation field.
func (o *InlineResponse200384Interfaces) SetLinkNegotiation(v string) {
	o.LinkNegotiation = &v
}

// GetChannelGroup returns the ChannelGroup field value if set, zero value otherwise.
func (o *InlineResponse200384Interfaces) GetChannelGroup() InlineResponse200381ChannelGroup {
	if o == nil || isNil(o.ChannelGroup) {
		var ret InlineResponse200381ChannelGroup
		return ret
	}
	return *o.ChannelGroup
}

// GetChannelGroupOk returns a tuple with the ChannelGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200384Interfaces) GetChannelGroupOk() (*InlineResponse200381ChannelGroup, bool) {
	if o == nil || isNil(o.ChannelGroup) {
    return nil, false
	}
	return o.ChannelGroup, true
}

// HasChannelGroup returns a boolean if a field has been set.
func (o *InlineResponse200384Interfaces) HasChannelGroup() bool {
	if o != nil && !isNil(o.ChannelGroup) {
		return true
	}

	return false
}

// SetChannelGroup gets a reference to the given InlineResponse200381ChannelGroup and assigns it to the ChannelGroup field.
func (o *InlineResponse200384Interfaces) SetChannelGroup(v InlineResponse200381ChannelGroup) {
	o.ChannelGroup = &v
}

// GetModule returns the Module field value if set, zero value otherwise.
func (o *InlineResponse200384Interfaces) GetModule() InlineResponse200381Module {
	if o == nil || isNil(o.Module) {
		var ret InlineResponse200381Module
		return ret
	}
	return *o.Module
}

// GetModuleOk returns a tuple with the Module field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200384Interfaces) GetModuleOk() (*InlineResponse200381Module, bool) {
	if o == nil || isNil(o.Module) {
    return nil, false
	}
	return o.Module, true
}

// HasModule returns a boolean if a field has been set.
func (o *InlineResponse200384Interfaces) HasModule() bool {
	if o != nil && !isNil(o.Module) {
		return true
	}

	return false
}

// SetModule gets a reference to the given InlineResponse200381Module and assigns it to the Module field.
func (o *InlineResponse200384Interfaces) SetModule(v InlineResponse200381Module) {
	o.Module = &v
}

func (o InlineResponse200384Interfaces) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !isNil(o.Mac) {
		toSerialize["mac"] = o.Mac
	}
	if !isNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !isNil(o.Speed) {
		toSerialize["speed"] = o.Speed
	}
	if !isNil(o.Addresses) {
		toSerialize["addresses"] = o.Addresses
	}
	if !isNil(o.Vrf) {
		toSerialize["vrf"] = o.Vrf
	}
	if !isNil(o.IsUplink) {
		toSerialize["isUplink"] = o.IsUplink
	}
	if !isNil(o.Vlan) {
		toSerialize["vlan"] = o.Vlan
	}
	if !isNil(o.LinkNegotiation) {
		toSerialize["linkNegotiation"] = o.LinkNegotiation
	}
	if !isNil(o.ChannelGroup) {
		toSerialize["channelGroup"] = o.ChannelGroup
	}
	if !isNil(o.Module) {
		toSerialize["module"] = o.Module
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200384Interfaces struct {
	value *InlineResponse200384Interfaces
	isSet bool
}

func (v NullableInlineResponse200384Interfaces) Get() *InlineResponse200384Interfaces {
	return v.value
}

func (v *NullableInlineResponse200384Interfaces) Set(val *InlineResponse200384Interfaces) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200384Interfaces) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200384Interfaces) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200384Interfaces(val *InlineResponse200384Interfaces) *NullableInlineResponse200384Interfaces {
	return &NullableInlineResponse200384Interfaces{value: val, isSet: true}
}

func (v NullableInlineResponse200384Interfaces) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200384Interfaces) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


