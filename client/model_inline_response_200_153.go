/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 04 December, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.53.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200153 struct for InlineResponse200153
type InlineResponse200153 struct {
	// The ID for the link aggregation.
	Id *string `json:"id,omitempty"`
	// The ID for the link aggregation.
	SwitchPorts []NetworksNetworkIdSwitchLinkAggregationsSwitchPorts `json:"switchPorts,omitempty"`
}

// NewInlineResponse200153 instantiates a new InlineResponse200153 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200153() *InlineResponse200153 {
	this := InlineResponse200153{}
	return &this
}

// NewInlineResponse200153WithDefaults instantiates a new InlineResponse200153 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200153WithDefaults() *InlineResponse200153 {
	this := InlineResponse200153{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *InlineResponse200153) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200153) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *InlineResponse200153) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *InlineResponse200153) SetId(v string) {
	o.Id = &v
}

// GetSwitchPorts returns the SwitchPorts field value if set, zero value otherwise.
func (o *InlineResponse200153) GetSwitchPorts() []NetworksNetworkIdSwitchLinkAggregationsSwitchPorts {
	if o == nil || isNil(o.SwitchPorts) {
		var ret []NetworksNetworkIdSwitchLinkAggregationsSwitchPorts
		return ret
	}
	return o.SwitchPorts
}

// GetSwitchPortsOk returns a tuple with the SwitchPorts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200153) GetSwitchPortsOk() ([]NetworksNetworkIdSwitchLinkAggregationsSwitchPorts, bool) {
	if o == nil || isNil(o.SwitchPorts) {
    return nil, false
	}
	return o.SwitchPorts, true
}

// HasSwitchPorts returns a boolean if a field has been set.
func (o *InlineResponse200153) HasSwitchPorts() bool {
	if o != nil && !isNil(o.SwitchPorts) {
		return true
	}

	return false
}

// SetSwitchPorts gets a reference to the given []NetworksNetworkIdSwitchLinkAggregationsSwitchPorts and assigns it to the SwitchPorts field.
func (o *InlineResponse200153) SetSwitchPorts(v []NetworksNetworkIdSwitchLinkAggregationsSwitchPorts) {
	o.SwitchPorts = v
}

func (o InlineResponse200153) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.SwitchPorts) {
		toSerialize["switchPorts"] = o.SwitchPorts
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200153 struct {
	value *InlineResponse200153
	isSet bool
}

func (v NullableInlineResponse200153) Get() *InlineResponse200153 {
	return v.value
}

func (v *NullableInlineResponse200153) Set(val *InlineResponse200153) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200153) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200153) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200153(val *InlineResponse200153) *NullableInlineResponse200153 {
	return &NullableInlineResponse200153{value: val, isSet: true}
}

func (v NullableInlineResponse200153) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200153) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


