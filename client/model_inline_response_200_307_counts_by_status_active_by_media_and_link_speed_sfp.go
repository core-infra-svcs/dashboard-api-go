/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 04 December, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.53.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200307CountsByStatusActiveByMediaAndLinkSpeedSfp The count data for SFP ports, indexed by speed in Mb
type InlineResponse200307CountsByStatusActiveByMediaAndLinkSpeedSfp struct {
	// The total number of active SFP ports
	Total *int32 `json:"total,omitempty"`
	// The number of active 100 Mbps SFP ports
	Var100 *int32 `json:"100,omitempty"`
	// The number of active 1 Gbps SFP ports
	Var1000 *int32 `json:"1000,omitempty"`
	// The number of active 10 Gbps SFP ports
	Var10000 *int32 `json:"10000,omitempty"`
	// The number of active 20 Gbps SFP ports
	Var20000 *int32 `json:"20000,omitempty"`
	// The number of active 25 Gbps SFP ports
	Var25000 *int32 `json:"25000,omitempty"`
	// The number of active 40 Gbps SFP ports
	Var40000 *int32 `json:"40000,omitempty"`
	// The number of active 50 Gbps SFP ports
	Var50000 *int32 `json:"50000,omitempty"`
	// The number of active 100 Gbps SFP ports
	Var100000 *int32 `json:"100000,omitempty"`
}

// NewInlineResponse200307CountsByStatusActiveByMediaAndLinkSpeedSfp instantiates a new InlineResponse200307CountsByStatusActiveByMediaAndLinkSpeedSfp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200307CountsByStatusActiveByMediaAndLinkSpeedSfp() *InlineResponse200307CountsByStatusActiveByMediaAndLinkSpeedSfp {
	this := InlineResponse200307CountsByStatusActiveByMediaAndLinkSpeedSfp{}
	return &this
}

// NewInlineResponse200307CountsByStatusActiveByMediaAndLinkSpeedSfpWithDefaults instantiates a new InlineResponse200307CountsByStatusActiveByMediaAndLinkSpeedSfp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200307CountsByStatusActiveByMediaAndLinkSpeedSfpWithDefaults() *InlineResponse200307CountsByStatusActiveByMediaAndLinkSpeedSfp {
	this := InlineResponse200307CountsByStatusActiveByMediaAndLinkSpeedSfp{}
	return &this
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *InlineResponse200307CountsByStatusActiveByMediaAndLinkSpeedSfp) GetTotal() int32 {
	if o == nil || isNil(o.Total) {
		var ret int32
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200307CountsByStatusActiveByMediaAndLinkSpeedSfp) GetTotalOk() (*int32, bool) {
	if o == nil || isNil(o.Total) {
    return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *InlineResponse200307CountsByStatusActiveByMediaAndLinkSpeedSfp) HasTotal() bool {
	if o != nil && !isNil(o.Total) {
		return true
	}

	return false
}

// SetTotal gets a reference to the given int32 and assigns it to the Total field.
func (o *InlineResponse200307CountsByStatusActiveByMediaAndLinkSpeedSfp) SetTotal(v int32) {
	o.Total = &v
}

// GetVar100 returns the Var100 field value if set, zero value otherwise.
func (o *InlineResponse200307CountsByStatusActiveByMediaAndLinkSpeedSfp) GetVar100() int32 {
	if o == nil || isNil(o.Var100) {
		var ret int32
		return ret
	}
	return *o.Var100
}

// GetVar100Ok returns a tuple with the Var100 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200307CountsByStatusActiveByMediaAndLinkSpeedSfp) GetVar100Ok() (*int32, bool) {
	if o == nil || isNil(o.Var100) {
    return nil, false
	}
	return o.Var100, true
}

// HasVar100 returns a boolean if a field has been set.
func (o *InlineResponse200307CountsByStatusActiveByMediaAndLinkSpeedSfp) HasVar100() bool {
	if o != nil && !isNil(o.Var100) {
		return true
	}

	return false
}

// SetVar100 gets a reference to the given int32 and assigns it to the Var100 field.
func (o *InlineResponse200307CountsByStatusActiveByMediaAndLinkSpeedSfp) SetVar100(v int32) {
	o.Var100 = &v
}

// GetVar1000 returns the Var1000 field value if set, zero value otherwise.
func (o *InlineResponse200307CountsByStatusActiveByMediaAndLinkSpeedSfp) GetVar1000() int32 {
	if o == nil || isNil(o.Var1000) {
		var ret int32
		return ret
	}
	return *o.Var1000
}

// GetVar1000Ok returns a tuple with the Var1000 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200307CountsByStatusActiveByMediaAndLinkSpeedSfp) GetVar1000Ok() (*int32, bool) {
	if o == nil || isNil(o.Var1000) {
    return nil, false
	}
	return o.Var1000, true
}

// HasVar1000 returns a boolean if a field has been set.
func (o *InlineResponse200307CountsByStatusActiveByMediaAndLinkSpeedSfp) HasVar1000() bool {
	if o != nil && !isNil(o.Var1000) {
		return true
	}

	return false
}

// SetVar1000 gets a reference to the given int32 and assigns it to the Var1000 field.
func (o *InlineResponse200307CountsByStatusActiveByMediaAndLinkSpeedSfp) SetVar1000(v int32) {
	o.Var1000 = &v
}

// GetVar10000 returns the Var10000 field value if set, zero value otherwise.
func (o *InlineResponse200307CountsByStatusActiveByMediaAndLinkSpeedSfp) GetVar10000() int32 {
	if o == nil || isNil(o.Var10000) {
		var ret int32
		return ret
	}
	return *o.Var10000
}

// GetVar10000Ok returns a tuple with the Var10000 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200307CountsByStatusActiveByMediaAndLinkSpeedSfp) GetVar10000Ok() (*int32, bool) {
	if o == nil || isNil(o.Var10000) {
    return nil, false
	}
	return o.Var10000, true
}

// HasVar10000 returns a boolean if a field has been set.
func (o *InlineResponse200307CountsByStatusActiveByMediaAndLinkSpeedSfp) HasVar10000() bool {
	if o != nil && !isNil(o.Var10000) {
		return true
	}

	return false
}

// SetVar10000 gets a reference to the given int32 and assigns it to the Var10000 field.
func (o *InlineResponse200307CountsByStatusActiveByMediaAndLinkSpeedSfp) SetVar10000(v int32) {
	o.Var10000 = &v
}

// GetVar20000 returns the Var20000 field value if set, zero value otherwise.
func (o *InlineResponse200307CountsByStatusActiveByMediaAndLinkSpeedSfp) GetVar20000() int32 {
	if o == nil || isNil(o.Var20000) {
		var ret int32
		return ret
	}
	return *o.Var20000
}

// GetVar20000Ok returns a tuple with the Var20000 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200307CountsByStatusActiveByMediaAndLinkSpeedSfp) GetVar20000Ok() (*int32, bool) {
	if o == nil || isNil(o.Var20000) {
    return nil, false
	}
	return o.Var20000, true
}

// HasVar20000 returns a boolean if a field has been set.
func (o *InlineResponse200307CountsByStatusActiveByMediaAndLinkSpeedSfp) HasVar20000() bool {
	if o != nil && !isNil(o.Var20000) {
		return true
	}

	return false
}

// SetVar20000 gets a reference to the given int32 and assigns it to the Var20000 field.
func (o *InlineResponse200307CountsByStatusActiveByMediaAndLinkSpeedSfp) SetVar20000(v int32) {
	o.Var20000 = &v
}

// GetVar25000 returns the Var25000 field value if set, zero value otherwise.
func (o *InlineResponse200307CountsByStatusActiveByMediaAndLinkSpeedSfp) GetVar25000() int32 {
	if o == nil || isNil(o.Var25000) {
		var ret int32
		return ret
	}
	return *o.Var25000
}

// GetVar25000Ok returns a tuple with the Var25000 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200307CountsByStatusActiveByMediaAndLinkSpeedSfp) GetVar25000Ok() (*int32, bool) {
	if o == nil || isNil(o.Var25000) {
    return nil, false
	}
	return o.Var25000, true
}

// HasVar25000 returns a boolean if a field has been set.
func (o *InlineResponse200307CountsByStatusActiveByMediaAndLinkSpeedSfp) HasVar25000() bool {
	if o != nil && !isNil(o.Var25000) {
		return true
	}

	return false
}

// SetVar25000 gets a reference to the given int32 and assigns it to the Var25000 field.
func (o *InlineResponse200307CountsByStatusActiveByMediaAndLinkSpeedSfp) SetVar25000(v int32) {
	o.Var25000 = &v
}

// GetVar40000 returns the Var40000 field value if set, zero value otherwise.
func (o *InlineResponse200307CountsByStatusActiveByMediaAndLinkSpeedSfp) GetVar40000() int32 {
	if o == nil || isNil(o.Var40000) {
		var ret int32
		return ret
	}
	return *o.Var40000
}

// GetVar40000Ok returns a tuple with the Var40000 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200307CountsByStatusActiveByMediaAndLinkSpeedSfp) GetVar40000Ok() (*int32, bool) {
	if o == nil || isNil(o.Var40000) {
    return nil, false
	}
	return o.Var40000, true
}

// HasVar40000 returns a boolean if a field has been set.
func (o *InlineResponse200307CountsByStatusActiveByMediaAndLinkSpeedSfp) HasVar40000() bool {
	if o != nil && !isNil(o.Var40000) {
		return true
	}

	return false
}

// SetVar40000 gets a reference to the given int32 and assigns it to the Var40000 field.
func (o *InlineResponse200307CountsByStatusActiveByMediaAndLinkSpeedSfp) SetVar40000(v int32) {
	o.Var40000 = &v
}

// GetVar50000 returns the Var50000 field value if set, zero value otherwise.
func (o *InlineResponse200307CountsByStatusActiveByMediaAndLinkSpeedSfp) GetVar50000() int32 {
	if o == nil || isNil(o.Var50000) {
		var ret int32
		return ret
	}
	return *o.Var50000
}

// GetVar50000Ok returns a tuple with the Var50000 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200307CountsByStatusActiveByMediaAndLinkSpeedSfp) GetVar50000Ok() (*int32, bool) {
	if o == nil || isNil(o.Var50000) {
    return nil, false
	}
	return o.Var50000, true
}

// HasVar50000 returns a boolean if a field has been set.
func (o *InlineResponse200307CountsByStatusActiveByMediaAndLinkSpeedSfp) HasVar50000() bool {
	if o != nil && !isNil(o.Var50000) {
		return true
	}

	return false
}

// SetVar50000 gets a reference to the given int32 and assigns it to the Var50000 field.
func (o *InlineResponse200307CountsByStatusActiveByMediaAndLinkSpeedSfp) SetVar50000(v int32) {
	o.Var50000 = &v
}

// GetVar100000 returns the Var100000 field value if set, zero value otherwise.
func (o *InlineResponse200307CountsByStatusActiveByMediaAndLinkSpeedSfp) GetVar100000() int32 {
	if o == nil || isNil(o.Var100000) {
		var ret int32
		return ret
	}
	return *o.Var100000
}

// GetVar100000Ok returns a tuple with the Var100000 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200307CountsByStatusActiveByMediaAndLinkSpeedSfp) GetVar100000Ok() (*int32, bool) {
	if o == nil || isNil(o.Var100000) {
    return nil, false
	}
	return o.Var100000, true
}

// HasVar100000 returns a boolean if a field has been set.
func (o *InlineResponse200307CountsByStatusActiveByMediaAndLinkSpeedSfp) HasVar100000() bool {
	if o != nil && !isNil(o.Var100000) {
		return true
	}

	return false
}

// SetVar100000 gets a reference to the given int32 and assigns it to the Var100000 field.
func (o *InlineResponse200307CountsByStatusActiveByMediaAndLinkSpeedSfp) SetVar100000(v int32) {
	o.Var100000 = &v
}

func (o InlineResponse200307CountsByStatusActiveByMediaAndLinkSpeedSfp) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Total) {
		toSerialize["total"] = o.Total
	}
	if !isNil(o.Var100) {
		toSerialize["100"] = o.Var100
	}
	if !isNil(o.Var1000) {
		toSerialize["1000"] = o.Var1000
	}
	if !isNil(o.Var10000) {
		toSerialize["10000"] = o.Var10000
	}
	if !isNil(o.Var20000) {
		toSerialize["20000"] = o.Var20000
	}
	if !isNil(o.Var25000) {
		toSerialize["25000"] = o.Var25000
	}
	if !isNil(o.Var40000) {
		toSerialize["40000"] = o.Var40000
	}
	if !isNil(o.Var50000) {
		toSerialize["50000"] = o.Var50000
	}
	if !isNil(o.Var100000) {
		toSerialize["100000"] = o.Var100000
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200307CountsByStatusActiveByMediaAndLinkSpeedSfp struct {
	value *InlineResponse200307CountsByStatusActiveByMediaAndLinkSpeedSfp
	isSet bool
}

func (v NullableInlineResponse200307CountsByStatusActiveByMediaAndLinkSpeedSfp) Get() *InlineResponse200307CountsByStatusActiveByMediaAndLinkSpeedSfp {
	return v.value
}

func (v *NullableInlineResponse200307CountsByStatusActiveByMediaAndLinkSpeedSfp) Set(val *InlineResponse200307CountsByStatusActiveByMediaAndLinkSpeedSfp) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200307CountsByStatusActiveByMediaAndLinkSpeedSfp) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200307CountsByStatusActiveByMediaAndLinkSpeedSfp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200307CountsByStatusActiveByMediaAndLinkSpeedSfp(val *InlineResponse200307CountsByStatusActiveByMediaAndLinkSpeedSfp) *NullableInlineResponse200307CountsByStatusActiveByMediaAndLinkSpeedSfp {
	return &NullableInlineResponse200307CountsByStatusActiveByMediaAndLinkSpeedSfp{value: val, isSet: true}
}

func (v NullableInlineResponse200307CountsByStatusActiveByMediaAndLinkSpeedSfp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200307CountsByStatusActiveByMediaAndLinkSpeedSfp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


