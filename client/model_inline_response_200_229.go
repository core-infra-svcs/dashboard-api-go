/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 01 October, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.63.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200229 struct for InlineResponse200229
type InlineResponse200229 struct {
	// Profile ID
	ProfileId *string `json:"profileId,omitempty"`
	// Name of profile
	Name *string `json:"name,omitempty"`
	// The hostname patterns to match for redirection. For more information on Split DNS hostname pattern formatting, please consult the Split DNS KB.
	Hostnames []string `json:"hostnames,omitempty"`
	Nameservers *OrganizationsOrganizationIdApplianceDnsSplitProfilesNameservers `json:"nameservers,omitempty"`
}

// NewInlineResponse200229 instantiates a new InlineResponse200229 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200229() *InlineResponse200229 {
	this := InlineResponse200229{}
	return &this
}

// NewInlineResponse200229WithDefaults instantiates a new InlineResponse200229 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200229WithDefaults() *InlineResponse200229 {
	this := InlineResponse200229{}
	return &this
}

// GetProfileId returns the ProfileId field value if set, zero value otherwise.
func (o *InlineResponse200229) GetProfileId() string {
	if o == nil || isNil(o.ProfileId) {
		var ret string
		return ret
	}
	return *o.ProfileId
}

// GetProfileIdOk returns a tuple with the ProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200229) GetProfileIdOk() (*string, bool) {
	if o == nil || isNil(o.ProfileId) {
    return nil, false
	}
	return o.ProfileId, true
}

// HasProfileId returns a boolean if a field has been set.
func (o *InlineResponse200229) HasProfileId() bool {
	if o != nil && !isNil(o.ProfileId) {
		return true
	}

	return false
}

// SetProfileId gets a reference to the given string and assigns it to the ProfileId field.
func (o *InlineResponse200229) SetProfileId(v string) {
	o.ProfileId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *InlineResponse200229) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200229) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
    return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *InlineResponse200229) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *InlineResponse200229) SetName(v string) {
	o.Name = &v
}

// GetHostnames returns the Hostnames field value if set, zero value otherwise.
func (o *InlineResponse200229) GetHostnames() []string {
	if o == nil || isNil(o.Hostnames) {
		var ret []string
		return ret
	}
	return o.Hostnames
}

// GetHostnamesOk returns a tuple with the Hostnames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200229) GetHostnamesOk() ([]string, bool) {
	if o == nil || isNil(o.Hostnames) {
    return nil, false
	}
	return o.Hostnames, true
}

// HasHostnames returns a boolean if a field has been set.
func (o *InlineResponse200229) HasHostnames() bool {
	if o != nil && !isNil(o.Hostnames) {
		return true
	}

	return false
}

// SetHostnames gets a reference to the given []string and assigns it to the Hostnames field.
func (o *InlineResponse200229) SetHostnames(v []string) {
	o.Hostnames = v
}

// GetNameservers returns the Nameservers field value if set, zero value otherwise.
func (o *InlineResponse200229) GetNameservers() OrganizationsOrganizationIdApplianceDnsSplitProfilesNameservers {
	if o == nil || isNil(o.Nameservers) {
		var ret OrganizationsOrganizationIdApplianceDnsSplitProfilesNameservers
		return ret
	}
	return *o.Nameservers
}

// GetNameserversOk returns a tuple with the Nameservers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200229) GetNameserversOk() (*OrganizationsOrganizationIdApplianceDnsSplitProfilesNameservers, bool) {
	if o == nil || isNil(o.Nameservers) {
    return nil, false
	}
	return o.Nameservers, true
}

// HasNameservers returns a boolean if a field has been set.
func (o *InlineResponse200229) HasNameservers() bool {
	if o != nil && !isNil(o.Nameservers) {
		return true
	}

	return false
}

// SetNameservers gets a reference to the given OrganizationsOrganizationIdApplianceDnsSplitProfilesNameservers and assigns it to the Nameservers field.
func (o *InlineResponse200229) SetNameservers(v OrganizationsOrganizationIdApplianceDnsSplitProfilesNameservers) {
	o.Nameservers = &v
}

func (o InlineResponse200229) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.ProfileId) {
		toSerialize["profileId"] = o.ProfileId
	}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.Hostnames) {
		toSerialize["hostnames"] = o.Hostnames
	}
	if !isNil(o.Nameservers) {
		toSerialize["nameservers"] = o.Nameservers
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200229 struct {
	value *InlineResponse200229
	isSet bool
}

func (v NullableInlineResponse200229) Get() *InlineResponse200229 {
	return v.value
}

func (v *NullableInlineResponse200229) Set(val *InlineResponse200229) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200229) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200229) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200229(val *InlineResponse200229) *NullableInlineResponse200229 {
	return &NullableInlineResponse200229{value: val, isSet: true}
}

func (v NullableInlineResponse200229) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200229) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


