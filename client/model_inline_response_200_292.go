/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 03 September, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.62.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"time"
)

// InlineResponse200292 struct for InlineResponse200292
type InlineResponse200292 struct {
	// Serial of the device
	Serial *string `json:"serial,omitempty"`
	// Name assigned to the device
	Name *string `json:"name,omitempty"`
	// Status of the device upgrade
	DeviceStatus *string `json:"deviceStatus,omitempty"`
	// The time the device checkin finished
	CheckinFinishedAt *time.Time `json:"checkinFinishedAt,omitempty"`
	// The time the device checkin started
	CheckinStartedAt *time.Time `json:"checkinStartedAt,omitempty"`
	// The detailed status of the device upgrade
	DetailedStatus *string `json:"detailedStatus,omitempty"`
	// The time the device upgrade download finished
	DownloadFinishedAt *time.Time `json:"downloadFinishedAt,omitempty"`
	// The time the device upgrade download started
	DownloadStartedAt *time.Time `json:"downloadStartedAt,omitempty"`
	// The status of the device upgrade download
	DownloadStatus *string `json:"downloadStatus,omitempty"`
	// The time the device upgrade install finished
	InstallFinishedAt *time.Time `json:"installFinishedAt,omitempty"`
	// The time the device upgrade install started
	InstallStartedAt *time.Time `json:"installStartedAt,omitempty"`
	// The status of the device upgrade install
	InstallStatus *string `json:"installStatus,omitempty"`
	// The time the device upgrade verification finished
	VerifyFinishedAt *time.Time `json:"verifyFinishedAt,omitempty"`
	// The time the device upgrade verification started
	VerifyStartedAt *time.Time `json:"verifyStartedAt,omitempty"`
	// The status of the device upgrade verification
	VerifyStatus *string `json:"verifyStatus,omitempty"`
	Upgrade *OrganizationsOrganizationIdFirmwareUpgradesByDeviceUpgrade `json:"upgrade,omitempty"`
}

// NewInlineResponse200292 instantiates a new InlineResponse200292 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200292() *InlineResponse200292 {
	this := InlineResponse200292{}
	return &this
}

// NewInlineResponse200292WithDefaults instantiates a new InlineResponse200292 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200292WithDefaults() *InlineResponse200292 {
	this := InlineResponse200292{}
	return &this
}

// GetSerial returns the Serial field value if set, zero value otherwise.
func (o *InlineResponse200292) GetSerial() string {
	if o == nil || isNil(o.Serial) {
		var ret string
		return ret
	}
	return *o.Serial
}

// GetSerialOk returns a tuple with the Serial field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200292) GetSerialOk() (*string, bool) {
	if o == nil || isNil(o.Serial) {
    return nil, false
	}
	return o.Serial, true
}

// HasSerial returns a boolean if a field has been set.
func (o *InlineResponse200292) HasSerial() bool {
	if o != nil && !isNil(o.Serial) {
		return true
	}

	return false
}

// SetSerial gets a reference to the given string and assigns it to the Serial field.
func (o *InlineResponse200292) SetSerial(v string) {
	o.Serial = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *InlineResponse200292) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200292) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
    return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *InlineResponse200292) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *InlineResponse200292) SetName(v string) {
	o.Name = &v
}

// GetDeviceStatus returns the DeviceStatus field value if set, zero value otherwise.
func (o *InlineResponse200292) GetDeviceStatus() string {
	if o == nil || isNil(o.DeviceStatus) {
		var ret string
		return ret
	}
	return *o.DeviceStatus
}

// GetDeviceStatusOk returns a tuple with the DeviceStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200292) GetDeviceStatusOk() (*string, bool) {
	if o == nil || isNil(o.DeviceStatus) {
    return nil, false
	}
	return o.DeviceStatus, true
}

// HasDeviceStatus returns a boolean if a field has been set.
func (o *InlineResponse200292) HasDeviceStatus() bool {
	if o != nil && !isNil(o.DeviceStatus) {
		return true
	}

	return false
}

// SetDeviceStatus gets a reference to the given string and assigns it to the DeviceStatus field.
func (o *InlineResponse200292) SetDeviceStatus(v string) {
	o.DeviceStatus = &v
}

// GetCheckinFinishedAt returns the CheckinFinishedAt field value if set, zero value otherwise.
func (o *InlineResponse200292) GetCheckinFinishedAt() time.Time {
	if o == nil || isNil(o.CheckinFinishedAt) {
		var ret time.Time
		return ret
	}
	return *o.CheckinFinishedAt
}

// GetCheckinFinishedAtOk returns a tuple with the CheckinFinishedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200292) GetCheckinFinishedAtOk() (*time.Time, bool) {
	if o == nil || isNil(o.CheckinFinishedAt) {
    return nil, false
	}
	return o.CheckinFinishedAt, true
}

// HasCheckinFinishedAt returns a boolean if a field has been set.
func (o *InlineResponse200292) HasCheckinFinishedAt() bool {
	if o != nil && !isNil(o.CheckinFinishedAt) {
		return true
	}

	return false
}

// SetCheckinFinishedAt gets a reference to the given time.Time and assigns it to the CheckinFinishedAt field.
func (o *InlineResponse200292) SetCheckinFinishedAt(v time.Time) {
	o.CheckinFinishedAt = &v
}

// GetCheckinStartedAt returns the CheckinStartedAt field value if set, zero value otherwise.
func (o *InlineResponse200292) GetCheckinStartedAt() time.Time {
	if o == nil || isNil(o.CheckinStartedAt) {
		var ret time.Time
		return ret
	}
	return *o.CheckinStartedAt
}

// GetCheckinStartedAtOk returns a tuple with the CheckinStartedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200292) GetCheckinStartedAtOk() (*time.Time, bool) {
	if o == nil || isNil(o.CheckinStartedAt) {
    return nil, false
	}
	return o.CheckinStartedAt, true
}

// HasCheckinStartedAt returns a boolean if a field has been set.
func (o *InlineResponse200292) HasCheckinStartedAt() bool {
	if o != nil && !isNil(o.CheckinStartedAt) {
		return true
	}

	return false
}

// SetCheckinStartedAt gets a reference to the given time.Time and assigns it to the CheckinStartedAt field.
func (o *InlineResponse200292) SetCheckinStartedAt(v time.Time) {
	o.CheckinStartedAt = &v
}

// GetDetailedStatus returns the DetailedStatus field value if set, zero value otherwise.
func (o *InlineResponse200292) GetDetailedStatus() string {
	if o == nil || isNil(o.DetailedStatus) {
		var ret string
		return ret
	}
	return *o.DetailedStatus
}

// GetDetailedStatusOk returns a tuple with the DetailedStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200292) GetDetailedStatusOk() (*string, bool) {
	if o == nil || isNil(o.DetailedStatus) {
    return nil, false
	}
	return o.DetailedStatus, true
}

// HasDetailedStatus returns a boolean if a field has been set.
func (o *InlineResponse200292) HasDetailedStatus() bool {
	if o != nil && !isNil(o.DetailedStatus) {
		return true
	}

	return false
}

// SetDetailedStatus gets a reference to the given string and assigns it to the DetailedStatus field.
func (o *InlineResponse200292) SetDetailedStatus(v string) {
	o.DetailedStatus = &v
}

// GetDownloadFinishedAt returns the DownloadFinishedAt field value if set, zero value otherwise.
func (o *InlineResponse200292) GetDownloadFinishedAt() time.Time {
	if o == nil || isNil(o.DownloadFinishedAt) {
		var ret time.Time
		return ret
	}
	return *o.DownloadFinishedAt
}

// GetDownloadFinishedAtOk returns a tuple with the DownloadFinishedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200292) GetDownloadFinishedAtOk() (*time.Time, bool) {
	if o == nil || isNil(o.DownloadFinishedAt) {
    return nil, false
	}
	return o.DownloadFinishedAt, true
}

// HasDownloadFinishedAt returns a boolean if a field has been set.
func (o *InlineResponse200292) HasDownloadFinishedAt() bool {
	if o != nil && !isNil(o.DownloadFinishedAt) {
		return true
	}

	return false
}

// SetDownloadFinishedAt gets a reference to the given time.Time and assigns it to the DownloadFinishedAt field.
func (o *InlineResponse200292) SetDownloadFinishedAt(v time.Time) {
	o.DownloadFinishedAt = &v
}

// GetDownloadStartedAt returns the DownloadStartedAt field value if set, zero value otherwise.
func (o *InlineResponse200292) GetDownloadStartedAt() time.Time {
	if o == nil || isNil(o.DownloadStartedAt) {
		var ret time.Time
		return ret
	}
	return *o.DownloadStartedAt
}

// GetDownloadStartedAtOk returns a tuple with the DownloadStartedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200292) GetDownloadStartedAtOk() (*time.Time, bool) {
	if o == nil || isNil(o.DownloadStartedAt) {
    return nil, false
	}
	return o.DownloadStartedAt, true
}

// HasDownloadStartedAt returns a boolean if a field has been set.
func (o *InlineResponse200292) HasDownloadStartedAt() bool {
	if o != nil && !isNil(o.DownloadStartedAt) {
		return true
	}

	return false
}

// SetDownloadStartedAt gets a reference to the given time.Time and assigns it to the DownloadStartedAt field.
func (o *InlineResponse200292) SetDownloadStartedAt(v time.Time) {
	o.DownloadStartedAt = &v
}

// GetDownloadStatus returns the DownloadStatus field value if set, zero value otherwise.
func (o *InlineResponse200292) GetDownloadStatus() string {
	if o == nil || isNil(o.DownloadStatus) {
		var ret string
		return ret
	}
	return *o.DownloadStatus
}

// GetDownloadStatusOk returns a tuple with the DownloadStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200292) GetDownloadStatusOk() (*string, bool) {
	if o == nil || isNil(o.DownloadStatus) {
    return nil, false
	}
	return o.DownloadStatus, true
}

// HasDownloadStatus returns a boolean if a field has been set.
func (o *InlineResponse200292) HasDownloadStatus() bool {
	if o != nil && !isNil(o.DownloadStatus) {
		return true
	}

	return false
}

// SetDownloadStatus gets a reference to the given string and assigns it to the DownloadStatus field.
func (o *InlineResponse200292) SetDownloadStatus(v string) {
	o.DownloadStatus = &v
}

// GetInstallFinishedAt returns the InstallFinishedAt field value if set, zero value otherwise.
func (o *InlineResponse200292) GetInstallFinishedAt() time.Time {
	if o == nil || isNil(o.InstallFinishedAt) {
		var ret time.Time
		return ret
	}
	return *o.InstallFinishedAt
}

// GetInstallFinishedAtOk returns a tuple with the InstallFinishedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200292) GetInstallFinishedAtOk() (*time.Time, bool) {
	if o == nil || isNil(o.InstallFinishedAt) {
    return nil, false
	}
	return o.InstallFinishedAt, true
}

// HasInstallFinishedAt returns a boolean if a field has been set.
func (o *InlineResponse200292) HasInstallFinishedAt() bool {
	if o != nil && !isNil(o.InstallFinishedAt) {
		return true
	}

	return false
}

// SetInstallFinishedAt gets a reference to the given time.Time and assigns it to the InstallFinishedAt field.
func (o *InlineResponse200292) SetInstallFinishedAt(v time.Time) {
	o.InstallFinishedAt = &v
}

// GetInstallStartedAt returns the InstallStartedAt field value if set, zero value otherwise.
func (o *InlineResponse200292) GetInstallStartedAt() time.Time {
	if o == nil || isNil(o.InstallStartedAt) {
		var ret time.Time
		return ret
	}
	return *o.InstallStartedAt
}

// GetInstallStartedAtOk returns a tuple with the InstallStartedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200292) GetInstallStartedAtOk() (*time.Time, bool) {
	if o == nil || isNil(o.InstallStartedAt) {
    return nil, false
	}
	return o.InstallStartedAt, true
}

// HasInstallStartedAt returns a boolean if a field has been set.
func (o *InlineResponse200292) HasInstallStartedAt() bool {
	if o != nil && !isNil(o.InstallStartedAt) {
		return true
	}

	return false
}

// SetInstallStartedAt gets a reference to the given time.Time and assigns it to the InstallStartedAt field.
func (o *InlineResponse200292) SetInstallStartedAt(v time.Time) {
	o.InstallStartedAt = &v
}

// GetInstallStatus returns the InstallStatus field value if set, zero value otherwise.
func (o *InlineResponse200292) GetInstallStatus() string {
	if o == nil || isNil(o.InstallStatus) {
		var ret string
		return ret
	}
	return *o.InstallStatus
}

// GetInstallStatusOk returns a tuple with the InstallStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200292) GetInstallStatusOk() (*string, bool) {
	if o == nil || isNil(o.InstallStatus) {
    return nil, false
	}
	return o.InstallStatus, true
}

// HasInstallStatus returns a boolean if a field has been set.
func (o *InlineResponse200292) HasInstallStatus() bool {
	if o != nil && !isNil(o.InstallStatus) {
		return true
	}

	return false
}

// SetInstallStatus gets a reference to the given string and assigns it to the InstallStatus field.
func (o *InlineResponse200292) SetInstallStatus(v string) {
	o.InstallStatus = &v
}

// GetVerifyFinishedAt returns the VerifyFinishedAt field value if set, zero value otherwise.
func (o *InlineResponse200292) GetVerifyFinishedAt() time.Time {
	if o == nil || isNil(o.VerifyFinishedAt) {
		var ret time.Time
		return ret
	}
	return *o.VerifyFinishedAt
}

// GetVerifyFinishedAtOk returns a tuple with the VerifyFinishedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200292) GetVerifyFinishedAtOk() (*time.Time, bool) {
	if o == nil || isNil(o.VerifyFinishedAt) {
    return nil, false
	}
	return o.VerifyFinishedAt, true
}

// HasVerifyFinishedAt returns a boolean if a field has been set.
func (o *InlineResponse200292) HasVerifyFinishedAt() bool {
	if o != nil && !isNil(o.VerifyFinishedAt) {
		return true
	}

	return false
}

// SetVerifyFinishedAt gets a reference to the given time.Time and assigns it to the VerifyFinishedAt field.
func (o *InlineResponse200292) SetVerifyFinishedAt(v time.Time) {
	o.VerifyFinishedAt = &v
}

// GetVerifyStartedAt returns the VerifyStartedAt field value if set, zero value otherwise.
func (o *InlineResponse200292) GetVerifyStartedAt() time.Time {
	if o == nil || isNil(o.VerifyStartedAt) {
		var ret time.Time
		return ret
	}
	return *o.VerifyStartedAt
}

// GetVerifyStartedAtOk returns a tuple with the VerifyStartedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200292) GetVerifyStartedAtOk() (*time.Time, bool) {
	if o == nil || isNil(o.VerifyStartedAt) {
    return nil, false
	}
	return o.VerifyStartedAt, true
}

// HasVerifyStartedAt returns a boolean if a field has been set.
func (o *InlineResponse200292) HasVerifyStartedAt() bool {
	if o != nil && !isNil(o.VerifyStartedAt) {
		return true
	}

	return false
}

// SetVerifyStartedAt gets a reference to the given time.Time and assigns it to the VerifyStartedAt field.
func (o *InlineResponse200292) SetVerifyStartedAt(v time.Time) {
	o.VerifyStartedAt = &v
}

// GetVerifyStatus returns the VerifyStatus field value if set, zero value otherwise.
func (o *InlineResponse200292) GetVerifyStatus() string {
	if o == nil || isNil(o.VerifyStatus) {
		var ret string
		return ret
	}
	return *o.VerifyStatus
}

// GetVerifyStatusOk returns a tuple with the VerifyStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200292) GetVerifyStatusOk() (*string, bool) {
	if o == nil || isNil(o.VerifyStatus) {
    return nil, false
	}
	return o.VerifyStatus, true
}

// HasVerifyStatus returns a boolean if a field has been set.
func (o *InlineResponse200292) HasVerifyStatus() bool {
	if o != nil && !isNil(o.VerifyStatus) {
		return true
	}

	return false
}

// SetVerifyStatus gets a reference to the given string and assigns it to the VerifyStatus field.
func (o *InlineResponse200292) SetVerifyStatus(v string) {
	o.VerifyStatus = &v
}

// GetUpgrade returns the Upgrade field value if set, zero value otherwise.
func (o *InlineResponse200292) GetUpgrade() OrganizationsOrganizationIdFirmwareUpgradesByDeviceUpgrade {
	if o == nil || isNil(o.Upgrade) {
		var ret OrganizationsOrganizationIdFirmwareUpgradesByDeviceUpgrade
		return ret
	}
	return *o.Upgrade
}

// GetUpgradeOk returns a tuple with the Upgrade field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200292) GetUpgradeOk() (*OrganizationsOrganizationIdFirmwareUpgradesByDeviceUpgrade, bool) {
	if o == nil || isNil(o.Upgrade) {
    return nil, false
	}
	return o.Upgrade, true
}

// HasUpgrade returns a boolean if a field has been set.
func (o *InlineResponse200292) HasUpgrade() bool {
	if o != nil && !isNil(o.Upgrade) {
		return true
	}

	return false
}

// SetUpgrade gets a reference to the given OrganizationsOrganizationIdFirmwareUpgradesByDeviceUpgrade and assigns it to the Upgrade field.
func (o *InlineResponse200292) SetUpgrade(v OrganizationsOrganizationIdFirmwareUpgradesByDeviceUpgrade) {
	o.Upgrade = &v
}

func (o InlineResponse200292) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Serial) {
		toSerialize["serial"] = o.Serial
	}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.DeviceStatus) {
		toSerialize["deviceStatus"] = o.DeviceStatus
	}
	if !isNil(o.CheckinFinishedAt) {
		toSerialize["checkinFinishedAt"] = o.CheckinFinishedAt
	}
	if !isNil(o.CheckinStartedAt) {
		toSerialize["checkinStartedAt"] = o.CheckinStartedAt
	}
	if !isNil(o.DetailedStatus) {
		toSerialize["detailedStatus"] = o.DetailedStatus
	}
	if !isNil(o.DownloadFinishedAt) {
		toSerialize["downloadFinishedAt"] = o.DownloadFinishedAt
	}
	if !isNil(o.DownloadStartedAt) {
		toSerialize["downloadStartedAt"] = o.DownloadStartedAt
	}
	if !isNil(o.DownloadStatus) {
		toSerialize["downloadStatus"] = o.DownloadStatus
	}
	if !isNil(o.InstallFinishedAt) {
		toSerialize["installFinishedAt"] = o.InstallFinishedAt
	}
	if !isNil(o.InstallStartedAt) {
		toSerialize["installStartedAt"] = o.InstallStartedAt
	}
	if !isNil(o.InstallStatus) {
		toSerialize["installStatus"] = o.InstallStatus
	}
	if !isNil(o.VerifyFinishedAt) {
		toSerialize["verifyFinishedAt"] = o.VerifyFinishedAt
	}
	if !isNil(o.VerifyStartedAt) {
		toSerialize["verifyStartedAt"] = o.VerifyStartedAt
	}
	if !isNil(o.VerifyStatus) {
		toSerialize["verifyStatus"] = o.VerifyStatus
	}
	if !isNil(o.Upgrade) {
		toSerialize["upgrade"] = o.Upgrade
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200292 struct {
	value *InlineResponse200292
	isSet bool
}

func (v NullableInlineResponse200292) Get() *InlineResponse200292 {
	return v.value
}

func (v *NullableInlineResponse200292) Set(val *InlineResponse200292) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200292) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200292) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200292(val *InlineResponse200292) *NullableInlineResponse200292 {
	return &NullableInlineResponse200292{value: val, isSet: true}
}

func (v NullableInlineResponse200292) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200292) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


