/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 07 December, 2022 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.28.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse20031LocalStatusPage A hash of Local Status page(s)' authentication options applied to the Network.
type InlineResponse20031LocalStatusPage struct {
	Authentication *InlineResponse20031LocalStatusPageAuthentication `json:"authentication,omitempty"`
}

// NewInlineResponse20031LocalStatusPage instantiates a new InlineResponse20031LocalStatusPage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20031LocalStatusPage() *InlineResponse20031LocalStatusPage {
	this := InlineResponse20031LocalStatusPage{}
	return &this
}

// NewInlineResponse20031LocalStatusPageWithDefaults instantiates a new InlineResponse20031LocalStatusPage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20031LocalStatusPageWithDefaults() *InlineResponse20031LocalStatusPage {
	this := InlineResponse20031LocalStatusPage{}
	return &this
}

// GetAuthentication returns the Authentication field value if set, zero value otherwise.
func (o *InlineResponse20031LocalStatusPage) GetAuthentication() InlineResponse20031LocalStatusPageAuthentication {
	if o == nil || isNil(o.Authentication) {
		var ret InlineResponse20031LocalStatusPageAuthentication
		return ret
	}
	return *o.Authentication
}

// GetAuthenticationOk returns a tuple with the Authentication field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20031LocalStatusPage) GetAuthenticationOk() (*InlineResponse20031LocalStatusPageAuthentication, bool) {
	if o == nil || isNil(o.Authentication) {
    return nil, false
	}
	return o.Authentication, true
}

// HasAuthentication returns a boolean if a field has been set.
func (o *InlineResponse20031LocalStatusPage) HasAuthentication() bool {
	if o != nil && !isNil(o.Authentication) {
		return true
	}

	return false
}

// SetAuthentication gets a reference to the given InlineResponse20031LocalStatusPageAuthentication and assigns it to the Authentication field.
func (o *InlineResponse20031LocalStatusPage) SetAuthentication(v InlineResponse20031LocalStatusPageAuthentication) {
	o.Authentication = &v
}

func (o InlineResponse20031LocalStatusPage) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Authentication) {
		toSerialize["authentication"] = o.Authentication
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20031LocalStatusPage struct {
	value *InlineResponse20031LocalStatusPage
	isSet bool
}

func (v NullableInlineResponse20031LocalStatusPage) Get() *InlineResponse20031LocalStatusPage {
	return v.value
}

func (v *NullableInlineResponse20031LocalStatusPage) Set(val *InlineResponse20031LocalStatusPage) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20031LocalStatusPage) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20031LocalStatusPage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20031LocalStatusPage(val *InlineResponse20031LocalStatusPage) *NullableInlineResponse20031LocalStatusPage {
	return &NullableInlineResponse20031LocalStatusPage{value: val, isSet: true}
}

func (v NullableInlineResponse20031LocalStatusPage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20031LocalStatusPage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


