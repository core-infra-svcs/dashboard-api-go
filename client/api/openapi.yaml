openapi: 3.0.1
info:
  contact:
    name: Meraki Developer Community
    url: https://meraki.io/community
  description: |
    The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.

    > Date: 03 May, 2023
    >
    > [Recent Updates](https://meraki.io/whats-new/)

    ---

    [API Documentation](https://meraki.io/api)

    [Community Support](https://meraki.io/community)

    [Meraki Homepage](https://www.meraki.com)
  title: Meraki Dashboard API
  version: 1.33.0
servers:
- url: https://api.meraki.com/api/v1
security:
- meraki_api_key: []
tags:
- name: organizations
- name: networks
- name: devices
- name: insight
- name: wireless
- name: camera
- name: appliance
- name: switch
- name: cellularGateway
- name: sm
- name: sensor
- name: administered
- name: accessControlLists
- name: accessPolicies
- name: acls
- name: actionBatches
- name: adaptivePolicy
- name: addresses
- name: admins
- name: airMarshal
- name: alertTypes
- name: alerts
- name: alternateManagementInterface
- name: analytics
- name: apiRequests
- name: apnsCert
- name: appliances
- name: applicationCategories
- name: applicationUsage
- name: applications
- name: arpInspection
- name: artifacts
- name: authenticationToken
- name: availabilities
- name: bandwidthUsageHistory
- name: bgp
- name: billing
- name: bluetooth
- name: bluetoothClients
- name: bonjourForwarding
- name: brandingPolicies
- name: byClient
- name: byDevice
- name: byEnergyUsage
- name: byInterval
- name: byMetric
- name: bySwitch
- name: byUsage
- name: byUtilization
- name: bypassActivationLockAttempts
- name: categories
- name: cellular
- name: cellularFirewallRules
- name: cellularUsageHistory
- name: certs
- name: channelUtilization
- name: channelUtilizationHistory
- name: claim
- name: clientCountHistory
- name: clients
- name: cloudMonitoring
- name: configTemplates
- name: configurationChanges
- name: configure
- name: connectionStats
- name: connectivity
- name: connectivityEvents
- name: connectivityMonitoringDestinations
- name: contentFiltering
- name: coterm
- name: current
- name: customAnalytics
- name: customPerformanceClasses
- name: dataRateHistory
- name: delegated
- name: desktopLogs
- name: deviceCommandLogs
- name: deviceProfiles
- name: deviceTypeGroupPolicies
- name: dhcp
- name: dhcpServerPolicy
- name: dscpTaggingOptions
- name: dscpToCosMappings
- name: eapOverride
- name: earlyAccess
- name: ethernet
- name: eventTypes
- name: events
- name: exportEvents
- name: failedConnections
- name: features
- name: fields
- name: firewall
- name: firewalledServices
- name: firmware
- name: firmwareUpgrades
- name: floorPlans
- name: groupPolicies
- name: groups
- name: health
- name: healthByTime
- name: history
- name: hotspot20
- name: httpServers
- name: identities
- name: identityPsks
- name: idps
- name: imports
- name: inboundCellularFirewallRules
- name: inboundFirewallRules
- name: interfaces
- name: intrusion
- name: inventory
- name: l3FirewallRules
- name: l7FirewallRules
- name: lan
- name: latencyHistory
- name: latencyStats
- name: latest
- name: licenses
- name: licensing
- name: linkAggregations
- name: linkLayer
- name: live
- name: liveTools
- name: lldpCdp
- name: loginSecurity
- name: logs
- name: lossAndLatencyHistory
- name: malware
- name: managementInterface
- name: manufacturers
- name: me
- name: merakiAuthUsers
- name: meshStatuses
- name: models
- name: monitor
- name: monitoredMediaServers
- name: mqttBrokers
- name: mtu
- name: multicast
- name: netflow
- name: networkAdapters
- name: networkHealth
- name: objectDetectionModels
- name: onboarding
- name: oneToManyNatRules
- name: oneToOneNatRules
- name: openapiSpec
- name: optIns
- name: order
- name: ospf
- name: overview
- name: packets
- name: payloadTemplates
- name: performance
- name: performanceHistory
- name: pii
- name: piiKeys
- name: ping
- name: pingDevice
- name: policies
- name: policy
- name: policyObjects
- name: portForwardingRules
- name: portSchedules
- name: ports
- name: powerModules
- name: prefixes
- name: prepare
- name: priorities
- name: profiles
- name: provisioning
- name: qosRules
- name: qualityAndRetention
- name: qualityRetentionProfiles
- name: radio
- name: readings
- name: recent
- name: relationships
- name: rendezvousPoints
- name: requests
- name: responseCodes
- name: restrictions
- name: rfProfiles
- name: rollbacks
- name: routing
- name: rules
- name: saml
- name: samlRoles
- name: schedules
- name: search
- name: security
- name: securityCenters
- name: seen
- name: sense
- name: servers
- name: settings
- name: signalQualityHistory
- name: sims
- name: singleLan
- name: siteToSiteVpn
- name: smDevicesForKey
- name: smOwnersForKey
- name: snmp
- name: softwares
- name: splash
- name: splashAuthorizationStatus
- name: splashLoginAttempts
- name: ssids
- name: stacks
- name: staged
- name: stages
- name: staticRoutes
- name: statics
- name: stats
- name: status
- name: statuses
- name: stormControl
- name: stp
- name: subnetPool
- name: subnets
- name: summary
- name: switches
- name: syslogServers
- name: targetGroups
- name: thirdPartyVPNPeers
- name: top
- name: topology
- name: traffic
- name: trafficAnalysis
- name: trafficHistory
- name: trafficShaping
- name: trustedAccessConfigs
- name: trustedServers
- name: upgrades
- name: uplink
- name: uplinkBandwidth
- name: uplinkSelection
- name: uplinks
- name: uplinksLossAndLatency
- name: usageHistories
- name: usageHistory
- name: userAccessDevices
- name: users
- name: v4
- name: video
- name: videoLink
- name: vlanAssignments
- name: vlans
- name: vmx
- name: vpn
- name: vpnFirewallRules
- name: vppAccounts
- name: warmSpare
- name: warnings
- name: webhookTests
- name: webhooks
- name: wirelessProfiles
- name: wlanLists
- name: zones
paths:
  /administered/identities/me:
    get:
      description: Returns the identity of the current user.
      operationId: getAdministeredIdentitiesMe
      responses:
        "200":
          content:
            application/json:
              example:
                name: Miles Meraki
                email: miles@meraki.com
                lastUsedDashboardAt: 2018-02-11T00:00:00.090210Z
                authentication:
                  mode: email
                  api:
                    key:
                      created: true
                  twoFactor:
                    enabled: false
                  saml:
                    enabled: false
              schema:
                $ref: '#/components/schemas/inline_response_200'
          description: Successful operation
      summary: Returns the identity of the current user.
      tags:
      - administered
      - monitor
      - identities
      - me
  /devices/{serial}:
    get:
      description: Return a single device
      operationId: getDevice
      parameters:
      - description: Serial
        in: path
        name: serial
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                name: My AP
                lat: 37.4180951010362
                lng: -122.098531723022
                serial: Q234-ABCD-5678
                mac: 00:11:22:33:44:55
                model: MR34
                address: 1600 Pennsylvania Ave
                notes: My AP's note
                lanIp: 1.2.3.4
                tags:
                - recently-added
                networkId: N_24329156
                beaconIdParams:
                  uuid: 00000000-0000-0000-0000-000000000000
                  major: 5
                  minor: 3
                firmware: wireless-25-14
                floorPlanId: g_1234567
              schema:
                type: object
          description: Successful operation
      summary: Return a single device
      tags:
      - devices
      - configure
    put:
      description: Update the attributes of a device
      operationId: updateDevice
      parameters:
      - description: Serial
        in: path
        name: serial
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object'
        content:
          application/json:
            schema:
              example:
                name: My AP
                lat: 37.4180951010362
                lng: -122.098531723022
                serial: Q234-ABCD-5678
                mac: 00:11:22:33:44:55
                tags:
                - recently-added
              properties:
                name:
                  description: The name of a device
                  type: string
                tags:
                  description: The list of tags of a device
                  items:
                    type: string
                  type: array
                lat:
                  description: The latitude of a device
                  format: float
                  type: number
                lng:
                  description: The longitude of a device
                  format: float
                  type: number
                address:
                  description: The address of a device
                  type: string
                notes:
                  description: The notes for the device. String. Limited to 255 characters.
                  type: string
                moveMapMarker:
                  description: Whether or not to set the latitude and longitude of
                    a device based on the new address. Only applies when lat and lng
                    are not specified.
                  type: boolean
                switchProfileId:
                  description: The ID of a switch profile to bind to the device (for
                    available switch profiles, see the 'Switch Profiles' endpoint).
                    Use null to unbind the switch device from the current profile.
                    For a device to be bindable to a switch profile, it must (1) be
                    a switch, and (2) belong to a network that is bound to a configuration
                    template.
                  type: string
                floorPlanId:
                  description: The floor plan to associate to this device. null disassociates
                    the device from the floorplan.
                  type: string
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                name: My AP
                lat: 37.4180951010362
                lng: -122.098531723022
                serial: Q234-ABCD-5678
                mac: 00:11:22:33:44:55
                model: MR34
                address: 1600 Pennsylvania Ave
                notes: My AP's note
                lanIp: 1.2.3.4
                tags:
                - recently-added
                networkId: N_24329156
                beaconIdParams:
                  uuid: 00000000-0000-0000-0000-000000000000
                  major: 5
                  minor: 3
                firmware: wireless-25-14
                floorPlanId: g_1234567
              schema:
                type: object
          description: Successful operation
      summary: Update the attributes of a device
      tags:
      - devices
      - configure
      x-codegen-request-body-name: updateDevice
  /devices/{serial}/appliance/dhcp/subnets:
    get:
      description: Return the DHCP subnet information for an appliance
      operationId: getDeviceApplianceDhcpSubnets
      parameters:
      - description: Serial
        in: path
        name: serial
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - subnet: 192.168.1.0/24
                vlanId: 100
                usedCount: 2
                freeCount: 251
              schema:
                items:
                  properties: {}
                  type: object
                type: array
          description: Successful operation
      summary: Return the DHCP subnet information for an appliance
      tags:
      - appliance
      - monitor
      - dhcp
      - subnets
  /devices/{serial}/appliance/performance:
    get:
      description: Return the performance score for a single MX. Only primary MX devices
        supported. If no data is available, a 204 error code is returned.
      operationId: getDeviceAppliancePerformance
      parameters:
      - description: Serial
        in: path
        name: serial
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                perfScore: 10
              schema:
                type: object
          description: Successful operation
      summary: Return the performance score for a single MX
      tags:
      - appliance
      - monitor
      - performance
  /devices/{serial}/appliance/prefixes/delegated:
    get:
      description: Return current delegated IPv6 prefixes on an appliance.
      operationId: getDeviceAppliancePrefixesDelegated
      parameters:
      - description: Serial
        in: path
        name: serial
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - origin:
                  interface: wan1
                prefix: 2001:db8:3c4d:15::/64
                counts:
                  assigned: 2
                  available: 253
                method: auto
                description: My ISP provider
                isPreferred: true
                expiresAt: 2018-05-12T00:00:00Z
              schema:
                items:
                  properties: {}
                  type: object
                type: array
          description: Successful operation
      summary: Return current delegated IPv6 prefixes on an appliance.
      tags:
      - appliance
      - monitor
      - prefixes
      - delegated
  /devices/{serial}/appliance/prefixes/delegated/vlanAssignments:
    get:
      description: Return prefixes assigned to all IPv6 enabled VLANs on an appliance.
      operationId: getDeviceAppliancePrefixesDelegatedVlanAssignments
      parameters:
      - description: Serial
        in: path
        name: serial
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - vlan:
                  id: 100
                  name: My VLAN
                origin:
                  interface: wan1
                  prefix: 2001:db8:3c4d:15::/64
                status: Active
                ipv6:
                  prefix: 2001:db8:3c4d:15::/64
                  address: 2001:db8:3c4d:15::1
                  linkLocal:
                    address: 2001:db8:3c4d:15::1
                  solicitedNodeMulticast:
                    address: 2001:db8:3c4d:15::1
              schema:
                items:
                  properties: {}
                  type: object
                type: array
          description: Successful operation
      summary: Return prefixes assigned to all IPv6 enabled VLANs on an appliance.
      tags:
      - appliance
      - monitor
      - prefixes
      - delegated
      - vlanAssignments
  /devices/{serial}/appliance/uplinks/settings:
    get:
      description: Return the uplink settings for an MX appliance
      operationId: getDeviceApplianceUplinksSettings
      parameters:
      - description: Serial
        in: path
        name: serial
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                interfaces:
                  wan1:
                    enabled: true
                    vlanTagging:
                      enabled: true
                      vlanId: 1
                    svis:
                      ipv4:
                        assignmentMode: static
                        address: 9.10.11.10/16
                        gateway: 13.14.15.16
                        nameservers:
                          addresses:
                          - 1.2.3.4
                      ipv6:
                        assignmentMode: static
                        address: 1:2:3::4
                        gateway: 1:2:3::5
                        nameservers:
                          addresses:
                          - 1001:4860:4860::8888
                          - 1001:4860:4860::8844
                    pppoe:
                      enabled: true
                      authentication:
                        enabled: true
                        username: username
                  wan2:
                    enabled: true
                    vlanTagging:
                      enabled: true
                      vlanId: 1
                    svis:
                      ipv4:
                        assignmentMode: static
                        address: 9.10.11.10/16
                        gateway: 13.14.15.16
                        nameservers:
                          addresses:
                          - 1.2.3.4
                      ipv6:
                        assignmentMode: static
                        address: 1:2:3::4
                        gateway: 1:2:3::5
                        nameservers:
                          addresses:
                          - 1001:4860:4860::8888
                          - 1001:4860:4860::8844
                    pppoe:
                      enabled: true
                      authentication:
                        enabled: true
                        username: username
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
          description: Successful operation
      summary: Return the uplink settings for an MX appliance
      tags:
      - appliance
      - configure
      - uplinks
      - settings
    put:
      description: Update the uplink settings for an MX appliance
      operationId: updateDeviceApplianceUplinksSettings
      parameters:
      - description: Serial
        in: path
        name: serial
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_1'
        content:
          application/json:
            schema:
              example:
                interfaces:
                  wan1:
                    enabled: true
                    vlanTagging:
                      enabled: true
                      vlanId: 1
                    svis:
                      ipv4:
                        assignmentMode: static
                        address: 9.10.11.10/16
                        gateway: 13.14.15.16
                        nameservers:
                          addresses:
                          - 1.2.3.4
                      ipv6:
                        assignmentMode: static
                        address: 1:2:3::4
                        gateway: 1:2:3::5
                        nameservers:
                          addresses:
                          - 1001:4860:4860::8888
                          - 1001:4860:4860::8844
                    pppoe:
                      enabled: true
                      authentication:
                        enabled: true
                        username: username
                        password: password
                  wan2:
                    enabled: true
                    vlanTagging:
                      enabled: true
                      vlanId: 1
                    svis:
                      ipv4:
                        assignmentMode: static
                        address: 9.10.11.10/16
                        gateway: 13.14.15.16
                        nameservers:
                          addresses:
                          - 1.2.3.4
                      ipv6:
                        assignmentMode: static
                        address: 1:2:3::4
                        gateway: 1:2:3::5
                        nameservers:
                          addresses:
                          - 1001:4860:4860::8888
                          - 1001:4860:4860::8844
                    pppoe:
                      enabled: true
                      authentication:
                        enabled: true
                        username: username
                        password: password
              properties:
                interfaces:
                  $ref: '#/components/schemas/_devices__serial__appliance_uplinks_settings_interfaces'
              required:
              - interfaces
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                interfaces:
                  wan1:
                    enabled: true
                    vlanTagging:
                      enabled: true
                      vlanId: 1
                    svis:
                      ipv4:
                        assignmentMode: static
                        address: 9.10.11.10/16
                        gateway: 13.14.15.16
                        nameservers:
                          addresses:
                          - 1.2.3.4
                      ipv6:
                        assignmentMode: static
                        address: 1:2:3::4
                        gateway: 1:2:3::5
                        nameservers:
                          addresses:
                          - 1001:4860:4860::8888
                          - 1001:4860:4860::8844
                    pppoe:
                      enabled: true
                      authentication:
                        enabled: true
                        username: username
                  wan2:
                    enabled: true
                    vlanTagging:
                      enabled: true
                      vlanId: 1
                    svis:
                      ipv4:
                        assignmentMode: static
                        address: 9.10.11.10/16
                        gateway: 13.14.15.16
                        nameservers:
                          addresses:
                          - 1.2.3.4
                      ipv6:
                        assignmentMode: static
                        address: 1:2:3::4
                        gateway: 1:2:3::5
                        nameservers:
                          addresses:
                          - 1001:4860:4860::8888
                          - 1001:4860:4860::8844
                    pppoe:
                      enabled: true
                      authentication:
                        enabled: true
                        username: username
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
          description: Successful operation
      summary: Update the uplink settings for an MX appliance
      tags:
      - appliance
      - configure
      - uplinks
      - settings
      x-codegen-request-body-name: updateDeviceApplianceUplinksSettings
  /devices/{serial}/appliance/vmx/authenticationToken:
    post:
      description: Generate a new vMX authentication token
      operationId: createDeviceApplianceVmxAuthenticationToken
      parameters:
      - description: Serial
        in: path
        name: serial
        required: true
        schema:
          type: string
      responses:
        "201":
          content:
            application/json:
              example:
                token: ffc0b7b578b61be5bd1d172132c78044/9af03bd84d474
                expiresAt: 2021-06-18T12:40:10Z
              schema:
                $ref: '#/components/schemas/inline_response_201'
          description: Successful operation
      summary: Generate a new vMX authentication token
      tags:
      - appliance
      - configure
      - vmx
      - authenticationToken
  /devices/{serial}/blinkLeds:
    post:
      description: Blink the LEDs on a device
      operationId: blinkDeviceLeds
      parameters:
      - description: Serial
        in: path
        name: serial
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_2'
        content:
          application/json:
            schema:
              example:
                duration: 20
                period: 160
                duty: 50
              properties:
                duration:
                  description: The duration in seconds. Must be between 5 and 120.
                    Default is 20 seconds
                  type: integer
                period:
                  description: The period in milliseconds. Must be between 100 and
                    1000. Default is 160 milliseconds
                  type: integer
                duty:
                  description: The duty cycle as the percent active. Must be between
                    10 and 90. Default is 50.
                  type: integer
              type: object
        required: false
      responses:
        "202":
          content:
            application/json:
              example:
                duration: 20
                period: 160
                duty: 50
              schema:
                type: object
          description: Successful operation
      summary: Blink the LEDs on a device
      tags:
      - devices
      - liveTools
      x-codegen-request-body-name: blinkDeviceLeds
  /devices/{serial}/camera/analytics/live:
    get:
      description: Returns live state from camera of analytics zones
      operationId: getDeviceCameraAnalyticsLive
      parameters:
      - description: Serial
        in: path
        name: serial
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                ts: 2018-08-15T18:32:38.123Z
                zones:
                  "0":
                    person: 0
              schema:
                type: object
          description: Successful operation
      summary: Returns live state from camera of analytics zones
      tags:
      - camera
      - monitor
      - analytics
      - live
  /devices/{serial}/camera/analytics/overview:
    get:
      description: Returns an overview of aggregate analytics data for a timespan
      operationId: getDeviceCameraAnalyticsOverview
      parameters:
      - description: Serial
        in: path
        name: serial
        required: true
        schema:
          type: string
      - description: The beginning of the timespan for the data. The maximum lookback
          period is 365 days from today.
        in: query
        name: t0
        schema:
          type: string
      - description: The end of the timespan for the data. t1 can be a maximum of
          7 days after t0.
        in: query
        name: t1
        schema:
          type: string
      - description: The timespan for which the information will be fetched. If specifying
          timespan, do not specify parameters t0 and t1. The value must be in seconds
          and be less than or equal to 7 days. The default is 1 hour.
        in: query
        name: timespan
        schema:
          format: float
          type: number
      - description: '[optional] The object type for which analytics will be retrieved.
          The default object type is person. The available types are [person, vehicle].'
        in: query
        name: objectType
        schema:
          enum:
          - person
          - vehicle
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - startTs: 2018-08-15T18:32:38.123Z
                endTs: 2018-08-15T18:33:38.123Z
                zoneId: 0
                entrances: 254
                averageCount: 5
              schema:
                items:
                  properties: {}
                  type: object
                type: array
          description: Successful operation
      summary: Returns an overview of aggregate analytics data for a timespan
      tags:
      - camera
      - monitor
      - analytics
      - overview
  /devices/{serial}/camera/analytics/recent:
    get:
      description: Returns most recent record for analytics zones
      operationId: getDeviceCameraAnalyticsRecent
      parameters:
      - description: Serial
        in: path
        name: serial
        required: true
        schema:
          type: string
      - description: '[optional] The object type for which analytics will be retrieved.
          The default object type is person. The available types are [person, vehicle].'
        in: query
        name: objectType
        schema:
          enum:
          - person
          - vehicle
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - startTs: 2018-08-15T18:32:38.123Z
                endTs: 2018-08-15T18:33:38.123Z
                zoneId: 0
                entrances: 10
                averageCount: 2.54
              schema:
                items:
                  properties: {}
                  type: object
                type: array
          description: Successful operation
      summary: Returns most recent record for analytics zones
      tags:
      - camera
      - monitor
      - analytics
      - recent
  /devices/{serial}/camera/analytics/zones:
    get:
      description: Returns all configured analytic zones for this camera
      operationId: getDeviceCameraAnalyticsZones
      parameters:
      - description: Serial
        in: path
        name: serial
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - id: "0"
                type: occupancy
                label: Full Frame
                regionOfInterest:
                  x0: "0.00"
                  y0: "0.00"
                  x1: "1.00"
                  y1: "1.00"
              schema:
                items:
                  properties: {}
                  type: object
                type: array
          description: Successful operation
      summary: Returns all configured analytic zones for this camera
      tags:
      - camera
      - monitor
      - analytics
      - zones
  /devices/{serial}/camera/analytics/zones/{zoneId}/history:
    get:
      description: Return historical records for analytic zones
      operationId: getDeviceCameraAnalyticsZoneHistory
      parameters:
      - description: Serial
        in: path
        name: serial
        required: true
        schema:
          type: string
      - description: Zone ID
        in: path
        name: zoneId
        required: true
        schema:
          type: string
      - description: The beginning of the timespan for the data. The maximum lookback
          period is 365 days from today.
        in: query
        name: t0
        schema:
          type: string
      - description: The end of the timespan for the data. t1 can be a maximum of
          14 hours after t0.
        in: query
        name: t1
        schema:
          type: string
      - description: The timespan for which the information will be fetched. If specifying
          timespan, do not specify parameters t0 and t1. The value must be in seconds
          and be less than or equal to 14 hours. The default is 1 hour.
        in: query
        name: timespan
        schema:
          format: float
          type: number
      - description: 'The time resolution in seconds for returned data. The valid
          resolutions are: 60. The default is 60.'
        in: query
        name: resolution
        schema:
          type: integer
      - description: '[optional] The object type for which analytics will be retrieved.
          The default object type is person. The available types are [person, vehicle].'
        in: query
        name: objectType
        schema:
          enum:
          - person
          - vehicle
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - startTs: 2018-08-15T18:32:38.123Z
                endTs: 2018-08-15T18:33:38.123Z
                entrances: 5
                averageCount: 1.5
              schema:
                items:
                  properties: {}
                  type: object
                type: array
          description: Successful operation
      summary: Return historical records for analytic zones
      tags:
      - camera
      - monitor
      - analytics
      - zones
      - history
  /devices/{serial}/camera/customAnalytics:
    get:
      description: Return custom analytics settings for a camera
      operationId: getDeviceCameraCustomAnalytics
      parameters:
      - description: Serial
        in: path
        name: serial
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                enabled: true
                artifactId: "1"
                parameters:
                - name: detection_threshold
                  value: 0.5
              schema:
                type: object
          description: Successful operation
      summary: Return custom analytics settings for a camera
      tags:
      - camera
      - configure
      - customAnalytics
    put:
      description: Update custom analytics settings for a camera
      operationId: updateDeviceCameraCustomAnalytics
      parameters:
      - description: Serial
        in: path
        name: serial
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_3'
        content:
          application/json:
            schema:
              example:
                enabled: true
                artifactId: "1"
                parameters:
                - name: detection_threshold
                  value: "0.5"
              properties:
                enabled:
                  description: Enable custom analytics
                  type: boolean
                artifactId:
                  description: The ID of the custom analytics artifact
                  type: string
                parameters:
                  description: Parameters for the custom analytics workload
                  items:
                    $ref: '#/components/schemas/_devices__serial__camera_customAnalytics_parameters'
                  type: array
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                enabled: true
                artifactId: "1"
                parameters:
                - name: detection_threshold
                  value: 0.5
              schema:
                type: object
          description: Successful operation
      summary: Update custom analytics settings for a camera
      tags:
      - camera
      - configure
      - customAnalytics
      x-codegen-request-body-name: updateDeviceCameraCustomAnalytics
  /devices/{serial}/camera/generateSnapshot:
    post:
      description: Generate a snapshot of what the camera sees at the specified time
        and return a link to that image.
      operationId: generateDeviceCameraSnapshot
      parameters:
      - description: Serial
        in: path
        name: serial
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_4'
        content:
          application/json:
            schema:
              example:
                timestamp: 2021-04-30T15:18:08Z
                fullframe: false
              properties:
                timestamp:
                  description: '[optional] The snapshot will be taken from this time
                    on the camera. The timestamp is expected to be in ISO 8601 format.
                    If no timestamp is specified, we will assume current time.'
                  format: date-time
                  type: string
                fullframe:
                  description: '[optional] If set to "true" the snapshot will be taken
                    at full sensor resolution. This will error if used with timestamp.'
                  type: boolean
              type: object
        required: false
      responses:
        "202":
          content:
            application/json:
              example:
                url: https://spn4.meraki.com/stream/jpeg/snapshot/b2d123asdf423qd22d2
                expiry: Access to the image will expire at 2018-12-11T03:12:39Z.
              schema:
                type: object
          description: Successful operation
      summary: Generate a snapshot of what the camera sees at the specified time and
        return a link to that image.
      tags:
      - camera
      - monitor
      x-codegen-request-body-name: generateDeviceCameraSnapshot
  /devices/{serial}/camera/qualityAndRetention:
    get:
      description: Returns quality and retention settings for the given camera
      operationId: getDeviceCameraQualityAndRetention
      parameters:
      - description: Serial
        in: path
        name: serial
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                motionBasedRetentionEnabled: false
                audioRecordingEnabled: false
                restrictedBandwidthModeEnabled: false
                profileId: "1234"
                quality: Standard
                motionDetectorVersion: 2
                resolution: 1280x720
              schema:
                type: object
          description: Successful operation
      summary: Returns quality and retention settings for the given camera
      tags:
      - camera
      - configure
      - qualityAndRetention
    put:
      description: Update quality and retention settings for the given camera
      operationId: updateDeviceCameraQualityAndRetention
      parameters:
      - description: Serial
        in: path
        name: serial
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_5'
        content:
          application/json:
            schema:
              example:
                motionBasedRetentionEnabled: false
                audioRecordingEnabled: false
                restrictedBandwidthModeEnabled: false
                profileId: "1234"
                quality: Standard
                motionDetectorVersion: 2
                resolution: 1280x720
              properties:
                profileId:
                  description: The ID of a quality and retention profile to assign
                    to the camera. The profile's settings will override all of the
                    per-camera quality and retention settings. If the value of this
                    parameter is null, any existing profile will be unassigned from
                    the camera.
                  type: string
                motionBasedRetentionEnabled:
                  description: Boolean indicating if motion-based retention is enabled(true)
                    or disabled(false) on the camera.
                  type: boolean
                audioRecordingEnabled:
                  description: Boolean indicating if audio recording is enabled(true)
                    or disabled(false) on the camera
                  type: boolean
                restrictedBandwidthModeEnabled:
                  description: Boolean indicating if restricted bandwidth is enabled(true)
                    or disabled(false) on the camera. This setting does not apply
                    to MV2 cameras.
                  type: boolean
                quality:
                  description: Quality of the camera. Can be one of 'Standard', 'High'
                    or 'Enhanced'. Not all qualities are supported by every camera
                    model.
                  enum:
                  - Enhanced
                  - High
                  - Standard
                  type: string
                resolution:
                  description: Resolution of the camera. Can be one of '1280x720',
                    '1920x1080', '1080x1080', '2058x2058', '2112x2112', '2880x2880',
                    '2688x1512' or '3840x2160'.Not all resolutions are supported by
                    every camera model.
                  enum:
                  - 1080x1080
                  - 1280x720
                  - 1920x1080
                  - 2058x2058
                  - 2112x2112
                  - 2688x1512
                  - 2880x2880
                  - 3840x2160
                  type: string
                motionDetectorVersion:
                  description: The version of the motion detector that will be used
                    by the camera. Only applies to Gen 2 cameras. Defaults to v2.
                  type: integer
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                motionBasedRetentionEnabled: false
                audioRecordingEnabled: false
                restrictedBandwidthModeEnabled: false
                profileId: "1234"
                quality: Standard
                motionDetectorVersion: 2
                resolution: 1280x720
              schema:
                type: object
          description: Successful operation
      summary: Update quality and retention settings for the given camera
      tags:
      - camera
      - configure
      - qualityAndRetention
      x-codegen-request-body-name: updateDeviceCameraQualityAndRetention
  /devices/{serial}/camera/sense:
    get:
      description: Returns sense settings for a given camera
      operationId: getDeviceCameraSense
      parameters:
      - description: Serial
        in: path
        name: serial
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                senseEnabled: true
                audioDetection:
                  enabled: false
                mqttBrokerId: "1234"
                mqttTopics:
                - /merakimv/Q2AA-AAAA-1111/raw_detections
                - /merakimv/Q2AA-AAAA-1111/light
              schema:
                type: object
          description: Successful operation
      summary: Returns sense settings for a given camera
      tags:
      - camera
      - configure
      - sense
    put:
      description: Update sense settings for the given camera
      operationId: updateDeviceCameraSense
      parameters:
      - description: Serial
        in: path
        name: serial
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_6'
        content:
          application/json:
            schema:
              example:
                senseEnabled: true
                audioDetection:
                  enabled: false
                mqttBrokerId: "1234"
              properties:
                senseEnabled:
                  description: Boolean indicating if sense(license) is enabled(true)
                    or disabled(false) on the camera
                  type: boolean
                mqttBrokerId:
                  description: The ID of the MQTT broker to be enabled on the camera.
                    A value of null will disable MQTT on the camera
                  type: string
                audioDetection:
                  $ref: '#/components/schemas/_devices__serial__camera_sense_audioDetection'
                detectionModelId:
                  description: The ID of the object detection model
                  type: string
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                senseEnabled: true
                audioDetection:
                  enabled: false
                mqttBrokerId: "1234"
                mqttTopics:
                - /merakimv/Q2AA-AAAA-1111/raw_detections
                - /merakimv/Q2AA-AAAA-1111/light
              schema:
                type: object
          description: Successful operation
      summary: Update sense settings for the given camera
      tags:
      - camera
      - configure
      - sense
      x-codegen-request-body-name: updateDeviceCameraSense
  /devices/{serial}/camera/sense/objectDetectionModels:
    get:
      description: Returns the MV Sense object detection model list for the given
        camera
      operationId: getDeviceCameraSenseObjectDetectionModels
      parameters:
      - description: Serial
        in: path
        name: serial
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - id: "0"
                description: Model A
              schema:
                items:
                  properties: {}
                  type: object
                type: array
          description: Successful operation
      summary: Returns the MV Sense object detection model list for the given camera
      tags:
      - camera
      - configure
      - sense
      - objectDetectionModels
  /devices/{serial}/camera/video/settings:
    get:
      description: Returns video settings for the given camera
      operationId: getDeviceCameraVideoSettings
      parameters:
      - description: Serial
        in: path
        name: serial
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                externalRtspEnabled: true
                rtspUrl: rtsp://10.0.0.1:9000/live
              schema:
                type: object
          description: Successful operation
      summary: Returns video settings for the given camera
      tags:
      - camera
      - configure
      - video
      - settings
    put:
      description: Update video settings for the given camera
      operationId: updateDeviceCameraVideoSettings
      parameters:
      - description: Serial
        in: path
        name: serial
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_7'
        content:
          application/json:
            schema:
              example:
                externalRtspEnabled: true
              properties:
                externalRtspEnabled:
                  description: Boolean indicating if external rtsp stream is exposed
                  type: boolean
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                externalRtspEnabled: true
                rtspUrl: rtsp://10.0.0.1:9000/live
              schema:
                type: object
          description: Successful operation
      summary: Update video settings for the given camera
      tags:
      - camera
      - configure
      - video
      - settings
      x-codegen-request-body-name: updateDeviceCameraVideoSettings
  /devices/{serial}/camera/videoLink:
    get:
      description: Returns video link to the specified camera. If a timestamp is supplied,
        it links to that timestamp.
      operationId: getDeviceCameraVideoLink
      parameters:
      - description: Serial
        in: path
        name: serial
        required: true
        schema:
          type: string
      - description: '[optional] The video link will start at this time. The timestamp
          should be a string in ISO8601 format. If no timestamp is specified, we will
          assume current time.'
        in: query
        name: timestamp
        schema:
          format: date-time
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                url: https://nxx.meraki.com/office-cameras/n/bs0a1k/manage/nodes/new_list/29048243992402?timestamp=1535732570077
              schema:
                type: object
          description: Successful operation
      summary: Returns video link to the specified camera
      tags:
      - camera
      - configure
      - videoLink
  /devices/{serial}/camera/wirelessProfiles:
    get:
      description: Returns wireless profile assigned to the given camera
      operationId: getDeviceCameraWirelessProfiles
      parameters:
      - description: Serial
        in: path
        name: serial
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                ids:
                  primary: "3"
                  secondary: "2"
                  backup: "1"
              schema:
                type: object
          description: Successful operation
      summary: Returns wireless profile assigned to the given camera
      tags:
      - camera
      - configure
      - wirelessProfiles
    put:
      description: Assign wireless profiles to the given camera. Incremental updates
        are not supported, all profile assignment need to be supplied at once.
      operationId: updateDeviceCameraWirelessProfiles
      parameters:
      - description: Serial
        in: path
        name: serial
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_8'
        content:
          application/json:
            schema:
              example:
                ids:
                  primary: "3"
                  secondary: "2"
                  backup: "1"
              properties:
                ids:
                  $ref: '#/components/schemas/_devices__serial__camera_wirelessProfiles_ids'
              required:
              - ids
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                ids:
                  primary: "3"
                  secondary: "2"
                  backup: "1"
              schema:
                type: object
          description: Successful operation
      summary: Assign wireless profiles to the given camera
      tags:
      - camera
      - configure
      - wirelessProfiles
      x-codegen-request-body-name: updateDeviceCameraWirelessProfiles
  /devices/{serial}/cellular/sims:
    get:
      description: Return the SIM and APN configurations for a cellular device.
      operationId: getDeviceCellularSims
      parameters:
      - description: Serial
        in: path
        name: serial
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                sims:
                - slot: sim1
                  isPrimary: true
                  apns:
                  - name: internet
                    allowedIpTypes:
                    - ipv4
                    - ipv6
                    authentication:
                      type: pap
                      username: milesmeraki
              schema:
                type: object
          description: Successful operation
      summary: Return the SIM and APN configurations for a cellular device.
      tags:
      - devices
      - configure
      - cellular
      - sims
    put:
      description: Updates the SIM and APN configurations for a cellular device.
      operationId: updateDeviceCellularSims
      parameters:
      - description: Serial
        in: path
        name: serial
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_9'
        content:
          application/json:
            schema:
              example:
                slot: sim1
                isPrimary: true
                apns:
                - name: internet
                  allowedIpTypes:
                  - ipv4
                  - ipv6
                  authentication:
                    type: pap
                    username: milesmeraki
                    password: secret
              properties:
                sims:
                  description: List of SIMs. If a SIM was previously configured and
                    not specified in this request, it will remain unchanged.
                  items:
                    $ref: '#/components/schemas/_devices__serial__cellular_sims_sims'
                  type: array
                simFailover:
                  $ref: '#/components/schemas/_devices__serial__cellular_sims_simFailover'
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                sims:
                - slot: sim1
                  isPrimary: true
                  apns:
                  - name: internet
                    allowedIpTypes:
                    - ipv4
                    - ipv6
                    authentication:
                      type: pap
                      username: milesmeraki
              schema:
                type: object
          description: Successful operation
      summary: Updates the SIM and APN configurations for a cellular device.
      tags:
      - devices
      - configure
      - cellular
      - sims
      x-codegen-request-body-name: updateDeviceCellularSims
  /devices/{serial}/cellularGateway/lan:
    get:
      description: Show the LAN Settings of a MG
      operationId: getDeviceCellularGatewayLan
      parameters:
      - description: Serial
        in: path
        name: serial
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                deviceName: name of the MG
                deviceLanIp: 192.168.0.33
                deviceSubnet: 192.168.0.32/27
                fixedIpAssignments:
                - mac: 0b:00:00:00:00:ac
                  name: server 1
                  ip: 192.168.0.10
                - mac: 0b:00:00:00:00:ab
                  name: server 2
                  ip: 192.168.0.20
                reservedIpRanges:
                - start: 192.168.1.0
                  end: 192.168.1.1
                  comment: A reserved IP range
              schema:
                type: object
          description: Successful operation
      summary: Show the LAN Settings of a MG
      tags:
      - cellularGateway
      - configure
      - lan
    put:
      description: Update the LAN Settings for a single MG.
      operationId: updateDeviceCellularGatewayLan
      parameters:
      - description: Serial
        in: path
        name: serial
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_10'
        content:
          application/json:
            schema:
              example:
                deviceName: name of the MG
                deviceLanIp: 192.168.0.33
                deviceSubnet: 192.168.0.32/27
                fixedIpAssignments:
                - mac: 0b:00:00:00:00:ac
                  name: server 1
                  ip: 192.168.0.10
                - mac: 0b:00:00:00:00:ab
                  name: server 2
                  ip: 192.168.0.20
                reservedIpRanges:
                - start: 192.168.1.0
                  end: 192.168.1.1
                  comment: A reserved IP range
              properties:
                reservedIpRanges:
                  description: list of all reserved IP ranges for a single MG
                  items:
                    $ref: '#/components/schemas/_devices__serial__cellularGateway_lan_reservedIpRanges'
                  type: array
                fixedIpAssignments:
                  description: list of all fixed IP assignments for a single MG
                  items:
                    $ref: '#/components/schemas/_devices__serial__cellularGateway_lan_fixedIpAssignments'
                  type: array
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                deviceName: name of the MG
                deviceLanIp: 192.168.0.33
                deviceSubnet: 192.168.0.32/27
                fixedIpAssignments:
                - mac: 0b:00:00:00:00:ac
                  name: server 1
                  ip: 192.168.0.10
                - mac: 0b:00:00:00:00:ab
                  name: server 2
                  ip: 192.168.0.20
                reservedIpRanges:
                - start: 192.168.1.0
                  end: 192.168.1.1
                  comment: A reserved IP range
              schema:
                type: object
          description: Successful operation
      summary: Update the LAN Settings for a single MG.
      tags:
      - cellularGateway
      - configure
      - lan
      x-codegen-request-body-name: updateDeviceCellularGatewayLan
  /devices/{serial}/cellularGateway/portForwardingRules:
    get:
      description: Returns the port forwarding rules for a single MG.
      operationId: getDeviceCellularGatewayPortForwardingRules
      parameters:
      - description: Serial
        in: path
        name: serial
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                rules:
                - lanIp: 172.31.128.5
                  name: test
                  access: any
                  publicPort: 11-12
                  localPort: "4"
                  uplink: both
                  protocol: tcp
                - lanIp: 172.31.128.5
                  name: test 2
                  access: restricted
                  allowedIps:
                  - 10.10.10.10
                  - 10.10.10.11
                  publicPort: "99"
                  localPort: "5"
                  uplink: both
                  protocol: tcp
              schema:
                type: object
          description: Successful operation
      summary: Returns the port forwarding rules for a single MG.
      tags:
      - cellularGateway
      - configure
      - portForwardingRules
    put:
      description: Updates the port forwarding rules for a single MG.
      operationId: updateDeviceCellularGatewayPortForwardingRules
      parameters:
      - description: Serial
        in: path
        name: serial
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_11'
        content:
          application/json:
            schema:
              example:
                rules:
                - lanIp: 172.31.128.5
                  name: test
                  access: any
                  publicPort: 11-12
                  localPort: "4"
                  uplink: both
                  protocol: tcp
                - lanIp: 172.31.128.5
                  name: test 2
                  access: restricted
                  allowedIps:
                  - 10.10.10.10
                  - 10.10.10.11
                  publicPort: "99"
                  localPort: "5"
                  uplink: both
                  protocol: tcp
              properties:
                rules:
                  description: An array of port forwarding params
                  items:
                    $ref: '#/components/schemas/_devices__serial__cellularGateway_portForwardingRules_rules'
                  type: array
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                rules:
                - lanIp: 172.31.128.5
                  name: test
                  access: any
                  publicPort: 11-12
                  localPort: "4"
                  uplink: both
                  protocol: tcp
                - lanIp: 172.31.128.5
                  name: test 2
                  access: restricted
                  allowedIps:
                  - 10.10.10.10
                  - 10.10.10.11
                  publicPort: "99"
                  localPort: "5"
                  uplink: both
                  protocol: tcp
              schema:
                type: object
          description: Successful operation
      summary: Updates the port forwarding rules for a single MG.
      tags:
      - cellularGateway
      - configure
      - portForwardingRules
      x-codegen-request-body-name: updateDeviceCellularGatewayPortForwardingRules
  /devices/{serial}/clients:
    get:
      description: List the clients of a device, up to a maximum of a month ago. The
        usage of each client is returned in kilobytes. If the device is a switch,
        the switchport is returned; otherwise the switchport field is null.
      operationId: getDeviceClients
      parameters:
      - description: Serial
        in: path
        name: serial
        required: true
        schema:
          type: string
      - description: The beginning of the timespan for the data. The maximum lookback
          period is 31 days from today.
        in: query
        name: t0
        schema:
          type: string
      - description: The timespan for which the information will be fetched. If specifying
          timespan, do not specify parameter t0. The value must be in seconds and
          be less than or equal to 31 days. The default is 1 day.
        in: query
        name: timespan
        schema:
          format: float
          type: number
      responses:
        "200":
          content:
            application/json:
              example:
              - usage:
                  sent: 138.0
                  recv: 61.0
                id: k74272e
                description: Miles's phone
                mac: 22:33:44:55:66:77
                ip: 1.2.3.4
                user: milesmeraki
                vlan: "255"
                namedVlan: Named Vlan
                mdnsName: Miles's phone
                dhcpHostname: MilesPhone
              schema:
                items:
                  properties: {}
                  type: object
                type: array
          description: Successful operation
      summary: List the clients of a device, up to a maximum of a month ago
      tags:
      - devices
      - monitor
      - clients
  /devices/{serial}/liveTools/ping:
    post:
      description: Enqueue a job to ping a target host from the device
      operationId: createDeviceLiveToolsPing
      parameters:
      - description: Serial
        in: path
        name: serial
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_12'
        content:
          application/json:
            schema:
              example:
                target: 75.75.75.75
                count: 2
              properties:
                target:
                  description: FQDN, IPv4 or IPv6 address
                  type: string
                count:
                  description: Count parameter to pass to ping. [1..5], default 5
                  type: integer
              required:
              - target
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                pingId: "1284392014819"
                url: /devices/SERIAL/liveTools/ping/1284392014819
                request:
                  serial: Q234-ABCD-5678
                  target: 75.75.75.75
                  count: 2
                status: complete
              schema:
                $ref: '#/components/schemas/inline_response_201_1'
          description: Successful operation
      summary: Enqueue a job to ping a target host from the device
      tags:
      - devices
      - liveTools
      - ping
      x-codegen-request-body-name: createDeviceLiveToolsPing
  /devices/{serial}/liveTools/ping/{id}:
    get:
      description: Return a ping job. Latency unit in response is in milliseconds.
        Size is in bytes.
      operationId: getDeviceLiveToolsPing
      parameters:
      - description: Serial
        in: path
        name: serial
        required: true
        schema:
          type: string
      - description: Id
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                pingId: "1284392014819"
                url: /devices/SERIAL/liveTools/ping/1284392014819
                request:
                  serial: Q234-ABCD-5678
                  target: 75.75.75.75
                  count: 2
                status: complete
                results:
                  sent: 5
                  received: 5
                  loss:
                    percentage: 0.0
                  latencies:
                    minimum: 15.8
                    average: 15.8
                    maximum: 15.9
                  replies:
                  - sequenceId: 1
                    size: 84
                    latency: 15.7
              schema:
                $ref: '#/components/schemas/inline_response_200_2'
          description: Successful operation
      summary: Return a ping job
      tags:
      - devices
      - liveTools
      - ping
  /devices/{serial}/liveTools/pingDevice:
    post:
      description: Enqueue a job to check connectivity status to the device
      operationId: createDeviceLiveToolsPingDevice
      parameters:
      - description: Serial
        in: path
        name: serial
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_13'
        content:
          application/json:
            schema:
              example:
                count: 3
              properties:
                count:
                  description: Count parameter to pass to ping. [1..5], default 5
                  type: integer
              type: object
        required: false
      responses:
        "201":
          content:
            application/json:
              example:
                pingId: "1284392014819"
                url: /devices/SERIAL/liveTools/ping/1284392014819
                request:
                  serial: Q234-ABCD-5678
                  target: 75.75.75.75
                  count: 2
                status: complete
              schema:
                $ref: '#/components/schemas/inline_response_201_1'
          description: Successful operation
      summary: Enqueue a job to check connectivity status to the device
      tags:
      - devices
      - liveTools
      - pingDevice
      x-codegen-request-body-name: createDeviceLiveToolsPingDevice
  /devices/{serial}/liveTools/pingDevice/{id}:
    get:
      description: Return a ping device job. Latency unit in response is in milliseconds.
        Size is in bytes.
      operationId: getDeviceLiveToolsPingDevice
      parameters:
      - description: Serial
        in: path
        name: serial
        required: true
        schema:
          type: string
      - description: Id
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                pingId: "1284392014819"
                url: /devices/SERIAL/liveTools/ping/1284392014819
                request:
                  serial: Q234-ABCD-5678
                  target: 75.75.75.75
                  count: 2
                status: complete
                results:
                  sent: 5
                  received: 5
                  loss:
                    percentage: 0.0
                  latencies:
                    minimum: 15.8
                    average: 15.8
                    maximum: 15.9
                  replies:
                  - sequenceId: 1
                    size: 84
                    latency: 15.7
              schema:
                $ref: '#/components/schemas/inline_response_200_2'
          description: Successful operation
      summary: Return a ping device job
      tags:
      - devices
      - liveTools
      - pingDevice
  /devices/{serial}/lldpCdp:
    get:
      description: List LLDP and CDP information for a device
      operationId: getDeviceLldpCdp
      parameters:
      - description: Serial
        in: path
        name: serial
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                sourceMac: 00:11:22:33:44:55
                ports:
                  "8":
                    cdp:
                      deviceId: e0553d8cdf53
                      portId: Port 10
                      address: 00:11:22:33:44:55
                      sourcePort: "8"
                  "12":
                    cdp:
                      deviceId: e0553d8cdf53
                      portId: Port 11
                      address: 00:11:22:33:44:55
                      sourcePort: "12"
                    lldp:
                      systemName: Meraki MS350-24X - Phineas
                      portId: "11"
                      managementAddress: 00:11:22:33:44:55
                      sourcePort: "12"
              schema:
                type: object
          description: Successful operation
      summary: List LLDP and CDP information for a device
      tags:
      - devices
      - monitor
      - lldpCdp
  /devices/{serial}/lossAndLatencyHistory:
    get:
      description: Get the uplink loss percentage and latency in milliseconds, and
        goodput in kilobits per second for a wired network device.
      operationId: getDeviceLossAndLatencyHistory
      parameters:
      - description: Serial
        in: path
        name: serial
        required: true
        schema:
          type: string
      - description: The beginning of the timespan for the data. The maximum lookback
          period is 60 days from today.
        in: query
        name: t0
        schema:
          type: string
      - description: The end of the timespan for the data. t1 can be a maximum of
          31 days after t0.
        in: query
        name: t1
        schema:
          type: string
      - description: The timespan for which the information will be fetched. If specifying
          timespan, do not specify parameters t0 and t1. The value must be in seconds
          and be less than or equal to 31 days. The default is 1 day.
        in: query
        name: timespan
        schema:
          format: float
          type: number
      - description: 'The time resolution in seconds for returned data. The valid
          resolutions are: 60, 600, 3600, 86400. The default is 60.'
        in: query
        name: resolution
        schema:
          type: integer
      - description: The WAN uplink used to obtain the requested stats. Valid uplinks
          are wan1, wan2, cellular. The default is wan1.
        in: query
        name: uplink
        schema:
          enum:
          - cellular
          - wan1
          - wan2
          type: string
      - description: The destination IP used to obtain the requested stats. This is
          required.
        in: query
        name: ip
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - startTime: 2018-10-09T22:18:27Z
                endTime: 2018-10-09T22:19:27Z
                lossPercent: 5.23
                latencyMs: 324.12
                goodput: 1493
                jitter: 11.2
              - startTime: 2018-10-09T22:19:27Z
                endTime: 2018-10-09T22:20:27Z
                lossPercent: 1.0
                latencyMs: 43.0
                goodput: 2567
                jitter: 3.4
              - startTime: 2018-10-09T22:20:27Z
                endTime: 2018-10-09T22:21:27Z
                lossPercent: 0.01
                latencyMs: 44.02
                goodput: 7899
                jitter: 1.0
              schema:
                items:
                  properties: {}
                  type: object
                type: array
          description: Successful operation
      summary: Get the uplink loss percentage and latency in milliseconds, and goodput
        in kilobits per second for a wired network device.
      tags:
      - devices
      - monitor
      - uplinks
      - lossAndLatencyHistory
  /devices/{serial}/managementInterface:
    get:
      description: Return the management interface settings for a device
      operationId: getDeviceManagementInterface
      parameters:
      - description: Serial
        in: path
        name: serial
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                ddnsHostnames:
                  activeDdnsHostname: mx1-sample.dynamic-m.com
                  ddnsHostnameWan1: mx1-sample-1.dynamic-m.com
                  ddnsHostnameWan2: mx1-sample-2.dynamic-m.com
                wan1:
                  wanEnabled: not configured
                  usingStaticIp: true
                  staticIp: 1.2.3.4
                  staticSubnetMask: 255.255.255.0
                  staticGatewayIp: 1.2.3.1
                  staticDns:
                  - 1.2.3.2
                  - 1.2.3.3
                  vlan: 7
                wan2:
                  wanEnabled: enabled
                  usingStaticIp: false
                  vlan: 2
              schema:
                type: object
          description: Successful operation
      summary: Return the management interface settings for a device
      tags:
      - devices
      - configure
      - managementInterface
    put:
      description: Update the management interface settings for a device
      operationId: updateDeviceManagementInterface
      parameters:
      - description: Serial
        in: path
        name: serial
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_14'
        content:
          application/json:
            schema:
              example:
                wan1:
                  wanEnabled: not configured
                  usingStaticIp: true
                  staticIp: 1.2.3.4
                  staticSubnetMask: 255.255.255.0
                  staticGatewayIp: 1.2.3.1
                  staticDns:
                  - 1.2.3.2
                  - 1.2.3.3
                  vlan: 7
                wan2:
                  wanEnabled: enabled
                  usingStaticIp: false
                  vlan: 2
              properties:
                wan1:
                  $ref: '#/components/schemas/_devices__serial__managementInterface_wan1'
                wan2:
                  $ref: '#/components/schemas/_devices__serial__managementInterface_wan2'
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                wan1:
                  wanEnabled: not configured
                  usingStaticIp: true
                  staticIp: 1.2.3.4
                  staticSubnetMask: 255.255.255.0
                  staticGatewayIp: 1.2.3.1
                  staticDns:
                  - 1.2.3.2
                  - 1.2.3.3
                  vlan: 7
                wan2:
                  wanEnabled: enabled
                  usingStaticIp: false
                  vlan: 2
              schema:
                type: object
          description: Successful operation
      summary: Update the management interface settings for a device
      tags:
      - devices
      - configure
      - managementInterface
      x-codegen-request-body-name: updateDeviceManagementInterface
  /devices/{serial}/reboot:
    post:
      description: Reboot a device
      operationId: rebootDevice
      parameters:
      - description: Serial
        in: path
        name: serial
        required: true
        schema:
          type: string
      responses:
        "202":
          content:
            application/json:
              example:
                success: true
              schema:
                type: object
          description: Successful operation
      summary: Reboot a device
      tags:
      - devices
      - liveTools
  /devices/{serial}/sensor/relationships:
    get:
      description: List the sensor roles for a given sensor or camera device.
      operationId: getDeviceSensorRelationships
      parameters:
      - description: Serial
        in: path
        name: serial
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - livestream:
                  relatedDevices:
                  - serial: Q234-ABCD-5678
                    productType: camera
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_3'
                type: array
          description: Successful operation
      summary: List the sensor roles for a given sensor or camera device.
      tags:
      - sensor
      - configure
      - relationships
    put:
      description: Assign one or more sensor roles to a given sensor or camera device.
      operationId: updateDeviceSensorRelationships
      parameters:
      - description: Serial
        in: path
        name: serial
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_15'
        content:
          application/json:
            schema:
              example: {}
              properties:
                livestream:
                  $ref: '#/components/schemas/_devices__serial__sensor_relationships_livestream_1'
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                livestream:
                  relatedDevices:
                  - serial: Q234-ABCD-5678
                    productType: camera
              schema:
                $ref: '#/components/schemas/inline_response_200_3'
          description: Successful operation
      summary: Assign one or more sensor roles to a given sensor or camera device.
      tags:
      - sensor
      - configure
      - relationships
      x-codegen-request-body-name: updateDeviceSensorRelationships
  /devices/{serial}/switch/ports:
    get:
      description: List the switch ports for a switch
      operationId: getDeviceSwitchPorts
      parameters:
      - description: Serial
        in: path
        name: serial
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - portId: "1"
                name: My switch port
                tags:
                - tag1
                - tag2
                enabled: true
                poeEnabled: true
                type: access
                vlan: 10
                voiceVlan: 20
                allowedVlans: 1,3,5-10
                isolationEnabled: false
                rstpEnabled: true
                stpGuard: disabled
                linkNegotiation: Auto negotiate
                linkNegotiationCapabilities:
                - Auto negotiate
                - 1 Gigabit full duplex (auto)
                portScheduleId: "1234"
                udld: Alert only
                accessPolicyType: Sticky MAC allow list
                accessPolicyNumber: 2
                macAllowList:
                - 34:56:fe:ce:8e:b0
                - 34:56:fe:ce:8e:b1
                stickyMacAllowList:
                - 34:56:fe:ce:8e:b0
                - 34:56:fe:ce:8e:b1
                stickyMacAllowListLimit: 5
                stormControlEnabled: true
                adaptivePolicyGroupId: "123"
                peerSgtCapable: false
                flexibleStackingEnabled: true
                daiTrusted: false
                profile:
                  enabled: false
                  id: "1284392014819"
                  iname: iname
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_4'
                type: array
          description: Successful operation
      summary: List the switch ports for a switch
      tags:
      - switch
      - configure
      - ports
  /devices/{serial}/switch/ports/cycle:
    post:
      description: Cycle a set of switch ports
      operationId: cycleDeviceSwitchPorts
      parameters:
      - description: Serial
        in: path
        name: serial
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_16'
        content:
          application/json:
            schema:
              example:
                ports:
                - "1"
                - 2-5
                - 1_MA-MOD-8X10G_1
                - 1_MA-MOD-8X10G_2-1_MA-MOD-8X10G_8
              properties:
                ports:
                  description: List of switch ports
                  items:
                    type: string
                  type: array
              required:
              - ports
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                ports:
                - "1"
                - 2-5
                - 1_MA-MOD-8X10G_1
                - 1_MA-MOD-8X10G_2-1_MA-MOD-8X10G_8
              schema:
                $ref: '#/components/schemas/inline_response_200_5'
          description: Successful operation
      summary: Cycle a set of switch ports
      tags:
      - switch
      - liveTools
      - ports
      x-codegen-request-body-name: cycleDeviceSwitchPorts
  /devices/{serial}/switch/ports/statuses:
    get:
      description: Return the status for all the ports of a switch
      operationId: getDeviceSwitchPortsStatuses
      parameters:
      - description: Serial
        in: path
        name: serial
        required: true
        schema:
          type: string
      - description: The beginning of the timespan for the data. The maximum lookback
          period is 31 days from today.
        in: query
        name: t0
        schema:
          type: string
      - description: The timespan for which the information will be fetched. If specifying
          timespan, do not specify parameter t0. The value must be in seconds and
          be less than or equal to 31 days. The default is 1 day.
        in: query
        name: timespan
        schema:
          format: float
          type: number
      responses:
        "200":
          content:
            application/json:
              example:
              - portId: "1"
                enabled: true
                status: Connected
                isUplink: false
                errors:
                - PoE overload
                - Very high proportion of CRC errors
                warnings:
                - SecureConnect authentication in progress
                - PoE port was denied power
                - High proportion of CRC errors
                speed: 10 Gbps
                duplex: full
                usageInKb:
                  total: 40867
                  sent: 23008
                  recv: 17859
                cdp:
                  systemName: ""
                  platform: MS350-24X
                  deviceId: 0c8ddbddee:ff
                  portId: Port 20
                  nativeVlan: 1
                  address: 10.0,0.1
                  managementAddress: 10.0.0.100
                  version: "1"
                  vtpManagementDomain: ""
                  capabilities: Switch
                lldp:
                  systemName: MS350-24X - Test
                  systemDescription: MS350-24X Cloud Managed PoE Switch
                  chassisId: 0c:8d:db:dd:ee:ff
                  portId: "20"
                  managementVlan: 1
                  portVlan: 1
                  managementAddress: 10.0.0.100
                  portDescription: Port 20
                  systemCapabilities: switch
                clientCount: 10
                powerUsageInWh: 55.9
                trafficInKbps:
                  total: 2.2
                  sent: 1.2
                  recv: 1.0
                securePort:
                  enabled: true
                  active: true
                  authenticationStatus: Authentication in progress
                  configOverrides:
                    type: trunk
                    vlan: 12
                    voiceVlan: 34
                    allowedVlans: all
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_6'
                type: array
          description: Successful operation
      summary: Return the status for all the ports of a switch
      tags:
      - switch
      - monitor
      - ports
      - statuses
  /devices/{serial}/switch/ports/statuses/packets:
    get:
      description: Return the packet counters for all the ports of a switch
      operationId: getDeviceSwitchPortsStatusesPackets
      parameters:
      - description: Serial
        in: path
        name: serial
        required: true
        schema:
          type: string
      - description: The beginning of the timespan for the data. The maximum lookback
          period is 1 day from today.
        in: query
        name: t0
        schema:
          type: string
      - description: The timespan for which the information will be fetched. If specifying
          timespan, do not specify parameter t0. The value must be in seconds and
          be less than or equal to 1 day. The default is 1 day.
        in: query
        name: timespan
        schema:
          format: float
          type: number
      responses:
        "200":
          content:
            application/json:
              example:
              - portId: "1"
                packets:
                - desc: Total
                  total: 112081
                  sent: 104135
                  recv: 7946
                  ratePerSec:
                    total: 1
                    sent: 1
                    recv: 0
                - desc: Broadcast
                  total: 30884
                  sent: 30370
                  recv: 514
                  ratePerSec:
                    total: 0
                    sent: 0
                    recv: 0
                - desc: Multicast
                  total: 67620
                  sent: 66849
                  recv: 771
                  ratePerSec:
                    total: 0
                    sent: 0
                    recv: 0
                - desc: CRC align errors
                  total: 0
                  sent: 0
                  recv: 0
                  ratePerSec:
                    total: 0
                    sent: 0
                    recv: 0
              schema:
                items:
                  properties: {}
                  type: object
                type: array
          description: Successful operation
      summary: Return the packet counters for all the ports of a switch
      tags:
      - switch
      - monitor
      - ports
      - statuses
      - packets
  /devices/{serial}/switch/ports/{portId}:
    get:
      description: Return a switch port
      operationId: getDeviceSwitchPort
      parameters:
      - description: Serial
        in: path
        name: serial
        required: true
        schema:
          type: string
      - description: Port ID
        in: path
        name: portId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                portId: "1"
                name: My switch port
                tags:
                - tag1
                - tag2
                enabled: true
                poeEnabled: true
                type: access
                vlan: 10
                voiceVlan: 20
                allowedVlans: 1,3,5-10
                isolationEnabled: false
                rstpEnabled: true
                stpGuard: disabled
                linkNegotiation: Auto negotiate
                linkNegotiationCapabilities:
                - Auto negotiate
                - 1 Gigabit full duplex (auto)
                portScheduleId: "1234"
                udld: Alert only
                accessPolicyType: Sticky MAC allow list
                accessPolicyNumber: 2
                macAllowList:
                - 34:56:fe:ce:8e:b0
                - 34:56:fe:ce:8e:b1
                stickyMacAllowList:
                - 34:56:fe:ce:8e:b0
                - 34:56:fe:ce:8e:b1
                stickyMacAllowListLimit: 5
                stormControlEnabled: true
                adaptivePolicyGroupId: "123"
                peerSgtCapable: false
                flexibleStackingEnabled: true
                daiTrusted: false
                profile:
                  enabled: false
                  id: "1284392014819"
                  iname: iname
              schema:
                $ref: '#/components/schemas/inline_response_200_4'
          description: Successful operation
      summary: Return a switch port
      tags:
      - switch
      - configure
      - ports
    put:
      description: Update a switch port
      operationId: updateDeviceSwitchPort
      parameters:
      - description: Serial
        in: path
        name: serial
        required: true
        schema:
          type: string
      - description: Port ID
        in: path
        name: portId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_17'
        content:
          application/json:
            schema:
              example:
                name: My switch port
                tags:
                - tag1
                - tag2
                enabled: true
                poeEnabled: true
                type: access
                vlan: 10
                voiceVlan: 20
                allowedVlans: 1,3,5-10
                isolationEnabled: false
                rstpEnabled: true
                stpGuard: disabled
                linkNegotiation: Auto negotiate
                portScheduleId: "1234"
                udld: Alert only
                accessPolicyType: Sticky MAC allow list
                accessPolicyNumber: 2
                macAllowList:
                - 34:56:fe:ce:8e:b0
                - 34:56:fe:ce:8e:b1
                stickyMacAllowList:
                - 34:56:fe:ce:8e:b0
                - 34:56:fe:ce:8e:b1
                stickyMacAllowListLimit: 5
                stormControlEnabled: true
                adaptivePolicyGroupId: "123"
                peerSgtCapable: false
                flexibleStackingEnabled: true
                daiTrusted: false
                profile:
                  enabled: false
                  id: "1284392014819"
                  iname: iname
              properties:
                name:
                  description: The name of the switch port.
                  type: string
                tags:
                  description: The list of tags of the switch port.
                  items:
                    type: string
                  type: array
                enabled:
                  description: The status of the switch port.
                  type: boolean
                poeEnabled:
                  description: The PoE status of the switch port.
                  type: boolean
                type:
                  description: The type of the switch port ('trunk' or 'access').
                  enum:
                  - access
                  - trunk
                  type: string
                vlan:
                  description: The VLAN of the switch port. A null value will clear
                    the value set for trunk ports.
                  type: integer
                voiceVlan:
                  description: The voice VLAN of the switch port. Only applicable
                    to access ports.
                  type: integer
                allowedVlans:
                  description: The VLANs allowed on the switch port. Only applicable
                    to trunk ports.
                  type: string
                isolationEnabled:
                  description: The isolation status of the switch port.
                  type: boolean
                rstpEnabled:
                  description: The rapid spanning tree protocol status.
                  type: boolean
                stpGuard:
                  description: The state of the STP guard ('disabled', 'root guard',
                    'bpdu guard' or 'loop guard').
                  enum:
                  - bpdu guard
                  - disabled
                  - loop guard
                  - root guard
                  type: string
                linkNegotiation:
                  description: The link speed for the switch port.
                  type: string
                portScheduleId:
                  description: The ID of the port schedule. A value of null will clear
                    the port schedule.
                  type: string
                udld:
                  description: The action to take when Unidirectional Link is detected
                    (Alert only, Enforce). Default configuration is Alert only.
                  enum:
                  - Alert only
                  - Enforce
                  type: string
                accessPolicyType:
                  description: The type of the access policy of the switch port. Only
                    applicable to access ports. Can be one of 'Open', 'Custom access
                    policy', 'MAC allow list' or 'Sticky MAC allow list'.
                  enum:
                  - Custom access policy
                  - MAC allow list
                  - Open
                  - Sticky MAC allow list
                  type: string
                accessPolicyNumber:
                  description: The number of a custom access policy to configure on
                    the switch port. Only applicable when 'accessPolicyType' is 'Custom
                    access policy'.
                  type: integer
                macAllowList:
                  description: Only devices with MAC addresses specified in this list
                    will have access to this port. Up to 20 MAC addresses can be defined.
                    Only applicable when 'accessPolicyType' is 'MAC allow list'.
                  items:
                    type: string
                  type: array
                stickyMacAllowList:
                  description: The initial list of MAC addresses for sticky Mac allow
                    list. Only applicable when 'accessPolicyType' is 'Sticky MAC allow
                    list'.
                  items:
                    type: string
                  type: array
                stickyMacAllowListLimit:
                  description: The maximum number of MAC addresses for sticky MAC
                    allow list. Only applicable when 'accessPolicyType' is 'Sticky
                    MAC allow list'.
                  type: integer
                stormControlEnabled:
                  description: The storm control status of the switch port.
                  type: boolean
                adaptivePolicyGroupId:
                  description: The adaptive policy group ID that will be used to tag
                    traffic through this switch port. This ID must pre-exist during
                    the configuration, else needs to be created using adaptivePolicy/groups
                    API. Cannot be applied to a port on a switch bound to profile.
                  type: string
                peerSgtCapable:
                  description: If true, Peer SGT is enabled for traffic through this
                    switch port. Applicable to trunk port only, not access port. Cannot
                    be applied to a port on a switch bound to profile.
                  type: boolean
                flexibleStackingEnabled:
                  description: For supported switches (e.g. MS420/MS425), whether
                    or not the port has flexible stacking enabled.
                  type: boolean
                daiTrusted:
                  description: If true, ARP packets for this port will be considered
                    trusted, and Dynamic ARP Inspection will allow the traffic.
                  type: boolean
                profile:
                  $ref: '#/components/schemas/_devices__serial__switch_ports_profile'
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                portId: "1"
                name: My switch port
                tags:
                - tag1
                - tag2
                enabled: true
                poeEnabled: true
                type: access
                vlan: 10
                voiceVlan: 20
                allowedVlans: 1,3,5-10
                isolationEnabled: false
                rstpEnabled: true
                stpGuard: disabled
                linkNegotiation: Auto negotiate
                linkNegotiationCapabilities:
                - Auto negotiate
                - 1 Gigabit full duplex (auto)
                portScheduleId: "1234"
                udld: Alert only
                accessPolicyType: Sticky MAC allow list
                accessPolicyNumber: 2
                macAllowList:
                - 34:56:fe:ce:8e:b0
                - 34:56:fe:ce:8e:b1
                stickyMacAllowList:
                - 34:56:fe:ce:8e:b0
                - 34:56:fe:ce:8e:b1
                stickyMacAllowListLimit: 5
                stormControlEnabled: true
                adaptivePolicyGroupId: "123"
                peerSgtCapable: false
                flexibleStackingEnabled: true
                daiTrusted: false
                profile:
                  enabled: false
                  id: "1284392014819"
                  iname: iname
              schema:
                $ref: '#/components/schemas/inline_response_200_4'
          description: Successful operation
      summary: Update a switch port
      tags:
      - switch
      - configure
      - ports
      x-codegen-request-body-name: updateDeviceSwitchPort
  /devices/{serial}/switch/routing/interfaces:
    get:
      description: List layer 3 interfaces for a switch. Those for a stack may be
        found under switch stack routing.
      operationId: getDeviceSwitchRoutingInterfaces
      parameters:
      - description: Serial
        in: path
        name: serial
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - interfaceId: "1234"
                name: L3 interface
                subnet: 192.168.1.0/24
                interfaceIp: 192.168.1.2
                multicastRouting: disabled
                vlanId: 100
                defaultGateway: 192.168.1.1
                ospfSettings:
                  area: "0"
                  cost: 1
                  isPassiveEnabled: true
                ospfV3:
                  area: "1"
                  cost: 2
                  isPassiveEnabled: true
                ipv6:
                  assignmentMode: static
                  address: 1:2:3:4::1
                  prefix: 1:2:3:4::/48
                  gateway: 1:2:3:4::2
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_7'
                type: array
          description: Successful operation
      summary: List layer 3 interfaces for a switch
      tags:
      - switch
      - configure
      - routing
      - interfaces
    post:
      description: Create a layer 3 interface for a switch
      operationId: createDeviceSwitchRoutingInterface
      parameters:
      - description: Serial
        in: path
        name: serial
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_18'
        content:
          application/json:
            schema:
              example:
                name: L3 interface
                subnet: 192.168.1.0/24
                interfaceIp: 192.168.1.2
                multicastRouting: disabled
                vlanId: 100
                defaultGateway: 192.168.1.1
                ospfSettings:
                  area: "0"
                  cost: 1
                  isPassiveEnabled: true
                ospfV3:
                  area: "1"
                  cost: 2
                  isPassiveEnabled: true
                ipv6:
                  assignmentMode: static
                  prefix: 1:2:3:4::/48
                  address: 1:2:3:4::1
                  gateway: 1:2:3:4::2
              properties:
                name:
                  description: A friendly name or description for the interface or
                    VLAN.
                  type: string
                subnet:
                  description: The network that this routed interface is on, in CIDR
                    notation (ex. 10.1.1.0/24).
                  type: string
                interfaceIp:
                  description: The IP address this switch will use for layer 3 routing
                    on this VLAN or subnet. This cannot be the same         as the
                    switch's management IP.
                  type: string
                multicastRouting:
                  description: 'Enable multicast support if, multicast routing between
                    VLANs is required. Options are:         ''disabled'', ''enabled''
                    or ''IGMP snooping querier''. Default is ''disabled''.'
                  enum:
                  - IGMP snooping querier
                  - disabled
                  - enabled
                  type: string
                vlanId:
                  description: The VLAN this routed interface is on. VLAN must be
                    between 1 and 4094.
                  type: integer
                defaultGateway:
                  description: The next hop for any traffic that isn't going to a
                    directly connected subnet or over a static route.         This
                    IP address must exist in a subnet with a routed interface. Required
                    if this is the first IPv4 interface.
                  type: string
                ospfSettings:
                  $ref: '#/components/schemas/_devices__serial__switch_routing_interfaces_ospfSettings_1'
                ospfV3:
                  $ref: '#/components/schemas/_devices__serial__switch_routing_interfaces_ospfV3_1'
                ipv6:
                  $ref: '#/components/schemas/_devices__serial__switch_routing_interfaces_ipv6_1'
              type: object
        required: false
      responses:
        "201":
          content:
            application/json:
              example:
                interfaceId: "1234"
                name: L3 interface
                subnet: 192.168.1.0/24
                interfaceIp: 192.168.1.2
                multicastRouting: disabled
                vlanId: 100
                defaultGateway: 192.168.1.1
                ospfSettings:
                  area: "0"
                  cost: 1
                  isPassiveEnabled: true
                ospfV3:
                  area: "1"
                  cost: 2
                  isPassiveEnabled: true
                ipv6:
                  assignmentMode: static
                  address: 1:2:3:4::1
                  prefix: 1:2:3:4::/48
                  gateway: 1:2:3:4::2
              schema:
                $ref: '#/components/schemas/inline_response_200_7'
          description: Successful operation
      summary: Create a layer 3 interface for a switch
      tags:
      - switch
      - configure
      - routing
      - interfaces
      x-codegen-request-body-name: createDeviceSwitchRoutingInterface
  /devices/{serial}/switch/routing/interfaces/{interfaceId}:
    delete:
      description: Delete a layer 3 interface from the switch
      operationId: deleteDeviceSwitchRoutingInterface
      parameters:
      - description: Serial
        in: path
        name: serial
        required: true
        schema:
          type: string
      - description: Interface ID
        in: path
        name: interfaceId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Successful operation
      summary: Delete a layer 3 interface from the switch
      tags:
      - switch
      - configure
      - routing
      - interfaces
    get:
      description: Return a layer 3 interface for a switch
      operationId: getDeviceSwitchRoutingInterface
      parameters:
      - description: Serial
        in: path
        name: serial
        required: true
        schema:
          type: string
      - description: Interface ID
        in: path
        name: interfaceId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                interfaceId: "1234"
                name: L3 interface
                subnet: 192.168.1.0/24
                interfaceIp: 192.168.1.2
                multicastRouting: disabled
                vlanId: 100
                defaultGateway: 192.168.1.1
                ospfSettings:
                  area: "0"
                  cost: 1
                  isPassiveEnabled: true
                ospfV3:
                  area: "1"
                  cost: 2
                  isPassiveEnabled: true
                ipv6:
                  assignmentMode: static
                  address: 1:2:3:4::1
                  prefix: 1:2:3:4::/48
                  gateway: 1:2:3:4::2
              schema:
                $ref: '#/components/schemas/inline_response_200_7'
          description: Successful operation
      summary: Return a layer 3 interface for a switch
      tags:
      - switch
      - configure
      - routing
      - interfaces
    put:
      description: Update a layer 3 interface for a switch
      operationId: updateDeviceSwitchRoutingInterface
      parameters:
      - description: Serial
        in: path
        name: serial
        required: true
        schema:
          type: string
      - description: Interface ID
        in: path
        name: interfaceId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_19'
        content:
          application/json:
            schema:
              example:
                name: L3 interface
                subnet: 192.168.1.0/24
                interfaceIp: 192.168.1.2
                multicastRouting: disabled
                vlanId: 100
                defaultGateway: 192.168.1.1
                ospfSettings:
                  area: "0"
                  cost: 1
                  isPassiveEnabled: true
                ospfV3:
                  area: "1"
                  cost: 2
                  isPassiveEnabled: true
                ipv6:
                  assignmentMode: static
                  prefix: 1:2:3:4::/48
                  address: 1:2:3:4::1
                  gateway: 1:2:3:4::2
              properties:
                name:
                  description: A friendly name or description for the interface or
                    VLAN.
                  type: string
                subnet:
                  description: The network that this routed interface is on, in CIDR
                    notation (ex. 10.1.1.0/24).
                  type: string
                interfaceIp:
                  description: The IP address this switch will use for layer 3 routing
                    on this VLAN or subnet. This cannot be the same         as the
                    switch's management IP.
                  type: string
                multicastRouting:
                  description: 'Enable multicast support if, multicast routing between
                    VLANs is required. Options are:         ''disabled'', ''enabled''
                    or ''IGMP snooping querier''. Default is ''disabled''.'
                  enum:
                  - IGMP snooping querier
                  - disabled
                  - enabled
                  type: string
                vlanId:
                  description: The VLAN this routed interface is on. VLAN must be
                    between 1 and 4094.
                  type: integer
                defaultGateway:
                  description: The next hop for any traffic that isn't going to a
                    directly connected subnet or over a static route.         This
                    IP address must exist in a subnet with a routed interface. Required
                    if this is the first IPv4 interface.
                  type: string
                ospfSettings:
                  $ref: '#/components/schemas/_devices__serial__switch_routing_interfaces_ospfSettings_1'
                ospfV3:
                  $ref: '#/components/schemas/_devices__serial__switch_routing_interfaces_ospfV3_1'
                ipv6:
                  $ref: '#/components/schemas/_devices__serial__switch_routing_interfaces_ipv6_1'
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                interfaceId: "1234"
                name: L3 interface
                subnet: 192.168.1.0/24
                interfaceIp: 192.168.1.2
                multicastRouting: disabled
                vlanId: 100
                defaultGateway: 192.168.1.1
                ospfSettings:
                  area: "0"
                  cost: 1
                  isPassiveEnabled: true
                ospfV3:
                  area: "1"
                  cost: 2
                  isPassiveEnabled: true
                ipv6:
                  assignmentMode: static
                  address: 1:2:3:4::1
                  prefix: 1:2:3:4::/48
                  gateway: 1:2:3:4::2
              schema:
                $ref: '#/components/schemas/inline_response_200_7'
          description: Successful operation
      summary: Update a layer 3 interface for a switch
      tags:
      - switch
      - configure
      - routing
      - interfaces
      x-codegen-request-body-name: updateDeviceSwitchRoutingInterface
  /devices/{serial}/switch/routing/interfaces/{interfaceId}/dhcp:
    get:
      description: Return a layer 3 interface DHCP configuration for a switch
      operationId: getDeviceSwitchRoutingInterfaceDhcp
      parameters:
      - description: Serial
        in: path
        name: serial
        required: true
        schema:
          type: string
      - description: Interface ID
        in: path
        name: interfaceId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                dhcpMode: dhcpServer
                dhcpLeaseTime: 1 day
                dnsNameserversOption: custom
                dnsCustomNameservers:
                - 8.8.8.8, 8.8.4.4
                bootOptionsEnabled: true
                bootNextServer: 1.2.3.4
                bootFileName: home_boot_file
                dhcpOptions:
                - code: "5"
                  type: text
                  value: five
                reservedIpRanges:
                - start: 192.168.1.1
                  end: 192.168.1.10
                  comment: A reserved IP range
                fixedIpAssignments:
                - mac: 22:33:44:55:66:77
                  name: Cisco Meraki valued client
                  ip: 192.168.1.12
              schema:
                type: object
          description: Successful operation
      summary: Return a layer 3 interface DHCP configuration for a switch
      tags:
      - switch
      - configure
      - routing
      - interfaces
      - dhcp
    put:
      description: Update a layer 3 interface DHCP configuration for a switch
      operationId: updateDeviceSwitchRoutingInterfaceDhcp
      parameters:
      - description: Serial
        in: path
        name: serial
        required: true
        schema:
          type: string
      - description: Interface ID
        in: path
        name: interfaceId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_20'
        content:
          application/json:
            schema:
              example:
                dhcpMode: dhcpServer
                dhcpLeaseTime: 1 day
                dnsNameserversOption: custom
                dnsCustomNameservers:
                - 8.8.8.8, 8.8.4.4
                bootOptionsEnabled: true
                bootNextServer: 1.2.3.4
                bootFileName: home_boot_file
                dhcpOptions:
                - code: "5"
                  type: text
                  value: five
                reservedIpRanges:
                - start: 192.168.1.1
                  end: 192.168.1.10
                  comment: A reserved IP range
                fixedIpAssignments:
                - mac: 22:33:44:55:66:77
                  name: Cisco Meraki valued client
                  ip: 192.168.1.12
              properties:
                dhcpMode:
                  description: The DHCP mode options for the switch interface ('dhcpDisabled',
                    'dhcpRelay' or 'dhcpServer')
                  enum:
                  - dhcpDisabled
                  - dhcpRelay
                  - dhcpServer
                  type: string
                dhcpRelayServerIps:
                  description: The DHCP relay server IPs to which DHCP packets would
                    get relayed for the switch interface
                  items:
                    type: string
                  type: array
                dhcpLeaseTime:
                  description: The DHCP lease time config for the dhcp server running
                    on switch interface ('30 minutes', '1 hour', '4 hours', '12 hours',
                    '1 day' or '1 week')
                  enum:
                  - 1 day
                  - 1 hour
                  - 1 week
                  - 12 hours
                  - 30 minutes
                  - 4 hours
                  type: string
                dnsNameserversOption:
                  description: The DHCP name server option for the dhcp server running
                    on the switch interface ('googlePublicDns', 'openDns' or 'custom')
                  enum:
                  - custom
                  - googlePublicDns
                  - openDns
                  type: string
                dnsCustomNameservers:
                  description: The DHCP name server IPs when DHCP name server option
                    is 'custom'
                  items:
                    type: string
                  type: array
                bootOptionsEnabled:
                  description: Enable DHCP boot options to provide PXE boot options
                    configs for the dhcp server running on the switch interface
                  type: boolean
                bootNextServer:
                  description: The PXE boot server IP for the DHCP server running
                    on the switch interface
                  type: string
                bootFileName:
                  description: The PXE boot server filename for the DHCP server running
                    on the switch interface
                  type: string
                dhcpOptions:
                  description: Array of DHCP options consisting of code, type and
                    value for the DHCP server running on the switch interface
                  items:
                    $ref: '#/components/schemas/_devices__serial__switch_routing_interfaces__interfaceId__dhcp_dhcpOptions'
                  type: array
                reservedIpRanges:
                  description: Array of DHCP reserved IP assignments for the DHCP
                    server running on the switch interface
                  items:
                    $ref: '#/components/schemas/_devices__serial__switch_routing_interfaces__interfaceId__dhcp_reservedIpRanges'
                  type: array
                fixedIpAssignments:
                  description: Array of DHCP fixed IP assignments for the DHCP server
                    running on the switch interface
                  items:
                    $ref: '#/components/schemas/_devices__serial__switch_routing_interfaces__interfaceId__dhcp_fixedIpAssignments'
                  type: array
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                dhcpMode: dhcpServer
                dhcpLeaseTime: 1 day
                dnsNameserversOption: custom
                dnsCustomNameservers:
                - 8.8.8.8, 8.8.4.4
                bootOptionsEnabled: true
                bootNextServer: 1.2.3.4
                bootFileName: home_boot_file
                dhcpOptions:
                - code: "5"
                  type: text
                  value: five
                reservedIpRanges:
                - start: 192.168.1.1
                  end: 192.168.1.10
                  comment: A reserved IP range
                fixedIpAssignments:
                - mac: 22:33:44:55:66:77
                  name: Cisco Meraki valued client
                  ip: 192.168.1.12
              schema:
                type: object
          description: Successful operation
      summary: Update a layer 3 interface DHCP configuration for a switch
      tags:
      - switch
      - configure
      - routing
      - interfaces
      - dhcp
      x-codegen-request-body-name: updateDeviceSwitchRoutingInterfaceDhcp
  /devices/{serial}/switch/routing/staticRoutes:
    get:
      description: List layer 3 static routes for a switch
      operationId: getDeviceSwitchRoutingStaticRoutes
      parameters:
      - description: Serial
        in: path
        name: serial
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - staticRouteId: "1234"
                name: My route
                subnet: 192.168.1.0/24
                nextHopIp: 1.2.3.4
                advertiseViaOspfEnabled: false
                preferOverOspfRoutesEnabled: false
              schema:
                items:
                  properties: {}
                  type: object
                type: array
          description: Successful operation
      summary: List layer 3 static routes for a switch
      tags:
      - switch
      - configure
      - routing
      - staticRoutes
    post:
      description: Create a layer 3 static route for a switch
      operationId: createDeviceSwitchRoutingStaticRoute
      parameters:
      - description: Serial
        in: path
        name: serial
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_21'
        content:
          application/json:
            schema:
              example:
                name: My route
                subnet: 192.168.1.0/24
                nextHopIp: 1.2.3.4
                advertiseViaOspfEnabled: false
                preferOverOspfRoutesEnabled: false
              properties:
                name:
                  description: Name or description for layer 3 static route
                  type: string
                subnet:
                  description: The subnet which is routed via this static route and
                    should be specified in CIDR notation (ex. 1.2.3.0/24)
                  type: string
                nextHopIp:
                  description: IP address of the next hop device to which the device
                    sends its traffic for the subnet
                  type: string
                advertiseViaOspfEnabled:
                  description: Option to advertise static route via OSPF
                  type: boolean
                preferOverOspfRoutesEnabled:
                  description: Option to prefer static route over OSPF routes
                  type: boolean
              required:
              - nextHopIp
              - subnet
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                staticRouteId: "1234"
                name: My route
                subnet: 192.168.1.0/24
                nextHopIp: 1.2.3.4
                advertiseViaOspfEnabled: false
                preferOverOspfRoutesEnabled: false
              schema:
                type: object
          description: Successful operation
      summary: Create a layer 3 static route for a switch
      tags:
      - switch
      - configure
      - routing
      - staticRoutes
      x-codegen-request-body-name: createDeviceSwitchRoutingStaticRoute
  /devices/{serial}/switch/routing/staticRoutes/{staticRouteId}:
    delete:
      description: Delete a layer 3 static route for a switch
      operationId: deleteDeviceSwitchRoutingStaticRoute
      parameters:
      - description: Serial
        in: path
        name: serial
        required: true
        schema:
          type: string
      - description: Static route ID
        in: path
        name: staticRouteId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Successful operation
      summary: Delete a layer 3 static route for a switch
      tags:
      - switch
      - configure
      - routing
      - staticRoutes
    get:
      description: Return a layer 3 static route for a switch
      operationId: getDeviceSwitchRoutingStaticRoute
      parameters:
      - description: Serial
        in: path
        name: serial
        required: true
        schema:
          type: string
      - description: Static route ID
        in: path
        name: staticRouteId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                staticRouteId: "1234"
                name: My route
                subnet: 192.168.1.0/24
                nextHopIp: 1.2.3.4
                advertiseViaOspfEnabled: false
                preferOverOspfRoutesEnabled: false
              schema:
                $ref: '#/components/schemas/inline_response_200_8'
          description: Successful operation
      summary: Return a layer 3 static route for a switch
      tags:
      - switch
      - configure
      - routing
      - staticRoutes
    put:
      description: Update a layer 3 static route for a switch
      operationId: updateDeviceSwitchRoutingStaticRoute
      parameters:
      - description: Serial
        in: path
        name: serial
        required: true
        schema:
          type: string
      - description: Static route ID
        in: path
        name: staticRouteId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_22'
        content:
          application/json:
            schema:
              example:
                name: My route
                subnet: 192.168.1.0/24
                nextHopIp: 1.2.3.4
                advertiseViaOspfEnabled: false
                preferOverOspfRoutesEnabled: false
              properties:
                name:
                  description: Name or description for layer 3 static route
                  type: string
                subnet:
                  description: The subnet which is routed via this static route and
                    should be specified in CIDR notation (ex. 1.2.3.0/24)
                  type: string
                nextHopIp:
                  description: IP address of the next hop device to which the device
                    sends its traffic for the subnet
                  type: string
                advertiseViaOspfEnabled:
                  description: Option to advertise static route via OSPF
                  type: boolean
                preferOverOspfRoutesEnabled:
                  description: Option to prefer static route over OSPF routes
                  type: boolean
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                staticRouteId: "1234"
                name: My route
                subnet: 192.168.1.0/24
                nextHopIp: 1.2.3.4
                advertiseViaOspfEnabled: false
                preferOverOspfRoutesEnabled: false
              schema:
                type: object
          description: Successful operation
      summary: Update a layer 3 static route for a switch
      tags:
      - switch
      - configure
      - routing
      - staticRoutes
      x-codegen-request-body-name: updateDeviceSwitchRoutingStaticRoute
  /devices/{serial}/switch/warmSpare:
    get:
      description: Return warm spare configuration for a switch
      operationId: getDeviceSwitchWarmSpare
      parameters:
      - description: Serial
        in: path
        name: serial
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                enabled: true
                primarySerial: Q234-ABCD-0001
                spareSerial: Q234-ABCD-0002
              schema:
                type: object
          description: Successful operation
      summary: Return warm spare configuration for a switch
      tags:
      - switch
      - configure
      - warmSpare
    put:
      description: Update warm spare configuration for a switch. The spare will use
        the same L3 configuration as the primary. Note that this will irreversibly
        destroy any existing L3 configuration on the spare.
      operationId: updateDeviceSwitchWarmSpare
      parameters:
      - description: Serial
        in: path
        name: serial
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_23'
        content:
          application/json:
            schema:
              example:
                enabled: true
                spareSerial: Q234-ABCD-0002
              properties:
                enabled:
                  description: Enable or disable warm spare for a switch
                  type: boolean
                spareSerial:
                  description: Serial number of the warm spare switch
                  type: string
              required:
              - enabled
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                enabled: true
                primarySerial: Q234-ABCD-0001
                spareSerial: Q234-ABCD-0002
              schema:
                type: object
          description: Successful operation
      summary: Update warm spare configuration for a switch
      tags:
      - switch
      - configure
      - warmSpare
      x-codegen-request-body-name: updateDeviceSwitchWarmSpare
  /devices/{serial}/wireless/bluetooth/settings:
    get:
      description: Return the bluetooth settings for a wireless device
      operationId: getDeviceWirelessBluetoothSettings
      parameters:
      - description: Serial
        in: path
        name: serial
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                uuid: 00000000-0000-0000-000-000000000000
                major: 13
                minor: 125
              schema:
                $ref: '#/components/schemas/inline_response_200_9'
          description: Successful operation
      summary: Return the bluetooth settings for a wireless device
      tags:
      - wireless
      - configure
      - bluetooth
      - settings
    put:
      description: Update the bluetooth settings for a wireless device
      operationId: updateDeviceWirelessBluetoothSettings
      parameters:
      - description: Serial
        in: path
        name: serial
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_24'
        content:
          application/json:
            schema:
              example:
                uuid: 00000000-0000-0000-000-000000000000
                major: 13
                minor: 125
              properties:
                uuid:
                  description: Desired UUID of the beacon. If the value is set to
                    null it will reset to Dashboard's automatically generated value.
                  type: string
                major:
                  description: Desired major value of the beacon. If the value is
                    set to null it will reset to Dashboard's automatically generated
                    value.
                  type: integer
                minor:
                  description: Desired minor value of the beacon. If the value is
                    set to null it will reset to Dashboard's automatically generated
                    value.
                  type: integer
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                uuid: 00000000-0000-0000-000-000000000000
                major: 13
                minor: 125
              schema:
                $ref: '#/components/schemas/inline_response_200_9'
          description: Successful operation
      summary: Update the bluetooth settings for a wireless device
      tags:
      - wireless
      - configure
      - bluetooth
      - settings
      x-codegen-request-body-name: updateDeviceWirelessBluetoothSettings
  /devices/{serial}/wireless/connectionStats:
    get:
      description: Aggregated connectivity info for a given AP on this network
      operationId: getDeviceWirelessConnectionStats
      parameters:
      - description: Serial
        in: path
        name: serial
        required: true
        schema:
          type: string
      - description: The beginning of the timespan for the data. The maximum lookback
          period is 180 days from today.
        in: query
        name: t0
        schema:
          type: string
      - description: The end of the timespan for the data. t1 can be a maximum of
          7 days after t0.
        in: query
        name: t1
        schema:
          type: string
      - description: The timespan for which the information will be fetched. If specifying
          timespan, do not specify parameters t0 and t1. The value must be in seconds
          and be less than or equal to 7 days.
        in: query
        name: timespan
        schema:
          format: float
          type: number
      - description: Filter results by band (either '2.4', '5' or '6'). Note that
          data prior to February 2020 will not have band information.
        in: query
        name: band
        schema:
          enum:
          - "2.4"
          - "5"
          - "6"
          type: string
      - description: Filter results by SSID
        in: query
        name: ssid
        schema:
          type: integer
      - description: Filter results by VLAN
        in: query
        name: vlan
        schema:
          type: integer
      - description: Filter results by AP Tag
        in: query
        name: apTag
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                serial: Q234-ABCD-5678
                connectionStats:
                  assoc: 0
                  auth: 1
                  dhcp: 0
                  dns: 0
                  success: 43
              schema:
                $ref: '#/components/schemas/inline_response_200_10'
          description: Successful operation
      summary: Aggregated connectivity info for a given AP on this network
      tags:
      - wireless
      - monitor
      - connectionStats
  /devices/{serial}/wireless/latencyStats:
    get:
      description: Aggregated latency info for a given AP on this network
      operationId: getDeviceWirelessLatencyStats
      parameters:
      - description: Serial
        in: path
        name: serial
        required: true
        schema:
          type: string
      - description: The beginning of the timespan for the data. The maximum lookback
          period is 180 days from today.
        in: query
        name: t0
        schema:
          type: string
      - description: The end of the timespan for the data. t1 can be a maximum of
          7 days after t0.
        in: query
        name: t1
        schema:
          type: string
      - description: The timespan for which the information will be fetched. If specifying
          timespan, do not specify parameters t0 and t1. The value must be in seconds
          and be less than or equal to 7 days.
        in: query
        name: timespan
        schema:
          format: float
          type: number
      - description: Filter results by band (either '2.4', '5' or '6'). Note that
          data prior to February 2020 will not have band information.
        in: query
        name: band
        schema:
          enum:
          - "2.4"
          - "5"
          - "6"
          type: string
      - description: Filter results by SSID
        in: query
        name: ssid
        schema:
          type: integer
      - description: Filter results by VLAN
        in: query
        name: vlan
        schema:
          type: integer
      - description: Filter results by AP Tag
        in: query
        name: apTag
        schema:
          type: string
      - description: 'Partial selection: If present, this call will return only the
          selected fields of ["rawDistribution", "avg"]. All fields will be returned
          by default. Selected fields must be entered as a comma separated string.'
        in: query
        name: fields
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                serial: Q2JC-2MJM-FHRD
                latencyStats:
                  backgroundTraffic:
                    rawDistribution:
                      "0": 1234
                      "1": 2345
                      "2": 3456
                      "4": 4567
                      "8": 5678
                      "16": 6789
                      "32": 7890
                      "64": 8901
                      "128": 9012
                      "256": 83
                      "512": 1234
                      "1024": 2345
                      "2048": 9999
                    avg: 606.52
                  bestEffortTraffic: same shape as backgroundTraffic
                  videoTraffic: same shape as backgroundTraffic
                  voiceTraffic: same shape as backgroundTraffic
              schema:
                type: object
          description: Successful operation
      summary: Aggregated latency info for a given AP on this network
      tags:
      - wireless
      - monitor
      - latencyStats
  /devices/{serial}/wireless/radio/settings:
    get:
      description: Return the radio settings of a device
      operationId: getDeviceWirelessRadioSettings
      parameters:
      - description: Serial
        in: path
        name: serial
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                serial: Q234-ABCD-5678
                rfProfileId: "1234"
                twoFourGhzSettings:
                  channel: 11
                  targetPower: 21
                fiveGhzSettings:
                  channel: 149
                  channelWidth: 20
                  targetPower: 15
              schema:
                type: object
          description: Successful operation
      summary: Return the radio settings of a device
      tags:
      - wireless
      - configure
      - radio
      - settings
    put:
      description: Update the radio settings of a device
      operationId: updateDeviceWirelessRadioSettings
      parameters:
      - description: Serial
        in: path
        name: serial
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_25'
        content:
          application/json:
            schema:
              example:
                rfProfileId: "1234"
                twoFourGhzSettings:
                  channel: 11
                  targetPower: 21
                fiveGhzSettings:
                  channel: 149
                  channelWidth: 20
                  targetPower: 15
              properties:
                rfProfileId:
                  description: The ID of an RF profile to assign to the device. If
                    the value of this parameter is null, the appropriate basic RF
                    profile (indoor or outdoor) will be assigned to the device. Assigning
                    an RF profile will clear ALL manually configured overrides on
                    the device (channel width, channel, power).
                  type: string
                twoFourGhzSettings:
                  $ref: '#/components/schemas/_devices__serial__wireless_radio_settings_twoFourGhzSettings'
                fiveGhzSettings:
                  $ref: '#/components/schemas/_devices__serial__wireless_radio_settings_fiveGhzSettings'
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                serial: Q234-ABCD-5678
                rfProfileId: "1234"
                twoFourGhzSettings:
                  channel: 11
                  targetPower: 21
                fiveGhzSettings:
                  channel: 149
                  channelWidth: 20
                  targetPower: 15
              schema:
                type: object
          description: Successful operation
      summary: Update the radio settings of a device
      tags:
      - wireless
      - configure
      - radio
      - settings
      x-codegen-request-body-name: updateDeviceWirelessRadioSettings
  /devices/{serial}/wireless/status:
    get:
      description: Return the SSID statuses of an access point
      operationId: getDeviceWirelessStatus
      parameters:
      - description: Serial
        in: path
        name: serial
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                basicServiceSets:
                - ssidName: My SSID
                  ssidNumber: 0
                  enabled: true
                  band: 2.4 GHz
                  bssid: 8A:15:04:00:00:00
                  channel: 11
                  channelWidth: 20 MHz
                  power: 18 dBm
                  visible: true
                  broadcasting: true
                - ssidName: My SSID
                  ssidNumber: 0
                  enabled: true
                  band: 5 GHz
                  bssid: 8A:15:14:00:00:00
                  channel: 64
                  channelWidth: 40 MHz
                  power: 18 dBm
                  visible: true
                  broadcasting: true
                - ssidName: My SSID
                  ssidNumber: 0
                  enabled: true
                  band: 6 GHz
                  bssid: 8A:15:24:00:00:00
                  channel: 145
                  channelWidth: 80 MHz
                  power: 18 dBm
                  visible: true
                  broadcasting: true
              schema:
                type: object
          description: Successful operation
      summary: Return the SSID statuses of an access point
      tags:
      - wireless
      - monitor
      - status
  /networks/{networkId}:
    delete:
      description: Delete a network
      operationId: deleteNetwork
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Successful operation
      summary: Delete a network
      tags:
      - networks
      - configure
    get:
      description: Return a network
      operationId: getNetwork
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                id: N_24329156
                organizationId: "2930418"
                name: Main Office
                productTypes:
                - appliance
                - switch
                - wireless
                timeZone: America/Los_Angeles
                tags:
                - tag1
                - tag2
                enrollmentString: my-enrollment-string
                url: https://n1.meraki.com//n//manage/nodes/list
                notes: Additional description of the network
                isBoundToConfigTemplate: false
              schema:
                $ref: '#/components/schemas/inline_response_200_11'
          description: Successful operation
      summary: Return a network
      tags:
      - networks
      - configure
    put:
      description: Update a network
      operationId: updateNetwork
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_26'
        content:
          application/json:
            schema:
              example:
                name: Main Office
                timeZone: America/Los_Angeles
                tags:
                - tag1
                - tag2
                enrollmentString: my-enrollment-string
                notes: Additional description of the network
              properties:
                name:
                  description: The name of the network
                  type: string
                timeZone:
                  description: The timezone of the network. For a list of allowed
                    timezones, please see the 'TZ' column in the table in <a target='_blank'
                    href='https://en.wikipedia.org/wiki/List_of_tz_database_time_zones'>this
                    article.</a>
                  type: string
                tags:
                  description: A list of tags to be applied to the network
                  items:
                    type: string
                  type: array
                enrollmentString:
                  description: A unique identifier which can be used for device enrollment
                    or easy access through the Meraki SM Registration page or the
                    Self Service Portal. Please note that changing this field may
                    cause existing bookmarks to break.
                  type: string
                notes:
                  description: Add any notes or additional information about this
                    network here.
                  type: string
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                id: N_24329156
                organizationId: "2930418"
                name: Main Office
                productTypes:
                - appliance
                - switch
                - wireless
                timeZone: America/Los_Angeles
                tags:
                - tag1
                - tag2
                enrollmentString: my-enrollment-string
                url: https://n1.meraki.com//n//manage/nodes/list
                notes: Additional description of the network
                isBoundToConfigTemplate: false
              schema:
                $ref: '#/components/schemas/inline_response_200_11'
          description: Successful operation
      summary: Update a network
      tags:
      - networks
      - configure
      x-codegen-request-body-name: updateNetwork
  /networks/{networkId}/alerts/history:
    get:
      description: Return the alert history for this network
      operationId: getNetworkAlertsHistory
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: The number of entries per page returned. Acceptable range is
          3 - 1000. Default is 100.
        in: query
        name: perPage
        schema:
          type: integer
      - description: A token used by the server to indicate the start of the page.
          Often this is a timestamp or an ID but it is not limited to those. This
          parameter should not be defined by client applications. The link for the
          first, last, prev, or next page in the HTTP Link header should define it.
        in: query
        name: startingAfter
        schema:
          type: string
      - description: A token used by the server to indicate the end of the page. Often
          this is a timestamp or an ID but it is not limited to those. This parameter
          should not be defined by client applications. The link for the first, last,
          prev, or next page in the HTTP Link header should define it.
        in: query
        name: endingBefore
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - occurredAt: 2022-07-11T22:35:34Z
                alertTypeId: settings_changed
                alertType: Settings changed
                device:
                  serial: Q3CG-G6W8-BEVR
                destinations:
                  email:
                    sentAt: 2022-07-11T22:40:34Z
                  push:
                    sentAt: 2022-07-11T22:40:34Z
                  sms:
                    sentAt: 2022-07-11T22:40:34Z
                  webhook:
                    sentAt: 2022-07-11T22:40:34Z
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_12'
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative
                links used for subsequent paginated requests.
              schema:
                type: string
      summary: Return the alert history for this network
      tags:
      - networks
      - monitor
      - alerts
      - history
  /networks/{networkId}/alerts/settings:
    get:
      description: Return the alert configuration for this network
      operationId: getNetworkAlertsSettings
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                defaultDestinations:
                  emails:
                  - miles@meraki.com
                  allAdmins: true
                  snmp: true
                  httpServerIds:
                  - aHR0cHM6Ly93d3cuZXhhbXBsZS5jb20vd2ViaG9va3M=
                alerts:
                - type: gatewayDown
                  enabled: true
                  alertDestinations:
                    emails:
                    - miles@meraki.com
                    allAdmins: false
                    snmp: false
                    httpServerIds:
                    - aHR0cHM6Ly93d3cuZXhhbXBsZS5jb20vd2ViaG9va3M=
                  filters:
                    timeout: 60
              schema:
                type: object
          description: Successful operation
      summary: Return the alert configuration for this network
      tags:
      - networks
      - configure
      - alerts
      - settings
    put:
      description: Update the alert configuration for this network
      operationId: updateNetworkAlertsSettings
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_27'
        content:
          application/json:
            schema:
              example:
                defaultDestinations:
                  emails:
                  - miles@meraki.com
                  allAdmins: true
                  snmp: true
                  httpServerIds:
                  - aHR0cHM6Ly93d3cuZXhhbXBsZS5jb20vd2ViaG9va3M=
                alerts:
                - type: gatewayDown
                  enabled: true
                  alertDestinations:
                    emails:
                    - miles@meraki.com
                    allAdmins: false
                    snmp: false
                    httpServerIds:
                    - aHR0cHM6Ly93d3cuZXhhbXBsZS5jb20vd2ViaG9va3M=
                  filters:
                    timeout: 60
              properties:
                defaultDestinations:
                  $ref: '#/components/schemas/_networks__networkId__alerts_settings_defaultDestinations'
                alerts:
                  description: Alert-specific configuration for each type. Only alerts
                    that pertain to the network can be updated.
                  items:
                    $ref: '#/components/schemas/_networks__networkId__alerts_settings_alerts'
                  type: array
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                defaultDestinations:
                  emails:
                  - miles@meraki.com
                  allAdmins: true
                  snmp: true
                  httpServerIds:
                  - aHR0cHM6Ly93d3cuZXhhbXBsZS5jb20vd2ViaG9va3M=
                alerts:
                - type: gatewayDown
                  enabled: true
                  alertDestinations:
                    emails:
                    - miles@meraki.com
                    allAdmins: false
                    snmp: false
                    httpServerIds:
                    - aHR0cHM6Ly93d3cuZXhhbXBsZS5jb20vd2ViaG9va3M=
                  filters:
                    timeout: 60
              schema:
                type: object
          description: Successful operation
      summary: Update the alert configuration for this network
      tags:
      - networks
      - configure
      - alerts
      - settings
      x-codegen-request-body-name: updateNetworkAlertsSettings
  /networks/{networkId}/appliance/clients/{clientId}/security/events:
    get:
      description: List the security events for a client. Clients can be identified
        by a client key or either the MAC or IP depending on whether the network uses
        Track-by-IP.
      operationId: getNetworkApplianceClientSecurityEvents
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Client ID
        in: path
        name: clientId
        required: true
        schema:
          type: string
      - description: The beginning of the timespan for the data. Data is gathered
          after the specified t0 value. The maximum lookback period is 791 days from
          today.
        in: query
        name: t0
        schema:
          type: string
      - description: The end of the timespan for the data. t1 can be a maximum of
          791 days after t0.
        in: query
        name: t1
        schema:
          type: string
      - description: The timespan for which the information will be fetched. If specifying
          timespan, do not specify parameters t0 and t1. The value must be in seconds
          and be less than or equal to 791 days. The default is 31 days.
        in: query
        name: timespan
        schema:
          format: float
          type: number
      - description: The number of entries per page returned. Acceptable range is
          3 - 1000. Default is 100.
        in: query
        name: perPage
        schema:
          type: integer
      - description: A token used by the server to indicate the start of the page.
          Often this is a timestamp or an ID but it is not limited to those. This
          parameter should not be defined by client applications. The link for the
          first, last, prev, or next page in the HTTP Link header should define it.
        in: query
        name: startingAfter
        schema:
          type: string
      - description: A token used by the server to indicate the end of the page. Often
          this is a timestamp or an ID but it is not limited to those. This parameter
          should not be defined by client applications. The link for the first, last,
          prev, or next page in the HTTP Link header should define it.
        in: query
        name: endingBefore
        schema:
          type: string
      - description: Sorted order of security events based on event detection time.
          Order options are 'ascending' or 'descending'. Default is ascending order.
        in: query
        name: sortOrder
        schema:
          enum:
          - ascending
          - descending
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - ts: 2020-03-20T16:00:10.144989Z
                eventType: File Scanned
                clientName: COMPUTER-M-V78J
                clientMac: 10:dd:b1:eb:88:f8
                clientIp: 192.168.128.2
                srcIp: 192.168.128.2
                destIp: 119.192.233.48
                protocol: http
                uri: http://www.favorite-icons.com/program/FavoriteIconsUninstall.exe
                canonicalName: PUA.Win.Dropper.Kraddare::1201
                destinationPort: 80
                fileHash: 3ec1b9a95fe62aa25fc959643a0f227b76d253094681934daaf628d3574b3463
                fileType: MS_EXE
                fileSizeBytes: 193688
                disposition: Malicious
                action: Blocked
              - ts: 2018-02-11T00:00:00.090210Z
                eventType: IDS Alert
                deviceMac: 00:18:0a:01:02:03
                clientMac: A1:B2:C3:D4:E5:F6
                srcIp: 1.2.3.4:34195
                destIp: 10.20.30.40:80
                protocol: tcp/ip
                priority: "2"
                classification: "4"
                blocked: true
                message: SERVER-WEBAPP JBoss JMX console access attempt
                signature: 1:21516:9
                sigSource: ""
                ruleId: meraki:intrusion/snort/GID/1/SID/26267
              - ts: 2018-02-11T00:00:00.090210Z
                eventType: IDS Alert
                deviceMac: 00:18:0a:01:02:03
                clientMac: A1:B2:C3:D4:E5:F6
                srcIp: 1.2.3.4:56023
                destIp: 10.20.30.40:80
                protocol: tcp/ip
                priority: "1"
                classification: "33"
                blocked: true
                message: POLICY-OTHER Adobe ColdFusion admin interface access attempt
                signature: 1:25975:2
                sigSource: ""
                ruleId: meraki:intrusion/snort/GID/1/SID/26267
              schema:
                items:
                  properties: {}
                  type: object
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative
                links used for subsequent paginated requests.
              schema:
                type: string
      summary: List the security events for a client
      tags:
      - appliance
      - monitor
      - clients
      - security
      - events
  /networks/{networkId}/appliance/connectivityMonitoringDestinations:
    get:
      description: Return the connectivity testing destinations for an MX network
      operationId: getNetworkApplianceConnectivityMonitoringDestinations
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                destinations:
                - ip: 8.8.8.8
                  description: Google
                  default: false
                - ip: 1.23.45.67
                  description: test description
                  default: true
                - ip: 9.8.7.6
                  default: false
              schema:
                type: object
          description: Successful operation
      summary: Return the connectivity testing destinations for an MX network
      tags:
      - appliance
      - configure
      - connectivityMonitoringDestinations
    put:
      description: Update the connectivity testing destinations for an MX network
      operationId: updateNetworkApplianceConnectivityMonitoringDestinations
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_28'
        content:
          application/json:
            schema:
              example:
                destinations:
                - ip: 8.8.8.8
                  description: Google
                  default: false
                - ip: 1.23.45.67
                  description: test description
                  default: true
                - ip: 9.8.7.6
              properties:
                destinations:
                  description: The list of connectivity monitoring destinations
                  items:
                    $ref: '#/components/schemas/_networks__networkId__appliance_connectivityMonitoringDestinations_destinations'
                  type: array
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                destinations:
                - ip: 8.8.8.8
                  description: Google
                  default: false
                - ip: 1.23.45.67
                  description: test description
                  default: true
                - ip: 9.8.7.6
                  default: false
              schema:
                type: object
          description: Successful operation
      summary: Update the connectivity testing destinations for an MX network
      tags:
      - appliance
      - configure
      - connectivityMonitoringDestinations
      x-codegen-request-body-name: updateNetworkApplianceConnectivityMonitoringDestinations
  /networks/{networkId}/appliance/contentFiltering:
    get:
      description: Return the content filtering settings for an MX network
      operationId: getNetworkApplianceContentFiltering
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                allowedUrlPatterns:
                - http://www.example.org
                - http://help.com.au
                blockedUrlPatterns:
                - http://www.example.com
                - http://www.betting.com
                blockedUrlCategories:
                - id: meraki:contentFiltering/category/1
                  name: Real Estate
                - id: meraki:contentFiltering/category/7
                  name: Shopping
                urlCategoryListSize: topSites
              schema:
                type: object
          description: Successful operation
      summary: Return the content filtering settings for an MX network
      tags:
      - appliance
      - configure
      - contentFiltering
    put:
      description: Update the content filtering settings for an MX network
      operationId: updateNetworkApplianceContentFiltering
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_29'
        content:
          application/json:
            schema:
              example:
                allowedUrlPatterns:
                - http://www.example.org
                - http://help.com.au
                blockedUrlPatterns:
                - http://www.example.com
                - http://www.betting.com
                blockedUrlCategories:
                - meraki:contentFiltering/category/1
                - meraki:contentFiltering/category/7
                urlCategoryListSize: topSites
              properties:
                allowedUrlPatterns:
                  description: A list of URL patterns that are allowed
                  items:
                    type: string
                  type: array
                blockedUrlPatterns:
                  description: A list of URL patterns that are blocked
                  items:
                    type: string
                  type: array
                blockedUrlCategories:
                  description: A list of URL categories to block
                  items:
                    type: string
                  type: array
                urlCategoryListSize:
                  description: URL category list size which is either 'topSites' or
                    'fullList'
                  enum:
                  - fullList
                  - topSites
                  type: string
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                allowedUrlPatterns:
                - http://www.example.org
                - http://help.com.au
                blockedUrlPatterns:
                - http://www.example.com
                - http://www.betting.com
                blockedUrlCategories:
                - id: meraki:contentFiltering/category/1
                  name: Real Estate
                - id: meraki:contentFiltering/category/7
                  name: Shopping
                urlCategoryListSize: topSites
              schema:
                type: object
          description: Successful operation
      summary: Update the content filtering settings for an MX network
      tags:
      - appliance
      - configure
      - contentFiltering
      x-codegen-request-body-name: updateNetworkApplianceContentFiltering
  /networks/{networkId}/appliance/contentFiltering/categories:
    get:
      description: List all available content filtering categories for an MX network
      operationId: getNetworkApplianceContentFilteringCategories
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                categories:
                - id: meraki:contentFiltering/category/1
                  name: Real Estate
                - id: meraki:contentFiltering/category/3
                  name: Financial Services
                - '...'
                - id: meraki:contentFiltering/category/11
                  name: Adult and Pornography
              schema:
                type: object
          description: Successful operation
      summary: List all available content filtering categories for an MX network
      tags:
      - appliance
      - configure
      - contentFiltering
      - categories
  /networks/{networkId}/appliance/firewall/cellularFirewallRules:
    get:
      description: Return the cellular firewall rules for an MX network
      operationId: getNetworkApplianceFirewallCellularFirewallRules
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                rules:
                - comment: Allow TCP traffic to subnet with HTTP servers.
                  policy: allow
                  protocol: tcp
                  destPort: "443"
                  destCidr: 192.168.1.0/24
                  srcPort: Any
                  srcCidr: Any
                  syslogEnabled: false
              schema:
                type: object
          description: Successful operation
      summary: Return the cellular firewall rules for an MX network
      tags:
      - appliance
      - configure
      - firewall
      - cellularFirewallRules
    put:
      description: Update the cellular firewall rules of an MX network
      operationId: updateNetworkApplianceFirewallCellularFirewallRules
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_30'
        content:
          application/json:
            schema:
              example:
                rules:
                - comment: Allow TCP traffic to subnet with HTTP servers.
                  policy: allow
                  protocol: tcp
                  destPort: "443"
                  destCidr: 192.168.1.0/24
                  srcPort: Any
                  srcCidr: Any
                  syslogEnabled: false
              properties:
                rules:
                  description: An ordered array of the firewall rules (not including
                    the default rule)
                  items:
                    $ref: '#/components/schemas/_networks__networkId__appliance_firewall_cellularFirewallRules_rules'
                  type: array
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                rules:
                - comment: Allow TCP traffic to subnet with HTTP servers.
                  policy: allow
                  protocol: tcp
                  destPort: "443"
                  destCidr: 192.168.1.0/24
                  srcPort: Any
                  srcCidr: Any
                  syslogEnabled: false
              schema:
                type: object
          description: Successful operation
      summary: Update the cellular firewall rules of an MX network
      tags:
      - appliance
      - configure
      - firewall
      - cellularFirewallRules
      x-codegen-request-body-name: updateNetworkApplianceFirewallCellularFirewallRules
  /networks/{networkId}/appliance/firewall/firewalledServices:
    get:
      description: List the appliance services and their accessibility rules
      operationId: getNetworkApplianceFirewallFirewalledServices
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - service: web
                access: restricted
                allowedIps:
                - 123.123.123.1
              schema:
                items:
                  properties: {}
                  type: object
                type: array
          description: Successful operation
      summary: List the appliance services and their accessibility rules
      tags:
      - appliance
      - configure
      - firewall
      - firewalledServices
  /networks/{networkId}/appliance/firewall/firewalledServices/{service}:
    get:
      description: Return the accessibility settings of the given service ('ICMP',
        'web', or 'SNMP')
      operationId: getNetworkApplianceFirewallFirewalledService
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Service
        in: path
        name: service
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                service: web
                access: restricted
                allowedIps:
                - 123.123.123.1
              schema:
                type: object
          description: Successful operation
      summary: Return the accessibility settings of the given service ('ICMP', 'web',
        or 'SNMP')
      tags:
      - appliance
      - configure
      - firewall
      - firewalledServices
    put:
      description: Updates the accessibility settings for the given service ('ICMP',
        'web', or 'SNMP')
      operationId: updateNetworkApplianceFirewallFirewalledService
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Service
        in: path
        name: service
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_31'
        content:
          application/json:
            schema:
              example:
                access: restricted
                allowedIps:
                - 123.123.123.1
              properties:
                access:
                  description: A string indicating the rule for which IPs are allowed
                    to use the specified service. Acceptable values are "blocked"
                    (no remote IPs can access the service), "restricted" (only allowed
                    IPs can access the service), and "unrestriced" (any remote IP
                    can access the service). This field is required
                  enum:
                  - blocked
                  - restricted
                  - unrestricted
                  type: string
                allowedIps:
                  description: An array of allowed IPs that can access the service.
                    This field is required if "access" is set to "restricted". Otherwise
                    this field is ignored
                  items:
                    type: string
                  type: array
              required:
              - access
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                service: web
                access: restricted
                allowedIps:
                - 123.123.123.1
              schema:
                type: object
          description: Successful operation
      summary: Updates the accessibility settings for the given service ('ICMP', 'web',
        or 'SNMP')
      tags:
      - appliance
      - configure
      - firewall
      - firewalledServices
      x-codegen-request-body-name: updateNetworkApplianceFirewallFirewalledService
  /networks/{networkId}/appliance/firewall/inboundCellularFirewallRules:
    get:
      description: Return the inbound cellular firewall rules for an MX network
      operationId: getNetworkApplianceFirewallInboundCellularFirewallRules
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - comment: Allow TCP traffic to subnet with HTTP servers.
                policy: allow
                protocol: tcp
                destPort: "443"
                destCidr: 192.168.1.0/24
                srcPort: Any
                srcCidr: Any
                syslogEnabled: false
              schema:
                items:
                  properties: {}
                  type: object
                type: array
          description: Successful operation
      summary: Return the inbound cellular firewall rules for an MX network
      tags:
      - appliance
      - configure
      - firewall
      - inboundCellularFirewallRules
    put:
      description: Update the inbound cellular firewall rules of an MX network
      operationId: updateNetworkApplianceFirewallInboundCellularFirewallRules
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_32'
        content:
          application/json:
            schema:
              example:
                rules:
                - comment: Allow TCP traffic to subnet with HTTP servers.
                  policy: allow
                  protocol: tcp
                  destPort: "443"
                  destCidr: 192.168.1.0/24
                  srcPort: Any
                  srcCidr: Any
                  syslogEnabled: false
              properties:
                rules:
                  description: An ordered array of the firewall rules (not including
                    the default rule)
                  items:
                    $ref: '#/components/schemas/_networks__networkId__appliance_firewall_cellularFirewallRules_rules'
                  type: array
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
              - comment: Allow TCP traffic to subnet with HTTP servers.
                policy: allow
                protocol: tcp
                destPort: "443"
                destCidr: 192.168.1.0/24
                srcPort: Any
                srcCidr: Any
                syslogEnabled: false
              schema:
                items:
                  properties: {}
                  type: object
                type: array
          description: Successful operation
      summary: Update the inbound cellular firewall rules of an MX network
      tags:
      - appliance
      - configure
      - firewall
      - inboundCellularFirewallRules
      x-codegen-request-body-name: updateNetworkApplianceFirewallInboundCellularFirewallRules
  /networks/{networkId}/appliance/firewall/inboundFirewallRules:
    get:
      description: Return the inbound firewall rules for an MX network
      operationId: getNetworkApplianceFirewallInboundFirewallRules
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                rules:
                - comment: Allow TCP traffic to subnet with HTTP servers.
                  policy: allow
                  protocol: tcp
                  destPort: "443"
                  destCidr: 192.168.1.0/24
                  srcPort: Any
                  srcCidr: Any
                  syslogEnabled: false
                syslogDefaultRule: true
              schema:
                type: object
          description: Successful operation
      summary: Return the inbound firewall rules for an MX network
      tags:
      - appliance
      - configure
      - firewall
      - inboundFirewallRules
    put:
      description: Update the inbound firewall rules of an MX network
      operationId: updateNetworkApplianceFirewallInboundFirewallRules
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_33'
        content:
          application/json:
            schema:
              example:
                rules:
                - comment: Allow TCP traffic to subnet with HTTP servers.
                  policy: allow
                  protocol: tcp
                  destPort: "443"
                  destCidr: 192.168.1.0/24
                  srcPort: Any
                  srcCidr: Any
                  syslogEnabled: false
              properties:
                rules:
                  description: An ordered array of the firewall rules (not including
                    the default rule)
                  items:
                    $ref: '#/components/schemas/_networks__networkId__appliance_firewall_cellularFirewallRules_rules'
                  type: array
                syslogDefaultRule:
                  description: Log the special default rule (boolean value - enable
                    only if you've configured a syslog server) (optional)
                  type: boolean
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                rules:
                - comment: Allow TCP traffic to subnet with HTTP servers.
                  policy: allow
                  protocol: tcp
                  destPort: "443"
                  destCidr: 192.168.1.0/24
                  srcPort: Any
                  srcCidr: Any
                  syslogEnabled: false
                syslogDefaultRule: true
              schema:
                type: object
          description: Successful operation
      summary: Update the inbound firewall rules of an MX network
      tags:
      - appliance
      - configure
      - firewall
      - inboundFirewallRules
      x-codegen-request-body-name: updateNetworkApplianceFirewallInboundFirewallRules
  /networks/{networkId}/appliance/firewall/l3FirewallRules:
    get:
      description: Return the L3 firewall rules for an MX network
      operationId: getNetworkApplianceFirewallL3FirewallRules
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                rules:
                - comment: Allow TCP traffic to subnet with HTTP servers.
                  policy: allow
                  protocol: tcp
                  destPort: "443"
                  destCidr: 192.168.1.0/24
                  srcPort: Any
                  srcCidr: Any
                  syslogEnabled: false
              schema:
                type: object
          description: Successful operation
      summary: Return the L3 firewall rules for an MX network
      tags:
      - appliance
      - configure
      - firewall
      - l3FirewallRules
    put:
      description: Update the L3 firewall rules of an MX network
      operationId: updateNetworkApplianceFirewallL3FirewallRules
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_34'
        content:
          application/json:
            schema:
              example:
                rules:
                - comment: Allow TCP traffic to subnet with HTTP servers.
                  policy: allow
                  protocol: tcp
                  destPort: "443"
                  destCidr: 192.168.1.0/24
                  srcPort: Any
                  srcCidr: Any
                  syslogEnabled: false
              properties:
                rules:
                  description: An ordered array of the firewall rules (not including
                    the default rule)
                  items:
                    $ref: '#/components/schemas/_networks__networkId__appliance_firewall_cellularFirewallRules_rules'
                  type: array
                syslogDefaultRule:
                  description: Log the special default rule (boolean value - enable
                    only if you've configured a syslog server) (optional)
                  type: boolean
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                rules:
                - comment: Allow TCP traffic to subnet with HTTP servers.
                  policy: allow
                  protocol: tcp
                  destPort: "443"
                  destCidr: 192.168.1.0/24
                  srcPort: Any
                  srcCidr: Any
                  syslogEnabled: false
              schema:
                type: object
          description: Successful operation
      summary: Update the L3 firewall rules of an MX network
      tags:
      - appliance
      - configure
      - firewall
      - l3FirewallRules
      x-codegen-request-body-name: updateNetworkApplianceFirewallL3FirewallRules
  /networks/{networkId}/appliance/firewall/l7FirewallRules:
    get:
      description: List the MX L7 firewall rules for an MX network
      operationId: getNetworkApplianceFirewallL7FirewallRules
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                rules:
                - policy: deny
                  type: host
                  value: google.com
                - policy: deny
                  type: port
                  value: "23"
                - policy: deny
                  type: ipRange
                  value: 10.11.12.00/24
                - policy: deny
                  type: ipRange
                  value: 10.11.12.00/24:5555
              schema:
                type: object
          description: Successful operation
      summary: List the MX L7 firewall rules for an MX network
      tags:
      - appliance
      - configure
      - firewall
      - l7FirewallRules
    put:
      description: Update the MX L7 firewall rules for an MX network
      operationId: updateNetworkApplianceFirewallL7FirewallRules
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_35'
        content:
          application/json:
            schema:
              example:
                rules:
                - policy: deny
                  type: host
                  value: google.com
                - policy: deny
                  type: port
                  value: "23"
                - policy: deny
                  type: ipRange
                  value: 10.11.12.00/24
                - policy: deny
                  type: ipRange
                  value: 10.11.12.00/24:5555
              properties:
                rules:
                  description: An ordered array of the MX L7 firewall rules
                  items:
                    $ref: '#/components/schemas/_networks__networkId__appliance_firewall_l7FirewallRules_rules'
                  type: array
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                rules:
                - policy: deny
                  type: host
                  value: google.com
                - policy: deny
                  type: port
                  value: "23"
                - policy: deny
                  type: ipRange
                  value: 10.11.12.00/24
                - policy: deny
                  type: ipRange
                  value: 10.11.12.00/24:5555
              schema:
                type: object
          description: Successful operation
      summary: Update the MX L7 firewall rules for an MX network
      tags:
      - appliance
      - configure
      - firewall
      - l7FirewallRules
      x-codegen-request-body-name: updateNetworkApplianceFirewallL7FirewallRules
  /networks/{networkId}/appliance/firewall/l7FirewallRules/applicationCategories:
    get:
      description: Return the L7 firewall application categories and their associated
        applications for an MX network
      operationId: getNetworkApplianceFirewallL7FirewallRulesApplicationCategories
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                applicationCategories:
                - id: meraki:layer7/category/24
                  name: Advertising
                  applications:
                  - id: meraki:layer7/application/5
                    name: Advertising.com
                  - id: meraki:layer7/application/0
                    name: AppNexus
                  - id: meraki:layer7/application/1
                    name: Brightroll
              schema:
                type: object
          description: Successful operation
      summary: Return the L7 firewall application categories and their associated
        applications for an MX network
      tags:
      - appliance
      - configure
      - firewall
      - l7FirewallRules
      - applicationCategories
  /networks/{networkId}/appliance/firewall/oneToManyNatRules:
    get:
      description: Return the 1:Many NAT mapping rules for an MX network
      operationId: getNetworkApplianceFirewallOneToManyNatRules
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                rules:
                - publicIp: 146.11.11.13
                  uplink: internet1
                  portRules:
                  - name: Rule 1
                    protocol: tcp
                    publicPort: "9443"
                    localIp: 192.168.128.1
                    localPort: "443"
                    allowedIps:
                    - any
                  - name: Rule 2
                    protocol: tcp
                    publicPort: "8080"
                    localIp: 192.168.128.1
                    localPort: "80"
                    allowedIps:
                    - 10.82.110.0/24
                    - 10.82.111.0/24
              schema:
                type: object
          description: Successful operation
      summary: Return the 1:Many NAT mapping rules for an MX network
      tags:
      - appliance
      - configure
      - firewall
      - oneToManyNatRules
    put:
      description: Set the 1:Many NAT mapping rules for an MX network
      operationId: updateNetworkApplianceFirewallOneToManyNatRules
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_36'
        content:
          application/json:
            schema:
              example:
                rules:
                - publicIp: 146.11.11.13
                  uplink: internet1
                  portRules:
                  - name: Rule 1
                    protocol: tcp
                    publicPort: "9443"
                    localIp: 192.168.128.1
                    localPort: "443"
                    allowedIps:
                    - any
                  - name: Rule 2
                    protocol: tcp
                    publicPort: "8080"
                    localIp: 192.168.128.1
                    localPort: "80"
                    allowedIps:
                    - 10.82.110.0/24
                    - 10.82.111.0/24
              properties:
                rules:
                  description: An array of 1:Many nat rules
                  items:
                    $ref: '#/components/schemas/_networks__networkId__appliance_firewall_oneToManyNatRules_rules'
                  type: array
              required:
              - rules
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                rules:
                - publicIp: 146.11.11.13
                  uplink: internet1
                  portRules:
                  - name: Rule 1
                    protocol: tcp
                    publicPort: "9443"
                    localIp: 192.168.128.1
                    localPort: "443"
                    allowedIps:
                    - any
                  - name: Rule 2
                    protocol: tcp
                    publicPort: "8080"
                    localIp: 192.168.128.1
                    localPort: "80"
                    allowedIps:
                    - 10.82.110.0/24
                    - 10.82.111.0/24
              schema:
                type: object
          description: Successful operation
      summary: Set the 1:Many NAT mapping rules for an MX network
      tags:
      - appliance
      - configure
      - firewall
      - oneToManyNatRules
      x-codegen-request-body-name: updateNetworkApplianceFirewallOneToManyNatRules
  /networks/{networkId}/appliance/firewall/oneToOneNatRules:
    get:
      description: Return the 1:1 NAT mapping rules for an MX network
      operationId: getNetworkApplianceFirewallOneToOneNatRules
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                rules:
                - name: Service behind NAT
                  lanIp: 192.168.128.22
                  publicIp: 146.12.3.33
                  uplink: internet1
                  allowedInbound:
                  - protocol: tcp
                    destinationPorts:
                    - "80"
                    allowedIps:
                    - 10.82.112.0/24
                    - 10.82.0.0/16
                  - protocol: udp
                    destinationPorts:
                    - "8080"
                    allowedIps:
                    - 10.81.110.5
                    - 10.81.0.0/16
              schema:
                type: object
          description: Successful operation
      summary: Return the 1:1 NAT mapping rules for an MX network
      tags:
      - appliance
      - configure
      - firewall
      - oneToOneNatRules
    put:
      description: Set the 1:1 NAT mapping rules for an MX network
      operationId: updateNetworkApplianceFirewallOneToOneNatRules
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_37'
        content:
          application/json:
            schema:
              example:
                rules:
                - name: Service behind NAT
                  lanIp: 192.168.128.22
                  publicIp: 146.12.3.33
                  uplink: internet1
                  allowedInbound:
                  - protocol: tcp
                    destinationPorts:
                    - "80"
                    allowedIps:
                    - 10.82.112.0/24
                    - 10.82.0.0/16
                  - protocol: udp
                    destinationPorts:
                    - "8080"
                    allowedIps:
                    - 10.81.110.5
                    - 10.81.0.0/16
              properties:
                rules:
                  description: An array of 1:1 nat rules
                  items:
                    $ref: '#/components/schemas/_networks__networkId__appliance_firewall_oneToOneNatRules_rules'
                  type: array
              required:
              - rules
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                rules:
                - name: Service behind NAT
                  lanIp: 192.168.128.22
                  publicIp: 146.12.3.33
                  uplink: internet1
                  allowedInbound:
                  - protocol: tcp
                    destinationPorts:
                    - "80"
                    allowedIps:
                    - 10.82.112.0/24
                    - 10.82.0.0/16
                  - protocol: udp
                    destinationPorts:
                    - "8080"
                    allowedIps:
                    - 10.81.110.5
                    - 10.81.0.0/16
              schema:
                type: object
          description: Successful operation
      summary: Set the 1:1 NAT mapping rules for an MX network
      tags:
      - appliance
      - configure
      - firewall
      - oneToOneNatRules
      x-codegen-request-body-name: updateNetworkApplianceFirewallOneToOneNatRules
  /networks/{networkId}/appliance/firewall/portForwardingRules:
    get:
      description: Return the port forwarding rules for an MX network
      operationId: getNetworkApplianceFirewallPortForwardingRules
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                rules:
                - lanIp: 192.168.128.1
                  allowedIps:
                  - any
                  name: Description of Port Forwarding Rule
                  protocol: tcp
                  publicPort: 8100-8101
                  localPort: 442-443
                  uplink: both
              schema:
                type: object
          description: Successful operation
      summary: Return the port forwarding rules for an MX network
      tags:
      - appliance
      - configure
      - firewall
      - portForwardingRules
    put:
      description: Update the port forwarding rules for an MX network
      operationId: updateNetworkApplianceFirewallPortForwardingRules
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_38'
        content:
          application/json:
            schema:
              example:
                rules:
                - lanIp: 192.168.128.1
                  allowedIps:
                  - any
                  name: Description of Port Forwarding Rule
                  protocol: tcp
                  publicPort: 8100-8101
                  localPort: 442-443
                  uplink: both
              properties:
                rules:
                  description: An array of port forwarding params
                  items:
                    $ref: '#/components/schemas/_networks__networkId__appliance_firewall_portForwardingRules_rules'
                  type: array
              required:
              - rules
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                rules:
                - lanIp: 192.168.128.1
                  allowedIps:
                  - any
                  name: Description of Port Forwarding Rule
                  protocol: tcp
                  publicPort: 8100-8101
                  localPort: 442-443
                  uplink: both
              schema:
                type: object
          description: Successful operation
      summary: Update the port forwarding rules for an MX network
      tags:
      - appliance
      - configure
      - firewall
      - portForwardingRules
      x-codegen-request-body-name: updateNetworkApplianceFirewallPortForwardingRules
  /networks/{networkId}/appliance/firewall/settings:
    get:
      description: Return the firewall settings for this network
      operationId: getNetworkApplianceFirewallSettings
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                spoofingProtection:
                  ipSourceGuard:
                    mode: block
              schema:
                type: object
          description: Successful operation
      summary: Return the firewall settings for this network
      tags:
      - appliance
      - configure
      - firewall
      - settings
    put:
      description: Update the firewall settings for this network
      operationId: updateNetworkApplianceFirewallSettings
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_39'
        content:
          application/json:
            schema:
              example:
                spoofingProtection:
                  ipSourceGuard:
                    mode: block
              properties:
                spoofingProtection:
                  $ref: '#/components/schemas/_networks__networkId__appliance_firewall_settings_spoofingProtection'
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                spoofingProtection:
                  ipSourceGuard:
                    mode: block
              schema:
                type: object
          description: Successful operation
      summary: Update the firewall settings for this network
      tags:
      - appliance
      - configure
      - firewall
      - settings
      x-codegen-request-body-name: updateNetworkApplianceFirewallSettings
  /networks/{networkId}/appliance/ports:
    get:
      description: List per-port VLAN settings for all ports of a MX.
      operationId: getNetworkAppliancePorts
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - number: 1
                enabled: true
                type: access
                dropUntaggedTraffic: false
                vlan: 3
                allowedVlans: all
                accessPolicy: open
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_13'
                type: array
          description: Successful operation
      summary: List per-port VLAN settings for all ports of a MX.
      tags:
      - appliance
      - configure
      - ports
  /networks/{networkId}/appliance/ports/{portId}:
    get:
      description: Return per-port VLAN settings for a single MX port.
      operationId: getNetworkAppliancePort
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Port ID
        in: path
        name: portId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                number: 1
                enabled: true
                type: access
                dropUntaggedTraffic: false
                vlan: 3
                allowedVlans: all
                accessPolicy: open
              schema:
                $ref: '#/components/schemas/inline_response_200_13'
          description: Successful operation
      summary: Return per-port VLAN settings for a single MX port.
      tags:
      - appliance
      - configure
      - ports
    put:
      description: Update the per-port VLAN settings for a single MX port.
      operationId: updateNetworkAppliancePort
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Port ID
        in: path
        name: portId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_40'
        content:
          application/json:
            schema:
              example:
                enabled: true
                dropUntaggedTraffic: false
                type: access
                vlan: 3
                allowedVlans: all
                accessPolicy: open
              properties:
                enabled:
                  description: The status of the port
                  type: boolean
                dropUntaggedTraffic:
                  description: Trunk port can Drop all Untagged traffic. When true,
                    no VLAN is required. Access ports cannot have dropUntaggedTraffic
                    set to true.
                  type: boolean
                type:
                  description: 'The type of the port: ''access'' or ''trunk''.'
                  type: string
                vlan:
                  description: Native VLAN when the port is in Trunk mode. Access
                    VLAN when the port is in Access mode.
                  type: integer
                allowedVlans:
                  description: Comma-delimited list of the VLAN ID's allowed on the
                    port, or 'all' to permit all VLAN's on the port.
                  type: string
                accessPolicy:
                  description: 'The name of the policy. Only applicable to Access
                    ports. Valid values are: ''open'', ''8021x-radius'', ''mac-radius'',
                    ''hybris-radius'' for MX64 or Z3 or any MX supporting the per
                    port authentication feature. Otherwise, ''open'' is the only valid
                    value and ''open'' is the default value if the field is missing.'
                  type: string
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                number: 1
                enabled: true
                type: access
                dropUntaggedTraffic: false
                vlan: 3
                allowedVlans: all
                accessPolicy: open
              schema:
                $ref: '#/components/schemas/inline_response_200_13'
          description: Successful operation
      summary: Update the per-port VLAN settings for a single MX port.
      tags:
      - appliance
      - configure
      - ports
      x-codegen-request-body-name: updateNetworkAppliancePort
  /networks/{networkId}/appliance/prefixes/delegated/statics:
    get:
      description: List static delegated prefixes for a network
      operationId: getNetworkAppliancePrefixesDelegatedStatics
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - staticDelegatedPrefixId: "1284392014819"
                prefix: 2001:db8:3c4d:15::/64
                origin:
                  type: internet
                  interfaces:
                  - wan1
                description: Prefix on WAN 1 of Long Island Office network
                createdAt: 2018-05-12T00:00:00Z
                updatedAt: 2018-05-12T00:00:00Z
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_14'
                type: array
          description: Successful operation
      summary: List static delegated prefixes for a network
      tags:
      - appliance
      - configure
      - prefixes
      - delegated
      - statics
    post:
      description: Add a static delegated prefix from a network
      operationId: createNetworkAppliancePrefixesDelegatedStatic
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_41'
        content:
          application/json:
            schema:
              example:
                prefix: 2001:db8:3c4d:15::/64
                origin:
                  type: internet
                  interfaces:
                  - wan1
                description: Prefix on WAN 1 of Long Island Office network
              properties:
                prefix:
                  description: A static IPv6 prefix
                  type: string
                origin:
                  $ref: '#/components/schemas/_networks__networkId__appliance_prefixes_delegated_statics_origin_1'
                description:
                  description: A name or description for the prefix
                  type: string
              required:
              - origin
              - prefix
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                staticDelegatedPrefixId: "1284392014819"
                prefix: 2001:db8:3c4d:15::/64
                origin:
                  type: internet
                  interfaces:
                  - wan1
                description: Prefix on WAN 1 of Long Island Office network
                createdAt: 2018-05-12T00:00:00Z
                updatedAt: 2018-05-12T00:00:00Z
              schema:
                type: object
          description: Successful operation
      summary: Add a static delegated prefix from a network
      tags:
      - appliance
      - configure
      - prefixes
      - delegated
      - statics
      x-codegen-request-body-name: createNetworkAppliancePrefixesDelegatedStatic
  /networks/{networkId}/appliance/prefixes/delegated/statics/{staticDelegatedPrefixId}:
    delete:
      description: Delete a static delegated prefix from a network
      operationId: deleteNetworkAppliancePrefixesDelegatedStatic
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Static delegated prefix ID
        in: path
        name: staticDelegatedPrefixId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Successful operation
      summary: Delete a static delegated prefix from a network
      tags:
      - appliance
      - configure
      - prefixes
      - delegated
      - statics
    get:
      description: Return a static delegated prefix from a network
      operationId: getNetworkAppliancePrefixesDelegatedStatic
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Static delegated prefix ID
        in: path
        name: staticDelegatedPrefixId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                staticDelegatedPrefixId: "1284392014819"
                prefix: 2001:db8:3c4d:15::/64
                origin:
                  type: internet
                  interfaces:
                  - wan1
                description: Prefix on WAN 1 of Long Island Office network
                createdAt: 2018-05-12T00:00:00Z
                updatedAt: 2018-05-12T00:00:00Z
              schema:
                $ref: '#/components/schemas/inline_response_200_14'
          description: Successful operation
      summary: Return a static delegated prefix from a network
      tags:
      - appliance
      - configure
      - prefixes
      - delegated
      - statics
    put:
      description: Update a static delegated prefix from a network
      operationId: updateNetworkAppliancePrefixesDelegatedStatic
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Static delegated prefix ID
        in: path
        name: staticDelegatedPrefixId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_42'
        content:
          application/json:
            schema:
              example:
                prefix: 2001:db8:3c4d:15::/64
                origin:
                  type: internet
                  interfaces:
                  - wan1
                description: Prefix on WAN 1 of Long Island Office network
              properties:
                prefix:
                  description: A static IPv6 prefix
                  type: string
                origin:
                  $ref: '#/components/schemas/_networks__networkId__appliance_prefixes_delegated_statics_origin_1'
                description:
                  description: A name or description for the prefix
                  type: string
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                staticDelegatedPrefixId: "1284392014819"
                prefix: 2001:db8:3c4d:15::/64
                origin:
                  type: internet
                  interfaces:
                  - wan1
                description: Prefix on WAN 1 of Long Island Office network
                createdAt: 2018-05-12T00:00:00Z
                updatedAt: 2018-05-12T00:00:00Z
              schema:
                type: object
          description: Successful operation
      summary: Update a static delegated prefix from a network
      tags:
      - appliance
      - configure
      - prefixes
      - delegated
      - statics
      x-codegen-request-body-name: updateNetworkAppliancePrefixesDelegatedStatic
  /networks/{networkId}/appliance/security/events:
    get:
      description: List the security events for a network
      operationId: getNetworkApplianceSecurityEvents
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: The beginning of the timespan for the data. Data is gathered
          after the specified t0 value. The maximum lookback period is 365 days from
          today.
        in: query
        name: t0
        schema:
          type: string
      - description: The end of the timespan for the data. t1 can be a maximum of
          365 days after t0.
        in: query
        name: t1
        schema:
          type: string
      - description: The timespan for which the information will be fetched. If specifying
          timespan, do not specify parameters t0 and t1. The value must be in seconds
          and be less than or equal to 365 days. The default is 31 days.
        in: query
        name: timespan
        schema:
          format: float
          type: number
      - description: The number of entries per page returned. Acceptable range is
          3 - 1000. Default is 100.
        in: query
        name: perPage
        schema:
          type: integer
      - description: A token used by the server to indicate the start of the page.
          Often this is a timestamp or an ID but it is not limited to those. This
          parameter should not be defined by client applications. The link for the
          first, last, prev, or next page in the HTTP Link header should define it.
        in: query
        name: startingAfter
        schema:
          type: string
      - description: A token used by the server to indicate the end of the page. Often
          this is a timestamp or an ID but it is not limited to those. This parameter
          should not be defined by client applications. The link for the first, last,
          prev, or next page in the HTTP Link header should define it.
        in: query
        name: endingBefore
        schema:
          type: string
      - description: Sorted order of security events based on event detection time.
          Order options are 'ascending' or 'descending'. Default is ascending order.
        in: query
        name: sortOrder
        schema:
          enum:
          - ascending
          - descending
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - ts: 2020-03-20T16:00:10.144989Z
                eventType: File Scanned
                clientName: COMPUTER-M-V78J
                clientMac: 10:dd:b1:eb:88:f8
                clientIp: 192.168.128.2
                srcIp: 192.168.128.2
                destIp: 119.192.233.48
                protocol: http
                uri: http://www.favorite-icons.com/program/FavoriteIconsUninstall.exe
                canonicalName: PUA.Win.Dropper.Kraddare::1201
                destinationPort: 80
                fileHash: 3ec1b9a95fe62aa25fc959643a0f227b76d253094681934daaf628d3574b3463
                fileType: MS_EXE
                fileSizeBytes: 193688
                disposition: Malicious
                action: Blocked
              - ts: 2018-02-11T00:00:00.090210Z
                eventType: IDS Alert
                deviceMac: 00:18:0a:01:02:03
                clientMac: A1:B2:C3:D4:E5:F6
                srcIp: 1.2.3.4:34195
                destIp: 10.20.30.40:80
                protocol: tcp/ip
                priority: "2"
                classification: "4"
                blocked: true
                message: SERVER-WEBAPP JBoss JMX console access attempt
                signature: 1:21516:9
                sigSource: ""
                ruleId: meraki:intrusion/snort/GID/1/SID/26267
              - ts: 2018-02-11T00:00:00.090210Z
                eventType: IDS Alert
                deviceMac: 00:18:0a:01:02:03
                clientMac: A1:B2:C3:D4:E5:F6
                srcIp: 1.2.3.4:56023
                destIp: 10.20.30.40:80
                protocol: tcp/ip
                priority: "1"
                classification: "33"
                blocked: true
                message: POLICY-OTHER Adobe ColdFusion admin interface access attempt
                signature: 1:25975:2
                sigSource: ""
                ruleId: meraki:intrusion/snort/GID/1/SID/26267
              schema:
                items:
                  properties: {}
                  type: object
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative
                links used for subsequent paginated requests.
              schema:
                type: string
      summary: List the security events for a network
      tags:
      - appliance
      - monitor
      - security
      - events
  /networks/{networkId}/appliance/security/intrusion:
    get:
      description: Returns all supported intrusion settings for an MX network
      operationId: getNetworkApplianceSecurityIntrusion
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                mode: prevention
                idsRulesets: balanced
                protectedNetworks:
                  useDefault: false
                  includedCidr:
                  - 10.0.0.0/8
                  - 127.0.0.0/8
                  - 169.254.0.0/16
                  - 172.16.0.0/12
                  excludedCidr:
                  - 10.0.0.0/8
                  - 127.0.0.0/8
              schema:
                type: object
          description: Successful operation
      summary: Returns all supported intrusion settings for an MX network
      tags:
      - appliance
      - configure
      - security
      - intrusion
    put:
      description: Set the supported intrusion settings for an MX network
      operationId: updateNetworkApplianceSecurityIntrusion
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_43'
        content:
          application/json:
            schema:
              example:
                mode: prevention
                idsRulesets: balanced
                protectedNetworks:
                  useDefault: false
                  includedCidr:
                  - 10.0.0.0/8
                  - 127.0.0.0/8
                  - 169.254.0.0/16
                  - 172.16.0.0/12
                  excludedCidr:
                  - 10.0.0.0/8
                  - 127.0.0.0/8
              properties:
                mode:
                  description: Set mode to 'disabled'/'detection'/'prevention' (optional
                    - omitting will leave current config unchanged)
                  enum:
                  - detection
                  - disabled
                  - prevention
                  type: string
                idsRulesets:
                  description: Set the detection ruleset 'connectivity'/'balanced'/'security'
                    (optional - omitting will leave current config unchanged). Default
                    value is 'balanced' if none currently saved
                  enum:
                  - balanced
                  - connectivity
                  - security
                  type: string
                protectedNetworks:
                  $ref: '#/components/schemas/_networks__networkId__appliance_security_intrusion_protectedNetworks'
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                mode: prevention
                idsRulesets: balanced
                protectedNetworks:
                  useDefault: false
                  includedCidr:
                  - 10.0.0.0/8
                  - 127.0.0.0/8
                  - 169.254.0.0/16
                  - 172.16.0.0/12
                  excludedCidr:
                  - 10.0.0.0/8
                  - 127.0.0.0/8
              schema:
                type: object
          description: Successful operation
      summary: Set the supported intrusion settings for an MX network
      tags:
      - appliance
      - configure
      - security
      - intrusion
      x-codegen-request-body-name: updateNetworkApplianceSecurityIntrusion
  /networks/{networkId}/appliance/security/malware:
    get:
      description: Returns all supported malware settings for an MX network
      operationId: getNetworkApplianceSecurityMalware
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                mode: enabled
                allowedUrls:
                - url: example.org
                  comment: allow example.org
                - url: help.com.au
                  comment: allow help.com.au
                allowedFiles:
                - sha256: e82c5f7d75004727e1f3b94426b9a11c8bc4c312a9170ac9a73abace40aef503
                  comment: allow ZIP file
              schema:
                type: object
          description: Successful operation
      summary: Returns all supported malware settings for an MX network
      tags:
      - appliance
      - configure
      - security
      - malware
    put:
      description: Set the supported malware settings for an MX network
      operationId: updateNetworkApplianceSecurityMalware
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_44'
        content:
          application/json:
            schema:
              example:
                mode: enabled
                allowedUrls:
                - url: example.org
                  comment: allow example.org
                - url: help.com.au
                  comment: allow help.com.au
                allowedFiles:
                - sha256: e82c5f7d75004727e1f3b94426b9a11c8bc4c312a9170ac9a73abace40aef503
                  comment: allow ZIP file
              properties:
                mode:
                  description: Set mode to 'enabled' to enable malware prevention,
                    otherwise 'disabled'
                  enum:
                  - disabled
                  - enabled
                  type: string
                allowedUrls:
                  description: The urls that should be permitted by the malware detection
                    engine. If omitted, the current config will remain unchanged.
                    This is available only if your network supports AMP allow listing
                  items:
                    $ref: '#/components/schemas/_networks__networkId__appliance_security_malware_allowedUrls'
                  type: array
                allowedFiles:
                  description: The sha256 digests of files that should be permitted
                    by the malware detection engine. If omitted, the current config
                    will remain unchanged. This is available only if your network
                    supports AMP allow listing
                  items:
                    $ref: '#/components/schemas/_networks__networkId__appliance_security_malware_allowedFiles'
                  type: array
              required:
              - mode
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                mode: enabled
                allowedUrls:
                - url: example.org
                  comment: allow example.org
                - url: help.com.au
                  comment: allow help.com.au
                allowedFiles:
                - sha256: e82c5f7d75004727e1f3b94426b9a11c8bc4c312a9170ac9a73abace40aef503
                  comment: allow ZIP file
              schema:
                type: object
          description: Successful operation
      summary: Set the supported malware settings for an MX network
      tags:
      - appliance
      - configure
      - security
      - malware
      x-codegen-request-body-name: updateNetworkApplianceSecurityMalware
  /networks/{networkId}/appliance/settings:
    get:
      description: Return the appliance settings for a network
      operationId: getNetworkApplianceSettings
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                clientTrackingMethod: MAC address
                deploymentMode: routed
                dynamicDns:
                  enabled: true
                  prefix: test
                  url: test-adfgnnhjea.meraki.com
              schema:
                $ref: '#/components/schemas/inline_response_200_15'
          description: Successful operation
      summary: Return the appliance settings for a network
      tags:
      - appliance
      - configure
      - settings
    put:
      description: Update the appliance settings for a network
      operationId: updateNetworkApplianceSettings
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_45'
        content:
          application/json:
            schema:
              example:
                clientTrackingMethod: MAC address
                deploymentMode: routed
                dynamicDns:
                  prefix: test
                  enabled: true
              properties:
                clientTrackingMethod:
                  description: Client tracking method of a network
                  enum:
                  - IP address
                  - MAC address
                  - Unique client identifier
                  type: string
                deploymentMode:
                  description: Deployment mode of a network
                  enum:
                  - passthrough
                  - routed
                  type: string
                dynamicDns:
                  $ref: '#/components/schemas/_networks__networkId__appliance_settings_dynamicDns'
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                clientTrackingMethod: MAC address
                deploymentMode: routed
                dynamicDns:
                  enabled: true
                  prefix: test
                  url: test-adfgnnhjea.meraki.com
              schema:
                $ref: '#/components/schemas/inline_response_200_15'
          description: Successful operation
      summary: Update the appliance settings for a network
      tags:
      - appliance
      - configure
      - settings
      x-codegen-request-body-name: updateNetworkApplianceSettings
  /networks/{networkId}/appliance/singleLan:
    get:
      description: Return single LAN configuration
      operationId: getNetworkApplianceSingleLan
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                subnet: 192.168.1.0/24
                applianceIp: 192.168.1.2
                mandatoryDhcp:
                  enabled: true
                ipv6:
                  enabled: true
                  prefixAssignments:
                  - autonomous: false
                    staticPrefix: 2001:db8:3c4d:15::/64
                    staticApplianceIp6: 2001:db8:3c4d:15::1
                    origin:
                      type: internet
                      interfaces:
                      - wan0
              schema:
                $ref: '#/components/schemas/inline_response_200_16'
          description: Successful operation
      summary: Return single LAN configuration
      tags:
      - appliance
      - configure
      - singleLan
    put:
      description: Update single LAN configuration
      operationId: updateNetworkApplianceSingleLan
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_46'
        content:
          application/json:
            schema:
              example: {}
              properties:
                subnet:
                  description: The subnet of the single LAN configuration
                  type: string
                applianceIp:
                  description: The appliance IP address of the single LAN
                  type: string
                ipv6:
                  $ref: '#/components/schemas/_networks__networkId__appliance_singleLan_ipv6'
                mandatoryDhcp:
                  $ref: '#/components/schemas/_networks__networkId__appliance_singleLan_mandatoryDhcp'
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                subnet: 192.168.1.0/24
                applianceIp: 192.168.1.2
                mandatoryDhcp:
                  enabled: true
                ipv6:
                  enabled: true
                  prefixAssignments:
                  - autonomous: false
                    staticPrefix: 2001:db8:3c4d:15::/64
                    staticApplianceIp6: 2001:db8:3c4d:15::1
                    origin:
                      type: internet
                      interfaces:
                      - wan0
              schema:
                $ref: '#/components/schemas/inline_response_200_16'
          description: Successful operation
      summary: Update single LAN configuration
      tags:
      - appliance
      - configure
      - singleLan
      x-codegen-request-body-name: updateNetworkApplianceSingleLan
  /networks/{networkId}/appliance/ssids:
    get:
      description: List the MX SSIDs in a network
      operationId: getNetworkApplianceSsids
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - number: 1
                name: My SSID
                enabled: true
                defaultVlanId: 1
                authMode: 8021x-radius
                radiusServers:
                - host: 0.0.0.0
                  port: 1000
                encryptionMode: wpa
                wpaEncryptionMode: WPA2 only
                visible: true
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_17'
                type: array
          description: Successful operation
      summary: List the MX SSIDs in a network
      tags:
      - appliance
      - configure
      - ssids
  /networks/{networkId}/appliance/ssids/{number}:
    get:
      description: Return a single MX SSID
      operationId: getNetworkApplianceSsid
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Number
        in: path
        name: number
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                number: 1
                name: My SSID
                enabled: true
                defaultVlanId: 1
                authMode: 8021x-radius
                radiusServers:
                - host: 0.0.0.0
                  port: 1000
                encryptionMode: wpa
                wpaEncryptionMode: WPA2 only
                visible: true
              schema:
                $ref: '#/components/schemas/inline_response_200_17'
          description: Successful operation
      summary: Return a single MX SSID
      tags:
      - appliance
      - configure
      - ssids
    put:
      description: Update the attributes of an MX SSID
      operationId: updateNetworkApplianceSsid
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Number
        in: path
        name: number
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_47'
        content:
          application/json:
            schema:
              example:
                name: My SSID
                enabled: true
                defaultVlanId: 1
                authMode: 8021x-radius
                psk: psk
                radiusServers:
                - host: 0.0.0.0
                  port: 1000
                  secret: secret
                encryptionMode: wpa
                wpaEncryptionMode: WPA2 only
                visible: true
                dhcpEnforcedDeauthentication:
                  enabled: true
              properties:
                name:
                  description: The name of the SSID.
                  type: string
                enabled:
                  description: Whether or not the SSID is enabled.
                  type: boolean
                defaultVlanId:
                  description: The VLAN ID of the VLAN associated to this SSID. This
                    parameter is only valid if the network is in routed mode.
                  type: integer
                authMode:
                  description: The association control method for the SSID ('open',
                    'psk', '8021x-meraki' or '8021x-radius').
                  enum:
                  - 8021x-meraki
                  - 8021x-radius
                  - open
                  - psk
                  type: string
                psk:
                  description: The passkey for the SSID. This param is only valid
                    if the authMode is 'psk'.
                  type: string
                radiusServers:
                  description: The RADIUS 802.1x servers to be used for authentication.
                    This param is only valid if the authMode is '8021x-radius'.
                  items:
                    $ref: '#/components/schemas/_networks__networkId__appliance_ssids__number__radiusServers'
                  type: array
                encryptionMode:
                  description: The psk encryption mode for the SSID ('wep' or 'wpa').
                    This param is only valid if the authMode is 'psk'.
                  enum:
                  - wep
                  - wpa
                  type: string
                wpaEncryptionMode:
                  description: The types of WPA encryption. ('WPA1 and WPA2', 'WPA2
                    only', 'WPA3 Transition Mode' or 'WPA3 only'). This param is only
                    valid if (1) the authMode is 'psk' & the encryptionMode is 'wpa'
                    OR (2) the authMode is '8021x-meraki' OR (3) the authMode is '8021x-radius'
                  enum:
                  - WPA1 and WPA2
                  - WPA2 only
                  - WPA3 Transition Mode
                  - WPA3 only
                  type: string
                visible:
                  description: Boolean indicating whether the MX should advertise
                    or hide this SSID.
                  type: boolean
                dhcpEnforcedDeauthentication:
                  $ref: '#/components/schemas/_networks__networkId__appliance_ssids__number__dhcpEnforcedDeauthentication'
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                number: 1
                name: My SSID
                enabled: true
                defaultVlanId: 1
                authMode: 8021x-radius
                radiusServers:
                - host: 0.0.0.0
                  port: 1000
                encryptionMode: wpa
                wpaEncryptionMode: WPA2 only
                visible: true
              schema:
                $ref: '#/components/schemas/inline_response_200_17'
          description: Successful operation
      summary: Update the attributes of an MX SSID
      tags:
      - appliance
      - configure
      - ssids
      x-codegen-request-body-name: updateNetworkApplianceSsid
  /networks/{networkId}/appliance/staticRoutes:
    get:
      description: List the static routes for an MX or teleworker network
      operationId: getNetworkApplianceStaticRoutes
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - id: d7fa4948-7921-4dfa-af6b-ae8b16c20c39
                ipVersion: 4
                networkId: N_24329156
                enabled: true
                name: My route
                subnet: 192.168.1.0/24
                gatewayIp: 1.2.3.5
                fixedIpAssignments:
                  "22:33:44:55:66:77":
                    ip: 1.2.3.4
                    name: Some client name
                reservedIpRanges:
                - start: 192.168.1.0
                  end: 192.168.1.1
                  comment: A reserved IP range
              schema:
                items:
                  properties: {}
                  type: object
                type: array
          description: Successful operation
      summary: List the static routes for an MX or teleworker network
      tags:
      - appliance
      - configure
      - staticRoutes
    post:
      description: Add a static route for an MX or teleworker network
      operationId: createNetworkApplianceStaticRoute
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_48'
        content:
          application/json:
            schema:
              example:
                name: My route
                subnet: 192.168.1.0/24
                gatewayIp: 1.2.3.5
              properties:
                name:
                  description: The name of the new static route
                  type: string
                subnet:
                  description: The subnet of the static route
                  type: string
                gatewayIp:
                  description: The gateway IP (next hop) of the static route
                  type: string
                gatewayVlanId:
                  description: The gateway IP (next hop) VLAN ID of the static route
                  type: string
              required:
              - gatewayIp
              - name
              - subnet
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                id: d7fa4948-7921-4dfa-af6b-ae8b16c20c39
                ipVersion: 4
                networkId: N_24329156
                enabled: true
                name: My route
                subnet: 192.168.1.0/24
                gatewayIp: 1.2.3.5
                fixedIpAssignments: {}
                reservedIpRanges: []
                gatewayVlanId: 100
              schema:
                type: object
          description: Successful operation
      summary: Add a static route for an MX or teleworker network
      tags:
      - appliance
      - configure
      - staticRoutes
      x-codegen-request-body-name: createNetworkApplianceStaticRoute
  /networks/{networkId}/appliance/staticRoutes/{staticRouteId}:
    delete:
      description: Delete a static route from an MX or teleworker network
      operationId: deleteNetworkApplianceStaticRoute
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Static route ID
        in: path
        name: staticRouteId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Successful operation
      summary: Delete a static route from an MX or teleworker network
      tags:
      - appliance
      - configure
      - staticRoutes
    get:
      description: Return a static route for an MX or teleworker network
      operationId: getNetworkApplianceStaticRoute
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Static route ID
        in: path
        name: staticRouteId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                id: d7fa4948-7921-4dfa-af6b-ae8b16c20c39
                ipVersion: 4
                networkId: N_24329156
                enabled: true
                name: My route
                subnet: 192.168.1.0/24
                gatewayIp: 1.2.3.5
                fixedIpAssignments:
                  "22:33:44:55:66:77":
                    ip: 1.2.3.4
                    name: Some client name
                reservedIpRanges:
                - start: 192.168.1.0
                  end: 192.168.1.1
                  comment: A reserved IP range
              schema:
                type: object
          description: Successful operation
      summary: Return a static route for an MX or teleworker network
      tags:
      - appliance
      - configure
      - staticRoutes
    put:
      description: Update a static route for an MX or teleworker network
      operationId: updateNetworkApplianceStaticRoute
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Static route ID
        in: path
        name: staticRouteId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_49'
        content:
          application/json:
            schema:
              example:
                name: My route
                subnet: 192.168.1.0/24
                fixedIpAssignments:
                  "22:33:44:55:66:77":
                    ip: 1.2.3.4
                    name: Some client name
                reservedIpRanges:
                - start: 192.168.1.0
                  end: 192.168.1.1
                  comment: A reserved IP range
              properties:
                name:
                  description: The name of the static route
                  type: string
                subnet:
                  description: The subnet of the static route
                  type: string
                gatewayIp:
                  description: The gateway IP (next hop) of the static route
                  type: string
                gatewayVlanId:
                  description: The gateway IP (next hop) VLAN ID of the static route
                  type: string
                enabled:
                  description: The enabled state of the static route
                  type: boolean
                fixedIpAssignments:
                  description: The DHCP fixed IP assignments on the static route.
                    This should be an object that contains mappings from MAC addresses
                    to objects that themselves each contain "ip" and "name" string
                    fields. See the sample request/response for more details.
                  properties: {}
                  type: object
                reservedIpRanges:
                  description: The DHCP reserved IP ranges on the static route
                  items:
                    $ref: '#/components/schemas/_networks__networkId__appliance_staticRoutes__staticRouteId__reservedIpRanges'
                  type: array
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                id: d7fa4948-7921-4dfa-af6b-ae8b16c20c39
                ipVersion: 4
                networkId: N_24329156
                enabled: true
                name: My route
                subnet: 192.168.1.0/24
                gatewayIp: 1.2.3.5
                fixedIpAssignments:
                  "22:33:44:55:66:77":
                    ip: 1.2.3.4
                    name: Some client name
                reservedIpRanges:
                - start: 192.168.1.0
                  end: 192.168.1.1
                  comment: A reserved IP range
              schema:
                type: object
          description: Successful operation
      summary: Update a static route for an MX or teleworker network
      tags:
      - appliance
      - configure
      - staticRoutes
      x-codegen-request-body-name: updateNetworkApplianceStaticRoute
  /networks/{networkId}/appliance/trafficShaping:
    get:
      description: Display the traffic shaping settings for an MX network
      operationId: getNetworkApplianceTrafficShaping
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                globalBandwidthLimits:
                  limitUp: 2048
                  limitDown: 5120
              schema:
                type: object
          description: Successful operation
      summary: Display the traffic shaping settings for an MX network
      tags:
      - appliance
      - configure
      - trafficShaping
    put:
      description: Update the traffic shaping settings for an MX network
      operationId: updateNetworkApplianceTrafficShaping
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_50'
        content:
          application/json:
            schema:
              example:
                globalBandwidthLimits:
                  limitUp: 2048
                  limitDown: 5120
              properties:
                globalBandwidthLimits:
                  $ref: '#/components/schemas/_networks__networkId__appliance_trafficShaping_globalBandwidthLimits'
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                globalBandwidthLimits:
                  limitUp: 2048
                  limitDown: 5120
              schema:
                type: object
          description: Successful operation
      summary: Update the traffic shaping settings for an MX network
      tags:
      - appliance
      - configure
      - trafficShaping
      x-codegen-request-body-name: updateNetworkApplianceTrafficShaping
  /networks/{networkId}/appliance/trafficShaping/customPerformanceClasses:
    get:
      description: List all custom performance classes for an MX network
      operationId: getNetworkApplianceTrafficShapingCustomPerformanceClasses
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - customPerformanceClassId: "123"
                name: myCustomPerformanceClass
                maxLatency: 100
                maxJitter: 100
                maxLossPercentage: 5
              schema:
                items:
                  properties: {}
                  type: object
                type: array
          description: Successful operation
      summary: List all custom performance classes for an MX network
      tags:
      - appliance
      - configure
      - trafficShaping
      - customPerformanceClasses
    post:
      description: Add a custom performance class for an MX network
      operationId: createNetworkApplianceTrafficShapingCustomPerformanceClass
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_51'
        content:
          application/json:
            schema:
              example:
                name: myCustomPerformanceClass
                maxLatency: 100
                maxJitter: 100
                maxLossPercentage: 5
              properties:
                name:
                  description: Name of the custom performance class
                  type: string
                maxLatency:
                  description: Maximum latency in milliseconds
                  type: integer
                maxJitter:
                  description: Maximum jitter in milliseconds
                  type: integer
                maxLossPercentage:
                  description: Maximum percentage of packet loss
                  type: integer
              required:
              - name
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                customPerformanceClassId: "123"
                name: myCustomPerformanceClass
                maxLatency: 100
                maxJitter: 100
                maxLossPercentage: 5
              schema:
                type: object
          description: Successful operation
      summary: Add a custom performance class for an MX network
      tags:
      - appliance
      - configure
      - trafficShaping
      - customPerformanceClasses
      x-codegen-request-body-name: createNetworkApplianceTrafficShapingCustomPerformanceClass
  /networks/{networkId}/appliance/trafficShaping/customPerformanceClasses/{customPerformanceClassId}:
    delete:
      description: Delete a custom performance class from an MX network
      operationId: deleteNetworkApplianceTrafficShapingCustomPerformanceClass
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Custom performance class ID
        in: path
        name: customPerformanceClassId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Successful operation
      summary: Delete a custom performance class from an MX network
      tags:
      - appliance
      - configure
      - trafficShaping
      - customPerformanceClasses
    get:
      description: Return a custom performance class for an MX network
      operationId: getNetworkApplianceTrafficShapingCustomPerformanceClass
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Custom performance class ID
        in: path
        name: customPerformanceClassId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                customPerformanceClassId: "123"
                name: myCustomPerformanceClass
                maxLatency: 100
                maxJitter: 100
                maxLossPercentage: 5
              schema:
                type: object
          description: Successful operation
      summary: Return a custom performance class for an MX network
      tags:
      - appliance
      - configure
      - trafficShaping
      - customPerformanceClasses
    put:
      description: Update a custom performance class for an MX network
      operationId: updateNetworkApplianceTrafficShapingCustomPerformanceClass
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Custom performance class ID
        in: path
        name: customPerformanceClassId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_52'
        content:
          application/json:
            schema:
              example:
                name: myCustomPerformanceClass
                maxLatency: 100
                maxJitter: 100
                maxLossPercentage: 5
              properties:
                name:
                  description: Name of the custom performance class
                  type: string
                maxLatency:
                  description: Maximum latency in milliseconds
                  type: integer
                maxJitter:
                  description: Maximum jitter in milliseconds
                  type: integer
                maxLossPercentage:
                  description: Maximum percentage of packet loss
                  type: integer
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                customPerformanceClassId: "123"
                name: myCustomPerformanceClass
                maxLatency: 100
                maxJitter: 100
                maxLossPercentage: 5
              schema:
                type: object
          description: Successful operation
      summary: Update a custom performance class for an MX network
      tags:
      - appliance
      - configure
      - trafficShaping
      - customPerformanceClasses
      x-codegen-request-body-name: updateNetworkApplianceTrafficShapingCustomPerformanceClass
  /networks/{networkId}/appliance/trafficShaping/rules:
    get:
      description: Display the traffic shaping settings rules for an MX network
      operationId: getNetworkApplianceTrafficShapingRules
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                defaultRulesEnabled: true
                rules:
                - definitions:
                  - type: host
                    value: google.com
                  - type: port
                    value: "9090"
                  - type: ipRange
                    value: 192.1.0.0
                  - type: ipRange
                    value: 192.1.0.0/16
                  - type: ipRange
                    value: 10.1.0.0/16:80
                  - type: localNet
                    value: 192.168.0.0/16
                  perClientBandwidthLimits:
                    settings: custom
                    bandwidthLimits:
                      limitUp: 1000000
                      limitDown: 1000000
                  dscpTagValue: 0
                  priority: normal
              schema:
                type: object
          description: Successful operation
      summary: Display the traffic shaping settings rules for an MX network
      tags:
      - appliance
      - configure
      - trafficShaping
      - rules
    put:
      description: Update the traffic shaping settings rules for an MX network
      operationId: updateNetworkApplianceTrafficShapingRules
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_53'
        content:
          application/json:
            schema:
              example:
                defaultRulesEnabled: true
                rules:
                - definitions:
                  - type: host
                    value: google.com
                  - type: port
                    value: "9090"
                  - type: ipRange
                    value: 192.1.0.0
                  - type: ipRange
                    value: 192.1.0.0/16
                  - type: ipRange
                    value: 10.1.0.0/16:80
                  - type: localNet
                    value: 192.168.0.0/16
                  perClientBandwidthLimits:
                    settings: custom
                    bandwidthLimits:
                      limitUp: 1000000
                      limitDown: 1000000
                  dscpTagValue: 0
                  priority: normal
              properties:
                defaultRulesEnabled:
                  description: Whether default traffic shaping rules are enabled (true)
                    or disabled (false). There are 4 default rules, which can be seen
                    on your network's traffic shaping page. Note that default rules
                    count against the rule limit of 8.
                  type: boolean
                rules:
                  description: |2
                        An array of traffic shaping rules. Rules are applied in the order that
                        they are specified in. An empty list (or null) means no rules. Note that
                        you are allowed a maximum of 8 rules.
                  items:
                    $ref: '#/components/schemas/_networks__networkId__appliance_trafficShaping_rules_rules'
                  type: array
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                defaultRulesEnabled: true
                rules:
                - definitions:
                  - type: host
                    value: google.com
                  - type: port
                    value: "9090"
                  - type: ipRange
                    value: 192.1.0.0
                  - type: ipRange
                    value: 192.1.0.0/16
                  - type: ipRange
                    value: 10.1.0.0/16:80
                  - type: localNet
                    value: 192.168.0.0/16
                  perClientBandwidthLimits:
                    settings: custom
                    bandwidthLimits:
                      limitUp: 1000000
                      limitDown: 1000000
                  dscpTagValue: 0
                  priority: normal
              schema:
                type: object
          description: Successful operation
      summary: Update the traffic shaping settings rules for an MX network
      tags:
      - appliance
      - configure
      - trafficShaping
      - rules
      x-codegen-request-body-name: updateNetworkApplianceTrafficShapingRules
  /networks/{networkId}/appliance/trafficShaping/uplinkBandwidth:
    get:
      description: Returns the uplink bandwidth limits for your MX network. This may
        not reflect the affected device's hardware capabilities.  For more information
        on your device's hardware capabilities, please consult our MX Family Datasheet
        - [https://meraki.cisco.com/product-collateral/mx-family-datasheet/?file]
      operationId: getNetworkApplianceTrafficShapingUplinkBandwidth
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                bandwidthLimits:
                  wan1:
                    limitUp: 1000000
                    limitDown: 1000000
                  wan2:
                    limitUp: 1000000
                    limitDown: 1000000
                  cellular:
                    limitUp: 51200
                    limitDown: 51200
              schema:
                $ref: '#/components/schemas/inline_response_200_18'
          description: Successful operation
      summary: Returns the uplink bandwidth limits for your MX network
      tags:
      - appliance
      - configure
      - trafficShaping
      - uplinkBandwidth
    put:
      description: Updates the uplink bandwidth settings for your MX network.
      operationId: updateNetworkApplianceTrafficShapingUplinkBandwidth
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_54'
        content:
          application/json:
            schema:
              example:
                bandwidthLimits:
                  wan1:
                    limitUp: 1000000
                    limitDown: 1000000
                  wan2:
                    limitUp: 1000000
                    limitDown: 1000000
                  cellular:
                    limitUp: 51200
                    limitDown: 51200
              properties:
                bandwidthLimits:
                  $ref: '#/components/schemas/_networks__networkId__appliance_trafficShaping_uplinkBandwidth_bandwidthLimits'
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                bandwidthLimits:
                  wan1:
                    limitUp: 1000000
                    limitDown: 1000000
                  wan2:
                    limitUp: 1000000
                    limitDown: 1000000
                  cellular:
                    limitUp: 51200
                    limitDown: 51200
              schema:
                type: object
          description: Successful operation
      summary: Updates the uplink bandwidth settings for your MX network.
      tags:
      - appliance
      - configure
      - trafficShaping
      - uplinkBandwidth
      x-codegen-request-body-name: updateNetworkApplianceTrafficShapingUplinkBandwidth
  /networks/{networkId}/appliance/trafficShaping/uplinkSelection:
    get:
      description: Show uplink selection settings for an MX network
      operationId: getNetworkApplianceTrafficShapingUplinkSelection
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                activeActiveAutoVpnEnabled: true
                defaultUplink: wan1
                loadBalancingEnabled: true
                failoverAndFailback:
                  immediate:
                    enabled: true
                wanTrafficUplinkPreferences:
                - trafficFilters:
                  - type: custom
                    value:
                      protocol: tcp
                      source:
                        port: 1-1024
                        cidr: 192.168.1.0/24
                        vlan: 10
                        host: 254
                      destination:
                        port: any
                        cidr: any
                  preferredUplink: wan1
                vpnTrafficUplinkPreferences:
                - trafficFilters:
                  - type: applicationCategory
                    value:
                      id: meraki:layer7/category/1
                      protocol: tcp
                      source:
                        port: any
                        cidr: 192.168.1.0/24
                        network: L_23456789
                        vlan: 20
                        host: 200
                      destination:
                        port: 1-1024
                        cidr: any
                        network: L_12345678
                        vlan: 10
                        host: 254
                        fqdn: www.google.com
                  preferredUplink: bestForVoIP
                  failOverCriterion: poorPerformance
                  performanceClass:
                    type: custom
                    builtinPerformanceClassName: VoIP
                    customPerformanceClassId: "123456"
              schema:
                $ref: '#/components/schemas/inline_response_200_19'
          description: Successful operation
      summary: Show uplink selection settings for an MX network
      tags:
      - appliance
      - configure
      - trafficShaping
      - uplinkSelection
    put:
      description: Update uplink selection settings for an MX network
      operationId: updateNetworkApplianceTrafficShapingUplinkSelection
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_55'
        content:
          application/json:
            schema:
              example:
                activeActiveAutoVpnEnabled: true
                defaultUplink: wan1
                loadBalancingEnabled: true
                failoverAndFailback:
                  immediate:
                    enabled: true
                wanTrafficUplinkPreferences:
                - trafficFilters:
                  - type: custom
                    value:
                      protocol: tcp
                      source:
                        port: 1-1024
                        cidr: 192.168.1.0/24
                        vlan: 10
                        host: 254
                      destination:
                        port: any
                        cidr: any
                  preferredUplink: wan1
                vpnTrafficUplinkPreferences:
                - trafficFilters:
                  - type: applicationCategory
                    value:
                      id: meraki:layer7/category/1
                      protocol: tcp
                      source:
                        port: any
                        cidr: 192.168.1.0/24
                        network: L_23456789
                        vlan: 20
                        host: 200
                      destination:
                        port: 1-1024
                        cidr: any
                        network: L_12345678
                        vlan: 10
                        host: 254
                        fqdn: www.google.com
                  preferredUplink: bestForVoIP
                  failOverCriterion: poorPerformance
                  performanceClass:
                    type: custom
                    builtinPerformanceClassName: VoIP
                    customPerformanceClassId: "123456"
              properties:
                activeActiveAutoVpnEnabled:
                  description: Toggle for enabling or disabling active-active AutoVPN
                  type: boolean
                defaultUplink:
                  description: 'The default uplink. Must be one of: ''wan1'' or ''wan2'''
                  enum:
                  - wan1
                  - wan2
                  type: string
                loadBalancingEnabled:
                  description: Toggle for enabling or disabling load balancing
                  type: boolean
                failoverAndFailback:
                  $ref: '#/components/schemas/_networks__networkId__appliance_trafficShaping_uplinkSelection_failoverAndFailback'
                wanTrafficUplinkPreferences:
                  description: Array of uplink preference rules for WAN traffic
                  items:
                    $ref: '#/components/schemas/_networks__networkId__appliance_trafficShaping_uplinkSelection_wanTrafficUplinkPreferences'
                  type: array
                vpnTrafficUplinkPreferences:
                  description: Array of uplink preference rules for VPN traffic
                  items:
                    $ref: '#/components/schemas/_networks__networkId__appliance_trafficShaping_uplinkSelection_vpnTrafficUplinkPreferences'
                  type: array
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                activeActiveAutoVpnEnabled: true
                defaultUplink: wan1
                loadBalancingEnabled: true
                failoverAndFailback:
                  immediate:
                    enabled: true
                wanTrafficUplinkPreferences:
                - trafficFilters:
                  - type: custom
                    value:
                      protocol: tcp
                      source:
                        port: 1-1024
                        cidr: 192.168.1.0/24
                        vlan: 10
                        host: 254
                      destination:
                        port: any
                        cidr: any
                  preferredUplink: wan1
                vpnTrafficUplinkPreferences:
                - trafficFilters:
                  - type: applicationCategory
                    value:
                      id: meraki:layer7/category/1
                      protocol: tcp
                      source:
                        port: any
                        cidr: 192.168.1.0/24
                        network: L_23456789
                        vlan: 20
                        host: 200
                      destination:
                        port: 1-1024
                        cidr: any
                        network: L_12345678
                        vlan: 10
                        host: 254
                        fqdn: www.google.com
                  preferredUplink: bestForVoIP
                  failOverCriterion: poorPerformance
                  performanceClass:
                    type: custom
                    builtinPerformanceClassName: VoIP
                    customPerformanceClassId: "123456"
              schema:
                $ref: '#/components/schemas/inline_response_200_19'
          description: Successful operation
      summary: Update uplink selection settings for an MX network
      tags:
      - appliance
      - configure
      - trafficShaping
      - uplinkSelection
      x-codegen-request-body-name: updateNetworkApplianceTrafficShapingUplinkSelection
  /networks/{networkId}/appliance/uplinks/usageHistory:
    get:
      description: Get the sent and received bytes for each uplink of a network.
      operationId: getNetworkApplianceUplinksUsageHistory
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: The beginning of the timespan for the data. The maximum lookback
          period is 365 days from today.
        in: query
        name: t0
        schema:
          type: string
      - description: The end of the timespan for the data. t1 can be a maximum of
          31 days after t0.
        in: query
        name: t1
        schema:
          type: string
      - description: The timespan for which the information will be fetched. If specifying
          timespan, do not specify parameters t0 and t1. The value must be in seconds
          and be less than or equal to 31 days. The default is 10 minutes.
        in: query
        name: timespan
        schema:
          format: float
          type: number
      - description: 'The time resolution in seconds for returned data. The valid
          resolutions are: 60, 300, 600, 1800, 3600, 86400. The default is 60.'
        in: query
        name: resolution
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              example:
              - startTime: 2021-07-22T02:00:00Z
                endTime: 2021-07-22T03:00:00Z
                byInterface:
                - interface: wan1
                  sent: 1562063
                  received: 9528787
                - interface: wan2
                  sent: 396646
                  received: 2747782
              - startTime: 2021-07-22T03:00:00Z
                endTime: 2021-07-22T04:00:00Z
                byInterface:
                - interface: wan1
                  sent: 6326222
                  received: 12253346
                - interface: wan2
                  sent: 402850
                  received: 2981021
              schema:
                items:
                  properties: {}
                  type: object
                type: array
          description: Successful operation
      summary: Get the sent and received bytes for each uplink of a network.
      tags:
      - appliance
      - monitor
      - uplinks
      - usageHistory
  /networks/{networkId}/appliance/vlans:
    get:
      description: List the VLANs for an MX network
      operationId: getNetworkApplianceVlans
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - id: "1234"
                interfaceId: "1284392014819"
                name: My VLAN
                subnet: 192.168.1.0/24
                applianceIp: 192.168.1.2
                groupPolicyId: "101"
                templateVlanType: same
                cidr: 192.168.1.0/24
                mask: 28
                dhcpRelayServerIps:
                - 192.168.1.0/24
                - 192.168.128.0/24
                dhcpHandling: Run a DHCP server
                dhcpLeaseTime: 1 day
                dhcpBootOptionsEnabled: false
                dhcpBootNextServer: 1.2.3.4
                dhcpBootFilename: sample.file
                reservedIpRanges:
                - start: 192.168.1.0
                  end: 192.168.1.1
                  comment: A reserved IP range
                dnsNameservers: google_dns
                dhcpOptions:
                - code: "5"
                  type: text
                  value: five
                vpnNatSubnet: 192.168.1.0/24
                mandatoryDhcp:
                  enabled: true
                ipv6:
                  enabled: true
                  prefixAssignments:
                  - autonomous: false
                    staticPrefix: 2001:db8:3c4d:15::/64
                    staticApplianceIp6: 2001:db8:3c4d:15::1
                    origin:
                      type: internet
                      interfaces:
                      - wan0
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_20'
                type: array
          description: Successful operation
      summary: List the VLANs for an MX network
      tags:
      - appliance
      - configure
      - vlans
    post:
      description: Add a VLAN
      operationId: createNetworkApplianceVlan
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_56'
        content:
          application/json:
            schema:
              example:
                id: "1234"
                name: My VLAN
                subnet: 192.168.1.0/24
                applianceIp: 192.168.1.2
                groupPolicyId: "101"
                templateVlanType: same
                cidr: 192.168.1.0/24
                mask: 28
                ipv6:
                  enabled: true
                  prefixAssignments:
                  - autonomous: false
                    staticPrefix: 2001:db8:3c4d:15::/64
                    staticApplianceIp6: 2001:db8:3c4d:15::1
                    origin:
                      type: internet
                      interfaces:
                      - wan0
                mandatoryDhcp:
                  enabled: true
              properties:
                id:
                  description: The VLAN ID of the new VLAN (must be between 1 and
                    4094)
                  type: string
                name:
                  description: The name of the new VLAN
                  type: string
                subnet:
                  description: The subnet of the VLAN
                  type: string
                applianceIp:
                  description: The local IP of the appliance on the VLAN
                  type: string
                groupPolicyId:
                  description: The id of the desired group policy to apply to the
                    VLAN
                  type: string
                templateVlanType:
                  default: same
                  description: Type of subnetting of the VLAN. Applicable only for
                    template network.
                  enum:
                  - same
                  - unique
                  type: string
                cidr:
                  description: CIDR of the pool of subnets. Applicable only for template
                    network. Each network bound to the template will automatically
                    pick a subnet from this pool to build its own VLAN.
                  type: string
                mask:
                  description: Mask used for the subnet of all bound to the template
                    networks. Applicable only for template network.
                  type: integer
                ipv6:
                  $ref: '#/components/schemas/_networks__networkId__appliance_singleLan_ipv6'
                mandatoryDhcp:
                  $ref: '#/components/schemas/_networks__networkId__appliance_vlans_mandatoryDhcp'
              required:
              - id
              - name
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                id: "1234"
                interfaceId: "1284392014819"
                name: My VLAN
                subnet: 192.168.1.0/24
                applianceIp: 192.168.1.2
                groupPolicyId: "101"
                templateVlanType: same
                cidr: 192.168.1.0/24
                mask: 28
                mandatoryDhcp:
                  enabled: true
                ipv6:
                  enabled: true
                  prefixAssignments:
                  - autonomous: false
                    staticPrefix: 2001:db8:3c4d:15::/64
                    staticApplianceIp6: 2001:db8:3c4d:15::1
                    origin:
                      type: internet
                      interfaces:
                      - wan0
              schema:
                $ref: '#/components/schemas/inline_response_201_2'
          description: Successful operation
      summary: Add a VLAN
      tags:
      - appliance
      - configure
      - vlans
      x-codegen-request-body-name: createNetworkApplianceVlan
  /networks/{networkId}/appliance/vlans/settings:
    get:
      description: Returns the enabled status of VLANs for the network
      operationId: getNetworkApplianceVlansSettings
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                vlansEnabled: true
              schema:
                type: object
          description: Successful operation
      summary: Returns the enabled status of VLANs for the network
      tags:
      - appliance
      - configure
      - vlans
      - settings
    put:
      description: Enable/Disable VLANs for the given network
      operationId: updateNetworkApplianceVlansSettings
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_57'
        content:
          application/json:
            schema:
              example:
                vlansEnabled: true
              properties:
                vlansEnabled:
                  description: Boolean indicating whether to enable (true) or disable
                    (false) VLANs for the network
                  type: boolean
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                vlansEnabled: true
              schema:
                type: object
          description: Successful operation
      summary: Enable/Disable VLANs for the given network
      tags:
      - appliance
      - configure
      - vlans
      - settings
      x-codegen-request-body-name: updateNetworkApplianceVlansSettings
  /networks/{networkId}/appliance/vlans/{vlanId}:
    delete:
      description: Delete a VLAN from a network
      operationId: deleteNetworkApplianceVlan
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Vlan ID
        in: path
        name: vlanId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Successful operation
      summary: Delete a VLAN from a network
      tags:
      - appliance
      - configure
      - vlans
    get:
      description: Return a VLAN
      operationId: getNetworkApplianceVlan
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Vlan ID
        in: path
        name: vlanId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                id: "1234"
                interfaceId: "1284392014819"
                name: My VLAN
                subnet: 192.168.1.0/24
                applianceIp: 192.168.1.2
                groupPolicyId: "101"
                templateVlanType: same
                cidr: 192.168.1.0/24
                mask: 28
                dhcpRelayServerIps:
                - 192.168.1.0/24
                - 192.168.128.0/24
                dhcpHandling: Run a DHCP server
                dhcpLeaseTime: 1 day
                dhcpBootOptionsEnabled: false
                dhcpBootNextServer: 1.2.3.4
                dhcpBootFilename: sample.file
                reservedIpRanges:
                - start: 192.168.1.0
                  end: 192.168.1.1
                  comment: A reserved IP range
                dnsNameservers: google_dns
                dhcpOptions:
                - code: "5"
                  type: text
                  value: five
                vpnNatSubnet: 192.168.1.0/24
                mandatoryDhcp:
                  enabled: true
                ipv6:
                  enabled: true
                  prefixAssignments:
                  - autonomous: false
                    staticPrefix: 2001:db8:3c4d:15::/64
                    staticApplianceIp6: 2001:db8:3c4d:15::1
                    origin:
                      type: internet
                      interfaces:
                      - wan0
              schema:
                $ref: '#/components/schemas/inline_response_200_20'
          description: Successful operation
      summary: Return a VLAN
      tags:
      - appliance
      - configure
      - vlans
    put:
      description: Update a VLAN
      operationId: updateNetworkApplianceVlan
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Vlan ID
        in: path
        name: vlanId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_58'
        content:
          application/json:
            schema:
              example:
                name: My VLAN
                applianceIp: 192.168.1.2
                subnet: 192.168.1.0/24
                groupPolicyId: "101"
                templateVlanType: same
                cidr: 192.168.1.0/24
                mask: 28
                fixedIpAssignments:
                  "22:33:44:55:66:77":
                    ip: 1.2.3.4
                    name: Some client name
                reservedIpRanges:
                - start: 192.168.1.0
                  end: 192.168.1.1
                  comment: A reserved IP range
                dnsNameservers: google_dns
                dhcpHandling: Run a DHCP server
                dhcpLeaseTime: 1 day
                dhcpBootOptionsEnabled: false
                dhcpBootNextServer: 1.2.3.4
                dhcpBootFilename: sample.file
                dhcpOptions:
                - code: "5"
                  type: text
                  value: five
                ipv6:
                  enabled: true
                  prefixAssignments:
                  - autonomous: false
                    staticPrefix: 2001:db8:3c4d:15::/64
                    staticApplianceIp6: 2001:db8:3c4d:15::1
                    origin:
                      type: internet
                      interfaces:
                      - wan0
                mandatoryDhcp:
                  enabled: true
                dhcpRelayServerIps:
                - 192.168.1.0/24
                - 192.168.128.0/24
                vpnNatSubnet: 192.168.1.0/24
              properties:
                name:
                  description: The name of the VLAN
                  type: string
                subnet:
                  description: The subnet of the VLAN
                  type: string
                applianceIp:
                  description: The local IP of the appliance on the VLAN
                  type: string
                groupPolicyId:
                  description: The id of the desired group policy to apply to the
                    VLAN
                  type: string
                vpnNatSubnet:
                  description: The translated VPN subnet if VPN and VPN subnet translation
                    are enabled on the VLAN
                  type: string
                dhcpHandling:
                  description: 'The appliance''s handling of DHCP requests on this
                    VLAN. One of: ''Run a DHCP server'', ''Relay DHCP to another server''
                    or ''Do not respond to DHCP requests'''
                  enum:
                  - Do not respond to DHCP requests
                  - Relay DHCP to another server
                  - Run a DHCP server
                  type: string
                dhcpRelayServerIps:
                  description: The IPs of the DHCP servers that DHCP requests should
                    be relayed to
                  items:
                    type: string
                  type: array
                dhcpLeaseTime:
                  description: 'The term of DHCP leases if the appliance is running
                    a DHCP server on this VLAN. One of: ''30 minutes'', ''1 hour'',
                    ''4 hours'', ''12 hours'', ''1 day'' or ''1 week'''
                  enum:
                  - 1 day
                  - 1 hour
                  - 1 week
                  - 12 hours
                  - 30 minutes
                  - 4 hours
                  type: string
                dhcpBootOptionsEnabled:
                  description: Use DHCP boot options specified in other properties
                  type: boolean
                dhcpBootNextServer:
                  description: DHCP boot option to direct boot clients to the server
                    to load the boot file from
                  type: string
                dhcpBootFilename:
                  description: DHCP boot option for boot filename
                  type: string
                fixedIpAssignments:
                  description: The DHCP fixed IP assignments on the VLAN. This should
                    be an object that contains mappings from MAC addresses to objects
                    that themselves each contain "ip" and "name" string fields. See
                    the sample request/response for more details.
                  properties: {}
                  type: object
                reservedIpRanges:
                  description: The DHCP reserved IP ranges on the VLAN
                  items:
                    $ref: '#/components/schemas/_networks__networkId__appliance_staticRoutes__staticRouteId__reservedIpRanges'
                  type: array
                dnsNameservers:
                  description: The DNS nameservers used for DHCP responses, either
                    "upstream_dns", "google_dns", "opendns", or a newline seperated
                    string of IP addresses or domain names
                  type: string
                dhcpOptions:
                  description: The list of DHCP options that will be included in DHCP
                    responses. Each object in the list should have "code", "type",
                    and "value" properties.
                  items:
                    $ref: '#/components/schemas/_networks__networkId__appliance_vlans_dhcpOptions'
                  type: array
                templateVlanType:
                  description: Type of subnetting of the VLAN. Applicable only for
                    template network.
                  enum:
                  - same
                  - unique
                  type: string
                cidr:
                  description: CIDR of the pool of subnets. Applicable only for template
                    network. Each network bound to the template will automatically
                    pick a subnet from this pool to build its own VLAN.
                  type: string
                mask:
                  description: Mask used for the subnet of all bound to the template
                    networks. Applicable only for template network.
                  type: integer
                ipv6:
                  $ref: '#/components/schemas/_networks__networkId__appliance_singleLan_ipv6'
                mandatoryDhcp:
                  $ref: '#/components/schemas/_networks__networkId__appliance_vlans_mandatoryDhcp'
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                id: "1234"
                interfaceId: "1284392014819"
                name: My VLAN
                subnet: 192.168.1.0/24
                applianceIp: 192.168.1.2
                groupPolicyId: "101"
                templateVlanType: same
                cidr: 192.168.1.0/24
                mask: 28
                dhcpRelayServerIps:
                - 192.168.1.0/24
                - 192.168.128.0/24
                dhcpHandling: Run a DHCP server
                dhcpLeaseTime: 1 day
                dhcpBootOptionsEnabled: false
                dhcpBootNextServer: 1.2.3.4
                dhcpBootFilename: sample.file
                reservedIpRanges:
                - start: 192.168.1.0
                  end: 192.168.1.1
                  comment: A reserved IP range
                dnsNameservers: google_dns
                dhcpOptions:
                - code: "5"
                  type: text
                  value: five
                vpnNatSubnet: 192.168.1.0/24
                mandatoryDhcp:
                  enabled: true
                ipv6:
                  enabled: true
                  prefixAssignments:
                  - autonomous: false
                    staticPrefix: 2001:db8:3c4d:15::/64
                    staticApplianceIp6: 2001:db8:3c4d:15::1
                    origin:
                      type: internet
                      interfaces:
                      - wan0
              schema:
                $ref: '#/components/schemas/inline_response_200_20'
          description: Successful operation
      summary: Update a VLAN
      tags:
      - appliance
      - configure
      - vlans
      x-codegen-request-body-name: updateNetworkApplianceVlan
  /networks/{networkId}/appliance/vpn/bgp:
    get:
      description: Return a Hub BGP Configuration
      operationId: getNetworkApplianceVpnBgp
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                enabled: true
                asNumber: 64515
                ibgpHoldTimer: 120
                neighbors:
                - ip: 10.10.10.22
                  remoteAsNumber: 64343
                  receiveLimit: 120
                  allowTransit: true
                  ebgpHoldTimer: 180
                  ebgpMultihop: 2
              schema:
                type: object
          description: Successful operation
      summary: Return a Hub BGP Configuration
      tags:
      - appliance
      - configure
      - vpn
      - bgp
    put:
      description: Update a Hub BGP Configuration
      operationId: updateNetworkApplianceVpnBgp
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_59'
        content:
          application/json:
            schema:
              example:
                enabled: true
                asNumber: 64515
                ibgpHoldTimer: 120
                neighbors:
                - ip: 10.10.10.22
                  remoteAsNumber: 64343
                  receiveLimit: 120
                  allowTransit: true
                  ebgpHoldTimer: 180
                  ebgpMultihop: 2
              properties:
                enabled:
                  description: Boolean value to enable or disable the BGP configuration.
                    When BGP is enabled, the asNumber (ASN) will be autopopulated
                    with the preconfigured ASN at other Hubs or a default value if
                    there is no ASN configured.
                  type: boolean
                asNumber:
                  description: An Autonomous System Number (ASN) is required if you
                    are to run BGP and peer with another BGP Speaker outside of the
                    Auto VPN domain. This ASN will be applied to the entire Auto VPN
                    domain. The entire 4-byte ASN range is supported. So, the ASN
                    must be an integer between 1 and 4294967295. When absent, this
                    field is not updated. If no value exists then it defaults to 64512.
                  type: integer
                ibgpHoldTimer:
                  description: The IBGP holdtimer in seconds. The IBGP holdtimer must
                    be an integer between 12 and 240. When absent, this field is not
                    updated. If no value exists then it defaults to 240.
                  type: integer
                neighbors:
                  description: List of BGP neighbors. This list replaces the existing
                    set of neighbors. When absent, this field is not updated.
                  items:
                    $ref: '#/components/schemas/_networks__networkId__appliance_vpn_bgp_neighbors'
                  type: array
              required:
              - enabled
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                enabled: true
                asNumber: 64515
                ibgpHoldTimer: 120
                neighbors:
                - ip: 10.10.10.22
                  remoteAsNumber: 64343
                  receiveLimit: 120
                  allowTransit: true
                  ebgpHoldTimer: 180
                  ebgpMultihop: 2
              schema:
                type: object
          description: Successful operation
      summary: Update a Hub BGP Configuration
      tags:
      - appliance
      - configure
      - vpn
      - bgp
      x-codegen-request-body-name: updateNetworkApplianceVpnBgp
  /networks/{networkId}/appliance/vpn/siteToSiteVpn:
    get:
      description: Return the site-to-site VPN settings of a network. Only valid for
        MX networks.
      operationId: getNetworkApplianceVpnSiteToSiteVpn
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                mode: spoke
                hubs:
                - hubId: N_4901849
                  useDefaultRoute: true
                subnets:
                - localSubnet: 192.168.1.0/24
                  useVpn: true
              schema:
                $ref: '#/components/schemas/inline_response_200_21'
          description: Successful operation
      summary: Return the site-to-site VPN settings of a network
      tags:
      - appliance
      - configure
      - vpn
      - siteToSiteVpn
    put:
      description: Update the site-to-site VPN settings of a network. Only valid for
        MX networks in NAT mode.
      operationId: updateNetworkApplianceVpnSiteToSiteVpn
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_60'
        content:
          application/json:
            schema:
              example:
                mode: spoke
                hubs:
                - hubId: N_4901849
                  useDefaultRoute: true
                subnets:
                - localSubnet: 192.168.1.0/24
                  useVpn: true
              properties:
                mode:
                  description: The site-to-site VPN mode. Can be one of 'none', 'spoke'
                    or 'hub'
                  enum:
                  - hub
                  - none
                  - spoke
                  type: string
                hubs:
                  description: The list of VPN hubs, in order of preference. In spoke
                    mode, at least 1 hub is required.
                  items:
                    $ref: '#/components/schemas/_networks__networkId__appliance_vpn_siteToSiteVpn_hubs'
                  type: array
                subnets:
                  description: The list of subnets and their VPN presence.
                  items:
                    $ref: '#/components/schemas/_networks__networkId__appliance_vpn_siteToSiteVpn_subnets'
                  type: array
              required:
              - mode
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                mode: spoke
                hubs:
                - hubId: N_4901849
                  useDefaultRoute: true
                subnets:
                - localSubnet: 192.168.1.0/24
                  useVpn: true
              schema:
                $ref: '#/components/schemas/inline_response_200_21'
          description: Successful operation
      summary: Update the site-to-site VPN settings of a network
      tags:
      - appliance
      - configure
      - vpn
      - siteToSiteVpn
      x-codegen-request-body-name: updateNetworkApplianceVpnSiteToSiteVpn
  /networks/{networkId}/appliance/warmSpare:
    get:
      description: Return MX warm spare settings
      operationId: getNetworkApplianceWarmSpare
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                enabled: true
                primarySerial: Q234-ABCD-5678
                spareSerial: Q234-ABCD-5678
                uplinkMode: virtual
                wan1:
                  ip: 1.2.3.4
                  subnet: 192.168.1.0/24
                wan2:
                  ip: 1.2.3.4
                  subnet: 192.168.128.0/24
              schema:
                type: object
          description: Successful operation
      summary: Return MX warm spare settings
      tags:
      - appliance
      - configure
      - warmSpare
    put:
      description: Update MX warm spare settings
      operationId: updateNetworkApplianceWarmSpare
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_61'
        content:
          application/json:
            schema:
              example:
                enabled: true
                spareSerial: Q234-ABCD-5678
                uplinkMode: virtual
                virtualIp1: 1.2.3.4
                virtualIp2: 1.2.3.4
              properties:
                enabled:
                  description: Enable warm spare
                  type: boolean
                spareSerial:
                  description: Serial number of the warm spare appliance
                  type: string
                uplinkMode:
                  description: Uplink mode, either virtual or public
                  type: string
                virtualIp1:
                  description: The WAN 1 shared IP
                  type: string
                virtualIp2:
                  description: The WAN 2 shared IP
                  type: string
              required:
              - enabled
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                enabled: true
                primarySerial: Q234-ABCD-5678
                spareSerial: Q234-ABCD-5678
                uplinkMode: virtual
                wan1:
                  ip: 1.2.3.4
                  subnet: 192.168.1.0/24
                wan2:
                  ip: 1.2.3.4
                  subnet: 192.168.128.0/24
              schema:
                type: object
          description: Successful operation
      summary: Update MX warm spare settings
      tags:
      - appliance
      - configure
      - warmSpare
      x-codegen-request-body-name: updateNetworkApplianceWarmSpare
  /networks/{networkId}/appliance/warmSpare/swap:
    post:
      description: Swap MX primary and warm spare appliances
      operationId: swapNetworkApplianceWarmSpare
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                enabled: true
                primarySerial: Q234-ABCD-5678
                spareSerial: Q234-ABCD-5678
                uplinkMode: virtual
                wan1:
                  ip: 1.2.3.4
                  subnet: 192.168.1.0/24
                wan2:
                  ip: 1.2.3.4
                  subnet: 192.168.128.0/24
              schema:
                type: object
          description: Successful operation
      summary: Swap MX primary and warm spare appliances
      tags:
      - appliance
      - configure
      - warmSpare
  /networks/{networkId}/bind:
    post:
      description: Bind a network to a template.
      operationId: bindNetwork
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_62'
        content:
          application/json:
            schema:
              example:
                configTemplateId: N_23952905
                autoBind: false
              properties:
                configTemplateId:
                  description: The ID of the template to which the network should
                    be bound.
                  type: string
                autoBind:
                  description: Optional boolean indicating whether the network's switches
                    should automatically bind to profiles of the same model. Defaults
                    to false if left unspecified. This option only affects switch
                    networks and switch templates. Auto-bind is not valid unless the
                    switch template has at least one profile and has at most one profile
                    per switch model.
                  type: boolean
              required:
              - configTemplateId
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                id: N_24329156
                organizationId: "2930418"
                name: Main Office
                timeZone: America/Los_Angeles
                tags:
                - tag1
                - tag2
                productTypes:
                - appliance
                - switch
                - wireless
                enrollmentString: my-enrollment-string
                notes: Additional description of the network
                isBoundToConfigTemplate: false
                configTemplateId: N_23952905
              schema:
                type: object
          description: Successful operation
      summary: Bind a network to a template.
      tags:
      - networks
      - configure
      x-codegen-request-body-name: bindNetwork
  /networks/{networkId}/bluetoothClients:
    get:
      description: List the Bluetooth clients seen by APs in this network
      operationId: getNetworkBluetoothClients
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: The beginning of the timespan for the data. The maximum lookback
          period is 7 days from today.
        in: query
        name: t0
        schema:
          type: string
      - description: The timespan for which the information will be fetched. If specifying
          timespan, do not specify parameter t0. The value must be in seconds and
          be less than or equal to 7 days. The default is 1 day.
        in: query
        name: timespan
        schema:
          format: float
          type: number
      - description: The number of entries per page returned. Acceptable range is
          5 - 1000. Default is 10.
        in: query
        name: perPage
        schema:
          type: integer
      - description: A token used by the server to indicate the start of the page.
          Often this is a timestamp or an ID but it is not limited to those. This
          parameter should not be defined by client applications. The link for the
          first, last, prev, or next page in the HTTP Link header should define it.
        in: query
        name: startingAfter
        schema:
          type: string
      - description: A token used by the server to indicate the end of the page. Often
          this is a timestamp or an ID but it is not limited to those. This parameter
          should not be defined by client applications. The link for the first, last,
          prev, or next page in the HTTP Link header should define it.
        in: query
        name: endingBefore
        schema:
          type: string
      - description: Include the connectivity history for this client
        in: query
        name: includeConnectivityHistory
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              example:
              - id: "1284392014819"
                mac: 22:33:44:55:66:77
                networkId: N_24329156
                name: Miles's phone
                deviceName: Bose QuietComfort 35
                manufacturer: Bose
                lastSeen: 1526087474
                seenByDeviceMac: 00:11:22:33:44:55
                inSightAlert: false
                outOfSightAlert: false
                tags:
                - tag1
                - tag2
              schema:
                items:
                  properties: {}
                  type: object
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative
                links used for subsequent paginated requests.
              schema:
                type: string
      summary: List the Bluetooth clients seen by APs in this network
      tags:
      - networks
      - monitor
      - bluetoothClients
  /networks/{networkId}/bluetoothClients/{bluetoothClientId}:
    get:
      description: Return a Bluetooth client. Bluetooth clients can be identified
        by their ID or their MAC.
      operationId: getNetworkBluetoothClient
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Bluetooth client ID
        in: path
        name: bluetoothClientId
        required: true
        schema:
          type: string
      - description: Include the connectivity history for this client
        in: query
        name: includeConnectivityHistory
        schema:
          type: boolean
      - description: The timespan, in seconds, for the connectivityHistory data. By
          default 1 day, 86400, will be used.
        in: query
        name: connectivityHistoryTimespan
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              example:
                id: "1284392014819"
                mac: 22:33:44:55:66:77
                networkId: N_24329156
                name: Miles's phone
                deviceName: Bose QuietComfort 35
                manufacturer: Bose
                lastSeen: 1526087474
                seenByDeviceMac: 00:11:22:33:44:55
                inSightAlert: false
                outOfSightAlert: false
                tags:
                - tag1
                - tag2
              schema:
                type: object
          description: Successful operation
      summary: Return a Bluetooth client
      tags:
      - networks
      - monitor
      - bluetoothClients
  /networks/{networkId}/camera/qualityRetentionProfiles:
    get:
      description: List the quality retention profiles for this network
      operationId: getNetworkCameraQualityRetentionProfiles
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - id: "1234"
                networkId: N_24329156
                name: Sample quality retention profile
                restrictedBandwidthModeEnabled: true
                motionBasedRetentionEnabled: false
                audioRecordingEnabled: false
                cloudArchiveEnabled: false
                maxRetentionDays: 7
                motionDetectorVersion: 2
                videoSettings:
                  MV32:
                    quality: Enhanced
                    resolution: 1080x1080
                  MV21/MV71:
                    quality: High
                    resolution: 1280x720
                  MV12/MV22/MV72:
                    quality: High
                    resolution: 1920x1080
                  MV12WE:
                    quality: High
                    resolution: 1920x1080
              schema:
                items:
                  properties: {}
                  type: object
                type: array
          description: Successful operation
      summary: List the quality retention profiles for this network
      tags:
      - camera
      - configure
      - qualityRetentionProfiles
    post:
      description: Creates new quality retention profile for this network.
      operationId: createNetworkCameraQualityRetentionProfile
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_63'
        content:
          application/json:
            schema:
              example:
                name: Sample quality retention profile
              properties:
                name:
                  description: The name of the new profile. Must be unique. This parameter
                    is required.
                  type: string
                motionBasedRetentionEnabled:
                  description: Deletes footage older than 3 days in which no motion
                    was detected. Can be either true or false. Defaults to false.
                    This setting does not apply to MV2 cameras.
                  type: boolean
                restrictedBandwidthModeEnabled:
                  description: Disable features that require additional bandwidth
                    such as Motion Recap. Can be either true or false. Defaults to
                    false. This setting does not apply to MV2 cameras.
                  type: boolean
                audioRecordingEnabled:
                  description: Whether or not to record audio. Can be either true
                    or false. Defaults to false.
                  type: boolean
                cloudArchiveEnabled:
                  description: Create redundant video backup using Cloud Archive.
                    Can be either true or false. Defaults to false.
                  type: boolean
                motionDetectorVersion:
                  description: The version of the motion detector that will be used
                    by the camera. Only applies to Gen 2 cameras. Defaults to v2.
                  type: integer
                scheduleId:
                  description: Schedule for which this camera will record video, or
                    'null' to always record.
                  type: string
                maxRetentionDays:
                  description: The maximum number of days for which the data will
                    be stored, or 'null' to keep data until storage space runs out.
                    If the former, it can be one of [1, 2, 3, 4, 5, 6, 7, 8, 9, 10,
                    14, 30, 60, 90] days.
                  type: integer
                videoSettings:
                  $ref: '#/components/schemas/_networks__networkId__camera_qualityRetentionProfiles_videoSettings'
              required:
              - name
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                id: "1234"
                networkId: N_24329156
                name: Sample quality retention profile
                restrictedBandwidthModeEnabled: true
                motionBasedRetentionEnabled: false
                audioRecordingEnabled: false
                cloudArchiveEnabled: false
                maxRetentionDays: 7
                motionDetectorVersion: 2
                videoSettings:
                  MV32:
                    quality: Enhanced
                    resolution: 1080x1080
                  MV21/MV71:
                    quality: High
                    resolution: 1280x720
                  MV12/MV22/MV72:
                    quality: High
                    resolution: 1920x1080
                  MV12WE:
                    quality: High
                    resolution: 1920x1080
              schema:
                type: object
          description: Successful operation
      summary: Creates new quality retention profile for this network.
      tags:
      - camera
      - configure
      - qualityRetentionProfiles
      x-codegen-request-body-name: createNetworkCameraQualityRetentionProfile
  /networks/{networkId}/camera/qualityRetentionProfiles/{qualityRetentionProfileId}:
    delete:
      description: Delete an existing quality retention profile for this network.
      operationId: deleteNetworkCameraQualityRetentionProfile
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Quality retention profile ID
        in: path
        name: qualityRetentionProfileId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Successful operation
      summary: Delete an existing quality retention profile for this network.
      tags:
      - camera
      - configure
      - qualityRetentionProfiles
    get:
      description: Retrieve a single quality retention profile
      operationId: getNetworkCameraQualityRetentionProfile
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Quality retention profile ID
        in: path
        name: qualityRetentionProfileId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                id: "1234"
                networkId: N_24329156
                name: Sample quality retention profile
                restrictedBandwidthModeEnabled: true
                motionBasedRetentionEnabled: false
                audioRecordingEnabled: false
                cloudArchiveEnabled: false
                maxRetentionDays: 7
                motionDetectorVersion: 2
                videoSettings:
                  MV32:
                    quality: Enhanced
                    resolution: 1080x1080
                  MV21/MV71:
                    quality: High
                    resolution: 1280x720
                  MV12/MV22/MV72:
                    quality: High
                    resolution: 1920x1080
                  MV12WE:
                    quality: High
                    resolution: 1920x1080
              schema:
                type: object
          description: Successful operation
      summary: Retrieve a single quality retention profile
      tags:
      - camera
      - configure
      - qualityRetentionProfiles
    put:
      description: Update an existing quality retention profile for this network.
      operationId: updateNetworkCameraQualityRetentionProfile
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Quality retention profile ID
        in: path
        name: qualityRetentionProfileId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_64'
        content:
          application/json:
            schema:
              example: {}
              properties:
                name:
                  description: The name of the new profile. Must be unique.
                  type: string
                motionBasedRetentionEnabled:
                  description: Deletes footage older than 3 days in which no motion
                    was detected. Can be either true or false. Defaults to false.
                    This setting does not apply to MV2 cameras.
                  type: boolean
                restrictedBandwidthModeEnabled:
                  description: Disable features that require additional bandwidth
                    such as Motion Recap. Can be either true or false. Defaults to
                    false. This setting does not apply to MV2 cameras.
                  type: boolean
                audioRecordingEnabled:
                  description: Whether or not to record audio. Can be either true
                    or false. Defaults to false.
                  type: boolean
                cloudArchiveEnabled:
                  description: Create redundant video backup using Cloud Archive.
                    Can be either true or false. Defaults to false.
                  type: boolean
                motionDetectorVersion:
                  description: The version of the motion detector that will be used
                    by the camera. Only applies to Gen 2 cameras. Defaults to v2.
                  type: integer
                scheduleId:
                  description: Schedule for which this camera will record video, or
                    'null' to always record.
                  type: string
                maxRetentionDays:
                  description: The maximum number of days for which the data will
                    be stored, or 'null' to keep data until storage space runs out.
                    If the former, it can be one of [1, 2, 3, 4, 5, 6, 7, 8, 9, 10,
                    14, 30, 60, 90] days.
                  type: integer
                videoSettings:
                  $ref: '#/components/schemas/_networks__networkId__camera_qualityRetentionProfiles_videoSettings'
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                id: "1234"
                networkId: N_24329156
                name: Sample quality retention profile
                restrictedBandwidthModeEnabled: true
                motionBasedRetentionEnabled: false
                audioRecordingEnabled: false
                cloudArchiveEnabled: false
                maxRetentionDays: 7
                motionDetectorVersion: 2
                videoSettings:
                  MV32:
                    quality: Enhanced
                    resolution: 1080x1080
                  MV21/MV71:
                    quality: High
                    resolution: 1280x720
                  MV12/MV22/MV72:
                    quality: High
                    resolution: 1920x1080
                  MV12WE:
                    quality: High
                    resolution: 1920x1080
              schema:
                type: object
          description: Successful operation
      summary: Update an existing quality retention profile for this network.
      tags:
      - camera
      - configure
      - qualityRetentionProfiles
      x-codegen-request-body-name: updateNetworkCameraQualityRetentionProfile
  /networks/{networkId}/camera/schedules:
    get:
      description: Returns a list of all camera recording schedules.
      operationId: getNetworkCameraSchedules
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - id: "123"
                name: Weekday schedule
              - id: "124"
                name: Office hours
              schema:
                items:
                  properties: {}
                  type: object
                type: array
          description: Successful operation
      summary: Returns a list of all camera recording schedules.
      tags:
      - camera
      - configure
      - schedules
  /networks/{networkId}/camera/wirelessProfiles:
    get:
      description: List the camera wireless profiles for this network.
      operationId: getNetworkCameraWirelessProfiles
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - id: "152"
                name: wireless profile A
                appliedDeviceCount: 0
                ssid:
                  name: ssid test
                  authMode: 8021x-radius
                  encryptionMode: wpa-eap
                identity:
                  username: identityname
                  password: password123
              schema:
                items:
                  properties: {}
                  type: object
                type: array
          description: Successful operation
      summary: List the camera wireless profiles for this network.
      tags:
      - camera
      - configure
      - wirelessProfiles
    post:
      description: Creates a new camera wireless profile for this network.
      operationId: createNetworkCameraWirelessProfile
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_65'
        content:
          application/json:
            schema:
              example:
                name: wireless profile A
                ssid:
                  name: ssid test
                  authMode: 8021x-radius
                  encryptionMode: wpa-eap
              properties:
                name:
                  description: The name of the camera wireless profile. This parameter
                    is required.
                  type: string
                ssid:
                  $ref: '#/components/schemas/_networks__networkId__camera_wirelessProfiles_ssid'
                identity:
                  $ref: '#/components/schemas/_networks__networkId__camera_wirelessProfiles_identity'
              required:
              - name
              - ssid
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                id: "152"
                name: wireless profile A
                appliedDeviceCount: 0
                ssid:
                  name: ssid test
                  authMode: 8021x-radius
                  encryptionMode: wpa-eap
                identity:
                  username: identityname
                  password: password123
              schema:
                type: object
          description: Successful operation
      summary: Creates a new camera wireless profile for this network.
      tags:
      - camera
      - configure
      - wirelessProfiles
      x-codegen-request-body-name: createNetworkCameraWirelessProfile
  /networks/{networkId}/camera/wirelessProfiles/{wirelessProfileId}:
    delete:
      description: Delete an existing camera wireless profile for this network.
      operationId: deleteNetworkCameraWirelessProfile
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Wireless profile ID
        in: path
        name: wirelessProfileId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Successful operation
      summary: Delete an existing camera wireless profile for this network.
      tags:
      - camera
      - configure
      - wirelessProfiles
    get:
      description: Retrieve a single camera wireless profile.
      operationId: getNetworkCameraWirelessProfile
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Wireless profile ID
        in: path
        name: wirelessProfileId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                id: "152"
                name: wireless profile A
                appliedDeviceCount: 0
                ssid:
                  name: ssid test
                  authMode: 8021x-radius
                  encryptionMode: wpa-eap
                identity:
                  username: identityname
                  password: password123
              schema:
                type: object
          description: Successful operation
      summary: Retrieve a single camera wireless profile.
      tags:
      - camera
      - configure
      - wirelessProfiles
    put:
      description: Update an existing camera wireless profile in this network.
      operationId: updateNetworkCameraWirelessProfile
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Wireless profile ID
        in: path
        name: wirelessProfileId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_66'
        content:
          application/json:
            schema:
              example: {}
              properties:
                name:
                  description: The name of the camera wireless profile.
                  type: string
                ssid:
                  $ref: '#/components/schemas/_networks__networkId__camera_wirelessProfiles_ssid'
                identity:
                  $ref: '#/components/schemas/_networks__networkId__camera_wirelessProfiles_identity'
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                id: "152"
                name: wireless profile A
                appliedDeviceCount: 0
                ssid:
                  name: ssid test
                  authMode: 8021x-radius
                  encryptionMode: wpa-eap
                identity:
                  username: identityname
                  password: password123
              schema:
                type: object
          description: Successful operation
      summary: Update an existing camera wireless profile in this network.
      tags:
      - camera
      - configure
      - wirelessProfiles
      x-codegen-request-body-name: updateNetworkCameraWirelessProfile
  /networks/{networkId}/cellularGateway/connectivityMonitoringDestinations:
    get:
      description: Return the connectivity testing destinations for an MG network
      operationId: getNetworkCellularGatewayConnectivityMonitoringDestinations
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                destinations:
                - ip: 8.8.8.8
                  description: Google
                  default: false
                - ip: 1.23.45.67
                  description: test description
                  default: true
                - ip: 9.8.7.6
                  default: false
              schema:
                type: object
          description: Successful operation
      summary: Return the connectivity testing destinations for an MG network
      tags:
      - cellularGateway
      - configure
      - connectivityMonitoringDestinations
    put:
      description: Update the connectivity testing destinations for an MG network
      operationId: updateNetworkCellularGatewayConnectivityMonitoringDestinations
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_67'
        content:
          application/json:
            schema:
              example:
                destinations:
                - ip: 8.8.8.8
                  description: Google
                  default: false
                - ip: 1.23.45.67
                  description: test description
                  default: true
                - ip: 9.8.7.6
              properties:
                destinations:
                  description: The list of connectivity monitoring destinations
                  items:
                    $ref: '#/components/schemas/_networks__networkId__cellularGateway_connectivityMonitoringDestinations_destinations'
                  type: array
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                destinations:
                - ip: 8.8.8.8
                  description: Google
                  default: false
                - ip: 1.23.45.67
                  description: test description
                  default: true
                - ip: 9.8.7.6
                  default: false
              schema:
                type: object
          description: Successful operation
      summary: Update the connectivity testing destinations for an MG network
      tags:
      - cellularGateway
      - configure
      - connectivityMonitoringDestinations
      x-codegen-request-body-name: updateNetworkCellularGatewayConnectivityMonitoringDestinations
  /networks/{networkId}/cellularGateway/dhcp:
    get:
      description: List common DHCP settings of MGs
      operationId: getNetworkCellularGatewayDhcp
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                dhcpLeaseTime: 1 hour
                dnsNameservers: custom
                dnsCustomNameservers:
                - 172.16.2.111
                - 172.16.2.30
              schema:
                $ref: '#/components/schemas/inline_response_200_22'
          description: Successful operation
      summary: List common DHCP settings of MGs
      tags:
      - cellularGateway
      - configure
      - dhcp
    put:
      description: Update common DHCP settings of MGs
      operationId: updateNetworkCellularGatewayDhcp
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_68'
        content:
          application/json:
            schema:
              example:
                dhcpLeaseTime: 1 hour
                dnsNameservers: custom
                dnsCustomNameservers:
                - 172.16.2.111
                - 172.16.2.30
              properties:
                dhcpLeaseTime:
                  description: DHCP Lease time for all MG of the network. Possible
                    values are '30 minutes', '1 hour', '4 hours', '12 hours', '1 day'
                    or '1 week'.
                  type: string
                dnsNameservers:
                  description: 'DNS name servers mode for all MG of the network. Possible
                    values are: ''upstream_dns'', ''google_dns'', ''opendns'', ''custom''.'
                  type: string
                dnsCustomNameservers:
                  description: list of fixed IPs representing the the DNS Name servers
                    when the mode is 'custom'
                  items:
                    type: string
                  type: array
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                dhcpLeaseTime: 1 hour
                dnsNameservers: custom
                dnsCustomNameservers:
                - 172.16.2.111
                - 172.16.2.30
              schema:
                $ref: '#/components/schemas/inline_response_200_22'
          description: Successful operation
      summary: Update common DHCP settings of MGs
      tags:
      - cellularGateway
      - configure
      - dhcp
      x-codegen-request-body-name: updateNetworkCellularGatewayDhcp
  /networks/{networkId}/cellularGateway/subnetPool:
    get:
      description: Return the subnet pool and mask configured for MGs in the network.
      operationId: getNetworkCellularGatewaySubnetPool
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                deploymentMode: routed
                cidr: 192.168.0.0/16
                mask: 24
                subnets:
                - serial: AAAA-AAAA-AAAA
                  name: my first MG
                  applianceIp: 192.168.0.1
                  subnet: 192.168.0.0/24
                - serial: BBBB-BBBB-BBBB
                  name: my second MG
                  applianceIp: 192.168.0.33
                  subnet: 192.168.0.32/24
              schema:
                type: object
          description: Successful operation
      summary: Return the subnet pool and mask configured for MGs in the network.
      tags:
      - cellularGateway
      - configure
      - subnetPool
    put:
      description: Update the subnet pool and mask configuration for MGs in the network.
      operationId: updateNetworkCellularGatewaySubnetPool
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_69'
        content:
          application/json:
            schema:
              example:
                deploymentMode: routed
                cidr: 192.168.0.0/16
                mask: 24
              properties:
                mask:
                  description: Mask used for the subnet of all MGs in  this network.
                  type: integer
                cidr:
                  description: CIDR of the pool of subnets. Each MG in this network
                    will automatically pick a subnet from this pool.
                  type: string
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                deploymentMode: routed
                cidr: 192.168.0.0/16
                mask: 24
                subnets:
                - serial: AAAA-AAAA-AAAA
                  name: my first MG
                  applianceIp: 192.168.0.1
                  subnet: 192.168.0.0/24
                - serial: BBBB-BBBB-BBBB
                  name: my second MG
                  applianceIp: 192.168.0.33
                  subnet: 192.168.0.32/24
              schema:
                type: object
          description: Successful operation
      summary: Update the subnet pool and mask configuration for MGs in the network.
      tags:
      - cellularGateway
      - configure
      - subnetPool
      x-codegen-request-body-name: updateNetworkCellularGatewaySubnetPool
  /networks/{networkId}/cellularGateway/uplink:
    get:
      description: Returns the uplink settings for your MG network.
      operationId: getNetworkCellularGatewayUplink
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                bandwidthLimits:
                  limitUp: 51200
                  limitDown: 51200
              schema:
                type: object
          description: Successful operation
      summary: Returns the uplink settings for your MG network.
      tags:
      - cellularGateway
      - configure
      - uplink
    put:
      description: Updates the uplink settings for your MG network.
      operationId: updateNetworkCellularGatewayUplink
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_70'
        content:
          application/json:
            schema:
              example: {}
              properties:
                bandwidthLimits:
                  $ref: '#/components/schemas/_networks__networkId__appliance_trafficShaping_uplinkBandwidth_bandwidthLimits_cellular'
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                bandwidthLimits:
                  limitUp: 51200
                  limitDown: 51200
              schema:
                type: object
          description: Successful operation
      summary: Updates the uplink settings for your MG network.
      tags:
      - cellularGateway
      - configure
      - uplink
      x-codegen-request-body-name: updateNetworkCellularGatewayUplink
  /networks/{networkId}/clients:
    get:
      description: List the clients that have used this network in the timespan
      operationId: getNetworkClients
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: The beginning of the timespan for the data. The maximum lookback
          period is 31 days from today.
        in: query
        name: t0
        schema:
          type: string
      - description: The timespan for which the information will be fetched. If specifying
          timespan, do not specify parameter t0. The value must be in seconds and
          be less than or equal to 31 days. The default is 1 day.
        in: query
        name: timespan
        schema:
          format: float
          type: number
      - description: The number of entries per page returned. Acceptable range is
          3 - 1000. Default is 10.
        in: query
        name: perPage
        schema:
          type: integer
      - description: A token used by the server to indicate the start of the page.
          Often this is a timestamp or an ID but it is not limited to those. This
          parameter should not be defined by client applications. The link for the
          first, last, prev, or next page in the HTTP Link header should define it.
        in: query
        name: startingAfter
        schema:
          type: string
      - description: A token used by the server to indicate the end of the page. Often
          this is a timestamp or an ID but it is not limited to those. This parameter
          should not be defined by client applications. The link for the first, last,
          prev, or next page in the HTTP Link header should define it.
        in: query
        name: endingBefore
        schema:
          type: string
      - description: Filters clients based on status. Can be one of 'Online' or 'Offline'.
        explode: false
        in: query
        name: statuses
        schema:
          items:
            enum:
            - Offline
            - Online
            type: string
          type: array
        style: form
      - description: Filters clients based on a partial or full match for the ip address
          field.
        in: query
        name: ip
        schema:
          type: string
      - description: Filters clients based on a partial or full match for the ip6
          address field.
        in: query
        name: ip6
        schema:
          type: string
      - description: Filters clients based on a partial or full match for the ip6Local
          address field.
        in: query
        name: ip6Local
        schema:
          type: string
      - description: Filters clients based on a partial or full match for the mac
          address field.
        in: query
        name: mac
        schema:
          type: string
      - description: Filters clients based on a partial or full match for the os (operating
          system) field.
        in: query
        name: os
        schema:
          type: string
      - description: Filters clients based on a partial or full match for the description
          field.
        in: query
        name: description
        schema:
          type: string
      - description: Filters clients based on the full match for the VLAN field.
        in: query
        name: vlan
        schema:
          type: string
      - description: Filters clients based on recent connection type. Can be one of
          'Wired' or 'Wireless'.
        explode: false
        in: query
        name: recentDeviceConnections
        schema:
          items:
            enum:
            - Wired
            - Wireless
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                id: k74272e
                mac: 22:33:44:55:66:77
                ip: 1.2.3.4
                ip6: 2001:db8:3c4d:15::1
                description: Miles's phone
                firstSeen: 1518365681
                lastSeen: 1526087474
                manufacturer: Apple
                os: iOS
                user: milesmeraki
                vlan: "100"
                ssid: My SSID
                switchport: My switch port
                wirelessCapabilities: 802.11b - 2.4 GHz
                smInstalled: true
                recentDeviceMac: 22:33:44:55:66:77
                status: Online
                usage:
                  sent: 138.0
                  recv: 61.0
                namedVlan: My VLAN
                adaptivePolicyGroup: '2: Infrastructure'
                deviceTypePrediction: iPhone SE, iOS9.3.5
                recentDeviceSerial: 00:11:22:33:44:55
                recentDeviceName: Q234-ABCD-5678
                recentDeviceConnection: Wired
                notes: My AP's note
                ip6Local: fe80:0:0:0:1430:aac1:6826:75ab
                groupPolicy8021x: Student_Access
              schema:
                $ref: '#/components/schemas/inline_response_200_23'
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative
                links used for subsequent paginated requests.
              schema:
                type: string
      summary: List the clients that have used this network in the timespan
      tags:
      - networks
      - monitor
      - clients
  /networks/{networkId}/clients/applicationUsage:
    get:
      description: Return the application usage data for clients. Usage data is in
        kilobytes. Clients can be identified by client keys or either the MACs or
        IPs depending on whether the network uses Track-by-IP.
      operationId: getNetworkClientsApplicationUsage
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: A list of client keys, MACs or IPs separated by comma.
        in: query
        name: clients
        required: true
        schema:
          type: string
      - description: An SSID number to include. If not specified, eveusage histories
          application usagents for all SSIDs will be returned.
        in: query
        name: ssidNumber
        schema:
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
          - 10
          - 11
          - 12
          - 13
          - 14
          type: integer
      - description: The number of entries per page returned. Acceptable range is
          3 - 1000.
        in: query
        name: perPage
        schema:
          type: integer
      - description: A token used by the server to indicate the start of the page.
          Often this is a timestamp or an ID but it is not limited to those. This
          parameter should not be defined by client applications. The link for the
          first, last, prev, or next page in the HTTP Link header should define it.
        in: query
        name: startingAfter
        schema:
          type: string
      - description: A token used by the server to indicate the end of the page. Often
          this is a timestamp or an ID but it is not limited to those. This parameter
          should not be defined by client applications. The link for the first, last,
          prev, or next page in the HTTP Link header should define it.
        in: query
        name: endingBefore
        schema:
          type: string
      - description: The beginning of the timespan for the data. The maximum lookback
          period is 31 days from today.
        in: query
        name: t0
        schema:
          type: string
      - description: The end of the timespan for the data. t1 can be a maximum of
          31 days after t0.
        in: query
        name: t1
        schema:
          type: string
      - description: The timespan for which the information will be fetched. If specifying
          timespan, do not specify parameters t0 and t1. The value must be in seconds
          and be less than or equal to 31 days. The default is 1 day.
        in: query
        name: timespan
        schema:
          format: float
          type: number
      responses:
        "200":
          content:
            application/json:
              example:
              - clientId: k74272e
                clientIp: 1.2.3.4
                clientMac: 00:11:22:33:44:55
                applicationUsage:
                - application: Google
                  recv: 383
                  sent: 56
              schema:
                items:
                  properties: {}
                  type: object
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative
                links used for subsequent paginated requests.
              schema:
                type: string
      summary: Return the application usage data for clients
      tags:
      - networks
      - monitor
      - clients
      - applicationUsage
  /networks/{networkId}/clients/bandwidthUsageHistory:
    get:
      description: Returns a timeseries of total traffic consumption rates for all
        clients on a network within a given timespan, in megabits per second.
      operationId: getNetworkClientsBandwidthUsageHistory
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: The beginning of the timespan for the data. The maximum lookback
          period is 30 days from today.
        in: query
        name: t0
        schema:
          type: string
      - description: The end of the timespan for the data. t1 can be a maximum of
          31 days after t0.
        in: query
        name: t1
        schema:
          type: string
      - description: The timespan for which the information will be fetched. If specifying
          timespan, do not specify parameters t0 and t1. The value must be in seconds
          and be less than or equal to 31 days. The default is 1 day.
        in: query
        name: timespan
        schema:
          format: float
          type: number
      - description: The number of entries per page returned. Acceptable range is
          3 - 1000. Default is 1000.
        in: query
        name: perPage
        schema:
          type: integer
      - description: A token used by the server to indicate the start of the page.
          Often this is a timestamp or an ID but it is not limited to those. This
          parameter should not be defined by client applications. The link for the
          first, last, prev, or next page in the HTTP Link header should define it.
        in: query
        name: startingAfter
        schema:
          type: string
      - description: A token used by the server to indicate the end of the page. Often
          this is a timestamp or an ID but it is not limited to those. This parameter
          should not be defined by client applications. The link for the first, last,
          prev, or next page in the HTTP Link header should define it.
        in: query
        name: endingBefore
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - ts: 2021-06-20T01:00:00.000Z
                total: 345
              schema:
                items:
                  properties: {}
                  type: object
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative
                links used for subsequent paginated requests.
              schema:
                type: string
      summary: Returns a timeseries of total traffic consumption rates for all clients
        on a network within a given timespan, in megabits per second.
      tags:
      - networks
      - monitor
      - clients
      - bandwidthUsageHistory
  /networks/{networkId}/clients/overview:
    get:
      description: Return overview statistics for network clients
      operationId: getNetworkClientsOverview
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: The beginning of the timespan for the data. The maximum lookback
          period is 31 days from today.
        in: query
        name: t0
        schema:
          type: string
      - description: The end of the timespan for the data. t1 can be a maximum of
          31 days after t0.
        in: query
        name: t1
        schema:
          type: string
      - description: The timespan for which the information will be fetched. If specifying
          timespan, do not specify parameters t0 and t1. The value must be in seconds
          and be less than or equal to 31 days. The default is 1 day.
        in: query
        name: timespan
        schema:
          format: float
          type: number
      - description: 'The time resolution in seconds for returned data. The valid
          resolutions are: 7200, 86400, 604800, 2592000. The default is 604800.'
        in: query
        name: resolution
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              example:
                counts:
                  total: 100
                  withHeavyUsage: 2
                usages:
                  average: 2048
                  withHeavyUsageAverage: 5345
              schema:
                type: object
          description: Successful operation
      summary: Return overview statistics for network clients
      tags:
      - networks
      - monitor
      - clients
      - overview
  /networks/{networkId}/clients/provision:
    post:
      description: Provisions a client with a name and policy. Clients can be provisioned
        before they associate to the network.
      operationId: provisionNetworkClients
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_71'
        content:
          application/json:
            schema:
              example:
                clients:
                - mac: 00:11:22:33:44:55
                  clientId: k74272e
                  name: Miles's phone
                devicePolicy: Group policy
                groupPolicyId: "101"
              properties:
                clients:
                  description: The array of clients to provision
                  items:
                    $ref: '#/components/schemas/_networks__networkId__clients_provision_clients'
                  type: array
                devicePolicy:
                  description: The policy to apply to the specified client. Can be
                    'Group policy', 'Allowed', 'Blocked', 'Per connection' or 'Normal'.
                    Required.
                  enum:
                  - Allowed
                  - Blocked
                  - Group policy
                  - Normal
                  - Per connection
                  type: string
                groupPolicyId:
                  description: The ID of the desired group policy to apply to the
                    client. Required if 'devicePolicy' is set to "Group policy". Otherwise
                    this is ignored.
                  type: string
                policiesBySecurityAppliance:
                  $ref: '#/components/schemas/_networks__networkId__clients_provision_policiesBySecurityAppliance'
                policiesBySsid:
                  $ref: '#/components/schemas/_networks__networkId__clients_provision_policiesBySsid'
              required:
              - clients
              - devicePolicy
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                clients:
                - mac: 00:11:22:33:44:55
                  clientId: k74272e
                  name: Miles's phone
                devicePolicy: Group policy
                groupPolicyId: "101"
              schema:
                type: object
          description: Successful operation
      summary: Provisions a client with a name and policy
      tags:
      - networks
      - configure
      - clients
      x-codegen-request-body-name: provisionNetworkClients
  /networks/{networkId}/clients/usageHistories:
    get:
      description: Return the usage histories for clients. Usage data is in kilobytes.
        Clients can be identified by client keys or either the MACs or IPs depending
        on whether the network uses Track-by-IP.
      operationId: getNetworkClientsUsageHistories
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: A list of client keys, MACs or IPs separated by comma.
        in: query
        name: clients
        required: true
        schema:
          type: string
      - description: An SSID number to include. If not specified, events for all SSIDs
          will be returned.
        in: query
        name: ssidNumber
        schema:
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
          - 10
          - 11
          - 12
          - 13
          - 14
          type: integer
      - description: The number of entries per page returned. Acceptable range is
          3 - 1000.
        in: query
        name: perPage
        schema:
          type: integer
      - description: A token used by the server to indicate the start of the page.
          Often this is a timestamp or an ID but it is not limited to those. This
          parameter should not be defined by client applications. The link for the
          first, last, prev, or next page in the HTTP Link header should define it.
        in: query
        name: startingAfter
        schema:
          type: string
      - description: A token used by the server to indicate the end of the page. Often
          this is a timestamp or an ID but it is not limited to those. This parameter
          should not be defined by client applications. The link for the first, last,
          prev, or next page in the HTTP Link header should define it.
        in: query
        name: endingBefore
        schema:
          type: string
      - description: The beginning of the timespan for the data. The maximum lookback
          period is 31 days from today.
        in: query
        name: t0
        schema:
          type: string
      - description: The end of the timespan for the data. t1 can be a maximum of
          31 days after t0.
        in: query
        name: t1
        schema:
          type: string
      - description: The timespan for which the information will be fetched. If specifying
          timespan, do not specify parameters t0 and t1. The value must be in seconds
          and be less than or equal to 31 days. The default is 1 day.
        in: query
        name: timespan
        schema:
          format: float
          type: number
      responses:
        "200":
          content:
            application/json:
              example:
              - clientId: k74272e
                clientIp: 1.2.3.4
                clientMac: 00:11:22:33:44:55
                usageHistory:
                - ts: 2018-02-11T00:00:00.090210Z
                  recv: 383
                  sent: 56
              schema:
                items:
                  properties: {}
                  type: object
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative
                links used for subsequent paginated requests.
              schema:
                type: string
      summary: Return the usage histories for clients
      tags:
      - networks
      - monitor
      - clients
      - usageHistories
  /networks/{networkId}/clients/{clientId}:
    get:
      description: Return the client associated with the given identifier. Clients
        can be identified by a client key or either the MAC or IP depending on whether
        the network uses Track-by-IP.
      operationId: getNetworkClient
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Client ID
        in: path
        name: clientId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                id: k74272e
                mac: 22:33:44:55:66:77
                ip: 1.2.3.4
                ip6: 2001:db8:3c4d:15::1
                description: Miles's phone
                firstSeen: 1518365681
                lastSeen: 1526087474
                manufacturer: Apple
                os: iOS
                user: milesmeraki
                vlan: "100"
                ssid: My SSID
                switchport: My switch port
                wirelessCapabilities: 802.11b - 2.4 GHz
                smInstalled: true
                recentDeviceMac: 22:33:44:55:66:77
                clientVpnConnections:
                - remoteIp: 1.2.3.4
                  connectedAt: 1522613355
                  disconnectedAt: 1522613360
                lldp:
                - - System name
                  - Some system name
                - - System description
                  - Some system description
                - - Port ID
                  - "1"
                - - Chassis ID
                  - 00:18:0a:00:00:00
                - - Port description
                  - eth0
                - - System capabilities
                  - Two-port MAC Relay
                cdp:
                - - System name
                  - Some system name
                - - System description
                  - Some system description
                - - Port ID
                  - "1"
                - - Chassis ID
                  - 00:18:0a:00:00:00
                - - Port description
                  - eth0
                - - System capabilities
                  - Two-port MAC Relay
                status: Online
              schema:
                $ref: '#/components/schemas/inline_response_200_24'
          description: Successful operation
      summary: Return the client associated with the given identifier
      tags:
      - networks
      - monitor
      - clients
  /networks/{networkId}/clients/{clientId}/policy:
    get:
      description: Return the policy assigned to a client on the network. Clients
        can be identified by a client key or either the MAC or IP depending on whether
        the network uses Track-by-IP.
      operationId: getNetworkClientPolicy
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Client ID
        in: path
        name: clientId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                mac: 00:11:22:33:44:55
                devicePolicy: Group policy
                groupPolicyId: "101"
              schema:
                type: object
          description: Successful operation
      summary: Return the policy assigned to a client on the network
      tags:
      - networks
      - configure
      - clients
      - policy
    put:
      description: Update the policy assigned to a client on the network. Clients
        can be identified by a client key or either the MAC or IP depending on whether
        the network uses Track-by-IP.
      operationId: updateNetworkClientPolicy
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Client ID
        in: path
        name: clientId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_72'
        content:
          application/json:
            schema:
              example:
                mac: 00:11:22:33:44:55
                devicePolicy: Group policy
                groupPolicyId: "101"
              properties:
                devicePolicy:
                  description: The policy to assign. Can be 'Whitelisted', 'Blocked',
                    'Normal' or 'Group policy'. Required.
                  type: string
                groupPolicyId:
                  description: '[optional] If ''devicePolicy'' is set to ''Group policy''
                    this param is used to specify the group policy ID.'
                  type: string
              required:
              - devicePolicy
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                mac: 00:11:22:33:44:55
                devicePolicy: Group policy
                groupPolicyId: "101"
              schema:
                type: object
          description: Successful operation
      summary: Update the policy assigned to a client on the network
      tags:
      - networks
      - configure
      - clients
      - policy
      x-codegen-request-body-name: updateNetworkClientPolicy
  /networks/{networkId}/clients/{clientId}/splashAuthorizationStatus:
    get:
      description: Return the splash authorization for a client, for each SSID they've
        associated with through splash. Only enabled SSIDs with Click-through splash
        enabled will be included. Clients can be identified by a client key or either
        the MAC or IP depending on whether the network uses Track-by-IP.
      operationId: getNetworkClientSplashAuthorizationStatus
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Client ID
        in: path
        name: clientId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                ssids:
                  "0":
                    isAuthorized: true
                    authorizedAt: 2017-07-19 16:24:13 UTC
                    expiresAt: 2017-07-20 16:24:13 UTC
                  "2":
                    isAuthorized: false
              schema:
                type: object
          description: Successful operation
      summary: Return the splash authorization for a client, for each SSID they've
        associated with through splash
      tags:
      - networks
      - configure
      - clients
      - splashAuthorizationStatus
    put:
      description: Update a client's splash authorization. Clients can be identified
        by a client key or either the MAC or IP depending on whether the network uses
        Track-by-IP.
      operationId: updateNetworkClientSplashAuthorizationStatus
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Client ID
        in: path
        name: clientId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_73'
        content:
          application/json:
            schema:
              example:
                ssids:
                  "0":
                    isAuthorized: true
                  "2":
                    isAuthorized: false
              properties:
                ssids:
                  $ref: '#/components/schemas/_networks__networkId__clients__clientId__splashAuthorizationStatus_ssids'
              required:
              - ssids
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                ssids:
                  "0":
                    isAuthorized: true
                    authorizedAt: 2017-07-19 16:24:13 UTC
                    expiresAt: 2017-07-20 16:24:13 UTC
                  "2":
                    isAuthorized: false
              schema:
                type: object
          description: Successful operation
      summary: Update a client's splash authorization
      tags:
      - networks
      - configure
      - clients
      - splashAuthorizationStatus
      x-codegen-request-body-name: updateNetworkClientSplashAuthorizationStatus
  /networks/{networkId}/clients/{clientId}/trafficHistory:
    get:
      description: Return the client's network traffic data over time. Usage data
        is in kilobytes. This endpoint requires detailed traffic analysis to be enabled
        on the Network-wide > General page. Clients can be identified by a client
        key or either the MAC or IP depending on whether the network uses Track-by-IP.
      operationId: getNetworkClientTrafficHistory
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Client ID
        in: path
        name: clientId
        required: true
        schema:
          type: string
      - description: The number of entries per page returned. Acceptable range is
          3 - 1000.
        in: query
        name: perPage
        schema:
          type: integer
      - description: A token used by the server to indicate the start of the page.
          Often this is a timestamp or an ID but it is not limited to those. This
          parameter should not be defined by client applications. The link for the
          first, last, prev, or next page in the HTTP Link header should define it.
        in: query
        name: startingAfter
        schema:
          type: string
      - description: A token used by the server to indicate the end of the page. Often
          this is a timestamp or an ID but it is not limited to those. This parameter
          should not be defined by client applications. The link for the first, last,
          prev, or next page in the HTTP Link header should define it.
        in: query
        name: endingBefore
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - ts: 2018-02-11T00:00:00.090210Z
                application: Google
                destination: www.google.com
                protocol: UDP
                port: 443
                recv: 383
                sent: 56
                numFlows: 5
                activeSeconds: 240
              schema:
                items:
                  properties: {}
                  type: object
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative
                links used for subsequent paginated requests.
              schema:
                type: string
      summary: Return the client's network traffic data over time
      tags:
      - networks
      - monitor
      - clients
      - trafficHistory
  /networks/{networkId}/clients/{clientId}/usageHistory:
    get:
      description: Return the client's daily usage history. Usage data is in kilobytes.
        Clients can be identified by a client key or either the MAC or IP depending
        on whether the network uses Track-by-IP.
      operationId: getNetworkClientUsageHistory
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Client ID
        in: path
        name: clientId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - sent: 500
                received: 680
                ts: 2018-02-11T00:00:00.090210Z
              schema:
                items:
                  properties: {}
                  type: object
                type: array
          description: Successful operation
      summary: Return the client's daily usage history
      tags:
      - networks
      - monitor
      - clients
      - usageHistory
  /networks/{networkId}/devices:
    get:
      description: List the devices in a network
      operationId: getNetworkDevices
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - name: My AP
                lat: 37.4180951010362
                lng: -122.098531723022
                serial: Q234-ABCD-5678
                mac: 00:11:22:33:44:55
                model: MR34
                address: 1600 Pennsylvania Ave
                notes: My AP's note
                lanIp: 1.2.3.4
                tags: ' recently-added '
                networkId: N_24329156
                beaconIdParams:
                  uuid: 00000000-0000-0000-0000-000000000000
                  major: 5
                  minor: 3
                firmware: wireless-25-14
                floorPlanId: g_1234567
              schema:
                items:
                  properties: {}
                  type: object
                type: array
          description: Successful operation
      summary: List the devices in a network
      tags:
      - networks
      - configure
      - devices
  /networks/{networkId}/devices/claim:
    post:
      description: 'Claim devices into a network. (Note: for recently claimed devices,
        it may take a few minutes for API requsts against that device to succeed)'
      operationId: claimNetworkDevices
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_74'
        content:
          application/json:
            schema:
              example:
                serials:
                - Q234-ABCD-0001
                - Q234-ABCD-0002
                - Q234-ABCD-0003
              properties:
                serials:
                  description: A list of serials of devices to claim
                  items:
                    type: string
                  type: array
              required:
              - serials
              type: object
        required: true
      responses:
        "200":
          content: {}
          description: Successful operation
      summary: 'Claim devices into a network. (Note: for recently claimed devices,
        it may take a few minutes for API requsts against that device to succeed)'
      tags:
      - networks
      - configure
      - devices
      x-codegen-request-body-name: claimNetworkDevices
  /networks/{networkId}/devices/claim/vmx:
    post:
      description: Claim a vMX into a network
      operationId: vmxNetworkDevicesClaim
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_75'
        content:
          application/json:
            schema:
              example:
                size: small
              properties:
                size:
                  description: 'The size of the vMX you claim. It can be one of: small,
                    medium, large, 100'
                  enum:
                  - "100"
                  - large
                  - medium
                  - small
                  type: string
              required:
              - size
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                name: My AP
                lat: 37.4180951010362
                lng: -122.098531723022
                serial: Q234-ABCD-5678
                mac: 00:11:22:33:44:55
                model: VMX-S
                address: 1600 Pennsylvania Ave
                notes: My AP's note
                lanIp: 1.2.3.4
                tags:
                - recently-added
                networkId: N_24329156
                beaconIdParams:
                  uuid: 00000000-0000-0000-0000-000000000000
                  major: 5
                  minor: 3
                firmware: wireless-25-14
                floorPlanId: g_1234567
              schema:
                type: object
          description: Successful operation
      summary: Claim a vMX into a network
      tags:
      - networks
      - configure
      - devices
      - claim
      x-codegen-request-body-name: vmxNetworkDevicesClaim
  /networks/{networkId}/devices/remove:
    post:
      description: Remove a single device
      operationId: removeNetworkDevices
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_76'
        content:
          application/json:
            schema:
              example:
                serial: Q234-ABCD-5678
              properties:
                serial:
                  description: The serial of a device
                  type: string
              required:
              - serial
              type: object
        required: true
      responses:
        "204":
          content: {}
          description: Successful operation
      summary: Remove a single device
      tags:
      - networks
      - configure
      - devices
      x-codegen-request-body-name: removeNetworkDevices
  /networks/{networkId}/events:
    get:
      description: List the events for the network
      operationId: getNetworkEvents
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: The product type to fetch events for. This parameter is required
          for networks with multiple device types. Valid types are wireless, appliance,
          switch, systemsManager, camera, and cellularGateway
        in: query
        name: productType
        schema:
          enum:
          - appliance
          - camera
          - cellularGateway
          - switch
          - systemsManager
          - wireless
          type: string
      - description: A list of event types. The returned events will be filtered to
          only include events with these types.
        explode: false
        in: query
        name: includedEventTypes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A list of event types. The returned events will be filtered to
          exclude events with these types.
        explode: false
        in: query
        name: excludedEventTypes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: The MAC address of the Meraki device which the list of events
          will be filtered with
        in: query
        name: deviceMac
        schema:
          type: string
      - description: The serial of the Meraki device which the list of events will
          be filtered with
        in: query
        name: deviceSerial
        schema:
          type: string
      - description: The name of the Meraki device which the list of events will be
          filtered with
        in: query
        name: deviceName
        schema:
          type: string
      - description: The IP of the client which the list of events will be filtered
          with. Only supported for track-by-IP networks.
        in: query
        name: clientIp
        schema:
          type: string
      - description: The MAC address of the client which the list of events will be
          filtered with. Only supported for track-by-MAC networks.
        in: query
        name: clientMac
        schema:
          type: string
      - description: The name, or partial name, of the client which the list of events
          will be filtered with
        in: query
        name: clientName
        schema:
          type: string
      - description: The MAC address of the Systems Manager device which the list
          of events will be filtered with
        in: query
        name: smDeviceMac
        schema:
          type: string
      - description: The name of the Systems Manager device which the list of events
          will be filtered with
        in: query
        name: smDeviceName
        schema:
          type: string
      - description: The number of entries per page returned. Acceptable range is
          3 - 1000. Default is 10.
        in: query
        name: perPage
        schema:
          type: integer
      - description: A token used by the server to indicate the start of the page.
          Often this is a timestamp or an ID but it is not limited to those. This
          parameter should not be defined by client applications. The link for the
          first, last, prev, or next page in the HTTP Link header should define it.
        in: query
        name: startingAfter
        schema:
          type: string
      - description: A token used by the server to indicate the end of the page. Often
          this is a timestamp or an ID but it is not limited to those. This parameter
          should not be defined by client applications. The link for the first, last,
          prev, or next page in the HTTP Link header should define it.
        in: query
        name: endingBefore
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                message: Some error
                pageStartAt: 2018-02-11T00:00:00.090210Z
                pageEndAt: 2018-02-11T00:00:00.090210Z
                events:
                - occurredAt: 2018-02-11T00:00:00.090210Z
                  networkId: N_24329156
                  type: association
                  description: 802.11 association
                  category: "80211"
                  clientId: k74272e
                  clientDescription: Miles's phone
                  clientMac: 22:33:44:55:66:77
                  deviceSerial: Q234-ABCD-5678
                  deviceName: My AP
                  ssidNumber: 1
                  eventData:
                    radio: "1"
                    vap: "1"
                    client_mac: 22:33:44:55:66:77
                    client_ip: 1.2.3.4
                    channel: "36"
                    rssi: "12"
                    aid: "2104009183"
              schema:
                $ref: '#/components/schemas/inline_response_200_25'
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative
                links used for subsequent paginated requests.
              schema:
                type: string
      summary: List the events for the network
      tags:
      - networks
      - monitor
      - events
  /networks/{networkId}/events/eventTypes:
    get:
      description: List the event type to human-readable description
      operationId: getNetworkEventsEventTypes
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - category: "802.11"
                type: association
                description: 802.11 association
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_26'
                type: array
          description: Successful operation
      summary: List the event type to human-readable description
      tags:
      - networks
      - monitor
      - events
      - eventTypes
  /networks/{networkId}/firmwareUpgrades:
    get:
      description: Get firmware upgrade information for a network
      operationId: getNetworkFirmwareUpgrades
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                upgradeWindow:
                  dayOfWeek: sun
                  hourOfDay: 4:00
                timezone: America/Los_Angeles
                products:
                  wireless:
                    currentVersion:
                      id: "4321"
                      firmware: camera-11-2-1
                      shortName: MV 11.2.1
                      releaseType: stable
                      releaseDate: 2020-03-17T17:22:52Z
                    lastUpgrade:
                      time: 2021-05-17T17:22:52Z
                      fromVersion:
                        id: "1234"
                        firmware: camera-10-8-1
                        shortName: MV 10.8.1
                        releaseType: stable
                        releaseDate: 2021-03-17T17:22:52Z
                      toVersion:
                        id: "4321"
                        firmware: camera-11-2-1
                        shortName: MV 11.2.1
                        releaseType: stable
                        releaseDate: 2019-03-17T17:22:52Z
                    nextUpgrade:
                      time: 2021-05-17T17:22:52Z
                      toVersion:
                        id: "2134"
                        firmware: camera-15-5-2
                        shortName: MV 25.5.2
                        releaseType: stable
                        releaseDate: 2021-05-28T17:22:52Z
                    availableVersions:
                    - id: "3421"
                      firmware: camera-16-x-y
                      shortName: MV 16.x.y
                      releaseType: beta
                      releaseDate: 2020-11-28T17:22:52Z
                    participateInNextBetaRelease: false
                  appliance:
                    currentVersion:
                      id: "4321"
                      firmware: camera-11-2-1
                      shortName: MV 11.2.1
                      releaseType: stable
                      releaseDate: 2020-03-17T17:22:52Z
                    lastUpgrade:
                      time: 2021-05-17T17:22:52Z
                      fromVersion:
                        id: "1234"
                        firmware: camera-10-8-1
                        shortName: MV 10.8.1
                        releaseType: stable
                        releaseDate: 2021-03-17T17:22:52Z
                      toVersion:
                        id: "4321"
                        firmware: camera-11-2-1
                        shortName: MV 11.2.1
                        releaseType: stable
                        releaseDate: 2019-03-17T17:22:52Z
                    nextUpgrade:
                      time: 2021-05-17T17:22:52Z
                      toVersion:
                        id: "2134"
                        firmware: camera-15-5-2
                        shortName: MV 25.5.2
                        releaseType: stable
                        releaseDate: 2021-05-28T17:22:52Z
                    availableVersions:
                    - id: "3421"
                      firmware: camera-16-x-y
                      shortName: MV 16.x.y
                      releaseType: beta
                      releaseDate: 2020-11-28T17:22:52Z
                    participateInNextBetaRelease: false
                  switch:
                    currentVersion:
                      id: "4321"
                      firmware: camera-11-2-1
                      shortName: MV 11.2.1
                      releaseType: stable
                      releaseDate: 2020-03-17T17:22:52Z
                    lastUpgrade:
                      time: 2021-05-17T17:22:52Z
                      fromVersion:
                        id: "1234"
                        firmware: camera-10-8-1
                        shortName: MV 10.8.1
                        releaseType: stable
                        releaseDate: 2021-03-17T17:22:52Z
                      toVersion:
                        id: "4321"
                        firmware: camera-11-2-1
                        shortName: MV 11.2.1
                        releaseType: stable
                        releaseDate: 2019-03-17T17:22:52Z
                    nextUpgrade:
                      time: 2021-05-17T17:22:52Z
                      toVersion:
                        id: "2134"
                        firmware: camera-15-5-2
                        shortName: MV 25.5.2
                        releaseType: stable
                        releaseDate: 2021-05-28T17:22:52Z
                    availableVersions:
                    - id: "3421"
                      firmware: camera-16-x-y
                      shortName: MV 16.x.y
                      releaseType: beta
                      releaseDate: 2020-11-28T17:22:52Z
                    participateInNextBetaRelease: false
                  camera:
                    currentVersion:
                      id: "4321"
                      firmware: camera-11-2-1
                      shortName: MV 11.2.1
                      releaseType: stable
                      releaseDate: 2020-03-17T17:22:52Z
                    lastUpgrade:
                      time: 2021-05-17T17:22:52Z
                      fromVersion:
                        id: "1234"
                        firmware: camera-10-8-1
                        shortName: MV 10.8.1
                        releaseType: stable
                        releaseDate: 2021-03-17T17:22:52Z
                      toVersion:
                        id: "4321"
                        firmware: camera-11-2-1
                        shortName: MV 11.2.1
                        releaseType: stable
                        releaseDate: 2019-03-17T17:22:52Z
                    nextUpgrade:
                      time: 2021-05-17T17:22:52Z
                      toVersion:
                        id: "2134"
                        firmware: camera-15-5-2
                        shortName: MV 25.5.2
                        releaseType: stable
                        releaseDate: 2021-05-28T17:22:52Z
                    availableVersions:
                    - id: "3421"
                      firmware: camera-16-x-y
                      shortName: MV 16.x.y
                      releaseType: beta
                      releaseDate: 2020-11-28T17:22:52Z
                    participateInNextBetaRelease: false
                  cellularGateway:
                    currentVersion:
                      id: "4321"
                      firmware: camera-11-2-1
                      shortName: MV 11.2.1
                      releaseType: stable
                      releaseDate: 2020-03-17T17:22:52Z
                    lastUpgrade:
                      time: 2021-05-17T17:22:52Z
                      fromVersion:
                        id: "1234"
                        firmware: camera-10-8-1
                        shortName: MV 10.8.1
                        releaseType: stable
                        releaseDate: 2021-03-17T17:22:52Z
                      toVersion:
                        id: "4321"
                        firmware: camera-11-2-1
                        shortName: MV 11.2.1
                        releaseType: stable
                        releaseDate: 2019-03-17T17:22:52Z
                    nextUpgrade:
                      time: 2021-05-17T17:22:52Z
                      toVersion:
                        id: "2134"
                        firmware: camera-15-5-2
                        shortName: MV 25.5.2
                        releaseType: stable
                        releaseDate: 2021-05-28T17:22:52Z
                    availableVersions:
                    - id: "3421"
                      firmware: camera-16-x-y
                      shortName: MV 16.x.y
                      releaseType: beta
                      releaseDate: 2020-11-28T17:22:52Z
                    participateInNextBetaRelease: false
                  sensor:
                    currentVersion:
                      id: "4321"
                      firmware: camera-11-2-1
                      shortName: MV 11.2.1
                      releaseType: stable
                      releaseDate: 2020-03-17T17:22:52Z
                    lastUpgrade:
                      time: 2021-05-17T17:22:52Z
                      fromVersion:
                        id: "1234"
                        firmware: camera-10-8-1
                        shortName: MV 10.8.1
                        releaseType: stable
                        releaseDate: 2021-03-17T17:22:52Z
                      toVersion:
                        id: "4321"
                        firmware: camera-11-2-1
                        shortName: MV 11.2.1
                        releaseType: stable
                        releaseDate: 2019-03-17T17:22:52Z
                    nextUpgrade:
                      time: 2021-05-17T17:22:52Z
                      toVersion:
                        id: "2134"
                        firmware: camera-15-5-2
                        shortName: MV 25.5.2
                        releaseType: stable
                        releaseDate: 2021-05-28T17:22:52Z
                    availableVersions:
                    - id: "3421"
                      firmware: camera-16-x-y
                      shortName: MV 16.x.y
                      releaseType: beta
                      releaseDate: 2020-11-28T17:22:52Z
                    participateInNextBetaRelease: false
              schema:
                $ref: '#/components/schemas/inline_response_200_27'
          description: Successful operation
      summary: Get firmware upgrade information for a network
      tags:
      - networks
      - configure
      - firmwareUpgrades
    put:
      description: Update firmware upgrade information for a network
      operationId: updateNetworkFirmwareUpgrades
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_77'
        content:
          application/json:
            schema:
              example:
                upgradeWindow:
                  dayOfWeek: sun
                  hourOfDay: 4:00
                timezone: America/Los_Angeles
                products:
                  wireless:
                    nextUpgrade:
                      time: 2019-03-17T17:22:52Z
                      toVersion:
                        id: "1000"
                    participateInNextBetaRelease: false
                  appliance:
                    nextUpgrade:
                      time: 2019-03-17T17:22:52Z
                      toVersion:
                        id: "1001"
                    participateInNextBetaRelease: false
                  switch:
                    nextUpgrade:
                      time: 2019-03-17T17:22:52Z
                      toVersion:
                        id: "1002"
                    participateInNextBetaRelease: false
                  camera:
                    nextUpgrade:
                      time: 2019-03-17T17:22:52Z
                      toVersion:
                        id: "1003"
                    participateInNextBetaRelease: false
                  cellularGateway:
                    nextUpgrade:
                      time: 2019-03-17T17:22:52Z
                      toVersion:
                        id: "1004"
                    participateInNextBetaRelease: false
                  sensor:
                    nextUpgrade:
                      time: 2019-03-17T17:22:52Z
                      toVersion:
                        id: "1005"
                    participateInNextBetaRelease: false
              properties:
                upgradeWindow:
                  $ref: '#/components/schemas/inline_response_200_27_upgradeWindow'
                timezone:
                  description: The timezone for the network
                  type: string
                products:
                  $ref: '#/components/schemas/_networks__networkId__firmwareUpgrades_products'
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                upgradeWindow:
                  dayOfWeek: sun
                  hourOfDay: 4:00
                timezone: America/Los_Angeles
                products:
                  wireless:
                    currentVersion:
                      id: "4321"
                      firmware: camera-11-2-1
                      shortName: MV 11.2.1
                      releaseType: stable
                      releaseDate: 2020-03-17T17:22:52Z
                    lastUpgrade:
                      time: 2021-05-17T17:22:52Z
                      fromVersion:
                        id: "1234"
                        firmware: camera-10-8-1
                        shortName: MV 10.8.1
                        releaseType: stable
                        releaseDate: 2021-03-17T17:22:52Z
                      toVersion:
                        id: "4321"
                        firmware: camera-11-2-1
                        shortName: MV 11.2.1
                        releaseType: stable
                        releaseDate: 2019-03-17T17:22:52Z
                    nextUpgrade:
                      time: 2021-05-17T17:22:52Z
                      toVersion:
                        id: "2134"
                        firmware: camera-15-5-2
                        shortName: MV 25.5.2
                        releaseType: stable
                        releaseDate: 2021-05-28T17:22:52Z
                    availableVersions:
                    - id: "3421"
                      firmware: camera-16-x-y
                      shortName: MV 16.x.y
                      releaseType: beta
                      releaseDate: 2020-11-28T17:22:52Z
                    participateInNextBetaRelease: false
                  appliance:
                    currentVersion:
                      id: "4321"
                      firmware: camera-11-2-1
                      shortName: MV 11.2.1
                      releaseType: stable
                      releaseDate: 2020-03-17T17:22:52Z
                    lastUpgrade:
                      time: 2021-05-17T17:22:52Z
                      fromVersion:
                        id: "1234"
                        firmware: camera-10-8-1
                        shortName: MV 10.8.1
                        releaseType: stable
                        releaseDate: 2021-03-17T17:22:52Z
                      toVersion:
                        id: "4321"
                        firmware: camera-11-2-1
                        shortName: MV 11.2.1
                        releaseType: stable
                        releaseDate: 2019-03-17T17:22:52Z
                    nextUpgrade:
                      time: 2021-05-17T17:22:52Z
                      toVersion:
                        id: "2134"
                        firmware: camera-15-5-2
                        shortName: MV 25.5.2
                        releaseType: stable
                        releaseDate: 2021-05-28T17:22:52Z
                    availableVersions:
                    - id: "3421"
                      firmware: camera-16-x-y
                      shortName: MV 16.x.y
                      releaseType: beta
                      releaseDate: 2020-11-28T17:22:52Z
                    participateInNextBetaRelease: false
                  switch:
                    currentVersion:
                      id: "4321"
                      firmware: camera-11-2-1
                      shortName: MV 11.2.1
                      releaseType: stable
                      releaseDate: 2020-03-17T17:22:52Z
                    lastUpgrade:
                      time: 2021-05-17T17:22:52Z
                      fromVersion:
                        id: "1234"
                        firmware: camera-10-8-1
                        shortName: MV 10.8.1
                        releaseType: stable
                        releaseDate: 2021-03-17T17:22:52Z
                      toVersion:
                        id: "4321"
                        firmware: camera-11-2-1
                        shortName: MV 11.2.1
                        releaseType: stable
                        releaseDate: 2019-03-17T17:22:52Z
                    nextUpgrade:
                      time: 2021-05-17T17:22:52Z
                      toVersion:
                        id: "2134"
                        firmware: camera-15-5-2
                        shortName: MV 25.5.2
                        releaseType: stable
                        releaseDate: 2021-05-28T17:22:52Z
                    availableVersions:
                    - id: "3421"
                      firmware: camera-16-x-y
                      shortName: MV 16.x.y
                      releaseType: beta
                      releaseDate: 2020-11-28T17:22:52Z
                    participateInNextBetaRelease: false
                  camera:
                    currentVersion:
                      id: "4321"
                      firmware: camera-11-2-1
                      shortName: MV 11.2.1
                      releaseType: stable
                      releaseDate: 2020-03-17T17:22:52Z
                    lastUpgrade:
                      time: 2021-05-17T17:22:52Z
                      fromVersion:
                        id: "1234"
                        firmware: camera-10-8-1
                        shortName: MV 10.8.1
                        releaseType: stable
                        releaseDate: 2021-03-17T17:22:52Z
                      toVersion:
                        id: "4321"
                        firmware: camera-11-2-1
                        shortName: MV 11.2.1
                        releaseType: stable
                        releaseDate: 2019-03-17T17:22:52Z
                    nextUpgrade:
                      time: 2021-05-17T17:22:52Z
                      toVersion:
                        id: "2134"
                        firmware: camera-15-5-2
                        shortName: MV 25.5.2
                        releaseType: stable
                        releaseDate: 2021-05-28T17:22:52Z
                    availableVersions:
                    - id: "3421"
                      firmware: camera-16-x-y
                      shortName: MV 16.x.y
                      releaseType: beta
                      releaseDate: 2020-11-28T17:22:52Z
                    participateInNextBetaRelease: false
                  cellularGateway:
                    currentVersion:
                      id: "4321"
                      firmware: camera-11-2-1
                      shortName: MV 11.2.1
                      releaseType: stable
                      releaseDate: 2020-03-17T17:22:52Z
                    lastUpgrade:
                      time: 2021-05-17T17:22:52Z
                      fromVersion:
                        id: "1234"
                        firmware: camera-10-8-1
                        shortName: MV 10.8.1
                        releaseType: stable
                        releaseDate: 2021-03-17T17:22:52Z
                      toVersion:
                        id: "4321"
                        firmware: camera-11-2-1
                        shortName: MV 11.2.1
                        releaseType: stable
                        releaseDate: 2019-03-17T17:22:52Z
                    nextUpgrade:
                      time: 2021-05-17T17:22:52Z
                      toVersion:
                        id: "2134"
                        firmware: camera-15-5-2
                        shortName: MV 25.5.2
                        releaseType: stable
                        releaseDate: 2021-05-28T17:22:52Z
                    availableVersions:
                    - id: "3421"
                      firmware: camera-16-x-y
                      shortName: MV 16.x.y
                      releaseType: beta
                      releaseDate: 2020-11-28T17:22:52Z
                    participateInNextBetaRelease: false
                  sensor:
                    currentVersion:
                      id: "4321"
                      firmware: camera-11-2-1
                      shortName: MV 11.2.1
                      releaseType: stable
                      releaseDate: 2020-03-17T17:22:52Z
                    lastUpgrade:
                      time: 2021-05-17T17:22:52Z
                      fromVersion:
                        id: "1234"
                        firmware: camera-10-8-1
                        shortName: MV 10.8.1
                        releaseType: stable
                        releaseDate: 2021-03-17T17:22:52Z
                      toVersion:
                        id: "4321"
                        firmware: camera-11-2-1
                        shortName: MV 11.2.1
                        releaseType: stable
                        releaseDate: 2019-03-17T17:22:52Z
                    nextUpgrade:
                      time: 2021-05-17T17:22:52Z
                      toVersion:
                        id: "2134"
                        firmware: camera-15-5-2
                        shortName: MV 25.5.2
                        releaseType: stable
                        releaseDate: 2021-05-28T17:22:52Z
                    availableVersions:
                    - id: "3421"
                      firmware: camera-16-x-y
                      shortName: MV 16.x.y
                      releaseType: beta
                      releaseDate: 2020-11-28T17:22:52Z
                    participateInNextBetaRelease: false
              schema:
                $ref: '#/components/schemas/inline_response_200_27'
          description: Successful operation
      summary: Update firmware upgrade information for a network
      tags:
      - networks
      - configure
      - firmwareUpgrades
      x-codegen-request-body-name: updateNetworkFirmwareUpgrades
  /networks/{networkId}/firmwareUpgrades/rollbacks:
    post:
      description: Rollback a Firmware Upgrade For A Network
      operationId: createNetworkFirmwareUpgradesRollback
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_78'
        content:
          application/json:
            schema:
              example:
                product: switch
                time: 2020-10-21T02:00:00Z
                reasons:
                - category: performance
                  comment: Network was slower with the upgrade
                toVersion:
                  id: "7857"
              properties:
                product:
                  description: Product type to rollback (if the network is a combined
                    network)
                  enum:
                  - appliance
                  - camera
                  - cellularGateway
                  - switch
                  - wireless
                  type: string
                time:
                  description: Scheduled time for the rollback
                  format: date-time
                  type: string
                reasons:
                  description: Reasons for the rollback
                  items:
                    $ref: '#/components/schemas/_networks__networkId__firmwareUpgrades_rollbacks_reasons'
                  type: array
                toVersion:
                  $ref: '#/components/schemas/_networks__networkId__firmwareUpgrades_rollbacks_toVersion'
              required:
              - reasons
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                product: switch
                status: pending
                upgradeBatchId: "23456"
                time: 2020-10-21T02:00:00Z
                toVersion:
                  id: "7857"
                  firmware: switch-15-5-2
                  shortName: MS 25.5.2
                  releaseType: stable
                  releaseDate: 2020-03-28T17:22:52Z
                reasons:
                - category: performance
                  comment: Network was slower with the upgrade
              schema:
                $ref: '#/components/schemas/inline_response_200_28'
          description: Successful operation
      summary: Rollback a Firmware Upgrade For A Network
      tags:
      - networks
      - configure
      - firmwareUpgrades
      - rollbacks
      x-codegen-request-body-name: createNetworkFirmwareUpgradesRollback
  /networks/{networkId}/firmwareUpgrades/staged/events:
    get:
      description: Get the Staged Upgrade Event from a network
      operationId: getNetworkFirmwareUpgradesStagedEvents
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                products:
                  switch:
                    nextUpgrade:
                      toVersion:
                        id: "1234"
                        shortName: MS 15.2.1
                stages:
                - group:
                    id: "1234"
                    name: My Staged Upgrade Group
                    description: My Staged Upgrade Group Description
                  milestones:
                    scheduledFor: 2018-02-11T00:00:00Z
                    startedAt: 2018-02-11T00:00:00Z
                    completedAt: 2018-02-11T00:00:00Z
                    canceledAt: 2018-02-11T00:00:00Z
                  status: Completed
                reasons:
                - category: performance
                  comment: Network was slower with the upgrade
              schema:
                $ref: '#/components/schemas/inline_response_200_29'
          description: Successful operation
      summary: Get the Staged Upgrade Event from a network
      tags:
      - networks
      - configure
      - firmwareUpgrades
      - staged
      - events
    post:
      description: Create a Staged Upgrade Event for a network
      operationId: createNetworkFirmwareUpgradesStagedEvent
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_80'
        content:
          application/json:
            schema:
              example:
                products:
                  switch:
                    nextUpgrade:
                      toVersion:
                        id: "1234"
                stages:
                - group:
                    id: "1234"
                  milestones:
                    scheduledFor: 2018-02-11T00:00:00Z
              properties:
                products:
                  $ref: '#/components/schemas/_networks__networkId__firmwareUpgrades_staged_events_products'
                stages:
                  description: All firmware upgrade stages in the network with their
                    start time.
                  items:
                    $ref: '#/components/schemas/_networks__networkId__firmwareUpgrades_staged_events_stages'
                  type: array
              required:
              - stages
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                products:
                  switch:
                    nextUpgrade:
                      toVersion:
                        id: "1234"
                        shortName: MS 15.2.1
                stages:
                - group:
                    id: "1234"
                    name: My Staged Upgrade Group
                    description: My Staged Upgrade Group Description
                  milestones:
                    scheduledFor: 2018-02-11T00:00:00Z
                    startedAt: 2018-02-11T00:00:00Z
                    completedAt: 2018-02-11T00:00:00Z
                    canceledAt: 2018-02-11T00:00:00Z
                  status: Completed
                reasons:
                - category: performance
                  comment: Network was slower with the upgrade
              schema:
                $ref: '#/components/schemas/inline_response_200_29'
          description: Successful operation
      summary: Create a Staged Upgrade Event for a network
      tags:
      - networks
      - configure
      - firmwareUpgrades
      - staged
      - events
      x-codegen-request-body-name: createNetworkFirmwareUpgradesStagedEvent
    put:
      description: Update the Staged Upgrade Event for a network
      operationId: updateNetworkFirmwareUpgradesStagedEvents
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_79'
        content:
          application/json:
            schema:
              example:
                stages:
                - group:
                    id: "1234"
                  milestones:
                    scheduledFor: 2018-02-11T00:00:00Z
              properties:
                stages:
                  description: All firmware upgrade stages in the network with their
                    start time.
                  items:
                    $ref: '#/components/schemas/_networks__networkId__firmwareUpgrades_staged_events_stages'
                  type: array
              required:
              - stages
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                products:
                  switch:
                    nextUpgrade:
                      toVersion:
                        id: "1234"
                        shortName: MS 15.2.1
                stages:
                - group:
                    id: "1234"
                    name: My Staged Upgrade Group
                    description: My Staged Upgrade Group Description
                  milestones:
                    scheduledFor: 2018-02-11T00:00:00Z
                    startedAt: 2018-02-11T00:00:00Z
                    completedAt: 2018-02-11T00:00:00Z
                    canceledAt: 2018-02-11T00:00:00Z
                  status: Completed
                reasons:
                - category: performance
                  comment: Network was slower with the upgrade
              schema:
                $ref: '#/components/schemas/inline_response_200_29'
          description: Successful operation
      summary: Update the Staged Upgrade Event for a network
      tags:
      - networks
      - configure
      - firmwareUpgrades
      - staged
      - events
      x-codegen-request-body-name: updateNetworkFirmwareUpgradesStagedEvents
  /networks/{networkId}/firmwareUpgrades/staged/events/defer:
    post:
      description: Postpone by 1 week all pending staged upgrade stages for a network
      operationId: deferNetworkFirmwareUpgradesStagedEvents
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                products:
                  switch:
                    nextUpgrade:
                      toVersion:
                        id: "1234"
                        shortName: MS 15.2.1
                stages:
                - group:
                    id: "1234"
                    name: My Staged Upgrade Group
                    description: My Staged Upgrade Group Description
                  milestones:
                    scheduledFor: 2018-02-11T00:00:00Z
                    startedAt: 2018-02-11T00:00:00Z
                    completedAt: 2018-02-11T00:00:00Z
                    canceledAt: 2018-02-11T00:00:00Z
                  status: Completed
                reasons:
                - category: performance
                  comment: Network was slower with the upgrade
              schema:
                $ref: '#/components/schemas/inline_response_200_29'
          description: Successful operation
      summary: Postpone by 1 week all pending staged upgrade stages for a network
      tags:
      - networks
      - configure
      - firmwareUpgrades
      - staged
      - events
  /networks/{networkId}/firmwareUpgrades/staged/events/rollbacks:
    post:
      description: Rollback a Staged Upgrade Event for a network
      operationId: rollbacksNetworkFirmwareUpgradesStagedEvents
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_81'
        content:
          application/json:
            schema:
              example:
                stages:
                - group:
                    id: "1234"
                  milestones:
                    scheduledFor: 2018-02-11T00:00:00Z
                reasons:
                - category: performance
                  comment: Network was slower with the upgrade
              properties:
                stages:
                  description: All completed or in-progress stages in the network
                    with their new start times. All pending stages will be canceled
                  items:
                    $ref: '#/components/schemas/_networks__networkId__firmwareUpgrades_staged_events_stages'
                  type: array
                reasons:
                  description: The reason for rolling back the staged upgrade
                  items:
                    $ref: '#/components/schemas/_networks__networkId__firmwareUpgrades_rollbacks_reasons'
                  type: array
              required:
              - stages
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                products:
                  switch:
                    nextUpgrade:
                      toVersion:
                        id: "1234"
                        shortName: MS 15.2.1
                stages:
                - group:
                    id: "1234"
                    name: My Staged Upgrade Group
                    description: My Staged Upgrade Group Description
                  milestones:
                    scheduledFor: 2018-02-11T00:00:00Z
                    startedAt: 2018-02-11T00:00:00Z
                    completedAt: 2018-02-11T00:00:00Z
                    canceledAt: 2018-02-11T00:00:00Z
                  status: Completed
                reasons:
                - category: performance
                  comment: Network was slower with the upgrade
              schema:
                $ref: '#/components/schemas/inline_response_200_29'
          description: Successful operation
      summary: Rollback a Staged Upgrade Event for a network
      tags:
      - networks
      - configure
      - firmwareUpgrades
      - staged
      - events
      x-codegen-request-body-name: rollbacksNetworkFirmwareUpgradesStagedEvents
  /networks/{networkId}/firmwareUpgrades/staged/groups:
    get:
      description: List of Staged Upgrade Groups in a network
      operationId: getNetworkFirmwareUpgradesStagedGroups
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - groupId: "1234"
                name: My Staged Upgrade Group
                description: The description of the group
                isDefault: false
                assignedDevices:
                  devices:
                  - serial: Q234-ABCD-5678
                    name: Device Name
                  switchStacks:
                  - id: "1234"
                    name: Stack Name
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_30'
                type: array
          description: Successful operation
      summary: List of Staged Upgrade Groups in a network
      tags:
      - networks
      - configure
      - firmwareUpgrades
      - staged
      - groups
    post:
      description: Create a Staged Upgrade Group for a network
      operationId: createNetworkFirmwareUpgradesStagedGroup
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_82'
        content:
          application/json:
            schema:
              example:
                name: My Staged Upgrade Group
                description: The description of the group
                isDefault: false
                assignedDevices:
                  devices:
                  - serial: Q234-ABCD-5678
                    name: Device Name
                  switchStacks:
                  - id: "1234"
                    name: Stack Name
              properties:
                name:
                  description: Name of the Staged Upgrade Group. Length must be 1
                    to 255 characters
                  type: string
                description:
                  description: Description of the Staged Upgrade Group. Length must
                    be 1 to 255 characters
                  type: string
                isDefault:
                  description: Boolean indicating the default Group. Any device that
                    does not have a group explicitly assigned will upgrade with this
                    group
                  type: boolean
                assignedDevices:
                  $ref: '#/components/schemas/_networks__networkId__firmwareUpgrades_staged_groups_assignedDevices_1'
              required:
              - isDefault
              - name
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                groupId: "1234"
                name: My Staged Upgrade Group
                description: The description of the group
                isDefault: false
                assignedDevices:
                  devices:
                  - name: Device Name
                    serial: Q234-ABCD-5678
                  switchStacks:
                  - name: Stack Name
                    id: "1234"
              schema:
                type: object
          description: Successful operation
      summary: Create a Staged Upgrade Group for a network
      tags:
      - networks
      - configure
      - firmwareUpgrades
      - staged
      - groups
      x-codegen-request-body-name: createNetworkFirmwareUpgradesStagedGroup
  /networks/{networkId}/firmwareUpgrades/staged/groups/{groupId}:
    delete:
      description: Delete a Staged Upgrade Group
      operationId: deleteNetworkFirmwareUpgradesStagedGroup
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Group ID
        in: path
        name: groupId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Successful operation
      summary: Delete a Staged Upgrade Group
      tags:
      - networks
      - configure
      - firmwareUpgrades
      - staged
      - groups
    get:
      description: Get a Staged Upgrade Group from a network
      operationId: getNetworkFirmwareUpgradesStagedGroup
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Group ID
        in: path
        name: groupId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                groupId: "1234"
                name: My Staged Upgrade Group
                description: The description of the group
                isDefault: false
                assignedDevices:
                  devices:
                  - serial: Q234-ABCD-5678
                    name: Device Name
                  switchStacks:
                  - id: "1234"
                    name: Stack Name
              schema:
                $ref: '#/components/schemas/inline_response_200_30'
          description: Successful operation
      summary: Get a Staged Upgrade Group from a network
      tags:
      - networks
      - configure
      - firmwareUpgrades
      - staged
      - groups
    put:
      description: Update a Staged Upgrade Group for a network
      operationId: updateNetworkFirmwareUpgradesStagedGroup
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Group ID
        in: path
        name: groupId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_83'
        content:
          application/json:
            schema:
              example:
                name: My Staged Upgrade Group
                description: The description of the group
                isDefault: false
                assignedDevices:
                  devices:
                  - serial: Q234-ABCD-5678
                    name: Device Name
                  switchStacks:
                  - id: "1234"
                    name: Stack Name
              properties:
                name:
                  description: Name of the Staged Upgrade Group. Length must be 1
                    to 255 characters
                  type: string
                description:
                  description: Description of the Staged Upgrade Group. Length must
                    be 1 to 255 characters
                  type: string
                isDefault:
                  description: Boolean indicating the default Group. Any device that
                    does not have a group explicitly assigned will upgrade with this
                    group
                  type: boolean
                assignedDevices:
                  $ref: '#/components/schemas/_networks__networkId__firmwareUpgrades_staged_groups_assignedDevices_1'
              required:
              - isDefault
              - name
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                groupId: "1234"
                name: My Staged Upgrade Group
                description: The description of the group
                isDefault: false
                assignedDevices:
                  devices:
                  - name: Device Name
                    serial: Q234-ABCD-5678
                  switchStacks:
                  - name: Stack Name
                    id: "1234"
              schema:
                type: object
          description: Successful operation
      summary: Update a Staged Upgrade Group for a network
      tags:
      - networks
      - configure
      - firmwareUpgrades
      - staged
      - groups
      x-codegen-request-body-name: updateNetworkFirmwareUpgradesStagedGroup
  /networks/{networkId}/firmwareUpgrades/staged/stages:
    get:
      description: Order of Staged Upgrade Groups in a network
      operationId: getNetworkFirmwareUpgradesStagedStages
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - group:
                  id: "1234"
                  name: My Staged Upgrade Group
                  description: My Staged Upgrade Description
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_31'
                type: array
          description: Successful operation
      summary: Order of Staged Upgrade Groups in a network
      tags:
      - networks
      - configure
      - firmwareUpgrades
      - staged
      - stages
    put:
      description: Assign Staged Upgrade Group order in the sequence.
      operationId: updateNetworkFirmwareUpgradesStagedStages
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_84'
        content:
          application/json:
            schema:
              example:
                _json:
                - group:
                    id: "1234"
              properties:
                _json:
                  description: Array of Staged Upgrade Groups
                  items:
                    $ref: '#/components/schemas/_networks__networkId__firmwareUpgrades_staged_stages__json'
                  type: array
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
              - group:
                  id: "1234"
                  name: My Staged Upgrade Group
                  description: My Staged Upgrade Description
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_31'
                type: array
          description: Successful operation
      summary: Assign Staged Upgrade Group order in the sequence.
      tags:
      - networks
      - configure
      - firmwareUpgrades
      - staged
      - stages
      x-codegen-request-body-name: updateNetworkFirmwareUpgradesStagedStages
  /networks/{networkId}/floorPlans:
    get:
      description: List the floor plans that belong to your network
      operationId: getNetworkFloorPlans
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - floorPlanId: g_1234567
                imageUrl: https://meraki-na.s3.amazonaws.com/assets/...
                imageUrlExpiresAt: 2019-06-11 16:04:54 +00:00
                imageExtension: png
                imageMd5: 2a9edd3f4ffd80130c647d13eacb59f3
                name: HQ Floor Plan
                devices:
                - name: My AP
                  lat: 37.4180951010362
                  lng: -122.098531723022
                  serial: Q234-ABCD-5678
                  mac: 00:11:22:33:44:55
                  model: MR34
                  address: 1600 Pennsylvania Ave
                  notes: My AP's note
                  lanIp: 1.2.3.4
                  tags:
                  - recently-added
                  networkId: N_24329156
                  beaconIdParams:
                    uuid: 00000000-0000-0000-0000-000000000000
                    major: 5
                    minor: 3
                  firmware: wireless-25-14
                  floorPlanId: g_1234567
                width: 100.0
                height: 150.1
                center:
                  lat: 37.770040510499996
                  lng: -122.38714009525
                bottomLeftCorner:
                  lat: 37.7696461495
                  lng: -122.3880815506
                bottomRightCorner:
                  lat: 37.771524649766654
                  lng: -122.38795275055205
                topLeftCorner:
                  lat: 37.769700101836364
                  lng: -122.3888684251381
                topRightCorner:
                  lat: 37.77157860210302
                  lng: -122.38873962509012
              schema:
                items:
                  properties: {}
                  type: object
                type: array
          description: Successful operation
      summary: List the floor plans that belong to your network
      tags:
      - networks
      - configure
      - floorPlans
    post:
      description: Upload a floor plan
      operationId: createNetworkFloorPlan
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_85'
        content:
          application/json:
            schema:
              example:
                name: HQ Floor Plan
                imageContents: Q2lzY28gTWVyYWtp
              properties:
                name:
                  description: The name of your floor plan.
                  type: string
                center:
                  $ref: '#/components/schemas/_networks__networkId__floorPlans_center'
                bottomLeftCorner:
                  $ref: '#/components/schemas/_networks__networkId__floorPlans_bottomLeftCorner'
                bottomRightCorner:
                  $ref: '#/components/schemas/_networks__networkId__floorPlans_bottomRightCorner'
                topLeftCorner:
                  $ref: '#/components/schemas/_networks__networkId__floorPlans_topLeftCorner'
                topRightCorner:
                  $ref: '#/components/schemas/_networks__networkId__floorPlans_topRightCorner'
                imageContents:
                  description: The file contents (a base 64 encoded string) of your
                    image. Supported formats are PNG, GIF, and JPG. Note that all
                    images are saved as PNG files, regardless of the format they are
                    uploaded in.
                  format: byte
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
              required:
              - imageContents
              - name
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                floorPlanId: g_1234567
                imageUrl: https://meraki-na.s3.amazonaws.com/assets/...
                imageUrlExpiresAt: 2019-06-11 16:04:54 +00:00
                imageExtension: png
                imageMd5: 2a9edd3f4ffd80130c647d13eacb59f3
                name: HQ Floor Plan
                devices:
                - name: My AP
                  lat: 37.4180951010362
                  lng: -122.098531723022
                  serial: Q234-ABCD-5678
                  mac: 00:11:22:33:44:55
                  model: MR34
                  address: 1600 Pennsylvania Ave
                  notes: My AP's note
                  lanIp: 1.2.3.4
                  tags:
                  - recently-added
                  networkId: N_24329156
                  beaconIdParams:
                    uuid: 00000000-0000-0000-0000-000000000000
                    major: 5
                    minor: 3
                  firmware: wireless-25-14
                  floorPlanId: g_1234567
                width: 100.0
                height: 150.1
                center:
                  lat: 37.770040510499996
                  lng: -122.38714009525
                bottomLeftCorner:
                  lat: 37.7696461495
                  lng: -122.3880815506
                bottomRightCorner:
                  lat: 37.771524649766654
                  lng: -122.38795275055205
                topLeftCorner:
                  lat: 37.769700101836364
                  lng: -122.3888684251381
                topRightCorner:
                  lat: 37.77157860210302
                  lng: -122.38873962509012
              schema:
                type: object
          description: Successful operation
      summary: Upload a floor plan
      tags:
      - networks
      - configure
      - floorPlans
      x-codegen-request-body-name: createNetworkFloorPlan
  /networks/{networkId}/floorPlans/{floorPlanId}:
    delete:
      description: Destroy a floor plan
      operationId: deleteNetworkFloorPlan
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Floor plan ID
        in: path
        name: floorPlanId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Successful operation
      summary: Destroy a floor plan
      tags:
      - networks
      - configure
      - floorPlans
    get:
      description: Find a floor plan by ID
      operationId: getNetworkFloorPlan
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Floor plan ID
        in: path
        name: floorPlanId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                floorPlanId: g_1234567
                imageUrl: https://meraki-na.s3.amazonaws.com/assets/...
                imageUrlExpiresAt: 2019-06-11 16:04:54 +00:00
                imageExtension: png
                imageMd5: 2a9edd3f4ffd80130c647d13eacb59f3
                name: HQ Floor Plan
                devices:
                - name: My AP
                  lat: 37.4180951010362
                  lng: -122.098531723022
                  serial: Q234-ABCD-5678
                  mac: 00:11:22:33:44:55
                  model: MR34
                  address: 1600 Pennsylvania Ave
                  notes: My AP's note
                  lanIp: 1.2.3.4
                  tags:
                  - recently-added
                  networkId: N_24329156
                  beaconIdParams:
                    uuid: 00000000-0000-0000-0000-000000000000
                    major: 5
                    minor: 3
                  firmware: wireless-25-14
                  floorPlanId: g_1234567
                width: 100.0
                height: 150.1
                center:
                  lat: 37.770040510499996
                  lng: -122.38714009525
                bottomLeftCorner:
                  lat: 37.7696461495
                  lng: -122.3880815506
                bottomRightCorner:
                  lat: 37.771524649766654
                  lng: -122.38795275055205
                topLeftCorner:
                  lat: 37.769700101836364
                  lng: -122.3888684251381
                topRightCorner:
                  lat: 37.77157860210302
                  lng: -122.38873962509012
              schema:
                type: object
          description: Successful operation
      summary: Find a floor plan by ID
      tags:
      - networks
      - configure
      - floorPlans
    put:
      description: Update a floor plan's geolocation and other meta data
      operationId: updateNetworkFloorPlan
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Floor plan ID
        in: path
        name: floorPlanId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_86'
        content:
          application/json:
            schema:
              example: {}
              properties:
                name:
                  description: The name of your floor plan.
                  type: string
                center:
                  $ref: '#/components/schemas/_networks__networkId__floorPlans__floorPlanId__center'
                bottomLeftCorner:
                  $ref: '#/components/schemas/_networks__networkId__floorPlans_bottomLeftCorner'
                bottomRightCorner:
                  $ref: '#/components/schemas/_networks__networkId__floorPlans_bottomRightCorner'
                topLeftCorner:
                  $ref: '#/components/schemas/_networks__networkId__floorPlans_topLeftCorner'
                topRightCorner:
                  $ref: '#/components/schemas/_networks__networkId__floorPlans_topRightCorner'
                imageContents:
                  description: The file contents (a base 64 encoded string) of your
                    new image. Supported formats are PNG, GIF, and JPG. Note that
                    all images are saved as PNG files, regardless of the format they
                    are uploaded in. If you upload a new image, and you do NOT specify
                    any new geolocation fields ('center, 'topLeftCorner', etc), the
                    floor plan will be recentered with no rotation in order to maintain
                    the aspect ratio of your new image.
                  format: byte
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                floorPlanId: g_1234567
                imageUrl: https://meraki-na.s3.amazonaws.com/assets/...
                imageUrlExpiresAt: 2019-06-11 16:04:54 +00:00
                imageExtension: png
                imageMd5: 2a9edd3f4ffd80130c647d13eacb59f3
                name: HQ Floor Plan
                devices:
                - name: My AP
                  lat: 37.4180951010362
                  lng: -122.098531723022
                  serial: Q234-ABCD-5678
                  mac: 00:11:22:33:44:55
                  model: MR34
                  address: 1600 Pennsylvania Ave
                  notes: My AP's note
                  lanIp: 1.2.3.4
                  tags:
                  - recently-added
                  networkId: N_24329156
                  beaconIdParams:
                    uuid: 00000000-0000-0000-0000-000000000000
                    major: 5
                    minor: 3
                  firmware: wireless-25-14
                  floorPlanId: g_1234567
                width: 100.0
                height: 150.1
                center:
                  lat: 37.770040510499996
                  lng: -122.38714009525
                bottomLeftCorner:
                  lat: 37.7696461495
                  lng: -122.3880815506
                bottomRightCorner:
                  lat: 37.771524649766654
                  lng: -122.38795275055205
                topLeftCorner:
                  lat: 37.769700101836364
                  lng: -122.3888684251381
                topRightCorner:
                  lat: 37.77157860210302
                  lng: -122.38873962509012
              schema:
                type: object
          description: Successful operation
      summary: Update a floor plan's geolocation and other meta data
      tags:
      - networks
      - configure
      - floorPlans
      x-codegen-request-body-name: updateNetworkFloorPlan
  /networks/{networkId}/groupPolicies:
    get:
      description: List the group policies in a network
      operationId: getNetworkGroupPolicies
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - name: No video streaming
                groupPolicyId: "101"
                scheduling:
                  enabled: true
                  monday:
                    active: true
                    from: 9:00
                    to: 17:00
                  tuesday:
                    active: true
                    from: 9:00
                    to: 17:00
                  wednesday:
                    active: true
                    from: 9:00
                    to: 17:00
                  thursday:
                    active: true
                    from: 9:00
                    to: 17:00
                  friday:
                    active: true
                    from: 9:00
                    to: 17:00
                  saturday:
                    active: false
                    from: 0:00
                    to: 24:00
                  sunday:
                    active: false
                    from: 0:00
                    to: 24:00
                bandwidth:
                  settings: custom
                  bandwidthLimits:
                    limitUp: 1000000
                    limitDown: 1000000
                firewallAndTrafficShaping:
                  settings: custom
                  trafficShapingRules:
                  - definitions:
                    - type: host
                      value: google.com
                    - type: port
                      value: "9090"
                    - type: ipRange
                      value: 192.1.0.0
                    - type: ipRange
                      value: 192.1.0.0/16
                    - type: ipRange
                      value: 10.1.0.0/16:80
                    - type: localNet
                      value: 192.168.0.0/16
                    perClientBandwidthLimits:
                      settings: custom
                      bandwidthLimits:
                        limitUp: 1000000
                        limitDown: 1000000
                    dscpTagValue: 0
                    pcpTagValue: 0
                  l3FirewallRules:
                  - comment: Allow TCP traffic to subnet with HTTP servers.
                    policy: allow
                    protocol: tcp
                    destPort: "443"
                    destCidr: 192.168.1.0/24
                  l7FirewallRules:
                  - policy: deny
                    type: host
                    value: google.com
                  - policy: deny
                    type: port
                    value: "23"
                  - policy: deny
                    type: ipRange
                    value: 10.11.12.00/24
                  - policy: deny
                    type: ipRange
                    value: 10.11.12.00/24:5555
                contentFiltering:
                  allowedUrlPatterns:
                    settings: network default
                    patterns: []
                  blockedUrlPatterns:
                    settings: append
                    patterns:
                    - http://www.example.com
                    - http://www.betting.com
                  blockedUrlCategories:
                    settings: override
                    categories:
                    - meraki:contentFiltering/category/1
                    - meraki:contentFiltering/category/7
                splashAuthSettings: bypass
                vlanTagging:
                  settings: custom
                  vlanId: "1"
                bonjourForwarding:
                  settings: custom
                  rules:
                  - description: A simple bonjour rule
                    vlanId: "1"
                    services:
                    - All Services
              schema:
                items:
                  properties: {}
                  type: object
                type: array
          description: Successful operation
      summary: List the group policies in a network
      tags:
      - networks
      - configure
      - groupPolicies
    post:
      description: Create a group policy
      operationId: createNetworkGroupPolicy
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_87'
        content:
          application/json:
            schema:
              example:
                name: No video streaming
                scheduling:
                  enabled: true
                  monday:
                    active: true
                    from: 9:00
                    to: 17:00
                  tuesday:
                    active: true
                    from: 9:00
                    to: 17:00
                  wednesday:
                    active: true
                    from: 9:00
                    to: 17:00
                  thursday:
                    active: true
                    from: 9:00
                    to: 17:00
                  friday:
                    active: true
                    from: 9:00
                    to: 17:00
                  saturday:
                    active: false
                    from: 0:00
                    to: 24:00
                  sunday:
                    active: false
                    from: 0:00
                    to: 24:00
                bandwidth:
                  settings: custom
                  bandwidthLimits:
                    limitUp: 1000000
                    limitDown: 1000000
                firewallAndTrafficShaping:
                  settings: custom
                  trafficShapingRules:
                  - definitions:
                    - type: host
                      value: google.com
                    - type: port
                      value: "9090"
                    - type: ipRange
                      value: 192.1.0.0
                    - type: ipRange
                      value: 192.1.0.0/16
                    - type: ipRange
                      value: 10.1.0.0/16:80
                    - type: localNet
                      value: 192.168.0.0/16
                    perClientBandwidthLimits:
                      settings: custom
                      bandwidthLimits:
                        limitUp: 1000000
                        limitDown: 1000000
                    dscpTagValue: 0
                    pcpTagValue: 0
                  l3FirewallRules:
                  - comment: Allow TCP traffic to subnet with HTTP servers.
                    policy: allow
                    protocol: tcp
                    destPort: "443"
                    destCidr: 192.168.1.0/24
                  l7FirewallRules:
                  - policy: deny
                    type: host
                    value: google.com
                  - policy: deny
                    type: port
                    value: "23"
                  - policy: deny
                    type: ipRange
                    value: 10.11.12.00/24
                  - policy: deny
                    type: ipRange
                    value: 10.11.12.00/24:5555
                contentFiltering:
                  allowedUrlPatterns:
                    settings: network default
                    patterns: []
                  blockedUrlPatterns:
                    settings: append
                    patterns:
                    - http://www.example.com
                    - http://www.betting.com
                  blockedUrlCategories:
                    settings: override
                    categories:
                    - meraki:contentFiltering/category/1
                    - meraki:contentFiltering/category/7
                splashAuthSettings: bypass
                vlanTagging:
                  settings: custom
                  vlanId: "1"
                bonjourForwarding:
                  settings: custom
                  rules:
                  - description: A simple bonjour rule
                    vlanId: "1"
                    services:
                    - All Services
              properties:
                name:
                  description: The name for your group policy. Required.
                  type: string
                scheduling:
                  $ref: '#/components/schemas/_networks__networkId__groupPolicies_scheduling'
                bandwidth:
                  $ref: '#/components/schemas/_networks__networkId__groupPolicies_bandwidth'
                firewallAndTrafficShaping:
                  $ref: '#/components/schemas/_networks__networkId__groupPolicies_firewallAndTrafficShaping'
                contentFiltering:
                  $ref: '#/components/schemas/_networks__networkId__groupPolicies_contentFiltering'
                splashAuthSettings:
                  description: Whether clients bound to your policy will bypass splash
                    authorization or behave according to the network's rules. Can
                    be one of 'network default' or 'bypass'. Only available if your
                    network has a wireless configuration.
                  enum:
                  - bypass
                  - network default
                  type: string
                vlanTagging:
                  $ref: '#/components/schemas/_networks__networkId__groupPolicies_vlanTagging'
                bonjourForwarding:
                  $ref: '#/components/schemas/_networks__networkId__groupPolicies_bonjourForwarding'
              required:
              - name
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                name: No video streaming
                groupPolicyId: "101"
                scheduling:
                  enabled: true
                  monday:
                    active: true
                    from: 9:00
                    to: 17:00
                  tuesday:
                    active: true
                    from: 9:00
                    to: 17:00
                  wednesday:
                    active: true
                    from: 9:00
                    to: 17:00
                  thursday:
                    active: true
                    from: 9:00
                    to: 17:00
                  friday:
                    active: true
                    from: 9:00
                    to: 17:00
                  saturday:
                    active: false
                    from: 0:00
                    to: 24:00
                  sunday:
                    active: false
                    from: 0:00
                    to: 24:00
                bandwidth:
                  settings: custom
                  bandwidthLimits:
                    limitUp: 1000000
                    limitDown: 1000000
                firewallAndTrafficShaping:
                  settings: custom
                  trafficShapingRules:
                  - definitions:
                    - type: host
                      value: google.com
                    - type: port
                      value: "9090"
                    - type: ipRange
                      value: 192.1.0.0
                    - type: ipRange
                      value: 192.1.0.0/16
                    - type: ipRange
                      value: 10.1.0.0/16:80
                    - type: localNet
                      value: 192.168.0.0/16
                    perClientBandwidthLimits:
                      settings: custom
                      bandwidthLimits:
                        limitUp: 1000000
                        limitDown: 1000000
                    dscpTagValue: 0
                    pcpTagValue: 0
                  l3FirewallRules:
                  - comment: Allow TCP traffic to subnet with HTTP servers.
                    policy: allow
                    protocol: tcp
                    destPort: "443"
                    destCidr: 192.168.1.0/24
                  l7FirewallRules:
                  - policy: deny
                    type: host
                    value: google.com
                  - policy: deny
                    type: port
                    value: "23"
                  - policy: deny
                    type: ipRange
                    value: 10.11.12.00/24
                  - policy: deny
                    type: ipRange
                    value: 10.11.12.00/24:5555
                contentFiltering:
                  allowedUrlPatterns:
                    settings: network default
                    patterns: []
                  blockedUrlPatterns:
                    settings: append
                    patterns:
                    - http://www.example.com
                    - http://www.betting.com
                  blockedUrlCategories:
                    settings: override
                    categories:
                    - meraki:contentFiltering/category/1
                    - meraki:contentFiltering/category/7
                splashAuthSettings: bypass
                vlanTagging:
                  settings: custom
                  vlanId: "1"
                bonjourForwarding:
                  settings: custom
                  rules:
                  - description: A simple bonjour rule
                    vlanId: "1"
                    services:
                    - All Services
              schema:
                type: object
          description: Successful operation
      summary: Create a group policy
      tags:
      - networks
      - configure
      - groupPolicies
      x-codegen-request-body-name: createNetworkGroupPolicy
  /networks/{networkId}/groupPolicies/{groupPolicyId}:
    delete:
      description: Delete a group policy
      operationId: deleteNetworkGroupPolicy
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Group policy ID
        in: path
        name: groupPolicyId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Successful operation
      summary: Delete a group policy
      tags:
      - networks
      - configure
      - groupPolicies
    get:
      description: Display a group policy
      operationId: getNetworkGroupPolicy
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Group policy ID
        in: path
        name: groupPolicyId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                name: No video streaming
                groupPolicyId: "101"
                scheduling:
                  enabled: true
                  monday:
                    active: true
                    from: 9:00
                    to: 17:00
                  tuesday:
                    active: true
                    from: 9:00
                    to: 17:00
                  wednesday:
                    active: true
                    from: 9:00
                    to: 17:00
                  thursday:
                    active: true
                    from: 9:00
                    to: 17:00
                  friday:
                    active: true
                    from: 9:00
                    to: 17:00
                  saturday:
                    active: false
                    from: 0:00
                    to: 24:00
                  sunday:
                    active: false
                    from: 0:00
                    to: 24:00
                bandwidth:
                  settings: custom
                  bandwidthLimits:
                    limitUp: 1000000
                    limitDown: 1000000
                firewallAndTrafficShaping:
                  settings: custom
                  trafficShapingRules:
                  - definitions:
                    - type: host
                      value: google.com
                    - type: port
                      value: "9090"
                    - type: ipRange
                      value: 192.1.0.0
                    - type: ipRange
                      value: 192.1.0.0/16
                    - type: ipRange
                      value: 10.1.0.0/16:80
                    - type: localNet
                      value: 192.168.0.0/16
                    perClientBandwidthLimits:
                      settings: custom
                      bandwidthLimits:
                        limitUp: 1000000
                        limitDown: 1000000
                    dscpTagValue: 0
                    pcpTagValue: 0
                  l3FirewallRules:
                  - comment: Allow TCP traffic to subnet with HTTP servers.
                    policy: allow
                    protocol: tcp
                    destPort: "443"
                    destCidr: 192.168.1.0/24
                  l7FirewallRules:
                  - policy: deny
                    type: host
                    value: google.com
                  - policy: deny
                    type: port
                    value: "23"
                  - policy: deny
                    type: ipRange
                    value: 10.11.12.00/24
                  - policy: deny
                    type: ipRange
                    value: 10.11.12.00/24:5555
                contentFiltering:
                  allowedUrlPatterns:
                    settings: network default
                    patterns: []
                  blockedUrlPatterns:
                    settings: append
                    patterns:
                    - http://www.example.com
                    - http://www.betting.com
                  blockedUrlCategories:
                    settings: override
                    categories:
                    - meraki:contentFiltering/category/1
                    - meraki:contentFiltering/category/7
                splashAuthSettings: bypass
                vlanTagging:
                  settings: custom
                  vlanId: "1"
                bonjourForwarding:
                  settings: custom
                  rules:
                  - description: A simple bonjour rule
                    vlanId: "1"
                    services:
                    - All Services
              schema:
                type: object
          description: Successful operation
      summary: Display a group policy
      tags:
      - networks
      - configure
      - groupPolicies
    put:
      description: Update a group policy
      operationId: updateNetworkGroupPolicy
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Group policy ID
        in: path
        name: groupPolicyId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_88'
        content:
          application/json:
            schema:
              example:
                name: No video streaming
                scheduling:
                  enabled: true
                  monday:
                    active: true
                    from: 9:00
                    to: 17:00
                  tuesday:
                    active: true
                    from: 9:00
                    to: 17:00
                  wednesday:
                    active: true
                    from: 9:00
                    to: 17:00
                  thursday:
                    active: true
                    from: 9:00
                    to: 17:00
                  friday:
                    active: true
                    from: 9:00
                    to: 17:00
                  saturday:
                    active: false
                    from: 0:00
                    to: 24:00
                  sunday:
                    active: false
                    from: 0:00
                    to: 24:00
                bandwidth:
                  settings: custom
                  bandwidthLimits:
                    limitUp: 1000000
                    limitDown: 1000000
                firewallAndTrafficShaping:
                  settings: custom
                  trafficShapingRules:
                  - definitions:
                    - type: host
                      value: google.com
                    - type: port
                      value: "9090"
                    - type: ipRange
                      value: 192.1.0.0
                    - type: ipRange
                      value: 192.1.0.0/16
                    - type: ipRange
                      value: 10.1.0.0/16:80
                    - type: localNet
                      value: 192.168.0.0/16
                    perClientBandwidthLimits:
                      settings: custom
                      bandwidthLimits:
                        limitUp: 1000000
                        limitDown: 1000000
                    dscpTagValue: 0
                    pcpTagValue: 0
                  l3FirewallRules:
                  - comment: Allow TCP traffic to subnet with HTTP servers.
                    policy: allow
                    protocol: tcp
                    destPort: "443"
                    destCidr: 192.168.1.0/24
                  l7FirewallRules:
                  - policy: deny
                    type: host
                    value: google.com
                  - policy: deny
                    type: port
                    value: "23"
                  - policy: deny
                    type: ipRange
                    value: 10.11.12.00/24
                  - policy: deny
                    type: ipRange
                    value: 10.11.12.00/24:5555
                contentFiltering:
                  allowedUrlPatterns:
                    settings: network default
                    patterns: []
                  blockedUrlPatterns:
                    settings: append
                    patterns:
                    - http://www.example.com
                    - http://www.betting.com
                  blockedUrlCategories:
                    settings: override
                    categories:
                    - meraki:contentFiltering/category/1
                    - meraki:contentFiltering/category/7
                splashAuthSettings: bypass
                vlanTagging:
                  settings: custom
                  vlanId: "1"
                bonjourForwarding:
                  settings: custom
                  rules:
                  - description: A simple bonjour rule
                    vlanId: "1"
                    services:
                    - All Services
              properties:
                name:
                  description: The name for your group policy.
                  type: string
                scheduling:
                  $ref: '#/components/schemas/_networks__networkId__groupPolicies_scheduling'
                bandwidth:
                  $ref: '#/components/schemas/_networks__networkId__groupPolicies_bandwidth'
                firewallAndTrafficShaping:
                  $ref: '#/components/schemas/_networks__networkId__groupPolicies_firewallAndTrafficShaping'
                contentFiltering:
                  $ref: '#/components/schemas/_networks__networkId__groupPolicies_contentFiltering'
                splashAuthSettings:
                  description: Whether clients bound to your policy will bypass splash
                    authorization or behave according to the network's rules. Can
                    be one of 'network default' or 'bypass'. Only available if your
                    network has a wireless configuration.
                  enum:
                  - bypass
                  - network default
                  type: string
                vlanTagging:
                  $ref: '#/components/schemas/_networks__networkId__groupPolicies_vlanTagging'
                bonjourForwarding:
                  $ref: '#/components/schemas/_networks__networkId__groupPolicies_bonjourForwarding'
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                name: No video streaming
                groupPolicyId: "101"
                scheduling:
                  enabled: true
                  monday:
                    active: true
                    from: 9:00
                    to: 17:00
                  tuesday:
                    active: true
                    from: 9:00
                    to: 17:00
                  wednesday:
                    active: true
                    from: 9:00
                    to: 17:00
                  thursday:
                    active: true
                    from: 9:00
                    to: 17:00
                  friday:
                    active: true
                    from: 9:00
                    to: 17:00
                  saturday:
                    active: false
                    from: 0:00
                    to: 24:00
                  sunday:
                    active: false
                    from: 0:00
                    to: 24:00
                bandwidth:
                  settings: custom
                  bandwidthLimits:
                    limitUp: 1000000
                    limitDown: 1000000
                firewallAndTrafficShaping:
                  settings: custom
                  trafficShapingRules:
                  - definitions:
                    - type: host
                      value: google.com
                    - type: port
                      value: "9090"
                    - type: ipRange
                      value: 192.1.0.0
                    - type: ipRange
                      value: 192.1.0.0/16
                    - type: ipRange
                      value: 10.1.0.0/16:80
                    - type: localNet
                      value: 192.168.0.0/16
                    perClientBandwidthLimits:
                      settings: custom
                      bandwidthLimits:
                        limitUp: 1000000
                        limitDown: 1000000
                    dscpTagValue: 0
                    pcpTagValue: 0
                  l3FirewallRules:
                  - comment: Allow TCP traffic to subnet with HTTP servers.
                    policy: allow
                    protocol: tcp
                    destPort: "443"
                    destCidr: 192.168.1.0/24
                  l7FirewallRules:
                  - policy: deny
                    type: host
                    value: google.com
                  - policy: deny
                    type: port
                    value: "23"
                  - policy: deny
                    type: ipRange
                    value: 10.11.12.00/24
                  - policy: deny
                    type: ipRange
                    value: 10.11.12.00/24:5555
                contentFiltering:
                  allowedUrlPatterns:
                    settings: network default
                    patterns: []
                  blockedUrlPatterns:
                    settings: append
                    patterns:
                    - http://www.example.com
                    - http://www.betting.com
                  blockedUrlCategories:
                    settings: override
                    categories:
                    - meraki:contentFiltering/category/1
                    - meraki:contentFiltering/category/7
                splashAuthSettings: bypass
                vlanTagging:
                  settings: custom
                  vlanId: "1"
                bonjourForwarding:
                  settings: custom
                  rules:
                  - description: A simple bonjour rule
                    vlanId: "1"
                    services:
                    - All Services
              schema:
                type: object
          description: Successful operation
      summary: Update a group policy
      tags:
      - networks
      - configure
      - groupPolicies
      x-codegen-request-body-name: updateNetworkGroupPolicy
  /networks/{networkId}/health/alerts:
    get:
      description: Return all global alerts on this network
      operationId: getNetworkHealthAlerts
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - id: "1234"
                category: Connectivity
                type: Poor connectivity to the Meraki cloud
                severity: info
                scope:
                  devices:
                  - url: https://n1.meraki.com//n//manage/nodes/new_list/000000000000
                    name: My AP
                    productType: switch
                    serial: Q234-ABCD-5678
                    mac: 00:11:22:33:44:55
                    lldp:
                      portId: "1"
                    clients:
                    - mac: 22:33:44:55:66:77
                  applications:
                  - url: https://n1.meraki.com//n//manage/nodes/list
                    name: Application on application server
                  peers:
                  - url: https://n1.meraki.com//n//manage/nodes/list
                    network:
                      name: Main Office
                      id: N_24329156
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_32'
                type: array
          description: Successful operation
      summary: Return all global alerts on this network
      tags:
      - networks
      - configure
      - health
      - alerts
  /networks/{networkId}/insight/applications/{applicationId}/healthByTime:
    get:
      description: Get application health by time
      operationId: getNetworkInsightApplicationHealthByTime
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Application ID
        in: path
        name: applicationId
        required: true
        schema:
          type: string
      - description: The beginning of the timespan for the data. The maximum lookback
          period is 7 days from today.
        in: query
        name: t0
        schema:
          type: string
      - description: The end of the timespan for the data. t1 can be a maximum of
          7 days after t0.
        in: query
        name: t1
        schema:
          type: string
      - description: The timespan for which the information will be fetched. If specifying
          timespan, do not specify parameters t0 and t1. The value must be in seconds
          and be less than or equal to 7 days. The default is 2 hours.
        in: query
        name: timespan
        schema:
          format: float
          type: number
      - description: 'The time resolution in seconds for returned data. The valid
          resolutions are: 60, 300, 3600, 86400. The default is 300.'
        in: query
        name: resolution
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              example:
              - startTs: 2018-02-11T00:00:00Z
                endTs: 2018-05-12T00:00:00Z
                wanGoodput: 20000000
                lanGoodput: 100000000
                wanLatencyMs: 10.1
                lanLatencyMs: 3.2
                wanLossPercent: 0.2
                lanLossPercent: 0.0
                responseDuration: 210
                sent: 1000
                recv: 5000
                numClients: 2
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_33'
                type: array
          description: Successful operation
      summary: Get application health by time
      tags:
      - insight
      - monitor
      - applications
      - healthByTime
  /networks/{networkId}/merakiAuthUsers:
    get:
      description: List the users configured under Meraki Authentication for a network
        (splash guest or RADIUS users for a wireless network, or client VPN users
        for a wired network)
      operationId: getNetworkMerakiAuthUsers
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - id: aGlAaGkuY29t
                email: miles@meraki.com
                name: Miles Meraki
                createdAt: 2018-02-11T00:00:00.090210Z
                accountType: 802.1X
                isAdmin: false
                authorizations:
                - ssidNumber: 1
                  authorizedZone: Store WiFi
                  expiresAt: 2018-03-13T00:00:00.090210Z
                  authorizedByName: Miles Meraki
                  authorizedByEmail: miles@meraki.com
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_34'
                type: array
          description: Successful operation
      summary: List the users configured under Meraki Authentication for a network
        (splash guest or RADIUS users for a wireless network, or client VPN users
        for a wired network)
      tags:
      - networks
      - configure
      - merakiAuthUsers
    post:
      description: Authorize a user configured with Meraki Authentication for a network
        (currently supports 802.1X, splash guest, and client VPN users, and currently,
        organizations have a 50,000 user cap)
      operationId: createNetworkMerakiAuthUser
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_89'
        content:
          application/json:
            schema:
              example:
                email: miles@meraki.com
                name: Miles Meraki
                password: secret
                accountType: 802.1X
                emailPasswordToUser: false
                isAdmin: false
                authorizations:
                - ssidNumber: 1
                  expiresAt: 2018-03-13T00:00:00.090210Z
              properties:
                email:
                  description: Email address of the user
                  type: string
                name:
                  description: Name of the user. Only required If the user is not
                    a Dashboard administrator.
                  type: string
                password:
                  description: The password for this user account. Only required If
                    the user is not a Dashboard administrator.
                  type: string
                accountType:
                  default: 802.1X
                  description: Authorization type for user. Can be 'Guest' or '802.1X'
                    for wireless networks, or 'Client VPN' for wired networks. Defaults
                    to '802.1X'.
                  enum:
                  - 802.1X
                  - Client VPN
                  - Guest
                  type: string
                emailPasswordToUser:
                  description: Whether or not Meraki should email the password to
                    user. Default is false.
                  type: boolean
                isAdmin:
                  description: Whether or not the user is a Dashboard administrator.
                  type: boolean
                authorizations:
                  description: Authorization zones and expiration dates for the user.
                  items:
                    $ref: '#/components/schemas/_networks__networkId__merakiAuthUsers_authorizations_1'
                  type: array
              required:
              - authorizations
              - email
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                id: aGlAaGkuY29t
                email: miles@meraki.com
                name: Miles Meraki
                createdAt: 2018-02-11T00:00:00.090210Z
                accountType: 802.1X
                isAdmin: false
                authorizations:
                - ssidNumber: 1
                  authorizedZone: Store WiFi
                  expiresAt: 2018-03-13T00:00:00.090210Z
                  authorizedByName: Miles Meraki
                  authorizedByEmail: miles@meraki.com
              schema:
                $ref: '#/components/schemas/inline_response_200_34'
          description: Successful operation
      summary: Authorize a user configured with Meraki Authentication for a network
        (currently supports 802.1X, splash guest, and client VPN users, and currently,
        organizations have a 50,000 user cap)
      tags:
      - networks
      - configure
      - merakiAuthUsers
      x-codegen-request-body-name: createNetworkMerakiAuthUser
  /networks/{networkId}/merakiAuthUsers/{merakiAuthUserId}:
    delete:
      description: Deauthorize a user. To reauthorize a user after deauthorizing them,
        POST to this endpoint. (Currently, 802.1X RADIUS, splash guest, and client
        VPN users can be deauthorized.)
      operationId: deleteNetworkMerakiAuthUser
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Meraki auth user ID
        in: path
        name: merakiAuthUserId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Successful operation
      summary: Deauthorize a user
      tags:
      - networks
      - configure
      - merakiAuthUsers
    get:
      description: Return the Meraki Auth splash guest, RADIUS, or client VPN user
      operationId: getNetworkMerakiAuthUser
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Meraki auth user ID
        in: path
        name: merakiAuthUserId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                id: aGlAaGkuY29t
                email: miles@meraki.com
                name: Miles Meraki
                createdAt: 2018-02-11T00:00:00.090210Z
                accountType: 802.1X
                isAdmin: false
                authorizations:
                - ssidNumber: 1
                  authorizedZone: Store WiFi
                  expiresAt: 2018-03-13T00:00:00.090210Z
                  authorizedByName: Miles Meraki
                  authorizedByEmail: miles@meraki.com
              schema:
                $ref: '#/components/schemas/inline_response_200_34'
          description: Successful operation
      summary: Return the Meraki Auth splash guest, RADIUS, or client VPN user
      tags:
      - networks
      - configure
      - merakiAuthUsers
    put:
      description: Update a user configured with Meraki Authentication (currently,
        802.1X RADIUS, splash guest, and client VPN users can be updated)
      operationId: updateNetworkMerakiAuthUser
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Meraki auth user ID
        in: path
        name: merakiAuthUserId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_90'
        content:
          application/json:
            schema:
              example:
                name: Miles Meraki
                password: secret
                emailPasswordToUser: false
                authorizations:
                - ssidNumber: 1
                  expiresAt: 2018-03-13T00:00:00.090210Z
              properties:
                name:
                  description: Name of the user. Only allowed If the user is not Dashboard
                    administrator.
                  type: string
                password:
                  description: The password for this user account. Only allowed If
                    the user is not Dashboard administrator.
                  type: string
                emailPasswordToUser:
                  description: Whether or not Meraki should email the password to
                    user. Default is false.
                  type: boolean
                authorizations:
                  description: Authorization zones and expiration dates for the user.
                  items:
                    $ref: '#/components/schemas/_networks__networkId__merakiAuthUsers__merakiAuthUserId__authorizations'
                  type: array
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                id: aGlAaGkuY29t
                email: miles@meraki.com
                name: Miles Meraki
                createdAt: 2018-02-11T00:00:00.090210Z
                accountType: 802.1X
                isAdmin: false
                authorizations:
                - ssidNumber: 1
                  authorizedZone: Store WiFi
                  expiresAt: 2018-03-13T00:00:00.090210Z
                  authorizedByName: Miles Meraki
                  authorizedByEmail: miles@meraki.com
              schema:
                $ref: '#/components/schemas/inline_response_200_34'
          description: Successful operation
      summary: Update a user configured with Meraki Authentication (currently, 802.1X
        RADIUS, splash guest, and client VPN users can be updated)
      tags:
      - networks
      - configure
      - merakiAuthUsers
      x-codegen-request-body-name: updateNetworkMerakiAuthUser
  /networks/{networkId}/mqttBrokers:
    get:
      description: List the MQTT brokers for this network
      operationId: getNetworkMqttBrokers
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - id: "1234"
                name: MQTT_Broker_1
                host: 1.1.1.1
                port: 1234
                security:
                  mode: tls
                  tls:
                    hasCaCertificate: true
                    verifyHostnames: true
                authentication:
                  username: Username
              schema:
                items:
                  properties: {}
                  type: object
                type: array
          description: Successful operation
      summary: List the MQTT brokers for this network
      tags:
      - networks
      - configure
      - mqttBrokers
    post:
      description: Add an MQTT broker
      operationId: createNetworkMqttBroker
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_91'
        content:
          application/json:
            schema:
              example:
                name: MQTT_Broker_1
                host: 1.1.1.1
                port: 1234
                security:
                  mode: tls
                  tls:
                    hasCaCertificate: true
                    verifyHostnames: true
                authentication:
                  username: Username
              properties:
                name:
                  description: Name of the MQTT broker.
                  type: string
                host:
                  description: Host name/IP address where the MQTT broker runs.
                  type: string
                port:
                  description: Host port though which the MQTT broker can be reached.
                  type: integer
                security:
                  $ref: '#/components/schemas/_networks__networkId__mqttBrokers_security'
                authentication:
                  description: Authentication settings of the MQTT broker
                  properties: {}
                  type: object
              required:
              - host
              - name
              - port
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                id: "1234"
                name: MQTT_Broker_1
                host: 1.1.1.1
                port: 1234
                security:
                  mode: tls
                  tls:
                    hasCaCertificate: true
                    verifyHostnames: true
                authentication:
                  username: Username
              schema:
                type: object
          description: Successful operation
      summary: Add an MQTT broker
      tags:
      - networks
      - configure
      - mqttBrokers
      x-codegen-request-body-name: createNetworkMqttBroker
  /networks/{networkId}/mqttBrokers/{mqttBrokerId}:
    delete:
      description: Delete an MQTT broker
      operationId: deleteNetworkMqttBroker
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Mqtt broker ID
        in: path
        name: mqttBrokerId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Successful operation
      summary: Delete an MQTT broker
      tags:
      - networks
      - configure
      - mqttBrokers
    get:
      description: Return an MQTT broker
      operationId: getNetworkMqttBroker
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Mqtt broker ID
        in: path
        name: mqttBrokerId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                id: "1234"
                name: MQTT_Broker_1
                host: 1.1.1.1
                port: 1234
                security:
                  mode: tls
                  tls:
                    hasCaCertificate: true
                    verifyHostnames: true
                authentication:
                  username: Username
              schema:
                type: object
          description: Successful operation
      summary: Return an MQTT broker
      tags:
      - networks
      - configure
      - mqttBrokers
    put:
      description: Update an MQTT broker
      operationId: updateNetworkMqttBroker
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Mqtt broker ID
        in: path
        name: mqttBrokerId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_92'
        content:
          application/json:
            schema:
              example:
                id: "1234"
                name: MQTT_Broker_1
                host: 1.1.1.1
                port: 1234
                security:
                  mode: tls
                  tls:
                    hasCaCertificate: true
                    verifyHostnames: true
                authentication:
                  username: Username
              properties:
                name:
                  description: Name of the MQTT broker.
                  type: string
                host:
                  description: Host name/IP address where the MQTT broker runs.
                  type: string
                port:
                  description: Host port though which the MQTT broker can be reached.
                  type: integer
                security:
                  $ref: '#/components/schemas/_networks__networkId__mqttBrokers_security'
                authentication:
                  description: Authentication settings of the MQTT broker
                  properties: {}
                  type: object
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                id: "1234"
                name: MQTT_Broker_1
                host: 1.1.1.1
                port: 1234
                security:
                  mode: tls
                  tls:
                    hasCaCertificate: true
                    verifyHostnames: true
                authentication:
                  username: Username
              schema:
                type: object
          description: Successful operation
      summary: Update an MQTT broker
      tags:
      - networks
      - configure
      - mqttBrokers
      x-codegen-request-body-name: updateNetworkMqttBroker
  /networks/{networkId}/netflow:
    get:
      description: Return the NetFlow traffic reporting settings for a network
      operationId: getNetworkNetflow
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                reportingEnabled: true
                collectorIp: 1.2.3.4
                collectorPort: 443
                etaEnabled: true
                etaDstPort: 443
              schema:
                type: object
          description: Successful operation
      summary: Return the NetFlow traffic reporting settings for a network
      tags:
      - networks
      - configure
      - netflow
    put:
      description: Update the NetFlow traffic reporting settings for a network
      operationId: updateNetworkNetflow
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_93'
        content:
          application/json:
            schema:
              example:
                reportingEnabled: true
                collectorIp: 1.2.3.4
                collectorPort: 443
                etaEnabled: true
                etaDstPort: 443
              properties:
                reportingEnabled:
                  description: Boolean indicating whether NetFlow traffic reporting
                    is enabled (true) or disabled (false).
                  type: boolean
                collectorIp:
                  description: The IPv4 address of the NetFlow collector.
                  type: string
                collectorPort:
                  description: The port that the NetFlow collector will be listening
                    on.
                  type: integer
                etaEnabled:
                  description: Boolean indicating whether Encrypted Traffic Analytics
                    is enabled (true) or disabled (false).
                  type: boolean
                etaDstPort:
                  description: The port that the Encrypted Traffic Analytics collector
                    will be listening on.
                  type: integer
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                reportingEnabled: true
                collectorIp: 1.2.3.4
                collectorPort: 443
                etaEnabled: true
                etaDstPort: 443
              schema:
                type: object
          description: Successful operation
      summary: Update the NetFlow traffic reporting settings for a network
      tags:
      - networks
      - configure
      - netflow
      x-codegen-request-body-name: updateNetworkNetflow
  /networks/{networkId}/networkHealth/channelUtilization:
    get:
      description: Get the channel utilization over each radio for all APs in a network.
      operationId: getNetworkNetworkHealthChannelUtilization
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: The beginning of the timespan for the data. The maximum lookback
          period is 31 days from today.
        in: query
        name: t0
        schema:
          type: string
      - description: The end of the timespan for the data. t1 can be a maximum of
          31 days after t0.
        in: query
        name: t1
        schema:
          type: string
      - description: The timespan for which the information will be fetched. If specifying
          timespan, do not specify parameters t0 and t1. The value must be in seconds
          and be less than or equal to 31 days. The default is 1 day.
        in: query
        name: timespan
        schema:
          format: float
          type: number
      - description: 'The time resolution in seconds for returned data. The valid
          resolutions are: 600. The default is 600.'
        in: query
        name: resolution
        schema:
          type: integer
      - description: The number of entries per page returned. Acceptable range is
          3 - 100. Default is 10.
        in: query
        name: perPage
        schema:
          type: integer
      - description: A token used by the server to indicate the start of the page.
          Often this is a timestamp or an ID but it is not limited to those. This
          parameter should not be defined by client applications. The link for the
          first, last, prev, or next page in the HTTP Link header should define it.
        in: query
        name: startingAfter
        schema:
          type: string
      - description: A token used by the server to indicate the end of the page. Often
          this is a timestamp or an ID but it is not limited to those. This parameter
          should not be defined by client applications. The link for the first, last,
          prev, or next page in the HTTP Link header should define it.
        in: query
        name: endingBefore
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - serial: Q234-ABCD-5678
                model: MR34
                tags: ' recently-added '
                wifi0:
                - startTime: 2018-10-09T22:18:27Z
                  endTime: 2018-10-09T22:19:27Z
                  utilizationTotal: 33.84
                  utilization80211: 32
                  utilizationNon80211: 1.84
                - startTime: 2018-10-09T22:19:27Z
                  endTime: 2018-10-09T22:20:27Z
                  utilizationTotal: 33.85
                  utilization80211: 32.01
                  utilizationNon80211: 1.84
                - startTime: 2018-10-09T22:20:27Z
                  endTime: 2018-10-09T22:21:27Z
                  utilizationTotal: 34.89
                  utilization80211: 33.48
                  utilizationNon80211: 1.41
                wifi1:
                - startTime: 2018-10-09T22:18:27Z
                  endTime: 2018-10-09T22:19:27Z
                  utilizationTotal: 33.84
                  utilization80211: 32
                  utilizationNon80211: 1.84
                - startTime: 2018-10-09T22:19:27Z
                  endTime: 2018-10-09T22:20:27Z
                  utilizationTotal: 33.85
                  utilization80211: 32.01
                  utilizationNon80211: 1.84
                - startTime: 2018-10-09T22:20:27Z
                  endTime: 2018-10-09T22:21:27Z
                  utilizationTotal: 34.89
                  utilization80211: 33.48
                  utilizationNon80211: 1.41
              schema:
                items:
                  properties: {}
                  type: object
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative
                links used for subsequent paginated requests.
              schema:
                type: string
      summary: Get the channel utilization over each radio for all APs in a network.
      tags:
      - networks
      - monitor
      - networkHealth
      - channelUtilization
  /networks/{networkId}/pii/piiKeys:
    get:
      description: |-
        List the keys required to access Personally Identifiable Information (PII) for a given identifier. Exactly one identifier will be accepted. If the organization contains org-wide Systems Manager users matching the key provided then there will be an entry with the key "0" containing the applicable keys.

        ## ALTERNATE PATH

        ```
        /organizations/{organizationId}/pii/piiKeys
        ```
      operationId: getNetworkPiiPiiKeys
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: The username of a Systems Manager user
        in: query
        name: username
        schema:
          type: string
      - description: The email of a network user account or a Systems Manager device
        in: query
        name: email
        schema:
          type: string
      - description: The MAC of a network client device or a Systems Manager device
        in: query
        name: mac
        schema:
          type: string
      - description: The serial of a Systems Manager device
        in: query
        name: serial
        schema:
          type: string
      - description: The IMEI of a Systems Manager device
        in: query
        name: imei
        schema:
          type: string
      - description: The MAC of a Bluetooth client
        in: query
        name: bluetoothMac
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                N_1234:
                  macs:
                  - 00:77:00:77:00:77
                  emails:
                  - fake@example.com
                  usernames:
                  - fakename
                  serials:
                  - abcd1234
                  imeis:
                  - "990000862471854"
                  bluetoothMacs:
                  - 00:77:00:77:00:77
              schema:
                type: object
          description: Successful operation
      summary: List the keys required to access Personally Identifiable Information
        (PII) for a given identifier
      tags:
      - networks
      - configure
      - pii
      - piiKeys
  /networks/{networkId}/pii/requests:
    get:
      description: |-
        List the PII requests for this network or organization

        ## ALTERNATE PATH

        ```
        /organizations/{organizationId}/pii/requests
        ```
      operationId: getNetworkPiiRequests
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - id: "1234"
                organizationWide: false
                networkId: N_1234
                type: delete
                mac: 00:77:00:77:00:77
                datasets: '[''usage'', ''events'']'
                status: Completed
                createdAt: 1524692227
                completedAt: 1524702227
              schema:
                items:
                  properties: {}
                  type: object
                type: array
          description: Successful operation
      summary: List the PII requests for this network or organization
      tags:
      - networks
      - configure
      - pii
      - requests
    post:
      description: |-
        Submit a new delete or restrict processing PII request

        ## ALTERNATE PATH

        ```
        /organizations/{organizationId}/pii/requests
        ```
      operationId: createNetworkPiiRequest
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_94'
        content:
          application/json:
            schema:
              example:
                type: delete
                datasets:
                - usage
                - events
                mac: 00:77:00:77:00:77
              properties:
                type:
                  description: One of "delete" or "restrict processing"
                  enum:
                  - delete
                  - restrict processing
                  type: string
                datasets:
                  description: 'The datasets related to the provided key that should
                    be deleted. Only applies to "delete" requests. The value "all"
                    will be expanded to all datasets applicable to this type. The
                    datasets by applicable to each type are: mac (usage, events, traffic),
                    email (users, loginAttempts), username (users, loginAttempts),
                    bluetoothMac (client, connectivity), smDeviceId (device), smUserId
                    (user)'
                  items:
                    type: string
                  type: array
                username:
                  description: The username of a network log in. Only applies to "delete"
                    requests.
                  type: string
                email:
                  description: The email of a network user account. Only applies to
                    "delete" requests.
                  type: string
                mac:
                  description: The MAC of a network client device. Applies to both
                    "restrict processing" and "delete" requests.
                  type: string
                smDeviceId:
                  description: The sm_device_id of a Systems Manager device. The only
                    way to "restrict processing" or "delete" a Systems Manager device.
                    Must include "device" in the dataset for a "delete" request to
                    destroy the device.
                  type: string
                smUserId:
                  description: The sm_user_id of a Systems Manager user. The only
                    way to "restrict processing" or "delete" a Systems Manager user.
                    Must include "user" in the dataset for a "delete" request to destroy
                    the user.
                  type: string
              type: object
        required: false
      responses:
        "201":
          content:
            application/json:
              example:
                id: "1234"
                organizationWide: false
                networkId: N_1234
                type: delete
                mac: 00:77:00:77:00:77
                datasets: '[''usage'', ''events'']'
                status: Not visible in Dashboard; database deletion in process
                createdAt: 1524692227
              schema:
                type: object
          description: Successful operation
      summary: Submit a new delete or restrict processing PII request
      tags:
      - networks
      - configure
      - pii
      - requests
      x-codegen-request-body-name: createNetworkPiiRequest
  /networks/{networkId}/pii/requests/{requestId}:
    delete:
      description: |-
        Delete a restrict processing PII request

        ## ALTERNATE PATH

        ```
        /organizations/{organizationId}/pii/requests/{requestId}
        ```
      operationId: deleteNetworkPiiRequest
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Request ID
        in: path
        name: requestId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Successful operation
      summary: Delete a restrict processing PII request
      tags:
      - networks
      - configure
      - pii
      - requests
    get:
      description: |-
        Return a PII request

        ## ALTERNATE PATH

        ```
        /organizations/{organizationId}/pii/requests/{requestId}
        ```
      operationId: getNetworkPiiRequest
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Request ID
        in: path
        name: requestId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                id: "1234"
                organizationWide: false
                networkId: N_1234
                type: delete
                mac: 00:77:00:77:00:77
                datasets: '[''usage'', ''events'']'
                status: Completed
                createdAt: 1524692227
                completedAt: 1524702227
              schema:
                type: object
          description: Successful operation
      summary: Return a PII request
      tags:
      - networks
      - configure
      - pii
      - requests
  /networks/{networkId}/pii/smDevicesForKey:
    get:
      description: |-
        Given a piece of Personally Identifiable Information (PII), return the Systems Manager device ID(s) associated with that identifier. These device IDs can be used with the Systems Manager API endpoints to retrieve device details. Exactly one identifier will be accepted.

        ## ALTERNATE PATH

        ```
        /organizations/{organizationId}/pii/smDevicesForKey
        ```
      operationId: getNetworkPiiSmDevicesForKey
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: The username of a Systems Manager user
        in: query
        name: username
        schema:
          type: string
      - description: The email of a network user account or a Systems Manager device
        in: query
        name: email
        schema:
          type: string
      - description: The MAC of a network client device or a Systems Manager device
        in: query
        name: mac
        schema:
          type: string
      - description: The serial of a Systems Manager device
        in: query
        name: serial
        schema:
          type: string
      - description: The IMEI of a Systems Manager device
        in: query
        name: imei
        schema:
          type: string
      - description: The MAC of a Bluetooth client
        in: query
        name: bluetoothMac
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                N_1234:
                - "1099541095293"
                - "8348382288234"
              schema:
                type: object
          description: Successful operation
      summary: Given a piece of Personally Identifiable Information (PII), return
        the Systems Manager device ID(s) associated with that identifier
      tags:
      - networks
      - configure
      - pii
      - smDevicesForKey
  /networks/{networkId}/pii/smOwnersForKey:
    get:
      description: |-
        Given a piece of Personally Identifiable Information (PII), return the Systems Manager owner ID(s) associated with that identifier. These owner IDs can be used with the Systems Manager API endpoints to retrieve owner details. Exactly one identifier will be accepted.

        ## ALTERNATE PATH

        ```
        /organizations/{organizationId}/pii/smOwnersForKey
        ```
      operationId: getNetworkPiiSmOwnersForKey
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: The username of a Systems Manager user
        in: query
        name: username
        schema:
          type: string
      - description: The email of a network user account or a Systems Manager device
        in: query
        name: email
        schema:
          type: string
      - description: The MAC of a network client device or a Systems Manager device
        in: query
        name: mac
        schema:
          type: string
      - description: The serial of a Systems Manager device
        in: query
        name: serial
        schema:
          type: string
      - description: The IMEI of a Systems Manager device
        in: query
        name: imei
        schema:
          type: string
      - description: The MAC of a Bluetooth client
        in: query
        name: bluetoothMac
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                N_1234:
                - "1099541095293"
              schema:
                type: object
          description: Successful operation
      summary: Given a piece of Personally Identifiable Information (PII), return
        the Systems Manager owner ID(s) associated with that identifier
      tags:
      - networks
      - configure
      - pii
      - smOwnersForKey
  /networks/{networkId}/policies/byClient:
    get:
      description: Get policies for all clients with policies
      operationId: getNetworkPoliciesByClient
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: The number of entries per page returned. Acceptable range is
          3 - 1000. Default is 50.
        in: query
        name: perPage
        schema:
          type: integer
      - description: A token used by the server to indicate the start of the page.
          Often this is a timestamp or an ID but it is not limited to those. This
          parameter should not be defined by client applications. The link for the
          first, last, prev, or next page in the HTTP Link header should define it.
        in: query
        name: startingAfter
        schema:
          type: string
      - description: A token used by the server to indicate the end of the page. Often
          this is a timestamp or an ID but it is not limited to those. This parameter
          should not be defined by client applications. The link for the first, last,
          prev, or next page in the HTTP Link header should define it.
        in: query
        name: endingBefore
        schema:
          type: string
      - description: The beginning of the timespan for the data. The maximum lookback
          period is 31 days from today.
        in: query
        name: t0
        schema:
          type: string
      - description: The timespan for which the information will be fetched. If specifying
          timespan, do not specify parameter t0. The value must be in seconds and
          be less than or equal to 31 days. The default is 1 day.
        in: query
        name: timespan
        schema:
          format: float
          type: number
      responses:
        "200":
          content:
            application/json:
              example:
              - name: my phone
                clientId: abc
                assigned:
                - name: Allowed
                  type: ssid
                  groupPolicyId: "100"
                  ssid:
                  - ssidNumber: 1
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_35'
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative
                links used for subsequent paginated requests.
              schema:
                type: string
      summary: Get policies for all clients with policies
      tags:
      - networks
      - configure
      - policies
      - byClient
  /networks/{networkId}/sensor/alerts/current/overview/byMetric:
    get:
      description: Return an overview of currently alerting sensors by metric
      operationId: getNetworkSensorAlertsCurrentOverviewByMetric
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                supportedMetrics:
                - temperature
                - humidity
                - door
                counts:
                  door: 0
                  humidity: 1
                  indoorAirQuality: 0
                  noise:
                    ambient: 0
                  pm25: 0
                  temperature: 4
                  tvoc: 0
                  water: 0
              schema:
                $ref: '#/components/schemas/inline_response_200_36'
          description: Successful operation
      summary: Return an overview of currently alerting sensors by metric
      tags:
      - sensor
      - monitor
      - alerts
      - current
      - overview
      - byMetric
  /networks/{networkId}/sensor/alerts/overview/byMetric:
    get:
      description: Return an overview of alert occurrences over a timespan, by metric
      operationId: getNetworkSensorAlertsOverviewByMetric
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: The beginning of the timespan for the data. The maximum lookback
          period is 365 days from today.
        in: query
        name: t0
        schema:
          type: string
      - description: The end of the timespan for the data. t1 can be a maximum of
          31 days after t0.
        in: query
        name: t1
        schema:
          type: string
      - description: The timespan for which the information will be fetched. If specifying
          timespan, do not specify parameters t0 and t1. The value must be in seconds
          and be less than or equal to 31 days. The default is 7 days.
        in: query
        name: timespan
        schema:
          format: float
          type: number
      - description: 'The time interval in seconds for returned data. The valid intervals
          are: 86400, 604800. The default is 604800.'
        in: query
        name: interval
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              example:
              - startTs: 2022-08-21T00:00:00Z
                endTs: 2022-08-27T23:59:59Z
                counts:
                  door: 0
                  humidity: 1
                  indoorAirQuality: 0
                  noise:
                    ambient: 2
                  pm25: 0
                  temperature: 4
                  tvoc: 0
                  water: 0
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_37'
                type: array
          description: Successful operation
      summary: Return an overview of alert occurrences over a timespan, by metric
      tags:
      - sensor
      - monitor
      - alerts
      - overview
      - byMetric
  /networks/{networkId}/sensor/alerts/profiles:
    get:
      description: Lists all sensor alert profiles for a network.
      operationId: getNetworkSensorAlertsProfiles
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - profileId: "1"
                name: My Sensor Alert Profile
                schedule:
                  id: "5"
                  name: My Schedule
                conditions:
                - metric: temperature
                  threshold:
                    temperature:
                      celsius: 20.5
                      fahrenheit: 70.0
                      quality: good
                    humidity:
                      relativePercentage: 65
                      quality: inadequate
                    water:
                      present: true
                    door:
                      open: true
                    tvoc:
                      concentration: 400
                      quality: poor
                    pm25:
                      concentration: 90
                      quality: fair
                    noise:
                      ambient:
                        level: 120
                        quality: poor
                    indoorAirQuality:
                      score: 80
                      quality: fair
                  direction: above
                  duration: 60
                recipients:
                  emails:
                  - miles@meraki.com
                  smsNumbers:
                  - +15555555555
                  httpServerIds:
                  - aHR0cHM6Ly93d3cuZXhhbXBsZS5jb20vd2ViaG9va3M=
                serials:
                - Q234-ABCD-0001
                - Q234-ABCD-0002
                - Q234-ABCD-0003
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_38'
                type: array
          description: Successful operation
      summary: Lists all sensor alert profiles for a network.
      tags:
      - sensor
      - configure
      - alerts
      - profiles
    post:
      description: Creates a sensor alert profile for a network.
      operationId: createNetworkSensorAlertsProfile
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_95'
        content:
          application/json:
            schema:
              example:
                name: My Sensor Alert Profile
                schedule:
                  id: "5"
                conditions:
                - metric: temperature
                  threshold:
                    temperature:
                      celsius: 20.5
                      fahrenheit: 70.0
                      quality: good
                    humidity:
                      relativePercentage: 65
                      quality: inadequate
                    water:
                      present: true
                    door:
                      open: true
                    tvoc:
                      concentration: 400
                      quality: poor
                    pm25:
                      concentration: 90
                      quality: fair
                    noise:
                      ambient:
                        level: 120
                        quality: poor
                    indoorAirQuality:
                      score: 80
                      quality: fair
                  direction: above
                  duration: 60
                recipients:
                  emails:
                  - miles@meraki.com
                  smsNumbers:
                  - +15555555555
                  httpServerIds:
                  - aHR0cHM6Ly93d3cuZXhhbXBsZS5jb20vd2ViaG9va3M=
                serials:
                - Q234-ABCD-0001
                - Q234-ABCD-0002
                - Q234-ABCD-0003
              properties:
                name:
                  description: Name of the sensor alert profile.
                  type: string
                schedule:
                  $ref: '#/components/schemas/_networks__networkId__sensor_alerts_profiles_schedule_1'
                conditions:
                  description: List of conditions that will cause the profile to send
                    an alert.
                  items:
                    $ref: '#/components/schemas/_networks__networkId__sensor_alerts_profiles_conditions'
                  type: array
                recipients:
                  $ref: '#/components/schemas/_networks__networkId__sensor_alerts_profiles_recipients'
                serials:
                  description: List of device serials assigned to this sensor alert
                    profile.
                  items:
                    type: string
                  type: array
              required:
              - conditions
              - name
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                profileId: "1"
                name: My Sensor Alert Profile
                schedule:
                  id: "5"
                  name: My Schedule
                conditions:
                - metric: temperature
                  threshold:
                    temperature:
                      celsius: 20.5
                      fahrenheit: 70.0
                      quality: good
                    humidity:
                      relativePercentage: 65
                      quality: inadequate
                    water:
                      present: true
                    door:
                      open: true
                    tvoc:
                      concentration: 400
                      quality: poor
                    pm25:
                      concentration: 90
                      quality: fair
                    noise:
                      ambient:
                        level: 120
                        quality: poor
                    indoorAirQuality:
                      score: 80
                      quality: fair
                  direction: above
                  duration: 60
                recipients:
                  emails:
                  - miles@meraki.com
                  smsNumbers:
                  - +15555555555
                  httpServerIds:
                  - aHR0cHM6Ly93d3cuZXhhbXBsZS5jb20vd2ViaG9va3M=
                serials:
                - Q234-ABCD-0001
                - Q234-ABCD-0002
                - Q234-ABCD-0003
              schema:
                $ref: '#/components/schemas/inline_response_200_38'
          description: Successful operation
      summary: Creates a sensor alert profile for a network.
      tags:
      - sensor
      - configure
      - alerts
      - profiles
      x-codegen-request-body-name: createNetworkSensorAlertsProfile
  /networks/{networkId}/sensor/alerts/profiles/{id}:
    delete:
      description: Deletes a sensor alert profile from a network.
      operationId: deleteNetworkSensorAlertsProfile
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Id
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Successful operation
      summary: Deletes a sensor alert profile from a network.
      tags:
      - sensor
      - configure
      - alerts
      - profiles
    get:
      description: Show details of a sensor alert profile for a network.
      operationId: getNetworkSensorAlertsProfile
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Id
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                profileId: "1"
                name: My Sensor Alert Profile
                schedule:
                  id: "5"
                  name: My Schedule
                conditions:
                - metric: temperature
                  threshold:
                    temperature:
                      celsius: 20.5
                      fahrenheit: 70.0
                      quality: good
                    humidity:
                      relativePercentage: 65
                      quality: inadequate
                    water:
                      present: true
                    door:
                      open: true
                    tvoc:
                      concentration: 400
                      quality: poor
                    pm25:
                      concentration: 90
                      quality: fair
                    noise:
                      ambient:
                        level: 120
                        quality: poor
                    indoorAirQuality:
                      score: 80
                      quality: fair
                  direction: above
                  duration: 60
                recipients:
                  emails:
                  - miles@meraki.com
                  smsNumbers:
                  - +15555555555
                  httpServerIds:
                  - aHR0cHM6Ly93d3cuZXhhbXBsZS5jb20vd2ViaG9va3M=
                serials:
                - Q234-ABCD-0001
                - Q234-ABCD-0002
                - Q234-ABCD-0003
              schema:
                $ref: '#/components/schemas/inline_response_200_38'
          description: Successful operation
      summary: Show details of a sensor alert profile for a network.
      tags:
      - sensor
      - configure
      - alerts
      - profiles
    put:
      description: Updates a sensor alert profile for a network.
      operationId: updateNetworkSensorAlertsProfile
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Id
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_96'
        content:
          application/json:
            schema:
              example:
                name: My Sensor Alert Profile
                schedule:
                  id: "5"
                conditions:
                - metric: temperature
                  threshold:
                    temperature:
                      celsius: 20.5
                      fahrenheit: 70.0
                      quality: good
                    humidity:
                      relativePercentage: 65
                      quality: inadequate
                    water:
                      present: true
                    door:
                      open: true
                    tvoc:
                      concentration: 400
                      quality: poor
                    pm25:
                      concentration: 90
                      quality: fair
                    noise:
                      ambient:
                        level: 120
                        quality: poor
                    indoorAirQuality:
                      score: 80
                      quality: fair
                  direction: above
                  duration: 60
                recipients:
                  emails:
                  - miles@meraki.com
                  smsNumbers:
                  - +15555555555
                  httpServerIds:
                  - aHR0cHM6Ly93d3cuZXhhbXBsZS5jb20vd2ViaG9va3M=
                serials:
                - Q234-ABCD-0001
                - Q234-ABCD-0002
                - Q234-ABCD-0003
              properties:
                name:
                  description: Name of the sensor alert profile.
                  type: string
                schedule:
                  $ref: '#/components/schemas/_networks__networkId__sensor_alerts_profiles_schedule_1'
                conditions:
                  description: List of conditions that will cause the profile to send
                    an alert.
                  items:
                    $ref: '#/components/schemas/_networks__networkId__sensor_alerts_profiles_conditions'
                  type: array
                recipients:
                  $ref: '#/components/schemas/_networks__networkId__sensor_alerts_profiles_recipients'
                serials:
                  description: List of device serials assigned to this sensor alert
                    profile.
                  items:
                    type: string
                  type: array
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                profileId: "1"
                name: My Sensor Alert Profile
                schedule:
                  id: "5"
                  name: My Schedule
                conditions:
                - metric: temperature
                  threshold:
                    temperature:
                      celsius: 20.5
                      fahrenheit: 70.0
                      quality: good
                    humidity:
                      relativePercentage: 65
                      quality: inadequate
                    water:
                      present: true
                    door:
                      open: true
                    tvoc:
                      concentration: 400
                      quality: poor
                    pm25:
                      concentration: 90
                      quality: fair
                    noise:
                      ambient:
                        level: 120
                        quality: poor
                    indoorAirQuality:
                      score: 80
                      quality: fair
                  direction: above
                  duration: 60
                recipients:
                  emails:
                  - miles@meraki.com
                  smsNumbers:
                  - +15555555555
                  httpServerIds:
                  - aHR0cHM6Ly93d3cuZXhhbXBsZS5jb20vd2ViaG9va3M=
                serials:
                - Q234-ABCD-0001
                - Q234-ABCD-0002
                - Q234-ABCD-0003
              schema:
                $ref: '#/components/schemas/inline_response_200_38'
          description: Successful operation
      summary: Updates a sensor alert profile for a network.
      tags:
      - sensor
      - configure
      - alerts
      - profiles
      x-codegen-request-body-name: updateNetworkSensorAlertsProfile
  /networks/{networkId}/sensor/mqttBrokers:
    get:
      description: List the sensor settings of all MQTT brokers for this network.
        To get the brokers themselves, use /networks/{networkId}/mqttBrokers.
      operationId: getNetworkSensorMqttBrokers
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - mqttBrokerId: "1234"
                enabled: true
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_39'
                type: array
          description: Successful operation
      summary: List the sensor settings of all MQTT brokers for this network
      tags:
      - sensor
      - configure
      - mqttBrokers
  /networks/{networkId}/sensor/mqttBrokers/{mqttBrokerId}:
    get:
      description: Return the sensor settings of an MQTT broker. To get the broker
        itself, use /networks/{networkId}/mqttBrokers/{mqttBrokerId}.
      operationId: getNetworkSensorMqttBroker
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Mqtt broker ID
        in: path
        name: mqttBrokerId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                mqttBrokerId: "1234"
                enabled: true
              schema:
                $ref: '#/components/schemas/inline_response_200_39'
          description: Successful operation
      summary: Return the sensor settings of an MQTT broker
      tags:
      - sensor
      - configure
      - mqttBrokers
    put:
      description: Update the sensor settings of an MQTT broker. To update the broker
        itself, use /networks/{networkId}/mqttBrokers/{mqttBrokerId}.
      operationId: updateNetworkSensorMqttBroker
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Mqtt broker ID
        in: path
        name: mqttBrokerId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_97'
        content:
          application/json:
            schema:
              example:
                mqttBrokerId: "1234"
                enabled: true
              properties:
                enabled:
                  description: Set to true to enable MQTT broker for sensor network
                  type: boolean
              required:
              - enabled
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                mqttBrokerId: "1234"
                enabled: true
              schema:
                $ref: '#/components/schemas/inline_response_200_39'
          description: Successful operation
      summary: Update the sensor settings of an MQTT broker
      tags:
      - sensor
      - configure
      - mqttBrokers
      x-codegen-request-body-name: updateNetworkSensorMqttBroker
  /networks/{networkId}/sensor/relationships:
    get:
      description: List the sensor roles for devices in a given network
      operationId: getNetworkSensorRelationships
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - device:
                  name: My sensor
                  serial: Q234-ABCD-0001
                  productType: sensor
                relationships:
                  livestream:
                    relatedDevices:
                    - serial: Q234-ABCD-5678
                      productType: camera
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_40'
                type: array
          description: Successful operation
      summary: List the sensor roles for devices in a given network
      tags:
      - sensor
      - configure
      - relationships
  /networks/{networkId}/settings:
    get:
      description: Return the settings for a network
      operationId: getNetworkSettings
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                localStatusPageEnabled: true
                remoteStatusPageEnabled: true
                localStatusPage:
                  authentication:
                    enabled: false
                    username: admin
                securePort:
                  enabled: false
                fips:
                  enabled: true
                namedVlans:
                  enabled: true
                clientPrivacy:
                  expireDataOlderThan: 86400
                  expireDataBefore: 2022-10-01T00:00:00Z
              schema:
                $ref: '#/components/schemas/inline_response_200_41'
          description: Successful operation
      summary: Return the settings for a network
      tags:
      - networks
      - configure
      - settings
    put:
      description: Update the settings for a network
      operationId: updateNetworkSettings
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_98'
        content:
          application/json:
            schema:
              example:
                localStatusPageEnabled: true
                remoteStatusPageEnabled: true
                localStatusPage:
                  authentication:
                    enabled: false
                    password: miles123
                securePort:
                  enabled: false
              properties:
                localStatusPageEnabled:
                  description: Enables / disables the local device status pages (<a
                    target='_blank' href='http://my.meraki.com/'>my.meraki.com, </a><a
                    target='_blank' href='http://ap.meraki.com/'>ap.meraki.com, </a><a
                    target='_blank' href='http://switch.meraki.com/'>switch.meraki.com,
                    </a><a target='_blank' href='http://wired.meraki.com/'>wired.meraki.com</a>).
                    Optional (defaults to false)
                  type: boolean
                remoteStatusPageEnabled:
                  description: Enables / disables access to the device status page
                    (<a target='_blank'>http://[device's LAN IP])</a>. Optional. Can
                    only be set if localStatusPageEnabled is set to true
                  type: boolean
                localStatusPage:
                  $ref: '#/components/schemas/_networks__networkId__settings_localStatusPage'
                securePort:
                  $ref: '#/components/schemas/inline_response_200_41_securePort'
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                localStatusPageEnabled: true
                remoteStatusPageEnabled: true
                localStatusPage:
                  authentication:
                    enabled: false
                    username: admin
                securePort:
                  enabled: false
                fips:
                  enabled: true
                namedVlans:
                  enabled: true
                clientPrivacy:
                  expireDataOlderThan: 86400
                  expireDataBefore: 2022-10-01T00:00:00Z
              schema:
                $ref: '#/components/schemas/inline_response_200_41'
          description: Successful operation
      summary: Update the settings for a network
      tags:
      - networks
      - configure
      - settings
      x-codegen-request-body-name: updateNetworkSettings
  /networks/{networkId}/sm/bypassActivationLockAttempts:
    post:
      description: Bypass activation lock attempt
      operationId: createNetworkSmBypassActivationLockAttempt
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_99'
        content:
          application/json:
            schema:
              example:
                ids:
                - "1284392014819"
                - "2983092129865"
              properties:
                ids:
                  description: The ids of the devices to attempt activation lock bypass.
                  items:
                    type: string
                  type: array
              required:
              - ids
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                id: "1234"
                status: pending
                data: {}
              schema:
                type: object
          description: Successful operation
      summary: Bypass activation lock attempt
      tags:
      - sm
      - configure
      - bypassActivationLockAttempts
      x-codegen-request-body-name: createNetworkSmBypassActivationLockAttempt
  /networks/{networkId}/sm/bypassActivationLockAttempts/{attemptId}:
    get:
      description: Bypass activation lock attempt status
      operationId: getNetworkSmBypassActivationLockAttempt
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Attempt ID
        in: path
        name: attemptId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                id: "1234"
                status: complete
                data:
                  "38290139892":
                    success: true
                  "2090938209":
                    success: false
                    errors:
                    - Activation lock bypass code not known for this device
              schema:
                type: object
          description: Successful operation
      summary: Bypass activation lock attempt status
      tags:
      - sm
      - configure
      - bypassActivationLockAttempts
  /networks/{networkId}/sm/devices:
    get:
      description: List the devices enrolled in an SM network with various specified
        fields and filters
      operationId: getNetworkSmDevices
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: |-
          Additional fields that will be displayed for each device.
              The default fields are: id, name, tags, ssid, wifiMac, osName, systemModel, uuid, and serialNumber. The additional fields are: ip,
              systemType, availableDeviceCapacity, kioskAppName, biosVersion, lastConnected, missingAppsCount, userSuppliedAddress, location, lastUser,
              ownerEmail, ownerUsername, osBuild, publicIp, phoneNumber, diskInfoJson, deviceCapacity, isManaged, hadMdm, isSupervised, meid, imei, iccid,
              simCarrierNetwork, cellularDataUsed, isHotspotEnabled, createdAt, batteryEstCharge, quarantined, avName, avRunning, asName, fwName,
              isRooted, loginRequired, screenLockEnabled, screenLockDelay, autoLoginDisabled, autoTags, hasMdm, hasDesktopAgent, diskEncryptionEnabled,
              hardwareEncryptionCaps, passCodeLock, usesHardwareKeystore, androidSecurityPatchVersion, and url.
        explode: false
        in: query
        name: fields
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Filter devices by wifi mac(s).
        explode: false
        in: query
        name: wifiMacs
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Filter devices by serial(s).
        explode: false
        in: query
        name: serials
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Filter devices by id(s).
        explode: false
        in: query
        name: ids
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Specify a scope (one of all, none, withAny, withAll, withoutAny,
          or withoutAll) and a set of tags.
        explode: false
        in: query
        name: scope
        schema:
          items:
            type: string
          type: array
        style: form
      - description: The number of entries per page returned. Acceptable range is
          3 - 1000. Default is 1000.
        in: query
        name: perPage
        schema:
          type: integer
      - description: A token used by the server to indicate the start of the page.
          Often this is a timestamp or an ID but it is not limited to those. This
          parameter should not be defined by client applications. The link for the
          first, last, prev, or next page in the HTTP Link header should define it.
        in: query
        name: startingAfter
        schema:
          type: string
      - description: A token used by the server to indicate the end of the page. Often
          this is a timestamp or an ID but it is not limited to those. This parameter
          should not be defined by client applications. The link for the first, last,
          prev, or next page in the HTTP Link header should define it.
        in: query
        name: endingBefore
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - id: "1284392014819"
                name: Miles's phone
                tags:
                - tag1
                - tag2
                ssid: My SSID
                wifiMac: 00:11:22:33:44:55
                osName: iOS 9.3.5
                systemModel: iPhone
                uuid: 3d990628ede4c628d52
                serialNumber: F5XKHEBX
                serial: F5XKHEBX
                ip: 1.2.3.4
                notes: Here's some info about my device
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_42'
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative
                links used for subsequent paginated requests.
              schema:
                type: string
      summary: List the devices enrolled in an SM network with various specified fields
        and filters
      tags:
      - sm
      - configure
      - devices
  /networks/{networkId}/sm/devices/checkin:
    post:
      description: Force check-in a set of devices
      operationId: checkinNetworkSmDevices
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_100'
        content:
          application/json:
            schema:
              example:
                wifiMacs:
                - 00:11:22:33:44:55
                ids:
                - "1284392014819"
                - "2983092129865"
                serials:
                - Q234-ABCD-0001
                - Q234-ABCD-0002
                - Q234-ABCD-0003
                scope:
                - withAny
                - tag1
                - tag2
              properties:
                wifiMacs:
                  description: The wifiMacs of the devices to be checked-in.
                  items:
                    type: string
                  type: array
                ids:
                  description: The ids of the devices to be checked-in.
                  items:
                    type: string
                  type: array
                serials:
                  description: The serials of the devices to be checked-in.
                  items:
                    type: string
                  type: array
                scope:
                  description: The scope (one of all, none, withAny, withAll, withoutAny,
                    or withoutAll) and a set of tags of the devices to be checked-in.
                  items:
                    type: string
                  type: array
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                ids:
                - "1284392014819"
                - "2983092129865"
              schema:
                $ref: '#/components/schemas/inline_response_200_43'
          description: Successful operation
      summary: Force check-in a set of devices
      tags:
      - sm
      - configure
      - devices
      x-codegen-request-body-name: checkinNetworkSmDevices
  /networks/{networkId}/sm/devices/fields:
    put:
      description: Modify the fields of a device
      operationId: updateNetworkSmDevicesFields
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_101'
        content:
          application/json:
            schema:
              example:
                wifiMac: 00:11:22:33:44:55
                id: "1284392014819"
                serial: Q234-ABCD-5678
                deviceFields:
                  name: Miles's phone
                  notes: Here's some info about my device
              properties:
                wifiMac:
                  description: The wifiMac of the device to be modified.
                  type: string
                id:
                  description: The id of the device to be modified.
                  type: string
                serial:
                  description: The serial of the device to be modified.
                  type: string
                deviceFields:
                  $ref: '#/components/schemas/_networks__networkId__sm_devices_fields_deviceFields'
              required:
              - deviceFields
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
              - id: "1284392014819"
                name: Miles's phone
                wifiMac: 00:11:22:33:44:55
                serial: F5XKHEBX
                notes: Here's some info about my device
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_44'
                type: array
          description: Successful operation
      summary: Modify the fields of a device
      tags:
      - sm
      - configure
      - devices
      - fields
      x-codegen-request-body-name: updateNetworkSmDevicesFields
  /networks/{networkId}/sm/devices/lock:
    post:
      description: Lock a set of devices
      operationId: lockNetworkSmDevices
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_102'
        content:
          application/json:
            schema:
              example:
                wifiMacs:
                - 00:11:22:33:44:55
                ids:
                - "1284392014819"
                - "2983092129865"
                serials:
                - Q234-ABCD-0001
                - Q234-ABCD-0002
                - Q234-ABCD-0003
                scope:
                - withAny
                - tag1
                - tag2
                pin: 123456
              properties:
                wifiMacs:
                  description: The wifiMacs of the devices to be locked.
                  items:
                    type: string
                  type: array
                ids:
                  description: The ids of the devices to be locked.
                  items:
                    type: string
                  type: array
                serials:
                  description: The serials of the devices to be locked.
                  items:
                    type: string
                  type: array
                scope:
                  description: The scope (one of all, none, withAny, withAll, withoutAny,
                    or withoutAll) and a set of tags of the devices to be wiped.
                  items:
                    type: string
                  type: array
                pin:
                  description: The pin number for locking macOS devices (a six digit
                    number). Required only for macOS devices.
                  type: integer
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                ids:
                - "1284392014819"
                - "2983092129865"
              schema:
                $ref: '#/components/schemas/inline_response_200_43'
          description: Successful operation
      summary: Lock a set of devices
      tags:
      - sm
      - configure
      - devices
      x-codegen-request-body-name: lockNetworkSmDevices
  /networks/{networkId}/sm/devices/modifyTags:
    post:
      description: Add, delete, or update the tags of a set of devices
      operationId: modifyNetworkSmDevicesTags
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_103'
        content:
          application/json:
            schema:
              example:
                wifiMacs:
                - 00:11:22:33:44:55
                ids:
                - "1284392014819"
                - "2983092129865"
                serials:
                - Q234-ABCD-0001
                - Q234-ABCD-0002
                - Q234-ABCD-0003
                scope:
                - withAny, old_tag
                tags:
                - tag1
                - tag2
                updateAction: add
              properties:
                wifiMacs:
                  description: The wifiMacs of the devices to be modified.
                  items:
                    type: string
                  type: array
                ids:
                  description: The ids of the devices to be modified.
                  items:
                    type: string
                  type: array
                serials:
                  description: The serials of the devices to be modified.
                  items:
                    type: string
                  type: array
                scope:
                  description: The scope (one of all, none, withAny, withAll, withoutAny,
                    or withoutAll) and a set of tags of the devices to be modified.
                  items:
                    type: string
                  type: array
                tags:
                  description: The tags to be added, deleted, or updated.
                  items:
                    type: string
                  type: array
                updateAction:
                  description: One of add, delete, or update. Only devices that have
                    been modified will be returned.
                  type: string
              required:
              - tags
              - updateAction
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
              - id: "1284392014819"
                tags:
                - tag1
                - tag2
                wifiMac: 00:11:22:33:44:55
                serial: F5XKHEBX
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_45'
                type: array
          description: Successful operation
      summary: Add, delete, or update the tags of a set of devices
      tags:
      - sm
      - configure
      - devices
      x-codegen-request-body-name: modifyNetworkSmDevicesTags
  /networks/{networkId}/sm/devices/move:
    post:
      description: Move a set of devices to a new network
      operationId: moveNetworkSmDevices
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_104'
        content:
          application/json:
            schema:
              example:
                wifiMacs:
                - 00:11:22:33:44:55
                ids:
                - "1284392014819"
                - "2983092129865"
                serials:
                - Q234-ABCD-0001
                - Q234-ABCD-0002
                - Q234-ABCD-0003
                scope:
                - withAny
                - tag1
                - tag2
                newNetwork: "1284392014819"
              properties:
                wifiMacs:
                  description: The wifiMacs of the devices to be moved.
                  items:
                    type: string
                  type: array
                ids:
                  description: The ids of the devices to be moved.
                  items:
                    type: string
                  type: array
                serials:
                  description: The serials of the devices to be moved.
                  items:
                    type: string
                  type: array
                scope:
                  description: The scope (one of all, none, withAny, withAll, withoutAny,
                    or withoutAll) and a set of tags of the devices to be moved.
                  items:
                    type: string
                  type: array
                newNetwork:
                  description: The new network to which the devices will be moved.
                  type: string
              required:
              - newNetwork
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                ids:
                - "1284392014819"
                - "2983092129865"
                newNetwork: "1284392014819"
              schema:
                $ref: '#/components/schemas/inline_response_200_46'
          description: Successful operation
      summary: Move a set of devices to a new network
      tags:
      - sm
      - configure
      - devices
      x-codegen-request-body-name: moveNetworkSmDevices
  /networks/{networkId}/sm/devices/wipe:
    post:
      description: Wipe a device
      operationId: wipeNetworkSmDevices
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_105'
        content:
          application/json:
            schema:
              example:
                wifiMac: 00:11:22:33:44:55
                id: "1284392014819"
                serial: Q234-ABCD-5678
                pin: 123456
              properties:
                wifiMac:
                  description: The wifiMac of the device to be wiped.
                  type: string
                id:
                  description: The id of the device to be wiped.
                  type: string
                serial:
                  description: The serial of the device to be wiped.
                  type: string
                pin:
                  description: The pin number (a six digit value) for wiping a macOS
                    device. Required only for macOS devices.
                  type: integer
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                id: "1284392014819"
              schema:
                $ref: '#/components/schemas/inline_response_200_47'
          description: Successful operation
      summary: Wipe a device
      tags:
      - sm
      - configure
      - devices
      x-codegen-request-body-name: wipeNetworkSmDevices
  /networks/{networkId}/sm/devices/{deviceId}/cellularUsageHistory:
    get:
      description: Return the client's daily cellular data usage history. Usage data
        is in kilobytes.
      operationId: getNetworkSmDeviceCellularUsageHistory
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Device ID
        in: path
        name: deviceId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - received: 61.0
                sent: 138.0
                ts: 2018-05-12T00:00:00Z
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_48'
                type: array
          description: Successful operation
      summary: Return the client's daily cellular data usage history
      tags:
      - sm
      - monitor
      - devices
      - cellularUsageHistory
  /networks/{networkId}/sm/devices/{deviceId}/certs:
    get:
      description: List the certs on a device
      operationId: getNetworkSmDeviceCerts
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Device ID
        in: path
        name: deviceId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - name: My Cert
                notValidAfter: 2018-05-12T00:00:00Z
                notValidBefore: 2018-02-11T00:00:00Z
                certPem: |
                  -----BEGIN CERTIFICATE-----
                  -----END CERTIFICATE-----
                deviceId: "1234"
                issuer: ""
                subject: ""
                id: "15"
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_49'
                type: array
          description: Successful operation
      summary: List the certs on a device
      tags:
      - sm
      - configure
      - devices
      - certs
  /networks/{networkId}/sm/devices/{deviceId}/connectivity:
    get:
      description: Returns historical connectivity data (whether a device is regularly
        checking in to Dashboard).
      operationId: getNetworkSmDeviceConnectivity
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Device ID
        in: path
        name: deviceId
        required: true
        schema:
          type: string
      - description: The number of entries per page returned. Acceptable range is
          3 - 1000. Default is 1000.
        in: query
        name: perPage
        schema:
          type: integer
      - description: A token used by the server to indicate the start of the page.
          Often this is a timestamp or an ID but it is not limited to those. This
          parameter should not be defined by client applications. The link for the
          first, last, prev, or next page in the HTTP Link header should define it.
        in: query
        name: startingAfter
        schema:
          type: string
      - description: A token used by the server to indicate the end of the page. Often
          this is a timestamp or an ID but it is not limited to those. This parameter
          should not be defined by client applications. The link for the first, last,
          prev, or next page in the HTTP Link header should define it.
        in: query
        name: endingBefore
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - firstSeenAt: 2018-02-11T00:00:00Z
                lastSeenAt: 2018-05-12T00:00:00Z
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_50'
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative
                links used for subsequent paginated requests.
              schema:
                type: string
      summary: Returns historical connectivity data (whether a device is regularly
        checking in to Dashboard).
      tags:
      - sm
      - monitor
      - devices
      - connectivity
  /networks/{networkId}/sm/devices/{deviceId}/desktopLogs:
    get:
      description: Return historical records of various Systems Manager network connection
        details for desktop devices.
      operationId: getNetworkSmDeviceDesktopLogs
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Device ID
        in: path
        name: deviceId
        required: true
        schema:
          type: string
      - description: The number of entries per page returned. Acceptable range is
          3 - 1000. Default is 1000.
        in: query
        name: perPage
        schema:
          type: integer
      - description: A token used by the server to indicate the start of the page.
          Often this is a timestamp or an ID but it is not limited to those. This
          parameter should not be defined by client applications. The link for the
          first, last, prev, or next page in the HTTP Link header should define it.
        in: query
        name: startingAfter
        schema:
          type: string
      - description: A token used by the server to indicate the end of the page. Often
          this is a timestamp or an ID but it is not limited to those. This parameter
          should not be defined by client applications. The link for the first, last,
          prev, or next page in the HTTP Link header should define it.
        in: query
        name: endingBefore
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - measuredAt: 2018-05-12T00:00:00Z
                user: milesmeraki
                networkDevice: NIC
                networkDriver: Driver
                wifiChannel: "11"
                wifiAuth: wpa-psk
                wifiBssid: 00:11:22:33:44:55
                wifiSsid: ssid
                wifiRssi: -11
                wifiNoise: -99
                dhcpServer: 1.2.3.4
                ip: 1.2.3.4
                networkMTU: "1500"
                subnet: 192.168.1.0/24
                gateway: 1.2.3.5
                publicIP: 123.123.123.1
                dnsServer: "8"
                ts: 2018-05-12T00:00:00Z
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_51'
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative
                links used for subsequent paginated requests.
              schema:
                type: string
      summary: Return historical records of various Systems Manager network connection
        details for desktop devices.
      tags:
      - sm
      - monitor
      - devices
      - desktopLogs
  /networks/{networkId}/sm/devices/{deviceId}/deviceCommandLogs:
    get:
      description: Return historical records of commands sent to Systems Manager devices.
        Note that this will include the name of the Dashboard user who initiated the
        command if it was generated by a Dashboard admin rather than the automatic
        behavior of the system; you may wish to filter this out of any reports.
      operationId: getNetworkSmDeviceDeviceCommandLogs
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Device ID
        in: path
        name: deviceId
        required: true
        schema:
          type: string
      - description: The number of entries per page returned. Acceptable range is
          3 - 1000. Default is 1000.
        in: query
        name: perPage
        schema:
          type: integer
      - description: A token used by the server to indicate the start of the page.
          Often this is a timestamp or an ID but it is not limited to those. This
          parameter should not be defined by client applications. The link for the
          first, last, prev, or next page in the HTTP Link header should define it.
        in: query
        name: startingAfter
        schema:
          type: string
      - description: A token used by the server to indicate the end of the page. Often
          this is a timestamp or an ID but it is not limited to those. This parameter
          should not be defined by client applications. The link for the first, last,
          prev, or next page in the HTTP Link header should define it.
        in: query
        name: endingBefore
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - action: UpdateProfile
                name: My profile
                details: '{}'
                dashboardUser: Miles Meraki
                ts: 2018-05-12T00:00:00Z
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_52'
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative
                links used for subsequent paginated requests.
              schema:
                type: string
      summary: Return historical records of commands sent to Systems Manager devices
      tags:
      - sm
      - monitor
      - devices
      - deviceCommandLogs
  /networks/{networkId}/sm/devices/{deviceId}/deviceProfiles:
    get:
      description: Get the installed profiles associated with a device
      operationId: getNetworkSmDeviceDeviceProfiles
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Device ID
        in: path
        name: deviceId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - deviceId: "1234"
                id: "1284392014819"
                isEncrypted: true
                isManaged: true
                profileData: '{}'
                profileIdentifier: com.test.app
                name: My profile
                version: 0.0.1
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_53'
                type: array
          description: Successful operation
      summary: Get the installed profiles associated with a device
      tags:
      - sm
      - configure
      - devices
      - deviceProfiles
  /networks/{networkId}/sm/devices/{deviceId}/networkAdapters:
    get:
      description: List the network adapters of a device
      operationId: getNetworkSmDeviceNetworkAdapters
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Device ID
        in: path
        name: deviceId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - dhcpServer: 123.123.123.1
                dnsServer: 8.8.8.8, 8.8.4.4
                gateway: 1.2.3.5
                id: "1284392014819"
                ip: 1.2.3.4
                mac: 00:11:22:33:44:55
                name: en0
                subnet: 255.255.255.0
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_54'
                type: array
          description: Successful operation
      summary: List the network adapters of a device
      tags:
      - sm
      - configure
      - devices
      - networkAdapters
  /networks/{networkId}/sm/devices/{deviceId}/performanceHistory:
    get:
      description: Return historical records of various Systems Manager client metrics
        for desktop devices.
      operationId: getNetworkSmDevicePerformanceHistory
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Device ID
        in: path
        name: deviceId
        required: true
        schema:
          type: string
      - description: The number of entries per page returned. Acceptable range is
          3 - 1000. Default is 1000.
        in: query
        name: perPage
        schema:
          type: integer
      - description: A token used by the server to indicate the start of the page.
          Often this is a timestamp or an ID but it is not limited to those. This
          parameter should not be defined by client applications. The link for the
          first, last, prev, or next page in the HTTP Link header should define it.
        in: query
        name: startingAfter
        schema:
          type: string
      - description: A token used by the server to indicate the end of the page. Often
          this is a timestamp or an ID but it is not limited to those. This parameter
          should not be defined by client applications. The link for the first, last,
          prev, or next page in the HTTP Link header should define it.
        in: query
        name: endingBefore
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - cpuPercentUsed: 0.95
                memFree: 1024
                memWired: 4096
                memActive: 1024
                memInactive: 2048
                networkSent: 512
                networkReceived: 512
                swapUsed: 768
                diskUsage:
                  c:
                    used: 2048
                    space: 9096
                ts: 2018-05-12T00:00:00Z
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_55'
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative
                links used for subsequent paginated requests.
              schema:
                type: string
      summary: Return historical records of various Systems Manager client metrics
        for desktop devices.
      tags:
      - sm
      - monitor
      - devices
      - performanceHistory
  /networks/{networkId}/sm/devices/{deviceId}/refreshDetails:
    post:
      description: Refresh the details of a device
      operationId: refreshNetworkSmDeviceDetails
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Device ID
        in: path
        name: deviceId
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful operation
      summary: Refresh the details of a device
      tags:
      - sm
      - configure
      - devices
  /networks/{networkId}/sm/devices/{deviceId}/restrictions:
    get:
      description: List the restrictions on a device
      operationId: getNetworkSmDeviceRestrictions
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Device ID
        in: path
        name: deviceId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - profile: com.meraki.sm.1
                restrictions:
                  myRestriction:
                    value: true
              schema:
                items:
                  properties: {}
                  type: object
                type: array
          description: Successful operation
      summary: List the restrictions on a device
      tags:
      - sm
      - configure
      - devices
      - restrictions
  /networks/{networkId}/sm/devices/{deviceId}/securityCenters:
    get:
      description: List the security centers on a device
      operationId: getNetworkSmDeviceSecurityCenters
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Device ID
        in: path
        name: deviceId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - isRooted: true
                hasAntiVirus: true
                antiVirusName: meraki_av
                isFireWallEnabled: true
                hasFireWallInstalled: true
                fireWallName: meraki_fw
                isDiskEncrypted: true
                isAutoLoginDisabled: true
                id: "1284392014819"
                runningProcs: /software,/software_2
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_56'
                type: array
          description: Successful operation
      summary: List the security centers on a device
      tags:
      - sm
      - configure
      - devices
      - securityCenters
  /networks/{networkId}/sm/devices/{deviceId}/softwares:
    get:
      description: Get a list of softwares associated with a device
      operationId: getNetworkSmDeviceSoftwares
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Device ID
        in: path
        name: deviceId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - appId: "1234"
                bundleSize: 1024
                createdAt: 2018-02-11T00:00:00Z
                deviceId: "1234"
                dynamicSize: 2048
                id: "1284392014819"
                identifier: com.test.app
                installedAt: 2018-05-12T00:00:00Z
                toInstall: true
                iosRedemptionCode: false
                isManaged: true
                itunesId: "1234"
                licenseKey: Z21234567890
                name: My app
                path: /Path/to/app.app
                redemptionCode: 1234
                shortVersion: "1.1"
                status: Managed
                toUninstall: false
                uninstalledAt: 2018-02-11T00:00:00Z
                updatedAt: 2018-05-12T00:00:00Z
                vendor: Apple
                version: "0.1"
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_57'
                type: array
          description: Successful operation
      summary: Get a list of softwares associated with a device
      tags:
      - sm
      - configure
      - devices
      - softwares
  /networks/{networkId}/sm/devices/{deviceId}/unenroll:
    post:
      description: Unenroll a device
      operationId: unenrollNetworkSmDevice
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Device ID
        in: path
        name: deviceId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                success: true
              schema:
                type: object
          description: Successful operation
      summary: Unenroll a device
      tags:
      - sm
      - configure
      - devices
  /networks/{networkId}/sm/devices/{deviceId}/wlanLists:
    get:
      description: List the saved SSID names on a device
      operationId: getNetworkSmDeviceWlanLists
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Device ID
        in: path
        name: deviceId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - createdAt: 2018-02-11T00:00:00Z
                id: "1284392014819"
                xml: 'Preferred networks on en0:'
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_58'
                type: array
          description: Successful operation
      summary: List the saved SSID names on a device
      tags:
      - sm
      - configure
      - devices
      - wlanLists
  /networks/{networkId}/sm/profiles:
    get:
      description: List all profiles in a network
      operationId: getNetworkSmProfiles
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - id: "1284392014819"
                name: My profile
                description: Some profile description
                scope: withAny
                tags:
                - tag1
                - tag2
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_59'
                type: array
          description: Successful operation
      summary: List all profiles in a network
      tags:
      - sm
      - configure
      - profiles
  /networks/{networkId}/sm/targetGroups:
    get:
      description: List the target groups in this network
      operationId: getNetworkSmTargetGroups
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Boolean indicating if the the ids of the devices or users scoped
          by the target group should be included in the response
        in: query
        name: withDetails
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              example:
              - name: My target group
                scope: none
                tags: '[]'
                type: devices
              schema:
                items:
                  properties: {}
                  type: object
                type: array
          description: Successful operation
      summary: List the target groups in this network
      tags:
      - sm
      - configure
      - targetGroups
    post:
      description: Add a target group
      operationId: createNetworkSmTargetGroup
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_106'
        content:
          application/json:
            schema:
              example:
                name: My target group
                scope: none
                tags: '[]'
                type: devices
              properties:
                name:
                  description: The name of this target group
                  type: string
                scope:
                  description: The scope and tag options of the target group. Comma
                    separated values beginning with one of withAny, withAll, withoutAny,
                    withoutAll, all, none, followed by tags. Default to none if empty.
                  type: string
              type: object
        required: false
      responses:
        "201":
          content:
            application/json:
              example:
                name: My target group
                scope: none
                tags: '[]'
                type: devices
              schema:
                type: object
          description: Successful operation
      summary: Add a target group
      tags:
      - sm
      - configure
      - targetGroups
      x-codegen-request-body-name: createNetworkSmTargetGroup
  /networks/{networkId}/sm/targetGroups/{targetGroupId}:
    delete:
      description: Delete a target group from a network
      operationId: deleteNetworkSmTargetGroup
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Target group ID
        in: path
        name: targetGroupId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Successful operation
      summary: Delete a target group from a network
      tags:
      - sm
      - configure
      - targetGroups
    get:
      description: Return a target group
      operationId: getNetworkSmTargetGroup
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Target group ID
        in: path
        name: targetGroupId
        required: true
        schema:
          type: string
      - description: Boolean indicating if the the ids of the devices or users scoped
          by the target group should be included in the response
        in: query
        name: withDetails
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              example:
                name: My target group
                scope: none
                tags: '[]'
                type: devices
              schema:
                type: object
          description: Successful operation
      summary: Return a target group
      tags:
      - sm
      - configure
      - targetGroups
    put:
      description: Update a target group
      operationId: updateNetworkSmTargetGroup
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Target group ID
        in: path
        name: targetGroupId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_107'
        content:
          application/json:
            schema:
              example:
                name: My target group
                scope: none
                tags: '[]'
                type: devices
              properties:
                name:
                  description: The name of this target group
                  type: string
                scope:
                  description: The scope and tag options of the target group. Comma
                    separated values beginning with one of withAny, withAll, withoutAny,
                    withoutAll, all, none, followed by tags. Default to none if empty.
                  type: string
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                name: My target group
                scope: none
                tags: '[]'
                type: devices
              schema:
                type: object
          description: Successful operation
      summary: Update a target group
      tags:
      - sm
      - configure
      - targetGroups
      x-codegen-request-body-name: updateNetworkSmTargetGroup
  /networks/{networkId}/sm/trustedAccessConfigs:
    get:
      description: List Trusted Access Configs
      operationId: getNetworkSmTrustedAccessConfigs
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: The number of entries per page returned. Acceptable range is
          3 - 1000. Default is 100.
        in: query
        name: perPage
        schema:
          type: integer
      - description: A token used by the server to indicate the start of the page.
          Often this is a timestamp or an ID but it is not limited to those. This
          parameter should not be defined by client applications. The link for the
          first, last, prev, or next page in the HTTP Link header should define it.
        in: query
        name: startingAfter
        schema:
          type: string
      - description: A token used by the server to indicate the end of the page. Often
          this is a timestamp or an ID but it is not limited to those. This parameter
          should not be defined by client applications. The link for the first, last,
          prev, or next page in the HTTP Link header should define it.
        in: query
        name: endingBefore
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - id: "1284392014819"
                ssidName: My SSID
                name: Cisco Meraki valued client
                scope: withAny
                tags:
                - tag1
                - tag2
                timeboundType: static
                accessStartAt: 2018-02-11T00:00:00Z
                accessEndAt: 2018-05-12T00:00:00Z
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_60'
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative
                links used for subsequent paginated requests.
              schema:
                type: string
      summary: List Trusted Access Configs
      tags:
      - sm
      - configure
      - trustedAccessConfigs
  /networks/{networkId}/sm/userAccessDevices:
    get:
      description: List User Access Devices and its Trusted Access Connections
      operationId: getNetworkSmUserAccessDevices
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: The number of entries per page returned. Acceptable range is
          3 - 1000. Default is 100.
        in: query
        name: perPage
        schema:
          type: integer
      - description: A token used by the server to indicate the start of the page.
          Often this is a timestamp or an ID but it is not limited to those. This
          parameter should not be defined by client applications. The link for the
          first, last, prev, or next page in the HTTP Link header should define it.
        in: query
        name: startingAfter
        schema:
          type: string
      - description: A token used by the server to indicate the end of the page. Often
          this is a timestamp or an ID but it is not limited to those. This parameter
          should not be defined by client applications. The link for the first, last,
          prev, or next page in the HTTP Link header should define it.
        in: query
        name: endingBefore
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - id: "1284392014819"
                name: Cisco Meraki valued client
                systemType: ios
                mac: 00:11:22:33:44:55
                username: milesmeraki
                email: miles@meraki.com
                tags:
                - tag1
                - tag2
                trustedAccessConnections:
                - trustedAccessConfigId: "1234"
                  downloadedAt: 2018-02-11T00:00:00Z
                  scepCompletedAt: 2018-05-12T00:00:00Z
                  lastConnectedAt: 2018-05-12T00:00:00Z
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_61'
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative
                links used for subsequent paginated requests.
              schema:
                type: string
      summary: List User Access Devices and its Trusted Access Connections
      tags:
      - sm
      - configure
      - userAccessDevices
  /networks/{networkId}/sm/userAccessDevices/{userAccessDeviceId}:
    delete:
      description: Delete a User Access Device
      operationId: deleteNetworkSmUserAccessDevice
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: User access device ID
        in: path
        name: userAccessDeviceId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Successful operation
      summary: Delete a User Access Device
      tags:
      - sm
      - configure
      - userAccessDevices
  /networks/{networkId}/sm/users:
    get:
      description: List the owners in an SM network with various specified fields
        and filters
      operationId: getNetworkSmUsers
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Filter users by id(s).
        explode: false
        in: query
        name: ids
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Filter users by username(s).
        explode: false
        in: query
        name: usernames
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Filter users by email(s).
        explode: false
        in: query
        name: emails
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Specifiy a scope (one of all, none, withAny, withAll, withoutAny,
          withoutAll) and a set of tags.
        explode: false
        in: query
        name: scope
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
              - id: "1234"
                email: miles@meraki.com
                fullName: Miles Meraki
                username: ""
                hasPassword: false
                tags: ' tag1 tag2 '
                adGroups: []
                azureAdGroups: []
                samlGroups: []
                asmGroups: []
                isExternal: false
                displayName: Miles Meraki <miles@meraki.com>
                hasIdentityCertificate: false
                userThumbnail: https://s3.amazonaws.com/image.extension
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_62'
                type: array
          description: Successful operation
      summary: List the owners in an SM network with various specified fields and
        filters
      tags:
      - sm
      - configure
      - users
  /networks/{networkId}/sm/users/{userId}/deviceProfiles:
    get:
      description: Get the profiles associated with a user
      operationId: getNetworkSmUserDeviceProfiles
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: User ID
        in: path
        name: userId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - deviceId: "1234"
                id: "1284392014819"
                isEncrypted: true
                isManaged: true
                profileData: '{}'
                profileIdentifier: com.test.app
                name: My profile
                version: 0.0.1
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_53'
                type: array
          description: Successful operation
      summary: Get the profiles associated with a user
      tags:
      - sm
      - configure
      - users
      - deviceProfiles
  /networks/{networkId}/sm/users/{userId}/softwares:
    get:
      description: Get a list of softwares associated with a user
      operationId: getNetworkSmUserSoftwares
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: User ID
        in: path
        name: userId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - appId: "1234"
                bundleSize: 1024
                createdAt: 2018-02-11T00:00:00Z
                deviceId: "1234"
                dynamicSize: 2048
                id: "1284392014819"
                identifier: com.test.app
                installedAt: 2018-05-12T00:00:00Z
                toInstall: true
                iosRedemptionCode: false
                isManaged: true
                itunesId: "1234"
                licenseKey: Z21234567890
                name: My app
                path: /Path/to/app.app
                redemptionCode: 1234
                shortVersion: "1.1"
                status: Managed
                toUninstall: false
                uninstalledAt: 2018-02-11T00:00:00Z
                updatedAt: 2018-05-12T00:00:00Z
                vendor: Apple
                version: "0.1"
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_57'
                type: array
          description: Successful operation
      summary: Get a list of softwares associated with a user
      tags:
      - sm
      - configure
      - users
      - softwares
  /networks/{networkId}/snmp:
    get:
      description: Return the SNMP settings for a network
      operationId: getNetworkSnmp
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                access: users
                users:
                - username: AzureDiamond
                  passphrase: hunter2
              schema:
                type: object
          description: Successful operation
      summary: Return the SNMP settings for a network
      tags:
      - networks
      - configure
      - snmp
    put:
      description: Update the SNMP settings for a network
      operationId: updateNetworkSnmp
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_108'
        content:
          application/json:
            schema:
              example:
                access: users
                users:
                - username: AzureDiamond
                  passphrase: hunter2
              properties:
                access:
                  description: The type of SNMP access. Can be one of 'none' (disabled),
                    'community' (V1/V2c), or 'users' (V3).
                  enum:
                  - community
                  - none
                  - users
                  type: string
                communityString:
                  description: The SNMP community string. Only relevant if 'access'
                    is set to 'community'.
                  type: string
                users:
                  description: The list of SNMP users. Only relevant if 'access' is
                    set to 'users'.
                  items:
                    $ref: '#/components/schemas/_networks__networkId__snmp_users'
                  type: array
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                access: users
                users:
                - username: AzureDiamond
                  passphrase: hunter2
              schema:
                type: object
          description: Successful operation
      summary: Update the SNMP settings for a network
      tags:
      - networks
      - configure
      - snmp
      x-codegen-request-body-name: updateNetworkSnmp
  /networks/{networkId}/splashLoginAttempts:
    get:
      description: List the splash login attempts for a network
      operationId: getNetworkSplashLoginAttempts
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Only return the login attempts for the specified SSID
        in: query
        name: ssidNumber
        schema:
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
          - 10
          - 11
          - 12
          - 13
          - 14
          type: integer
      - description: The username, email, or phone number used during login
        in: query
        name: loginIdentifier
        schema:
          type: string
      - description: The timespan, in seconds, for the login attempts. The period
          will be from [timespan] seconds ago until now. The maximum timespan is 3
          months
        in: query
        name: timespan
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              example:
              - name: Miles Meraki
                login: miles@meraki.com
                ssid: My SSID
                loginAt: 2018-02-11T00:00:00.090210Z
                gatewayDeviceMac: 00:11:22:33:44:55
                clientMac: 22:33:44:55:66:77
                clientId: k74272e
                authorization: success
              schema:
                items:
                  properties: {}
                  type: object
                type: array
          description: Successful operation
      summary: List the splash login attempts for a network
      tags:
      - networks
      - monitor
      - splashLoginAttempts
  /networks/{networkId}/split:
    post:
      description: Split a combined network into individual networks for each type
        of device
      operationId: splitNetwork
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                resultingNetworks:
                - id: N_24329156
                  organizationId: "2930418"
                  name: Main Office - switch
                  productTypes:
                  - switch
                  timeZone: America/Los_Angeles
                  tags:
                  - tag1
                  - tag2
                  enrollmentString: my-enrollment-string
                  url: https://n1.meraki.com//n//manage/nodes/list
                  notes: Additional description of the network
                  isBoundToConfigTemplate: false
              schema:
                $ref: '#/components/schemas/inline_response_200_63'
          description: Successful operation
      summary: Split a combined network into individual networks for each type of
        device
      tags:
      - networks
      - configure
  /networks/{networkId}/switch/accessControlLists:
    get:
      description: Return the access control lists for a MS network
      operationId: getNetworkSwitchAccessControlLists
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                rules:
                - comment: Deny SSH
                  policy: deny
                  ipVersion: ipv4
                  protocol: tcp
                  srcCidr: 10.1.10.0/24
                  srcPort: any
                  dstCidr: 172.16.30/24
                  dstPort: "22"
                  vlan: "10"
              schema:
                $ref: '#/components/schemas/inline_response_200_64'
          description: Successful operation
      summary: Return the access control lists for a MS network
      tags:
      - switch
      - configure
      - accessControlLists
    put:
      description: Update the access control lists for a MS network
      operationId: updateNetworkSwitchAccessControlLists
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_109'
        content:
          application/json:
            schema:
              example:
                rules:
                - comment: Deny SSH
                  policy: deny
                  ipVersion: ipv4
                  protocol: tcp
                  srcCidr: 10.1.10.0/24
                  srcPort: any
                  dstCidr: 172.16.30/24
                  dstPort: "22"
                  vlan: "10"
              properties:
                rules:
                  description: An ordered array of the access control list rules (not
                    including the default rule). An empty array will clear the rules.
                  items:
                    $ref: '#/components/schemas/_networks__networkId__switch_accessControlLists_rules'
                  type: array
              required:
              - rules
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                rules:
                - comment: Deny SSH
                  policy: deny
                  ipVersion: ipv4
                  protocol: tcp
                  srcCidr: 10.1.10.0/24
                  srcPort: any
                  dstCidr: 172.16.30/24
                  dstPort: "22"
                  vlan: "10"
              schema:
                $ref: '#/components/schemas/inline_response_200_64'
          description: Successful operation
      summary: Update the access control lists for a MS network
      tags:
      - switch
      - configure
      - accessControlLists
      x-codegen-request-body-name: updateNetworkSwitchAccessControlLists
  /networks/{networkId}/switch/accessPolicies:
    get:
      description: List the access policies for a switch network. Only returns access
        policies with 'my RADIUS server' as authentication method
      operationId: getNetworkSwitchAccessPolicies
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - name: 'Access policy #1'
                radiusServers:
                - host: 1.2.3.4
                  port: 22
                radius:
                  criticalAuth:
                    dataVlanId: 100
                    voiceVlanId: 100
                    suspendPortBounce: true
                  failedAuthVlanId: 100
                  reAuthenticationInterval: 120
                guestPortBouncing: false
                radiusTestingEnabled: false
                radiusCoaSupportEnabled: false
                radiusAccountingEnabled: true
                radiusAccountingServers:
                - host: 1.2.3.4
                  port: 22
                radiusGroupAttribute: "11"
                hostMode: Single-Host
                accessPolicyType: Hybrid authentication
                increaseAccessSpeed: false
                guestVlanId: 100
                dot1x:
                  controlDirection: inbound
                voiceVlanClients: true
                urlRedirectWalledGardenEnabled: true
                urlRedirectWalledGardenRanges:
                - 192.168.1.0/24
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_65'
                type: array
          description: Successful operation
      summary: List the access policies for a switch network
      tags:
      - switch
      - configure
      - accessPolicies
    post:
      description: Create an access policy for a switch network. If you would like
        to enable Meraki Authentication, set radiusServers to empty array.
      operationId: createNetworkSwitchAccessPolicy
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_110'
        content:
          application/json:
            schema:
              example:
                name: 'Access policy #1'
                radiusServers:
                - host: 1.2.3.4
                  port: 22
                  secret: secret
                radius:
                  criticalAuth:
                    dataVlanId: 100
                    voiceVlanId: 100
                    suspendPortBounce: true
                  failedAuthVlanId: 100
                  reAuthenticationInterval: 120
                guestPortBouncing: false
                radiusTestingEnabled: false
                radiusCoaSupportEnabled: false
                radiusAccountingEnabled: true
                radiusAccountingServers:
                - host: 1.2.3.4
                  port: 22
                  secret: secret
                radiusGroupAttribute: "11"
                hostMode: Single-Host
                accessPolicyType: Hybrid authentication
                increaseAccessSpeed: false
                guestVlanId: 100
                dot1x:
                  controlDirection: inbound
                voiceVlanClients: true
                urlRedirectWalledGardenEnabled: true
                urlRedirectWalledGardenRanges:
                - 192.168.1.0/24
              properties:
                name:
                  description: Name of the access policy
                  type: string
                radiusServers:
                  description: List of RADIUS servers to require connecting devices
                    to authenticate against before granting network access
                  items:
                    $ref: '#/components/schemas/_networks__networkId__switch_accessPolicies_radiusServers_1'
                  type: array
                radius:
                  $ref: '#/components/schemas/_networks__networkId__switch_accessPolicies_radius'
                guestPortBouncing:
                  description: If enabled, Meraki devices will periodically send access-request
                    messages to these RADIUS servers
                  type: boolean
                radiusTestingEnabled:
                  description: If enabled, Meraki devices will periodically send access-request
                    messages to these RADIUS servers
                  type: boolean
                radiusCoaSupportEnabled:
                  description: Change of authentication for RADIUS re-authentication
                    and disconnection
                  type: boolean
                radiusAccountingEnabled:
                  description: Enable to send start, interim-update and stop messages
                    to a configured RADIUS accounting server for tracking connected
                    clients
                  type: boolean
                radiusAccountingServers:
                  description: List of RADIUS accounting servers to require connecting
                    devices to authenticate against before granting network access
                  items:
                    $ref: '#/components/schemas/_networks__networkId__switch_accessPolicies_radiusAccountingServers_1'
                  type: array
                radiusGroupAttribute:
                  description: Acceptable values are `""` for None, or `"11"` for
                    Group Policies ACL
                  type: string
                hostMode:
                  description: Choose the Host Mode for the access policy.
                  enum:
                  - Multi-Auth
                  - Multi-Domain
                  - Multi-Host
                  - Single-Host
                  type: string
                accessPolicyType:
                  description: Access Type of the policy. Automatically 'Hybrid authentication'
                    when hostMode is 'Multi-Domain'.
                  enum:
                  - 802.1x
                  - Hybrid authentication
                  - MAC authentication bypass
                  type: string
                increaseAccessSpeed:
                  description: Enabling this option will make switches execute 802.1X
                    and MAC-bypass authentication simultaneously so that clients authenticate
                    faster. Only required when accessPolicyType is 'Hybrid Authentication.
                  type: boolean
                guestVlanId:
                  description: ID for the guest VLAN allow unauthorized devices access
                    to limited network resources
                  type: integer
                dot1x:
                  $ref: '#/components/schemas/_networks__networkId__switch_accessPolicies_dot1x'
                voiceVlanClients:
                  description: CDP/LLDP capable voice clients will be able to use
                    this VLAN. Automatically true when hostMode is 'Multi-Domain'.
                  type: boolean
                urlRedirectWalledGardenEnabled:
                  description: Enable to restrict access for clients to a specific
                    set of IP addresses or hostnames prior to authentication
                  type: boolean
                urlRedirectWalledGardenRanges:
                  description: IP address ranges, in CIDR notation, to restrict access
                    for clients to a specific set of IP addresses or hostnames prior
                    to authentication
                  items:
                    type: string
                  type: array
              required:
              - hostMode
              - name
              - radiusAccountingEnabled
              - radiusCoaSupportEnabled
              - radiusServers
              - radiusTestingEnabled
              - urlRedirectWalledGardenEnabled
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                name: 'Access policy #1'
                radiusServers:
                - host: 1.2.3.4
                  port: 22
                radius:
                  criticalAuth:
                    dataVlanId: 100
                    voiceVlanId: 100
                    suspendPortBounce: true
                  failedAuthVlanId: 100
                  reAuthenticationInterval: 120
                guestPortBouncing: false
                radiusTestingEnabled: false
                radiusCoaSupportEnabled: false
                radiusAccountingEnabled: true
                radiusAccountingServers:
                - host: 1.2.3.4
                  port: 22
                radiusGroupAttribute: "11"
                hostMode: Single-Host
                accessPolicyType: Hybrid authentication
                increaseAccessSpeed: false
                guestVlanId: 100
                dot1x:
                  controlDirection: inbound
                voiceVlanClients: true
                urlRedirectWalledGardenEnabled: true
                urlRedirectWalledGardenRanges:
                - 192.168.1.0/24
              schema:
                $ref: '#/components/schemas/inline_response_200_65'
          description: Successful operation
      summary: Create an access policy for a switch network
      tags:
      - switch
      - configure
      - accessPolicies
      x-codegen-request-body-name: createNetworkSwitchAccessPolicy
  /networks/{networkId}/switch/accessPolicies/{accessPolicyNumber}:
    delete:
      description: Delete an access policy for a switch network
      operationId: deleteNetworkSwitchAccessPolicy
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Access policy number
        in: path
        name: accessPolicyNumber
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Successful operation
      summary: Delete an access policy for a switch network
      tags:
      - switch
      - configure
      - accessPolicies
    get:
      description: Return a specific access policy for a switch network
      operationId: getNetworkSwitchAccessPolicy
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Access policy number
        in: path
        name: accessPolicyNumber
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                name: 'Access policy #1'
                radiusServers:
                - host: 1.2.3.4
                  port: 22
                radius:
                  criticalAuth:
                    dataVlanId: 100
                    voiceVlanId: 100
                    suspendPortBounce: true
                  failedAuthVlanId: 100
                  reAuthenticationInterval: 120
                guestPortBouncing: false
                radiusTestingEnabled: false
                radiusCoaSupportEnabled: false
                radiusAccountingEnabled: true
                radiusAccountingServers:
                - host: 1.2.3.4
                  port: 22
                radiusGroupAttribute: "11"
                hostMode: Single-Host
                accessPolicyType: Hybrid authentication
                increaseAccessSpeed: false
                guestVlanId: 100
                dot1x:
                  controlDirection: inbound
                voiceVlanClients: true
                urlRedirectWalledGardenEnabled: true
                urlRedirectWalledGardenRanges:
                - 192.168.1.0/24
              schema:
                $ref: '#/components/schemas/inline_response_200_65'
          description: Successful operation
      summary: Return a specific access policy for a switch network
      tags:
      - switch
      - configure
      - accessPolicies
    put:
      description: Update an access policy for a switch network. If you would like
        to enable Meraki Authentication, set radiusServers to empty array.
      operationId: updateNetworkSwitchAccessPolicy
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Access policy number
        in: path
        name: accessPolicyNumber
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_111'
        content:
          application/json:
            schema:
              example:
                name: 'Access policy #1'
                radiusServers:
                - host: 1.2.3.4
                  port: 22
                  secret: secret
                radius:
                  criticalAuth:
                    dataVlanId: 100
                    voiceVlanId: 100
                    suspendPortBounce: true
                  failedAuthVlanId: 100
                  reAuthenticationInterval: 120
                guestPortBouncing: false
                radiusTestingEnabled: false
                radiusCoaSupportEnabled: false
                radiusAccountingEnabled: true
                radiusAccountingServers:
                - host: 1.2.3.4
                  port: 22
                  secret: secret
                radiusGroupAttribute: "11"
                hostMode: Single-Host
                accessPolicyType: Hybrid authentication
                increaseAccessSpeed: false
                guestVlanId: 100
                dot1x:
                  controlDirection: inbound
                voiceVlanClients: true
                urlRedirectWalledGardenEnabled: true
                urlRedirectWalledGardenRanges:
                - 192.168.1.0/24
              properties:
                name:
                  description: Name of the access policy
                  type: string
                radiusServers:
                  description: List of RADIUS servers to require connecting devices
                    to authenticate against before granting network access
                  items:
                    $ref: '#/components/schemas/_networks__networkId__switch_accessPolicies_radiusServers_1'
                  type: array
                radius:
                  $ref: '#/components/schemas/_networks__networkId__switch_accessPolicies_radius'
                guestPortBouncing:
                  description: If enabled, Meraki devices will periodically send access-request
                    messages to these RADIUS servers
                  type: boolean
                radiusTestingEnabled:
                  description: If enabled, Meraki devices will periodically send access-request
                    messages to these RADIUS servers
                  type: boolean
                radiusCoaSupportEnabled:
                  description: Change of authentication for RADIUS re-authentication
                    and disconnection
                  type: boolean
                radiusAccountingEnabled:
                  description: Enable to send start, interim-update and stop messages
                    to a configured RADIUS accounting server for tracking connected
                    clients
                  type: boolean
                radiusAccountingServers:
                  description: List of RADIUS accounting servers to require connecting
                    devices to authenticate against before granting network access
                  items:
                    $ref: '#/components/schemas/_networks__networkId__switch_accessPolicies_radiusAccountingServers_1'
                  type: array
                radiusGroupAttribute:
                  description: Acceptable values are `""` for None, or `"11"` for
                    Group Policies ACL
                  type: string
                hostMode:
                  description: Choose the Host Mode for the access policy.
                  enum:
                  - Multi-Auth
                  - Multi-Domain
                  - Multi-Host
                  - Single-Host
                  type: string
                accessPolicyType:
                  description: Access Type of the policy. Automatically 'Hybrid authentication'
                    when hostMode is 'Multi-Domain'.
                  enum:
                  - 802.1x
                  - Hybrid authentication
                  - MAC authentication bypass
                  type: string
                increaseAccessSpeed:
                  description: Enabling this option will make switches execute 802.1X
                    and MAC-bypass authentication simultaneously so that clients authenticate
                    faster. Only required when accessPolicyType is 'Hybrid Authentication.
                  type: boolean
                guestVlanId:
                  description: ID for the guest VLAN allow unauthorized devices access
                    to limited network resources
                  type: integer
                dot1x:
                  $ref: '#/components/schemas/_networks__networkId__switch_accessPolicies_dot1x'
                voiceVlanClients:
                  description: CDP/LLDP capable voice clients will be able to use
                    this VLAN. Automatically true when hostMode is 'Multi-Domain'.
                  type: boolean
                urlRedirectWalledGardenEnabled:
                  description: Enable to restrict access for clients to a specific
                    set of IP addresses or hostnames prior to authentication
                  type: boolean
                urlRedirectWalledGardenRanges:
                  description: IP address ranges, in CIDR notation, to restrict access
                    for clients to a specific set of IP addresses or hostnames prior
                    to authentication
                  items:
                    type: string
                  type: array
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                name: 'Access policy #1'
                radiusServers:
                - host: 1.2.3.4
                  port: 22
                radius:
                  criticalAuth:
                    dataVlanId: 100
                    voiceVlanId: 100
                    suspendPortBounce: true
                  failedAuthVlanId: 100
                  reAuthenticationInterval: 120
                guestPortBouncing: false
                radiusTestingEnabled: false
                radiusCoaSupportEnabled: false
                radiusAccountingEnabled: true
                radiusAccountingServers:
                - host: 1.2.3.4
                  port: 22
                radiusGroupAttribute: "11"
                hostMode: Single-Host
                accessPolicyType: Hybrid authentication
                increaseAccessSpeed: false
                guestVlanId: 100
                dot1x:
                  controlDirection: inbound
                voiceVlanClients: true
                urlRedirectWalledGardenEnabled: true
                urlRedirectWalledGardenRanges:
                - 192.168.1.0/24
              schema:
                $ref: '#/components/schemas/inline_response_200_65'
          description: Successful operation
      summary: Update an access policy for a switch network
      tags:
      - switch
      - configure
      - accessPolicies
      x-codegen-request-body-name: updateNetworkSwitchAccessPolicy
  /networks/{networkId}/switch/alternateManagementInterface:
    get:
      description: Return the switch alternate management interface for the network
      operationId: getNetworkSwitchAlternateManagementInterface
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                enabled: true
                vlanId: 100
                protocols:
                - radius
                - snmp
                - syslog
                switches:
                - serial: Q234-ABCD-5678
                  alternateManagementIp: 1.2.3.4
                  subnetMask: 255.255.255.0
                  gateway: 1.2.3.5
              schema:
                type: object
          description: Successful operation
      summary: Return the switch alternate management interface for the network
      tags:
      - switch
      - configure
      - alternateManagementInterface
    put:
      description: Update the switch alternate management interface for the network
      operationId: updateNetworkSwitchAlternateManagementInterface
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_112'
        content:
          application/json:
            schema:
              example:
                enabled: true
                vlanId: 100
                protocols:
                - radius
                - snmp
                - syslog
                switches:
                - serial: Q234-ABCD-5678
                  alternateManagementIp: 1.2.3.4
                  subnetMask: 255.255.255.0
                  gateway: 1.2.3.5
              properties:
                enabled:
                  description: Boolean value to enable or disable AMI configuration.
                    If enabled, VLAN and protocols must be set
                  type: boolean
                vlanId:
                  description: Alternate management VLAN, must be between 1 and 4094
                  type: integer
                protocols:
                  description: 'Can be one or more of the following values: ''radius'',
                    ''snmp'' or ''syslog'''
                  items:
                    enum:
                    - radius
                    - snmp
                    - syslog
                    type: string
                  type: array
                switches:
                  description: 'Array of switch serial number and IP assignment. If
                    parameter is present, it cannot have empty body. Note: switches
                    parameter is not applicable for template networks, in other words,
                    do not put ''switches'' in the body when updating template networks.
                    Also, an empty ''switches'' array will remove all previous assignments'
                  items:
                    $ref: '#/components/schemas/_networks__networkId__switch_alternateManagementInterface_switches'
                  type: array
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                enabled: true
                vlanId: 100
                protocols:
                - radius
                - snmp
                - syslog
                switches:
                - serial: Q234-ABCD-5678
                  alternateManagementIp: 1.2.3.4
                  subnetMask: 255.255.255.0
                  gateway: 1.2.3.5
              schema:
                type: object
          description: Successful operation
      summary: Update the switch alternate management interface for the network
      tags:
      - switch
      - configure
      - alternateManagementInterface
      x-codegen-request-body-name: updateNetworkSwitchAlternateManagementInterface
  /networks/{networkId}/switch/dhcp/v4/servers/seen:
    get:
      description: Return the network's DHCPv4 servers seen within the selected timeframe
        (default 1 day)
      operationId: getNetworkSwitchDhcpV4ServersSeen
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: The beginning of the timespan for the data. The maximum lookback
          period is 31 days from today.
        in: query
        name: t0
        schema:
          type: string
      - description: The timespan for which the information will be fetched. If specifying
          timespan, do not specify parameter t0. The value must be in seconds and
          be less than or equal to 31 days. The default is 1 day.
        in: query
        name: timespan
        schema:
          format: float
          type: number
      - description: The number of entries per page returned. Acceptable range is
          3 - 1000. Default is 1000.
        in: query
        name: perPage
        schema:
          type: integer
      - description: A token used by the server to indicate the start of the page.
          Often this is a timestamp or an ID but it is not limited to those. This
          parameter should not be defined by client applications. The link for the
          first, last, prev, or next page in the HTTP Link header should define it.
        in: query
        name: startingAfter
        schema:
          type: string
      - description: A token used by the server to indicate the end of the page. Often
          this is a timestamp or an ID but it is not limited to those. This parameter
          should not be defined by client applications. The link for the first, last,
          prev, or next page in the HTTP Link header should define it.
        in: query
        name: endingBefore
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - mac: 00:11:22:33:44:55
                vlan: 100
                clientId: k74272e
                isAllowed: true
                lastSeenAt: 2018-02-11T00:00:00.090210Z
                seenBy:
                - serial: Q234-ABCD-0001
                  name: My switch2
                  url: https://n1.meraki.com//n//manage/nodes/new_list/0000000000001
                type: device
                device:
                  serial: Q234-ABCD-0002
                  name: My AP
                  url: https://n1.meraki.com//n//manage/nodes/new_list/000000000000
                  interface:
                    name: My L3 Interface
                    url: https://n1.meraki.com//n//manage/configure/switch_l3/l3_interface/00000
                ipv4:
                  address: 10.0.0.0/24
                  subnet: 192.168.1.0/24
                  gateway: 1.2.3.5
                isConfigured: true
                lastAck:
                  ts: 2018-02-11T00:00:00.090210Z
                  ipv4:
                    address: 123.123.123.1
                lastPacket:
                  source:
                    mac: 00:11:22:33:44:55
                    ipv4:
                      address: 1.2.3.4
                    port: 443
                  destination:
                    mac: 22:33:44:55:66:77
                    ipv4:
                      address: 123.123.123.1
                    port: 444
                  type: ACK
                  ethernet:
                    type: 0x1212
                  ip:
                    id: 0x1313
                    version: 4
                    length: 24929
                    headerLength: 1
                    protocol: 1
                    ttl: 50
                    dscp:
                      tag: 24
                      ecn: 1
                  udp:
                    length: 24929
                    checksum: 0x1414
                  fields:
                    op: 1
                    htype: 1
                    hlen: 6
                    hops: 0
                    xid: 0x11111111
                    secs: 1526087474
                    flags: 0x0000
                    ciaddr: 1.2.3.4
                    yiaddr: 123.123.123.1
                    siaddr: 1.2.3.4
                    giaddr: 1.2.3.5
                    chaddr: abcdefghijkl
                    sname: 1.2.3.4
                    magicCookie: 0x22222222
                    options:
                    - name: Lease time
                      value: 86400 seconds
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_66'
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative
                links used for subsequent paginated requests.
              schema:
                type: string
      summary: Return the network's DHCPv4 servers seen within the selected timeframe
        (default 1 day)
      tags:
      - switch
      - configure
      - dhcp
      - v4
      - servers
      - seen
  /networks/{networkId}/switch/dhcpServerPolicy:
    get:
      description: Return the DHCP server settings. Blocked/allowed servers are only
        applied when default policy is allow/block, respectively
      operationId: getNetworkSwitchDhcpServerPolicy
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                alerts:
                  email:
                    enabled: false
                defaultPolicy: block
                blockedServers:
                - 00:50:56:00:00:03
                - 00:50:56:00:00:04
                allowedServers:
                - 00:50:56:00:00:01
                - 00:50:56:00:00:02
                arpInspection:
                  enabled: false
                  unsupportedModels:
                  - MS120-8
                  - MS125-24
              schema:
                type: object
          description: Successful operation
      summary: Return the DHCP server settings
      tags:
      - switch
      - configure
      - dhcpServerPolicy
    put:
      description: Update the DHCP server settings. Blocked/allowed servers are only
        applied when default policy is allow/block, respectively
      operationId: updateNetworkSwitchDhcpServerPolicy
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_113'
        content:
          application/json:
            schema:
              example:
                alerts:
                  email:
                    enabled: false
                defaultPolicy: block
                blockedServers:
                - 00:50:56:00:00:03
                - 00:50:56:00:00:04
                allowedServers:
                - 00:50:56:00:00:01
                - 00:50:56:00:00:02
                arpInspection:
                  enabled: false
              properties:
                alerts:
                  $ref: '#/components/schemas/_networks__networkId__switch_dhcpServerPolicy_alerts'
                defaultPolicy:
                  description: '''allow'' or ''block'' new DHCP servers. Default value
                    is ''allow''.'
                  enum:
                  - allow
                  - block
                  type: string
                allowedServers:
                  description: List the MAC addresses of DHCP servers to permit on
                    the network when defaultPolicy is set to block. An empty array
                    will clear the entries.
                  items:
                    type: string
                  type: array
                blockedServers:
                  description: List the MAC addresses of DHCP servers to block on
                    the network when defaultPolicy is set to allow. An empty array
                    will clear the entries.
                  items:
                    type: string
                  type: array
                arpInspection:
                  $ref: '#/components/schemas/_networks__networkId__switch_dhcpServerPolicy_arpInspection'
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                alerts:
                  email:
                    enabled: false
                defaultPolicy: block
                blockedServers:
                - 00:50:56:00:00:03
                - 00:50:56:00:00:04
                allowedServers:
                - 00:50:56:00:00:01
                - 00:50:56:00:00:02
                arpInspection:
                  enabled: false
                  unsupportedModels:
                  - MS120-8
                  - MS125-24
              schema:
                type: object
          description: Successful operation
      summary: Update the DHCP server settings
      tags:
      - switch
      - configure
      - dhcpServerPolicy
      x-codegen-request-body-name: updateNetworkSwitchDhcpServerPolicy
  /networks/{networkId}/switch/dhcpServerPolicy/arpInspection/trustedServers:
    get:
      description: Return the list of servers trusted by Dynamic ARP Inspection on
        this network. These are also known as allow listed snoop entries
      operationId: getNetworkSwitchDhcpServerPolicyArpInspectionTrustedServers
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: The number of entries per page returned. Acceptable range is
          3 - 1000. Default is 1000.
        in: query
        name: perPage
        schema:
          type: integer
      - description: A token used by the server to indicate the start of the page.
          Often this is a timestamp or an ID but it is not limited to those. This
          parameter should not be defined by client applications. The link for the
          first, last, prev, or next page in the HTTP Link header should define it.
        in: query
        name: startingAfter
        schema:
          type: string
      - description: A token used by the server to indicate the end of the page. Often
          this is a timestamp or an ID but it is not limited to those. This parameter
          should not be defined by client applications. The link for the first, last,
          prev, or next page in the HTTP Link header should define it.
        in: query
        name: endingBefore
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - trustedServerId: "123"
                mac: 00:11:22:33:44:55
                vlan: 100
                ipv4:
                  address: 1.2.3.4
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_67'
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative
                links used for subsequent paginated requests.
              schema:
                type: string
      summary: Return the list of servers trusted by Dynamic ARP Inspection on this
        network
      tags:
      - switch
      - configure
      - dhcpServerPolicy
      - arpInspection
      - trustedServers
    post:
      description: Add a server to be trusted by Dynamic ARP Inspection on this network
      operationId: createNetworkSwitchDhcpServerPolicyArpInspectionTrustedServer
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_114'
        content:
          application/json:
            schema:
              example:
                mac: 00:11:22:33:44:55
                vlan: 100
                ipv4:
                  address: 1.2.3.4
              properties:
                mac:
                  description: The mac address of the trusted server being added
                  type: string
                vlan:
                  description: The VLAN of the trusted server being added. It must
                    be between 1 and 4094
                  type: integer
                ipv4:
                  $ref: '#/components/schemas/_networks__networkId__switch_dhcpServerPolicy_arpInspection_trustedServers_ipv4_1'
              required:
              - ipv4
              - mac
              - vlan
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                trustedServerId: "123"
                mac: 00:11:22:33:44:55
                vlan: 100
                ipv4:
                  address: 1.2.3.4
              schema:
                $ref: '#/components/schemas/inline_response_200_67'
          description: Successful operation
      summary: Add a server to be trusted by Dynamic ARP Inspection on this network
      tags:
      - switch
      - configure
      - dhcpServerPolicy
      - arpInspection
      - trustedServers
      x-codegen-request-body-name: createNetworkSwitchDhcpServerPolicyArpInspectionTrustedServer
  /networks/{networkId}/switch/dhcpServerPolicy/arpInspection/trustedServers/{trustedServerId}:
    delete:
      description: Remove a server from being trusted by Dynamic ARP Inspection on
        this network
      operationId: deleteNetworkSwitchDhcpServerPolicyArpInspectionTrustedServer
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Trusted server ID
        in: path
        name: trustedServerId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Successful operation
      summary: Remove a server from being trusted by Dynamic ARP Inspection on this
        network
      tags:
      - switch
      - configure
      - dhcpServerPolicy
      - arpInspection
      - trustedServers
    put:
      description: Update a server that is trusted by Dynamic ARP Inspection on this
        network
      operationId: updateNetworkSwitchDhcpServerPolicyArpInspectionTrustedServer
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Trusted server ID
        in: path
        name: trustedServerId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_115'
        content:
          application/json:
            schema:
              example:
                mac: 00:11:22:33:44:55
                vlan: 100
                ipv4:
                  address: 1.2.3.4
              properties:
                mac:
                  description: The updated mac address of the trusted server
                  type: string
                vlan:
                  description: The updated VLAN of the trusted server. It must be
                    between 1 and 4094
                  type: integer
                ipv4:
                  $ref: '#/components/schemas/_networks__networkId__switch_dhcpServerPolicy_arpInspection_trustedServers__trustedServerId__ipv4'
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                trustedServerId: "123"
                mac: 00:11:22:33:44:55
                vlan: 100
                ipv4:
                  address: 1.2.3.4
              schema:
                $ref: '#/components/schemas/inline_response_200_67'
          description: Successful operation
      summary: Update a server that is trusted by Dynamic ARP Inspection on this network
      tags:
      - switch
      - configure
      - dhcpServerPolicy
      - arpInspection
      - trustedServers
      x-codegen-request-body-name: updateNetworkSwitchDhcpServerPolicyArpInspectionTrustedServer
  /networks/{networkId}/switch/dhcpServerPolicy/arpInspection/warnings/byDevice:
    get:
      description: Return the devices that have a Dynamic ARP Inspection warning and
        their warnings
      operationId: getNetworkSwitchDhcpServerPolicyArpInspectionWarningsByDevice
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: The number of entries per page returned. Acceptable range is
          3 - 1000. Default is 1000.
        in: query
        name: perPage
        schema:
          type: integer
      - description: A token used by the server to indicate the start of the page.
          Often this is a timestamp or an ID but it is not limited to those. This
          parameter should not be defined by client applications. The link for the
          first, last, prev, or next page in the HTTP Link header should define it.
        in: query
        name: startingAfter
        schema:
          type: string
      - description: A token used by the server to indicate the end of the page. Often
          this is a timestamp or an ID but it is not limited to those. This parameter
          should not be defined by client applications. The link for the first, last,
          prev, or next page in the HTTP Link header should define it.
        in: query
        name: endingBefore
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - serial: Q234-ABCD-0001
                name: My switch
                url: https://n1.meraki.com//n//manage/nodes/new_list/000000000000
                supportsInspection: false
                hasTrustedPort: false
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_68'
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative
                links used for subsequent paginated requests.
              schema:
                type: string
      summary: Return the devices that have a Dynamic ARP Inspection warning and their
        warnings
      tags:
      - switch
      - configure
      - dhcpServerPolicy
      - arpInspection
      - warnings
      - byDevice
  /networks/{networkId}/switch/dscpToCosMappings:
    get:
      description: Return the DSCP to CoS mappings
      operationId: getNetworkSwitchDscpToCosMappings
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                mappings:
                - dscp: 1
                  cos: 1
                  title: Video
              schema:
                type: object
          description: Successful operation
      summary: Return the DSCP to CoS mappings
      tags:
      - switch
      - configure
      - dscpToCosMappings
    put:
      description: Update the DSCP to CoS mappings
      operationId: updateNetworkSwitchDscpToCosMappings
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_116'
        content:
          application/json:
            schema:
              example:
                mappings:
                - dscp: 1
                  cos: 1
                  title: Video
              properties:
                mappings:
                  description: An array of DSCP to CoS mappings. An empty array will
                    reset the mappings to default.
                  items:
                    $ref: '#/components/schemas/_networks__networkId__switch_dscpToCosMappings_mappings'
                  type: array
              required:
              - mappings
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                mappings:
                - dscp: 1
                  cos: 1
                  title: Video
              schema:
                type: object
          description: Successful operation
      summary: Update the DSCP to CoS mappings
      tags:
      - switch
      - configure
      - dscpToCosMappings
      x-codegen-request-body-name: updateNetworkSwitchDscpToCosMappings
  /networks/{networkId}/switch/linkAggregations:
    get:
      description: List link aggregation groups
      operationId: getNetworkSwitchLinkAggregations
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - id: NDU2N18yXzM=
                switchPorts:
                - serial: Q234-ABCD-0001
                  portId: "1"
                - serial: Q234-ABCD-0002
                  portId: "2"
                - serial: Q234-ABCD-0003
                  portId: "3"
                - serial: Q234-ABCD-0004
                  portId: "4"
                - serial: Q234-ABCD-0005
                  portId: "5"
                - serial: Q234-ABCD-0006
                  portId: "6"
                - serial: Q234-ABCD-0007
                  portId: "7"
                - serial: Q234-ABCD-0008
                  portId: "8"
              schema:
                items:
                  properties: {}
                  type: object
                type: array
          description: Successful operation
      summary: List link aggregation groups
      tags:
      - switch
      - configure
      - linkAggregations
    post:
      description: Create a link aggregation group
      operationId: createNetworkSwitchLinkAggregation
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_117'
        content:
          application/json:
            schema:
              example:
                switchPorts:
                - serial: Q234-ABCD-0001
                  portId: "1"
                - serial: Q234-ABCD-0002
                  portId: "2"
                - serial: Q234-ABCD-0003
                  portId: "3"
                - serial: Q234-ABCD-0004
                  portId: "4"
                - serial: Q234-ABCD-0005
                  portId: "5"
                - serial: Q234-ABCD-0006
                  portId: "6"
                - serial: Q234-ABCD-0007
                  portId: "7"
                - serial: Q234-ABCD-0008
                  portId: "8"
              properties:
                switchPorts:
                  description: Array of switch or stack ports for creating aggregation
                    group. Minimum 2 and maximum 8 ports are supported.
                  items:
                    $ref: '#/components/schemas/_networks__networkId__switch_linkAggregations_switchPorts'
                  type: array
                switchProfilePorts:
                  description: Array of switch profile ports for creating aggregation
                    group. Minimum 2 and maximum 8 ports are supported.
                  items:
                    $ref: '#/components/schemas/_networks__networkId__switch_linkAggregations_switchProfilePorts'
                  type: array
              type: object
        required: false
      responses:
        "201":
          content:
            application/json:
              example:
                id: NDU2N18yXzM=
                switchPorts:
                - serial: Q234-ABCD-0001
                  portId: "1"
                - serial: Q234-ABCD-0002
                  portId: "2"
                - serial: Q234-ABCD-0003
                  portId: "3"
                - serial: Q234-ABCD-0004
                  portId: "4"
                - serial: Q234-ABCD-0005
                  portId: "5"
                - serial: Q234-ABCD-0006
                  portId: "6"
                - serial: Q234-ABCD-0007
                  portId: "7"
                - serial: Q234-ABCD-0008
                  portId: "8"
              schema:
                type: object
          description: Successful operation
      summary: Create a link aggregation group
      tags:
      - switch
      - configure
      - linkAggregations
      x-codegen-request-body-name: createNetworkSwitchLinkAggregation
  /networks/{networkId}/switch/linkAggregations/{linkAggregationId}:
    delete:
      description: Split a link aggregation group into separate ports
      operationId: deleteNetworkSwitchLinkAggregation
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Link aggregation ID
        in: path
        name: linkAggregationId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Successful operation
      summary: Split a link aggregation group into separate ports
      tags:
      - switch
      - configure
      - linkAggregations
    put:
      description: Update a link aggregation group
      operationId: updateNetworkSwitchLinkAggregation
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Link aggregation ID
        in: path
        name: linkAggregationId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_118'
        content:
          application/json:
            schema:
              example:
                id: NDU2N18yXzM=
                switchPorts:
                - serial: Q234-ABCD-0001
                  portId: "1"
                - serial: Q234-ABCD-0002
                  portId: "2"
                - serial: Q234-ABCD-0003
                  portId: "3"
                - serial: Q234-ABCD-0004
                  portId: "4"
                - serial: Q234-ABCD-0005
                  portId: "5"
                - serial: Q234-ABCD-0006
                  portId: "6"
                - serial: Q234-ABCD-0007
                  portId: "7"
                - serial: Q234-ABCD-0008
                  portId: "8"
              properties:
                switchPorts:
                  description: Array of switch or stack ports for updating aggregation
                    group. Minimum 2 and maximum 8 ports are supported.
                  items:
                    $ref: '#/components/schemas/_networks__networkId__switch_linkAggregations_switchPorts'
                  type: array
                switchProfilePorts:
                  description: Array of switch profile ports for updating aggregation
                    group. Minimum 2 and maximum 8 ports are supported.
                  items:
                    $ref: '#/components/schemas/_networks__networkId__switch_linkAggregations_switchProfilePorts'
                  type: array
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                id: NDU2N18yXzM=
                switchPorts:
                - serial: Q234-ABCD-0001
                  portId: "1"
                - serial: Q234-ABCD-0002
                  portId: "2"
                - serial: Q234-ABCD-0003
                  portId: "3"
                - serial: Q234-ABCD-0004
                  portId: "4"
                - serial: Q234-ABCD-0005
                  portId: "5"
                - serial: Q234-ABCD-0006
                  portId: "6"
                - serial: Q234-ABCD-0007
                  portId: "7"
                - serial: Q234-ABCD-0008
                  portId: "8"
              schema:
                type: object
          description: Successful operation
      summary: Update a link aggregation group
      tags:
      - switch
      - configure
      - linkAggregations
      x-codegen-request-body-name: updateNetworkSwitchLinkAggregation
  /networks/{networkId}/switch/mtu:
    get:
      description: Return the MTU configuration
      operationId: getNetworkSwitchMtu
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                defaultMtuSize: 9578
                overrides:
                - switches:
                  - Q234-ABCD-0001
                  - Q234-ABCD-0002
                  - Q234-ABCD-0003
                  switchProfiles:
                  - "1284392014819"
                  - "2983092129865"
                  mtuSize: 1500
              schema:
                $ref: '#/components/schemas/inline_response_200_69'
          description: Successful operation
      summary: Return the MTU configuration
      tags:
      - switch
      - configure
      - mtu
    put:
      description: Update the MTU configuration
      operationId: updateNetworkSwitchMtu
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_119'
        content:
          application/json:
            schema:
              example:
                defaultMtuSize: 9578
                overrides:
                - switches:
                  - Q234-ABCD-0001
                  - Q234-ABCD-0002
                  - Q234-ABCD-0003
                  mtuSize: 1500
                - switchProfiles:
                  - "1284392014819"
                  - "2983092129865"
                  mtuSize: 1600
              properties:
                defaultMtuSize:
                  description: MTU size for the entire network. Default value is 9578.
                  type: integer
                overrides:
                  description: Override MTU size for individual switches or switch
                    profiles. An empty array will clear overrides.
                  items:
                    $ref: '#/components/schemas/inline_response_200_69_overrides'
                  type: array
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                defaultMtuSize: 9578
                overrides:
                - switches:
                  - Q234-ABCD-0001
                  - Q234-ABCD-0002
                  - Q234-ABCD-0003
                  mtuSize: 1500
                - switchProfiles:
                  - "1284392014819"
                  - "2983092129865"
                  mtuSize: 1600
              schema:
                type: object
          description: Successful operation
      summary: Update the MTU configuration
      tags:
      - switch
      - configure
      - mtu
      x-codegen-request-body-name: updateNetworkSwitchMtu
  /networks/{networkId}/switch/portSchedules:
    get:
      description: List switch port schedules
      operationId: getNetworkSwitchPortSchedules
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - id: "1234"
                networkId: N_24329156
                name: Weekdays schedule
                portSchedule:
                  monday:
                    active: true
                    from: 9:00
                    to: 17:00
                  tuesday:
                    active: true
                    from: 9:00
                    to: 17:00
                  wednesday:
                    active: true
                    from: 9:00
                    to: 17:00
                  thursday:
                    active: true
                    from: 9:00
                    to: 17:00
                  friday:
                    active: true
                    from: 9:00
                    to: 17:00
                  saturday:
                    active: false
                    from: 0:00
                    to: 24:00
                  sunday:
                    active: false
                    from: 0:00
                    to: 24:00
              schema:
                items:
                  properties: {}
                  type: object
                type: array
          description: Successful operation
      summary: List switch port schedules
      tags:
      - switch
      - configure
      - portSchedules
    post:
      description: Add a switch port schedule
      operationId: createNetworkSwitchPortSchedule
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_120'
        content:
          application/json:
            schema:
              example:
                name: Weekdays schedule
                portSchedule:
                  monday:
                    active: true
                    from: 9:00
                    to: 17:00
                  tuesday:
                    active: true
                    from: 9:00
                    to: 17:00
                  wednesday:
                    active: true
                    from: 9:00
                    to: 17:00
                  thursday:
                    active: true
                    from: 9:00
                    to: 17:00
                  friday:
                    active: true
                    from: 9:00
                    to: 17:00
                  saturday:
                    active: false
                    from: 0:00
                    to: 24:00
                  sunday:
                    active: false
                    from: 0:00
                    to: 24:00
              properties:
                name:
                  description: The name for your port schedule. Required
                  type: string
                portSchedule:
                  $ref: '#/components/schemas/_networks__networkId__switch_portSchedules_portSchedule'
              required:
              - name
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                id: "1234"
                networkId: N_24329156
                name: Weekdays schedule
                portSchedule:
                  monday:
                    active: true
                    from: 9:00
                    to: 17:00
                  tuesday:
                    active: true
                    from: 9:00
                    to: 17:00
                  wednesday:
                    active: true
                    from: 9:00
                    to: 17:00
                  thursday:
                    active: true
                    from: 9:00
                    to: 17:00
                  friday:
                    active: true
                    from: 9:00
                    to: 17:00
                  saturday:
                    active: false
                    from: 0:00
                    to: 24:00
                  sunday:
                    active: false
                    from: 0:00
                    to: 24:00
              schema:
                type: object
          description: Successful operation
      summary: Add a switch port schedule
      tags:
      - switch
      - configure
      - portSchedules
      x-codegen-request-body-name: createNetworkSwitchPortSchedule
  /networks/{networkId}/switch/portSchedules/{portScheduleId}:
    delete:
      description: Delete a switch port schedule
      operationId: deleteNetworkSwitchPortSchedule
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Port schedule ID
        in: path
        name: portScheduleId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Successful operation
      summary: Delete a switch port schedule
      tags:
      - switch
      - configure
      - portSchedules
    put:
      description: Update a switch port schedule
      operationId: updateNetworkSwitchPortSchedule
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Port schedule ID
        in: path
        name: portScheduleId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_121'
        content:
          application/json:
            schema:
              example:
                name: Weekdays schedule
                portSchedule:
                  monday:
                    active: true
                    from: 9:00
                    to: 17:00
                  tuesday:
                    active: true
                    from: 9:00
                    to: 17:00
                  wednesday:
                    active: true
                    from: 9:00
                    to: 17:00
                  thursday:
                    active: true
                    from: 9:00
                    to: 17:00
                  friday:
                    active: true
                    from: 9:00
                    to: 17:00
                  saturday:
                    active: false
                    from: 0:00
                    to: 24:00
                  sunday:
                    active: false
                    from: 0:00
                    to: 24:00
              properties:
                name:
                  description: The name for your port schedule.
                  type: string
                portSchedule:
                  $ref: '#/components/schemas/_networks__networkId__switch_portSchedules_portSchedule'
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                id: "1234"
                networkId: N_24329156
                name: Weekdays schedule
                portSchedule:
                  monday:
                    active: true
                    from: 9:00
                    to: 17:00
                  tuesday:
                    active: true
                    from: 9:00
                    to: 17:00
                  wednesday:
                    active: true
                    from: 9:00
                    to: 17:00
                  thursday:
                    active: true
                    from: 9:00
                    to: 17:00
                  friday:
                    active: true
                    from: 9:00
                    to: 17:00
                  saturday:
                    active: false
                    from: 0:00
                    to: 24:00
                  sunday:
                    active: false
                    from: 0:00
                    to: 24:00
              schema:
                type: object
          description: Successful operation
      summary: Update a switch port schedule
      tags:
      - switch
      - configure
      - portSchedules
      x-codegen-request-body-name: updateNetworkSwitchPortSchedule
  /networks/{networkId}/switch/qosRules:
    get:
      description: List quality of service rules
      operationId: getNetworkSwitchQosRules
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - id: "1284392014819"
                vlan: 100
                protocol: TCP
                srcPort: 2000
                srcPortRange: 70-80
                dstPort: 3000
                dstPortRange: 3000-3100
                dscp: 0
              schema:
                items:
                  properties: {}
                  type: object
                type: array
          description: Successful operation
      summary: List quality of service rules
      tags:
      - switch
      - configure
      - qosRules
    post:
      description: Add a quality of service rule
      operationId: createNetworkSwitchQosRule
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_122'
        content:
          application/json:
            schema:
              example:
                vlan: 100
                protocol: TCP
                srcPort: 2000
                srcPortRange: 70-80
                dstPort: 3000
                dstPortRange: 3000-3100
                dscp: 0
              properties:
                vlan:
                  description: The VLAN of the incoming packet. A null value will
                    match any VLAN.
                  type: integer
                protocol:
                  description: The protocol of the incoming packet. Can be one of
                    "ANY", "TCP" or "UDP". Default value is "ANY"
                  enum:
                  - ANY
                  - TCP
                  - UDP
                  type: string
                srcPort:
                  description: The source port of the incoming packet. Applicable
                    only if protocol is TCP or UDP.
                  type: integer
                srcPortRange:
                  description: 'The source port range of the incoming packet. Applicable
                    only if protocol is set to TCP or UDP. Example: 70-80'
                  type: string
                dstPort:
                  description: The destination port of the incoming packet. Applicable
                    only if protocol is TCP or UDP.
                  type: integer
                dstPortRange:
                  description: 'The destination port range of the incoming packet.
                    Applicable only if protocol is set to TCP or UDP. Example: 70-80'
                  type: string
                dscp:
                  description: DSCP tag. Set this to -1 to trust incoming DSCP. Default
                    value is 0
                  type: integer
              required:
              - vlan
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                id: "1284392014819"
                vlan: 100
                protocol: TCP
                srcPort: 2000
                srcPortRange: 70-80
                dstPort: 3000
                dstPortRange: 3000-3100
                dscp: 0
              schema:
                type: object
          description: Successful operation
      summary: Add a quality of service rule
      tags:
      - switch
      - configure
      - qosRules
      x-codegen-request-body-name: createNetworkSwitchQosRule
  /networks/{networkId}/switch/qosRules/order:
    get:
      description: Return the quality of service rule IDs by order in which they will
        be processed by the switch
      operationId: getNetworkSwitchQosRulesOrder
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                ruleIds:
                - "1284392014819"
                - "2983092129865"
              schema:
                type: object
          description: Successful operation
      summary: Return the quality of service rule IDs by order in which they will
        be processed by the switch
      tags:
      - switch
      - configure
      - qosRules
      - order
    put:
      description: Update the order in which the rules should be processed by the
        switch
      operationId: updateNetworkSwitchQosRulesOrder
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_123'
        content:
          application/json:
            schema:
              example:
                ruleIds:
                - "1284392014819"
                - "2983092129865"
              properties:
                ruleIds:
                  description: A list of quality of service rule IDs arranged in order
                    in which they should be processed by the switch.
                  items:
                    type: string
                  type: array
              required:
              - ruleIds
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                ruleIds:
                - "1284392014819"
                - "2983092129865"
              schema:
                type: object
          description: Successful operation
      summary: Update the order in which the rules should be processed by the switch
      tags:
      - switch
      - configure
      - qosRules
      - order
      x-codegen-request-body-name: updateNetworkSwitchQosRulesOrder
  /networks/{networkId}/switch/qosRules/{qosRuleId}:
    delete:
      description: Delete a quality of service rule
      operationId: deleteNetworkSwitchQosRule
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Qos rule ID
        in: path
        name: qosRuleId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Successful operation
      summary: Delete a quality of service rule
      tags:
      - switch
      - configure
      - qosRules
    get:
      description: Return a quality of service rule
      operationId: getNetworkSwitchQosRule
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Qos rule ID
        in: path
        name: qosRuleId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                id: "1284392014819"
                vlan: 100
                protocol: TCP
                srcPort: 2000
                srcPortRange: 70-80
                dstPort: 3000
                dstPortRange: 3000-3100
                dscp: 0
              schema:
                type: object
          description: Successful operation
      summary: Return a quality of service rule
      tags:
      - switch
      - configure
      - qosRules
    put:
      description: Update a quality of service rule
      operationId: updateNetworkSwitchQosRule
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Qos rule ID
        in: path
        name: qosRuleId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_124'
        content:
          application/json:
            schema:
              example:
                vlan: 100
                protocol: TCP
                srcPort: 2000
                srcPortRange: 70-80
                dstPort: 3000
                dstPortRange: 3000-3100
                dscp: 0
              properties:
                vlan:
                  description: The VLAN of the incoming packet. A null value will
                    match any VLAN.
                  type: integer
                protocol:
                  description: The protocol of the incoming packet. Can be one of
                    "ANY", "TCP" or "UDP". Default value is "ANY".
                  enum:
                  - ANY
                  - TCP
                  - UDP
                  type: string
                srcPort:
                  description: The source port of the incoming packet. Applicable
                    only if protocol is TCP or UDP.
                  type: integer
                srcPortRange:
                  description: 'The source port range of the incoming packet. Applicable
                    only if protocol is set to TCP or UDP. Example: 70-80'
                  type: string
                dstPort:
                  description: The destination port of the incoming packet. Applicable
                    only if protocol is TCP or UDP.
                  type: integer
                dstPortRange:
                  description: 'The destination port range of the incoming packet.
                    Applicable only if protocol is set to TCP or UDP. Example: 70-80'
                  type: string
                dscp:
                  description: DSCP tag that should be assigned to incoming packet.
                    Set this to -1 to trust incoming DSCP. Default value is 0.
                  type: integer
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                id: "1284392014819"
                vlan: 100
                protocol: TCP
                srcPort: 2000
                srcPortRange: 70-80
                dstPort: 3000
                dstPortRange: 3000-3100
                dscp: 0
              schema:
                type: object
          description: Successful operation
      summary: Update a quality of service rule
      tags:
      - switch
      - configure
      - qosRules
      x-codegen-request-body-name: updateNetworkSwitchQosRule
  /networks/{networkId}/switch/routing/multicast:
    get:
      description: Return multicast settings for a network
      operationId: getNetworkSwitchRoutingMulticast
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                defaultSettings:
                  igmpSnoopingEnabled: true
                  floodUnknownMulticastTrafficEnabled: true
                overrides:
                - switches:
                  - Q234-ABCD-0001
                  - Q234-ABCD-0002
                  - Q234-ABCD-0003
                  igmpSnoopingEnabled: true
                  floodUnknownMulticastTrafficEnabled: true
                - stacks:
                  - "789102"
                  - "123456"
                  - "129102"
                  igmpSnoopingEnabled: true
                  floodUnknownMulticastTrafficEnabled: true
              schema:
                type: object
          description: Successful operation
      summary: Return multicast settings for a network
      tags:
      - switch
      - configure
      - routing
      - multicast
    put:
      description: Update multicast settings for a network
      operationId: updateNetworkSwitchRoutingMulticast
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_125'
        content:
          application/json:
            schema:
              example:
                defaultSettings:
                  igmpSnoopingEnabled: true
                  floodUnknownMulticastTrafficEnabled: true
                overrides:
                - switches:
                  - Q234-ABCD-0001
                  - Q234-ABCD-0002
                  - Q234-ABCD-0003
                  igmpSnoopingEnabled: true
                  floodUnknownMulticastTrafficEnabled: true
                - stacks:
                  - "789102"
                  - "123456"
                  - "129102"
                  igmpSnoopingEnabled: true
                  floodUnknownMulticastTrafficEnabled: true
              properties:
                defaultSettings:
                  $ref: '#/components/schemas/_networks__networkId__switch_routing_multicast_defaultSettings'
                overrides:
                  description: Array of paired switches/stacks/profiles and corresponding
                    multicast settings. An empty array will clear the multicast settings.
                  items:
                    $ref: '#/components/schemas/_networks__networkId__switch_routing_multicast_overrides'
                  type: array
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                defaultSettings:
                  igmpSnoopingEnabled: true
                  floodUnknownMulticastTrafficEnabled: true
                overrides:
                - switches:
                  - Q234-ABCD-0001
                  - Q234-ABCD-0002
                  - Q234-ABCD-0003
                  igmpSnoopingEnabled: true
                  floodUnknownMulticastTrafficEnabled: true
                - stacks:
                  - "789102"
                  - "123456"
                  - "129102"
                  igmpSnoopingEnabled: true
                  floodUnknownMulticastTrafficEnabled: true
              schema:
                type: object
          description: Successful operation
      summary: Update multicast settings for a network
      tags:
      - switch
      - configure
      - routing
      - multicast
      x-codegen-request-body-name: updateNetworkSwitchRoutingMulticast
  /networks/{networkId}/switch/routing/multicast/rendezvousPoints:
    get:
      description: List multicast rendezvous points
      operationId: getNetworkSwitchRoutingMulticastRendezvousPoints
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - - rendezvousPointId: "1234"
                  serial: Q234-ABCD-5678
                  interfaceName: l3_interface_0
                  interfaceIp: 192.168.1.2
                  multicastGroup: Any
                - rendezvousPointId: "1234"
                  switchStackId: "789102"
                  interfaceName: l3_interface_1
                  interfaceIp: 192.0.0.10
                  multicastGroup: 239.0.0.0/24
                - rendezvousPointId: "1234"
                  interfaceIp: 192.168.1.2
                  multicastGroup: 192.168.128.0/24
              schema:
                items:
                  items:
                    properties: {}
                    type: object
                  type: array
                type: array
          description: Successful operation
      summary: List multicast rendezvous points
      tags:
      - switch
      - configure
      - routing
      - multicast
      - rendezvousPoints
    post:
      description: Create a multicast rendezvous point
      operationId: createNetworkSwitchRoutingMulticastRendezvousPoint
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_126'
        content:
          application/json:
            schema:
              example:
                interfaceIp: 192.168.1.2
                multicastGroup: 192.168.128.0/24
              properties:
                interfaceIp:
                  description: The IP address of the interface where the RP needs
                    to be created.
                  type: string
                multicastGroup:
                  description: '''Any'', or the IP address of a multicast group'
                  type: string
              required:
              - interfaceIp
              - multicastGroup
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                rendezvousPointId: "1234"
                interfaceIp: 192.168.1.2
                multicastGroup: 192.168.128.0/24
              schema:
                type: object
          description: Successful operation
      summary: Create a multicast rendezvous point
      tags:
      - switch
      - configure
      - routing
      - multicast
      - rendezvousPoints
      x-codegen-request-body-name: createNetworkSwitchRoutingMulticastRendezvousPoint
  /networks/{networkId}/switch/routing/multicast/rendezvousPoints/{rendezvousPointId}:
    delete:
      description: Delete a multicast rendezvous point
      operationId: deleteNetworkSwitchRoutingMulticastRendezvousPoint
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Rendezvous point ID
        in: path
        name: rendezvousPointId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Successful operation
      summary: Delete a multicast rendezvous point
      tags:
      - switch
      - configure
      - routing
      - multicast
      - rendezvousPoints
    get:
      description: Return a multicast rendezvous point
      operationId: getNetworkSwitchRoutingMulticastRendezvousPoint
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Rendezvous point ID
        in: path
        name: rendezvousPointId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                rendezvousPointId: "1234"
                serial: Q234-ABCD-5678
                interfaceName: l3_interface_0
                interfaceIp: 192.168.1.2
                multicastGroup: Any
              schema:
                type: object
          description: Successful operation
      summary: Return a multicast rendezvous point
      tags:
      - switch
      - configure
      - routing
      - multicast
      - rendezvousPoints
    put:
      description: Update a multicast rendezvous point
      operationId: updateNetworkSwitchRoutingMulticastRendezvousPoint
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Rendezvous point ID
        in: path
        name: rendezvousPointId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_127'
        content:
          application/json:
            schema:
              example:
                interfaceIp: 192.168.1.2
                multicastGroup: 192.168.128.0/24
              properties:
                interfaceIp:
                  description: The IP address of the interface to use
                  type: string
                multicastGroup:
                  description: '''Any'', or the IP address of a multicast group'
                  type: string
              required:
              - interfaceIp
              - multicastGroup
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                rendezvousPointId: "1234"
                interfaceIp: 192.168.1.2
                multicastGroup: 192.168.128.0/24
              schema:
                type: object
          description: Successful operation
      summary: Update a multicast rendezvous point
      tags:
      - switch
      - configure
      - routing
      - multicast
      - rendezvousPoints
      x-codegen-request-body-name: updateNetworkSwitchRoutingMulticastRendezvousPoint
  /networks/{networkId}/switch/routing/ospf:
    get:
      description: Return layer 3 OSPF routing configuration
      operationId: getNetworkSwitchRoutingOspf
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                enabled: true
                helloTimerInSeconds: 10
                deadTimerInSeconds: 40
                areas:
                - areaId: "1284392014819"
                  areaName: Backbone
                  areaType: normal
                v3:
                  enabled: true
                  helloTimerInSeconds: 10
                  deadTimerInSeconds: 40
                  areas:
                  - areaId: "1284392014819"
                    areaName: V3 Backbone
                    areaType: normal
                md5AuthenticationEnabled: true
                md5AuthenticationKey:
                  id: 1234
                  passphrase: abc1234
              schema:
                type: object
          description: Successful operation
      summary: Return layer 3 OSPF routing configuration
      tags:
      - switch
      - configure
      - routing
      - ospf
    put:
      description: Update layer 3 OSPF routing configuration
      operationId: updateNetworkSwitchRoutingOspf
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_128'
        content:
          application/json:
            schema:
              example:
                enabled: true
                helloTimerInSeconds: 10
                deadTimerInSeconds: 40
                areas:
                - areaId: "1284392014819"
                  areaName: Backbone
                  areaType: normal
                v3:
                  enabled: true
                  helloTimerInSeconds: 10
                  deadTimerInSeconds: 40
                  areas:
                  - areaId: "1284392014819"
                    areaName: V3 Backbone
                    areaType: normal
                md5AuthenticationEnabled: true
                md5AuthenticationKey:
                  id: 1234
                  passphrase: abc1234
              properties:
                enabled:
                  description: Boolean value to enable or disable OSPF routing. OSPF
                    routing is disabled by default.
                  type: boolean
                helloTimerInSeconds:
                  description: Time interval in seconds at which hello packet will
                    be sent to OSPF neighbors to maintain connectivity. Value must
                    be between 1 and 255. Default is 10 seconds.
                  type: integer
                deadTimerInSeconds:
                  description: Time interval to determine when the peer will be declared
                    inactive/dead. Value must be between 1 and 65535
                  type: integer
                areas:
                  description: OSPF areas
                  items:
                    $ref: '#/components/schemas/_networks__networkId__switch_routing_ospf_areas'
                  type: array
                v3:
                  $ref: '#/components/schemas/_networks__networkId__switch_routing_ospf_v3'
                md5AuthenticationEnabled:
                  description: Boolean value to enable or disable MD5 authentication.
                    MD5 authentication is disabled by default.
                  type: boolean
                md5AuthenticationKey:
                  $ref: '#/components/schemas/_networks__networkId__switch_routing_ospf_md5AuthenticationKey'
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                enabled: true
                helloTimerInSeconds: 10
                deadTimerInSeconds: 40
                areas:
                - areaId: "1284392014819"
                  areaName: Backbone
                  areaType: normal
                v3:
                  enabled: true
                  helloTimerInSeconds: 10
                  deadTimerInSeconds: 40
                  areas:
                  - areaId: "1284392014819"
                    areaName: V3 Backbone
                    areaType: normal
                md5AuthenticationEnabled: true
                md5AuthenticationKey:
                  id: 1234
                  passphrase: abc1234
              schema:
                type: object
          description: Successful operation
      summary: Update layer 3 OSPF routing configuration
      tags:
      - switch
      - configure
      - routing
      - ospf
      x-codegen-request-body-name: updateNetworkSwitchRoutingOspf
  /networks/{networkId}/switch/settings:
    get:
      description: Returns the switch network settings
      operationId: getNetworkSwitchSettings
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                vlan: 100
                useCombinedPower: false
                powerExceptions:
                - serial: Q234-ABCD-0001
                  powerType: redundant
              schema:
                $ref: '#/components/schemas/inline_response_200_70'
          description: Successful operation
      summary: Returns the switch network settings
      tags:
      - switch
      - configure
      - settings
    put:
      description: Update switch network settings
      operationId: updateNetworkSwitchSettings
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_129'
        content:
          application/json:
            schema:
              example: {}
              properties:
                vlan:
                  description: Management VLAN
                  type: integer
                useCombinedPower:
                  description: The use Combined Power as the default behavior of secondary
                    power supplies on supported devices.
                  type: boolean
                powerExceptions:
                  description: Exceptions on a per switch basis to "useCombinedPower"
                  items:
                    $ref: '#/components/schemas/_networks__networkId__switch_settings_powerExceptions'
                  type: array
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                vlan: 100
                useCombinedPower: false
                powerExceptions:
                - serial: Q234-ABCD-0001
                  powerType: redundant
              schema:
                $ref: '#/components/schemas/inline_response_200_70'
          description: Successful operation
      summary: Update switch network settings
      tags:
      - switch
      - configure
      - settings
      x-codegen-request-body-name: updateNetworkSwitchSettings
  /networks/{networkId}/switch/stacks:
    get:
      description: List the switch stacks in a network
      operationId: getNetworkSwitchStacks
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - id: "8473"
                name: A cool stack
                serials:
                - QBZY-XWVU-TSRQ
                - QBAB-CDEF-GHIJ
              schema:
                items:
                  properties: {}
                  type: object
                type: array
          description: Successful operation
      summary: List the switch stacks in a network
      tags:
      - switch
      - configure
      - stacks
    post:
      description: Create a stack
      operationId: createNetworkSwitchStack
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_130'
        content:
          application/json:
            schema:
              example:
                name: A cool stack
                serials:
                - QBZY-XWVU-TSRQ
                - QBAB-CDEF-GHIJ
              properties:
                name:
                  description: The name of the new stack
                  type: string
                serials:
                  description: An array of switch serials to be added into the new
                    stack
                  items:
                    type: string
                  type: array
              required:
              - name
              - serials
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                id: "8473"
                name: A cool stack
                serials:
                - QBZY-XWVU-TSRQ
                - QBAB-CDEF-GHIJ
              schema:
                type: object
          description: Successful operation
      summary: Create a stack
      tags:
      - switch
      - configure
      - stacks
      x-codegen-request-body-name: createNetworkSwitchStack
  /networks/{networkId}/switch/stacks/{switchStackId}:
    delete:
      description: Delete a stack
      operationId: deleteNetworkSwitchStack
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Switch stack ID
        in: path
        name: switchStackId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Successful operation
      summary: Delete a stack
      tags:
      - switch
      - configure
      - stacks
    get:
      description: Show a switch stack
      operationId: getNetworkSwitchStack
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Switch stack ID
        in: path
        name: switchStackId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                id: "8473"
                name: A cool stack
                serials:
                - QBZY-XWVU-TSRQ
                - QBAB-CDEF-GHIJ
              schema:
                $ref: '#/components/schemas/inline_response_200_71'
          description: Successful operation
      summary: Show a switch stack
      tags:
      - switch
      - configure
      - stacks
  /networks/{networkId}/switch/stacks/{switchStackId}/add:
    post:
      description: Add a switch to a stack
      operationId: addNetworkSwitchStack
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Switch stack ID
        in: path
        name: switchStackId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_131'
        content:
          application/json:
            schema:
              example:
                serial: QBZY-XWVU-TSRQ
              properties:
                serial:
                  description: The serial of the switch to be added
                  type: string
              required:
              - serial
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                id: "8473"
                name: A cool stack
                serials:
                - QBZY-XWVU-TSRQ
                - QBAB-CDEF-GHIJ
              schema:
                $ref: '#/components/schemas/inline_response_200_71'
          description: Successful operation
      summary: Add a switch to a stack
      tags:
      - switch
      - configure
      - stacks
      x-codegen-request-body-name: addNetworkSwitchStack
  /networks/{networkId}/switch/stacks/{switchStackId}/remove:
    post:
      description: Remove a switch from a stack
      operationId: removeNetworkSwitchStack
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Switch stack ID
        in: path
        name: switchStackId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_132'
        content:
          application/json:
            schema:
              example:
                serial: QBZY-XWVU-TSRQ
              properties:
                serial:
                  description: The serial of the switch to be removed
                  type: string
              required:
              - serial
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                id: "8473"
                name: A cool stack
                serials:
                - QBAB-CDEF-GHIJ
              schema:
                type: object
          description: Successful operation
      summary: Remove a switch from a stack
      tags:
      - switch
      - configure
      - stacks
      x-codegen-request-body-name: removeNetworkSwitchStack
  /networks/{networkId}/switch/stacks/{switchStackId}/routing/interfaces:
    get:
      description: List layer 3 interfaces for a switch stack
      operationId: getNetworkSwitchStackRoutingInterfaces
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Switch stack ID
        in: path
        name: switchStackId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - interfaceId: "1234"
                name: L3 interface
                subnet: 192.168.1.0/24
                interfaceIp: 192.168.1.2
                multicastRouting: disabled
                vlanId: 100
                defaultGateway: 192.168.1.1
                ospfSettings:
                  area: "0"
                  cost: 1
                  isPassiveEnabled: true
                ospfV3:
                  area: "1"
                  cost: 2
                  isPassiveEnabled: true
                ipv6:
                  assignmentMode: static
                  address: 1:2:3:4::1
                  prefix: 1:2:3:4::/48
                  gateway: 1:2:3:4::2
              schema:
                items:
                  properties: {}
                  type: object
                type: array
          description: Successful operation
      summary: List layer 3 interfaces for a switch stack
      tags:
      - switch
      - configure
      - stacks
      - routing
      - interfaces
    post:
      description: Create a layer 3 interface for a switch stack
      operationId: createNetworkSwitchStackRoutingInterface
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Switch stack ID
        in: path
        name: switchStackId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_133'
        content:
          application/json:
            schema:
              example:
                name: L3 interface
                subnet: 192.168.1.0/24
                interfaceIp: 192.168.1.2
                multicastRouting: disabled
                vlanId: 100
                defaultGateway: 192.168.1.1
                ospfSettings:
                  area: "0"
                  cost: 1
                  isPassiveEnabled: true
                ospfV3:
                  area: "1"
                  cost: 2
                  isPassiveEnabled: true
                ipv6:
                  assignmentMode: static
                  address: 1:2:3:4::1
                  prefix: 1:2:3:4::/48
                  gateway: 1:2:3:4::2
              properties:
                name:
                  description: A friendly name or description for the interface or
                    VLAN.
                  type: string
                subnet:
                  description: The network that this routed interface is on, in CIDR
                    notation (ex. 10.1.1.0/24).
                  type: string
                interfaceIp:
                  description: The IP address this switch stack will use for layer
                    3 routing on this VLAN or subnet. This cannot be the same as the
                    switch's management IP.
                  type: string
                multicastRouting:
                  description: Enable multicast support if, multicast routing between
                    VLANs is required. Options are, 'disabled', 'enabled' or 'IGMP
                    snooping querier'. Default is 'disabled'.
                  enum:
                  - IGMP snooping querier
                  - disabled
                  - enabled
                  type: string
                vlanId:
                  description: The VLAN this routed interface is on. VLAN must be
                    between 1 and 4094.
                  type: integer
                defaultGateway:
                  description: The next hop for any traffic that isn't going to a
                    directly connected subnet or over a static route. This IP address
                    must exist in a subnet with a routed interface.
                  type: string
                ospfSettings:
                  $ref: '#/components/schemas/_networks__networkId__switch_stacks__switchStackId__routing_interfaces_ospfSettings'
                ipv6:
                  $ref: '#/components/schemas/_networks__networkId__switch_stacks__switchStackId__routing_interfaces_ipv6'
              required:
              - name
              - vlanId
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                interfaceId: "1234"
                name: L3 interface
                subnet: 192.168.1.0/24
                interfaceIp: 192.168.1.2
                multicastRouting: disabled
                vlanId: 100
                defaultGateway: 192.168.1.1
                ospfSettings:
                  area: "0"
                  cost: 1
                  isPassiveEnabled: true
                ospfV3:
                  area: "1"
                  cost: 2
                  isPassiveEnabled: true
                ipv6:
                  assignmentMode: static
                  address: 1:2:3:4::1
                  prefix: 1:2:3:4::/48
                  gateway: 1:2:3:4::2
              schema:
                type: object
          description: Successful operation
      summary: Create a layer 3 interface for a switch stack
      tags:
      - switch
      - configure
      - stacks
      - routing
      - interfaces
      x-codegen-request-body-name: createNetworkSwitchStackRoutingInterface
  /networks/{networkId}/switch/stacks/{switchStackId}/routing/interfaces/{interfaceId}:
    delete:
      description: Delete a layer 3 interface from a switch stack
      operationId: deleteNetworkSwitchStackRoutingInterface
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Switch stack ID
        in: path
        name: switchStackId
        required: true
        schema:
          type: string
      - description: Interface ID
        in: path
        name: interfaceId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Successful operation
      summary: Delete a layer 3 interface from a switch stack
      tags:
      - switch
      - configure
      - stacks
      - routing
      - interfaces
    get:
      description: Return a layer 3 interface from a switch stack
      operationId: getNetworkSwitchStackRoutingInterface
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Switch stack ID
        in: path
        name: switchStackId
        required: true
        schema:
          type: string
      - description: Interface ID
        in: path
        name: interfaceId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                interfaceId: "1234"
                name: L3 interface
                subnet: 192.168.1.0/24
                interfaceIp: 192.168.1.2
                multicastRouting: disabled
                vlanId: 100
                defaultGateway: 192.168.1.1
                ospfSettings:
                  area: "0"
                  cost: 1
                  isPassiveEnabled: true
                ospfV3:
                  area: "1"
                  cost: 2
                  isPassiveEnabled: true
                ipv6:
                  assignmentMode: static
                  address: 1:2:3:4::1
                  prefix: 1:2:3:4::/48
                  gateway: 1:2:3:4::2
              schema:
                type: object
          description: Successful operation
      summary: Return a layer 3 interface from a switch stack
      tags:
      - switch
      - configure
      - stacks
      - routing
      - interfaces
    put:
      description: Update a layer 3 interface for a switch stack
      operationId: updateNetworkSwitchStackRoutingInterface
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Switch stack ID
        in: path
        name: switchStackId
        required: true
        schema:
          type: string
      - description: Interface ID
        in: path
        name: interfaceId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_134'
        content:
          application/json:
            schema:
              example:
                name: L3 interface
                subnet: 192.168.1.0/24
                interfaceIp: 192.168.1.2
                multicastRouting: disabled
                vlanId: 100
                ospfSettings:
                  area: "0"
                  cost: 1
                  isPassiveEnabled: true
                ospfV3:
                  area: "1"
                  cost: 2
                  isPassiveEnabled: true
                ipv6:
                  assignmentMode: static
                  address: 1:2:3:4::1
                  prefix: 1:2:3:4::/48
                  gateway: 1:2:3:4::2
              properties:
                name:
                  description: A friendly name or description for the interface or
                    VLAN.
                  type: string
                subnet:
                  description: The network that this routed interface is on, in CIDR
                    notation (ex. 10.1.1.0/24).
                  type: string
                interfaceIp:
                  description: The IP address this switch stack will use for layer
                    3 routing on this VLAN or subnet. This cannot be the same as the
                    switch's management IP.
                  type: string
                multicastRouting:
                  description: Enable multicast support if, multicast routing between
                    VLANs is required. Options are, 'disabled', 'enabled' or 'IGMP
                    snooping querier'.
                  enum:
                  - IGMP snooping querier
                  - disabled
                  - enabled
                  type: string
                vlanId:
                  description: The VLAN this routed interface is on. VLAN must be
                    between 1 and 4094.
                  type: integer
                defaultGateway:
                  description: The next hop for any traffic that isn't going to a
                    directly connected subnet or over a static route. This IP address
                    must exist in a subnet with a routed interface.
                  type: string
                ospfSettings:
                  $ref: '#/components/schemas/_networks__networkId__switch_stacks__switchStackId__routing_interfaces__interfaceId__ospfSettings'
                ipv6:
                  $ref: '#/components/schemas/_networks__networkId__switch_stacks__switchStackId__routing_interfaces__interfaceId__ipv6'
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                interfaceId: "1234"
                name: L3 interface
                subnet: 192.168.1.0/24
                interfaceIp: 192.168.1.2
                multicastRouting: disabled
                vlanId: 100
                ospfSettings:
                  area: "0"
                  cost: 1
                  isPassiveEnabled: true
                ospfV3:
                  area: "1"
                  cost: 2
                  isPassiveEnabled: true
                ipv6:
                  assignmentMode: static
                  address: 1:2:3:4::1
                  prefix: 1:2:3:4::/48
                  gateway: 1:2:3:4::2
              schema:
                type: object
          description: Successful operation
      summary: Update a layer 3 interface for a switch stack
      tags:
      - switch
      - configure
      - stacks
      - routing
      - interfaces
      x-codegen-request-body-name: updateNetworkSwitchStackRoutingInterface
  /networks/{networkId}/switch/stacks/{switchStackId}/routing/interfaces/{interfaceId}/dhcp:
    get:
      description: Return a layer 3 interface DHCP configuration for a switch stack
      operationId: getNetworkSwitchStackRoutingInterfaceDhcp
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Switch stack ID
        in: path
        name: switchStackId
        required: true
        schema:
          type: string
      - description: Interface ID
        in: path
        name: interfaceId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                dhcpMode: dhcpServer
                dhcpLeaseTime: 1 day
                dnsNameserversOption: custom
                dnsCustomNameservers:
                - 8.8.8.8, 8.8.4.4
                bootOptionsEnabled: true
                bootNextServer: 1.2.3.4
                bootFileName: home_boot_file
                dhcpOptions:
                - code: "5"
                  type: text
                  value: five
                reservedIpRanges:
                - start: 192.168.1.1
                  end: 192.168.1.10
                  comment: A reserved IP range
                fixedIpAssignments:
                - mac: 22:33:44:55:66:77
                  name: Cisco Meraki valued client
                  ip: 192.168.1.12
              schema:
                type: object
          description: Successful operation
      summary: Return a layer 3 interface DHCP configuration for a switch stack
      tags:
      - switch
      - configure
      - stacks
      - routing
      - interfaces
      - dhcp
    put:
      description: Update a layer 3 interface DHCP configuration for a switch stack
      operationId: updateNetworkSwitchStackRoutingInterfaceDhcp
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Switch stack ID
        in: path
        name: switchStackId
        required: true
        schema:
          type: string
      - description: Interface ID
        in: path
        name: interfaceId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_135'
        content:
          application/json:
            schema:
              example:
                dhcpMode: dhcpServer
                dhcpLeaseTime: 1 day
                dnsNameserversOption: custom
                dnsCustomNameservers:
                - 8.8.8.8, 8.8.4.4
                bootOptionsEnabled: true
                bootNextServer: 1.2.3.4
                bootFileName: home_boot_file
                dhcpOptions:
                - code: "5"
                  type: text
                  value: five
                reservedIpRanges:
                - start: 192.168.1.1
                  end: 192.168.1.10
                  comment: A reserved IP range
                fixedIpAssignments:
                - mac: 22:33:44:55:66:77
                  name: Cisco Meraki valued client
                  ip: 192.168.1.12
              properties:
                dhcpMode:
                  description: The DHCP mode options for the switch stack interface
                    ('dhcpDisabled', 'dhcpRelay' or 'dhcpServer')
                  enum:
                  - dhcpDisabled
                  - dhcpRelay
                  - dhcpServer
                  type: string
                dhcpRelayServerIps:
                  description: The DHCP relay server IPs to which DHCP packets would
                    get relayed for the switch stack interface
                  items:
                    type: string
                  type: array
                dhcpLeaseTime:
                  description: The DHCP lease time config for the dhcp server running
                    on switch stack interface ('30 minutes', '1 hour', '4 hours',
                    '12 hours', '1 day' or '1 week')
                  enum:
                  - 1 day
                  - 1 hour
                  - 1 week
                  - 12 hours
                  - 30 minutes
                  - 4 hours
                  type: string
                dnsNameserversOption:
                  description: The DHCP name server option for the dhcp server running
                    on the switch stack interface ('googlePublicDns', 'openDns' or
                    'custom')
                  enum:
                  - custom
                  - googlePublicDns
                  - openDns
                  type: string
                dnsCustomNameservers:
                  description: The DHCP name server IPs when DHCP name server option
                    is 'custom'
                  items:
                    type: string
                  type: array
                bootOptionsEnabled:
                  description: Enable DHCP boot options to provide PXE boot options
                    configs for the dhcp server running on the switch stack interface
                  type: boolean
                bootNextServer:
                  description: The PXE boot server IP for the DHCP server running
                    on the switch stack interface
                  type: string
                bootFileName:
                  description: The PXE boot server file name for the DHCP server running
                    on the switch stack interface
                  type: string
                dhcpOptions:
                  description: Array of DHCP options consisting of code, type and
                    value for the DHCP server running on the switch stack interface
                  items:
                    $ref: '#/components/schemas/_devices__serial__switch_routing_interfaces__interfaceId__dhcp_dhcpOptions'
                  type: array
                reservedIpRanges:
                  description: Array of DHCP reserved IP assignments for the DHCP
                    server running on the switch stack interface
                  items:
                    $ref: '#/components/schemas/_devices__serial__switch_routing_interfaces__interfaceId__dhcp_reservedIpRanges'
                  type: array
                fixedIpAssignments:
                  description: Array of DHCP fixed IP assignments for the DHCP server
                    running on the switch stack interface
                  items:
                    $ref: '#/components/schemas/_devices__serial__switch_routing_interfaces__interfaceId__dhcp_fixedIpAssignments'
                  type: array
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                dhcpMode: dhcpServer
                dhcpLeaseTime: 1 day
                dnsNameserversOption: custom
                dnsCustomNameservers:
                - 8.8.8.8, 8.8.4.4
                bootOptionsEnabled: true
                bootNextServer: 1.2.3.4
                bootFileName: home_boot_file
                dhcpOptions:
                - code: "5"
                  type: text
                  value: five
                reservedIpRanges:
                - start: 192.168.1.1
                  end: 192.168.1.10
                  comment: A reserved IP range
                fixedIpAssignments:
                - mac: 22:33:44:55:66:77
                  name: Cisco Meraki valued client
                  ip: 192.168.1.12
              schema:
                type: object
          description: Successful operation
      summary: Update a layer 3 interface DHCP configuration for a switch stack
      tags:
      - switch
      - configure
      - stacks
      - routing
      - interfaces
      - dhcp
      x-codegen-request-body-name: updateNetworkSwitchStackRoutingInterfaceDhcp
  /networks/{networkId}/switch/stacks/{switchStackId}/routing/staticRoutes:
    get:
      description: List layer 3 static routes for a switch stack
      operationId: getNetworkSwitchStackRoutingStaticRoutes
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Switch stack ID
        in: path
        name: switchStackId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - staticRouteId: "1234"
                name: My route
                subnet: 192.168.1.0/24
                nextHopIp: 1.2.3.4
                advertiseViaOspfEnabled: false
                preferOverOspfRoutesEnabled: false
              schema:
                items:
                  properties: {}
                  type: object
                type: array
          description: Successful operation
      summary: List layer 3 static routes for a switch stack
      tags:
      - switch
      - configure
      - stacks
      - routing
      - staticRoutes
    post:
      description: Create a layer 3 static route for a switch stack
      operationId: createNetworkSwitchStackRoutingStaticRoute
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Switch stack ID
        in: path
        name: switchStackId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_136'
        content:
          application/json:
            schema:
              example:
                name: My route
                subnet: 192.168.1.0/24
                nextHopIp: 1.2.3.4
                advertiseViaOspfEnabled: false
                preferOverOspfRoutesEnabled: false
              properties:
                name:
                  description: Name or description for layer 3 static route
                  type: string
                subnet:
                  description: The subnet which is routed via this static route and
                    should be specified in CIDR notation (ex. 1.2.3.0/24)
                  type: string
                nextHopIp:
                  description: IP address of the next hop device to which the device
                    sends its traffic for the subnet
                  type: string
                advertiseViaOspfEnabled:
                  description: Option to advertise static route via OSPF
                  type: boolean
                preferOverOspfRoutesEnabled:
                  description: Option to prefer static route over OSPF routes
                  type: boolean
              required:
              - nextHopIp
              - subnet
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                staticRouteId: "1234"
                name: My route
                subnet: 192.168.1.0/24
                nextHopIp: 1.2.3.4
                advertiseViaOspfEnabled: false
                preferOverOspfRoutesEnabled: false
              schema:
                type: object
          description: Successful operation
      summary: Create a layer 3 static route for a switch stack
      tags:
      - switch
      - configure
      - stacks
      - routing
      - staticRoutes
      x-codegen-request-body-name: createNetworkSwitchStackRoutingStaticRoute
  /networks/{networkId}/switch/stacks/{switchStackId}/routing/staticRoutes/{staticRouteId}:
    delete:
      description: Delete a layer 3 static route for a switch stack
      operationId: deleteNetworkSwitchStackRoutingStaticRoute
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Switch stack ID
        in: path
        name: switchStackId
        required: true
        schema:
          type: string
      - description: Static route ID
        in: path
        name: staticRouteId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Successful operation
      summary: Delete a layer 3 static route for a switch stack
      tags:
      - switch
      - configure
      - stacks
      - routing
      - staticRoutes
    get:
      description: Return a layer 3 static route for a switch stack
      operationId: getNetworkSwitchStackRoutingStaticRoute
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Switch stack ID
        in: path
        name: switchStackId
        required: true
        schema:
          type: string
      - description: Static route ID
        in: path
        name: staticRouteId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                staticRouteId: "1234"
                name: My route
                subnet: 192.168.1.0/24
                nextHopIp: 1.2.3.4
                advertiseViaOspfEnabled: false
                preferOverOspfRoutesEnabled: false
              schema:
                type: object
          description: Successful operation
      summary: Return a layer 3 static route for a switch stack
      tags:
      - switch
      - configure
      - stacks
      - routing
      - staticRoutes
    put:
      description: Update a layer 3 static route for a switch stack
      operationId: updateNetworkSwitchStackRoutingStaticRoute
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Switch stack ID
        in: path
        name: switchStackId
        required: true
        schema:
          type: string
      - description: Static route ID
        in: path
        name: staticRouteId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_137'
        content:
          application/json:
            schema:
              example:
                name: My route
                subnet: 192.168.1.0/24
                nextHopIp: 1.2.3.4
                advertiseViaOspfEnabled: false
                preferOverOspfRoutesEnabled: false
              properties:
                name:
                  description: Name or description for layer 3 static route
                  type: string
                subnet:
                  description: The subnet which is routed via this static route and
                    should be specified in CIDR notation (ex. 1.2.3.0/24)
                  type: string
                nextHopIp:
                  description: IP address of the next hop device to which the device
                    sends its traffic for the subnet
                  type: string
                advertiseViaOspfEnabled:
                  description: Option to advertise static route via OSPF
                  type: boolean
                preferOverOspfRoutesEnabled:
                  description: Option to prefer static route over OSPF routes
                  type: boolean
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                staticRouteId: "1234"
                name: My route
                subnet: 192.168.1.0/24
                nextHopIp: 1.2.3.4
                advertiseViaOspfEnabled: false
                preferOverOspfRoutesEnabled: false
              schema:
                type: object
          description: Successful operation
      summary: Update a layer 3 static route for a switch stack
      tags:
      - switch
      - configure
      - stacks
      - routing
      - staticRoutes
      x-codegen-request-body-name: updateNetworkSwitchStackRoutingStaticRoute
  /networks/{networkId}/switch/stormControl:
    get:
      description: Return the storm control configuration for a switch network
      operationId: getNetworkSwitchStormControl
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                broadcastThreshold: 30
                multicastThreshold: 30
                unknownUnicastThreshold: 30
              schema:
                $ref: '#/components/schemas/inline_response_200_72'
          description: Successful operation
      summary: Return the storm control configuration for a switch network
      tags:
      - switch
      - configure
      - stormControl
    put:
      description: Update the storm control configuration for a switch network
      operationId: updateNetworkSwitchStormControl
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_138'
        content:
          application/json:
            schema:
              example:
                broadcastThreshold: 30
                multicastThreshold: 30
                unknownUnicastThreshold: 30
              properties:
                broadcastThreshold:
                  description: Percentage (1 to 99) of total available port bandwidth
                    for broadcast traffic type. Default value 100 percent rate is
                    to clear the configuration.
                  type: integer
                multicastThreshold:
                  description: Percentage (1 to 99) of total available port bandwidth
                    for multicast traffic type. Default value 100 percent rate is
                    to clear the configuration.
                  type: integer
                unknownUnicastThreshold:
                  description: Percentage (1 to 99) of total available port bandwidth
                    for unknown unicast (dlf-destination lookup failure) traffic type.
                    Default value 100 percent rate is to clear the configuration.
                  type: integer
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                broadcastThreshold: 30
                multicastThreshold: 30
                unknownUnicastThreshold: 30
              schema:
                type: object
          description: Successful operation
      summary: Update the storm control configuration for a switch network
      tags:
      - switch
      - configure
      - stormControl
      x-codegen-request-body-name: updateNetworkSwitchStormControl
  /networks/{networkId}/switch/stp:
    get:
      description: Returns STP settings
      operationId: getNetworkSwitchStp
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                rstpEnabled: true
                stpBridgePriority:
                - switches:
                  - Q234-ABCD-0001
                  - Q234-ABCD-0002
                  - Q234-ABCD-0003
                  stpPriority: 4096
                - stacks:
                  - "789102"
                  - "123456"
                  - "129102"
                  stpPriority: 28672
              schema:
                type: object
          description: Successful operation
      summary: Returns STP settings
      tags:
      - switch
      - configure
      - stp
    put:
      description: Updates STP settings
      operationId: updateNetworkSwitchStp
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_139'
        content:
          application/json:
            schema:
              example:
                rstpEnabled: true
                stpBridgePriority:
                - switches:
                  - Q234-ABCD-0001
                  - Q234-ABCD-0002
                  - Q234-ABCD-0003
                  stpPriority: 4096
                - stacks:
                  - "789102"
                  - "123456"
                  - "129102"
                  stpPriority: 28672
              properties:
                rstpEnabled:
                  description: The spanning tree protocol status in network
                  type: boolean
                stpBridgePriority:
                  description: STP bridge priority for switches/stacks or switch profiles.
                    An empty array will clear the STP bridge priority settings.
                  items:
                    $ref: '#/components/schemas/_networks__networkId__switch_stp_stpBridgePriority'
                  type: array
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                rstpEnabled: true
                stpBridgePriority:
                - switches:
                  - Q234-ABCD-0001
                  - Q234-ABCD-0002
                  - Q234-ABCD-0003
                  stpPriority: 4096
                - stacks:
                  - "789102"
                  - "123456"
                  - "129102"
                  stpPriority: 28672
              schema:
                type: object
          description: Successful operation
      summary: Updates STP settings
      tags:
      - switch
      - configure
      - stp
      x-codegen-request-body-name: updateNetworkSwitchStp
  /networks/{networkId}/syslogServers:
    get:
      description: List the syslog servers for a network
      operationId: getNetworkSyslogServers
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                servers:
                - host: 1.2.3.4
                  port: 443
                  roles:
                  - Wireless event log
                  - URLs
              schema:
                $ref: '#/components/schemas/inline_response_200_73'
          description: Successful operation
      summary: List the syslog servers for a network
      tags:
      - networks
      - configure
      - syslogServers
    put:
      description: Update the syslog servers for a network
      operationId: updateNetworkSyslogServers
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_140'
        content:
          application/json:
            schema:
              example:
                servers:
                - host: 1.2.3.4
                  port: 443
                  roles:
                  - Wireless event log
                  - URLs
              properties:
                servers:
                  description: A list of the syslog servers for this network
                  items:
                    $ref: '#/components/schemas/_networks__networkId__syslogServers_servers'
                  type: array
              required:
              - servers
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                servers:
                - host: 1.2.3.4
                  port: 443
                  roles:
                  - Wireless event log
                  - URLs
              schema:
                $ref: '#/components/schemas/inline_response_200_73'
          description: Successful operation
      summary: Update the syslog servers for a network
      tags:
      - networks
      - configure
      - syslogServers
      x-codegen-request-body-name: updateNetworkSyslogServers
  /networks/{networkId}/topology/linkLayer:
    get:
      description: List the LLDP and CDP information for all discovered devices and
        connections in a network.
      operationId: getNetworkTopologyLinkLayer
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                nodes:
                - derivedId: ccddeeffgghh
                  mac: CC:DD:EE:FF:GG:HH
                  type: discovered
                  root: true
                  discovered:
                    lldp:
                      chassisId: "12345"
                      systemName: Non-Meraki device
                      systemDescription: Router and Switch Device
                      systemCapabilities:
                      - router
                      - switch
                      managementAddress: 10.130.105.154
                    cdp: "null"
                - derivedId: "34564"
                  mac: "null"
                  type: stack
                  stack:
                    id: 98765
                    name: Corp Stack
                    members:
                    - derivedId: "4567"
                      mac: EE:FF:GG:HH:II:JJ
                      type: device
                      device:
                        serial: Q2UN-A44e-CU4L
                        name: Study Switch
                        product: switch
                        model: GS110
                        status: online
                        lastReportedAt: 2021-06-24T10:23:12z
                        clients:
                          counts:
                            total: 8
                        switch:
                          ports:
                            counts:
                              byStatus:
                                active: 11
                        uplinks:
                        - vlanId: 0
                    - derivedId: "4567"
                      mac: GG:HH:II:JJ:KK:LL
                      type: device
                      device:
                        serial: Q2UN-E55e-KO6L
                        name: Study Switch 2
                        model: GS110
                        productType: switch
                        status: online
                        lastReportedAt: 2021-06-24T10:23:12z
                        clients:
                          counts:
                            total: 8
                        switch:
                          ports:
                            counts:
                              byStatus:
                                active: 11
                        uplinks:
                        - vlanId: 0
                    clients:
                      counts:
                        total: 14
                - derivedId: aabbccddeeff
                  mac: AA:BB:CC:DD:EE:FF
                  type: device
                  device:
                    serial: Q2UN-A44e-CU4L
                    name: Living Room Gateway
                    model: GX20
                    productType: appliance
                    status: online
                    lastReportedAt: 2021-06-24T10:23:12z
                    uplinks:
                    - vlanId: 0
                      pppoe:
                        enabled: true
                links:
                - ends:
                  - node:
                      derivedId: "34564"
                      type: stack
                    device:
                      serial: Q2UN-E55e-KO6L
                      name: Study Switch 2
                    discovered:
                      lldp:
                        portId: Port 20
                        portDescription: eth0
                      cdp:
                        portId: Port 20
                        nativeVlan: 102
                  - node:
                      derivedId: ccddeeffgghh
                      type: discovered
                    discovered:
                      lldp:
                        portId: 0010.7fdb.51f7
                        portDescription: eth1
                      cdp: "null"
                  lastReportedAt: 2021-06-25T14:56:27z
              schema:
                type: object
          description: Successful operation
      summary: List the LLDP and CDP information for all discovered devices and connections
        in a network.
      tags:
      - networks
      - monitor
      - topology
      - linkLayer
  /networks/{networkId}/traffic:
    get:
      description: Return the traffic analysis data for this network. Traffic analysis
        with hostname visibility must be enabled on the network.
      operationId: getNetworkTraffic
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: The beginning of the timespan for the data. The maximum lookback
          period is 30 days from today.
        in: query
        name: t0
        schema:
          type: string
      - description: The timespan for which the information will be fetched. If specifying
          timespan, do not specify parameter t0. The value must be in seconds and
          be less than or equal to 30 days.
        in: query
        name: timespan
        schema:
          format: float
          type: number
      - description: 'Filter the data by device type: ''combined'', ''wireless'',
          ''switch'' or ''appliance''. Defaults to ''combined''. When using ''combined'',
          for each rule the data will come from the device type with the most usage.'
        in: query
        name: deviceType
        schema:
          enum:
          - appliance
          - combined
          - switch
          - wireless
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - application: Gmail
                protocol: TCP
                port: 443
                sent: 138.0
                recv: 61.0
                numClients: 7
                activeTime: 77000
                flows: 300
              schema:
                items:
                  properties: {}
                  type: object
                type: array
          description: Successful operation
      summary: Return the traffic analysis data for this network
      tags:
      - networks
      - monitor
      - traffic
  /networks/{networkId}/trafficAnalysis:
    get:
      description: Return the traffic analysis settings for a network
      operationId: getNetworkTrafficAnalysis
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                mode: detailed
                customPieChartItems:
                - name: Item from hostname
                  type: host
                  value: example.com
                - name: Item from port
                  type: port
                  value: "440"
                - name: Item from IP
                  type: ipRange
                  value: 192.1.0.0
                - name: Item from IP range (CIDR)
                  type: ipRange
                  value: 192.2.0.0/16
                - name: Item from IP range with port
                  type: ipRange
                  value: 192.3.0.0/16:80
              schema:
                type: object
          description: Successful operation
      summary: Return the traffic analysis settings for a network
      tags:
      - networks
      - configure
      - trafficAnalysis
    put:
      description: Update the traffic analysis settings for a network
      operationId: updateNetworkTrafficAnalysis
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_141'
        content:
          application/json:
            schema:
              example:
                mode: detailed
                customPieChartItems:
                - name: Item from hostname
                  type: host
                  value: example.com
                - name: Item from port
                  type: port
                  value: "440"
                - name: Item from IP
                  type: ipRange
                  value: 192.1.0.0
                - name: Item from IP range (CIDR)
                  type: ipRange
                  value: 192.2.0.0/16
                - name: Item from IP range with port
                  type: ipRange
                  value: 192.3.0.0/16:80
              properties:
                mode:
                  description: |2
                        The traffic analysis mode for the network. Can be one of 'disabled' (do not collect traffic types),
                        'basic' (collect generic traffic categories), or 'detailed' (collect destination hostnames).
                  enum:
                  - basic
                  - detailed
                  - disabled
                  type: string
                customPieChartItems:
                  description: The list of items that make up the custom pie chart
                    for traffic reporting.
                  items:
                    $ref: '#/components/schemas/_networks__networkId__trafficAnalysis_customPieChartItems'
                  type: array
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                mode: detailed
                customPieChartItems:
                - name: Item from hostname
                  type: host
                  value: example.com
                - name: Item from port
                  type: port
                  value: "440"
                - name: Item from IP
                  type: ipRange
                  value: 192.1.0.0
                - name: Item from IP range (CIDR)
                  type: ipRange
                  value: 192.2.0.0/16
                - name: Item from IP range with port
                  type: ipRange
                  value: 192.3.0.0/16:80
              schema:
                type: object
          description: Successful operation
      summary: Update the traffic analysis settings for a network
      tags:
      - networks
      - configure
      - trafficAnalysis
      x-codegen-request-body-name: updateNetworkTrafficAnalysis
  /networks/{networkId}/trafficShaping/applicationCategories:
    get:
      description: Returns the application categories for traffic shaping rules.
      operationId: getNetworkTrafficShapingApplicationCategories
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                applicationCategories:
                - id: meraki:layer7/category/24
                  name: Advertising
                  applications:
                  - id: meraki:layer7/application/5
                    name: Advertising.com
                  - id: meraki:layer7/application/0
                    name: AppNexus
                  - id: meraki:layer7/application/1
                    name: Brightroll
              schema:
                type: object
          description: Successful operation
      summary: Returns the application categories for traffic shaping rules.
      tags:
      - networks
      - configure
      - trafficShaping
      - applicationCategories
  /networks/{networkId}/trafficShaping/dscpTaggingOptions:
    get:
      description: Returns the available DSCP tagging options for your traffic shaping
        rules.
      operationId: getNetworkTrafficShapingDscpTaggingOptions
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - dscpTagValue: 10
                description: AF11 - High Throughput, Latency Insensitive, Low Drop
              - dscpTagValue: 12
                description: AF12 - High Throughput, Latency Insensitive, Medium Drop
              - dscpTagValue: 14
                description: AF13 - High Throughput, Latency Insensitive, High Drop
              - dscpTagValue: 18
                description: AF21 - Low Latency Data, Low Drop
              schema:
                items:
                  properties: {}
                  type: object
                type: array
          description: Successful operation
      summary: Returns the available DSCP tagging options for your traffic shaping
        rules.
      tags:
      - networks
      - configure
      - trafficShaping
      - dscpTaggingOptions
  /networks/{networkId}/unbind:
    post:
      description: Unbind a network from a template.
      operationId: unbindNetwork
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_142'
        content:
          application/json:
            schema:
              example:
                retainConfigs: true
              properties:
                retainConfigs:
                  description: Optional boolean to retain all the current configs
                    given by the template.
                  type: boolean
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                id: N_24329156
                organizationId: "2930418"
                name: Main Office
                productTypes:
                - appliance
                - switch
                - wireless
                timeZone: America/Los_Angeles
                tags:
                - tag1
                - tag2
                enrollmentString: my-enrollment-string
                url: https://n1.meraki.com//n//manage/nodes/list
                notes: Additional description of the network
                isBoundToConfigTemplate: false
              schema:
                $ref: '#/components/schemas/inline_response_200_11'
          description: Successful operation
      summary: Unbind a network from a template.
      tags:
      - networks
      - configure
      x-codegen-request-body-name: unbindNetwork
  /networks/{networkId}/webhooks/httpServers:
    get:
      description: List the HTTP servers for a network
      operationId: getNetworkWebhooksHttpServers
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - id: aHR0cHM6Ly93d3cuZXhhbXBsZS5jb20vbXlfY3VzdG9tX3dlYmhvb2s=
                name: Example Webhook Server
                url: https://www.example.com/my_custom_webhook
                networkId: N_12345678
                payloadTemplate:
                  payloadTemplateId: wpt_00001
                  name: Meraki (included)
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_74'
                type: array
          description: Successful operation
      summary: List the HTTP servers for a network
      tags:
      - networks
      - configure
      - webhooks
      - httpServers
    post:
      description: Add an HTTP server to a network
      operationId: createNetworkWebhooksHttpServer
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_143'
        content:
          application/json:
            schema:
              example:
                name: Example Webhook Server
                url: https://example.com
                sharedSecret: shhh
                payloadTemplate:
                  payloadTemplateId: wpt_00001
                  name: Meraki (included)
              properties:
                name:
                  description: A name for easy reference to the HTTP server
                  type: string
                url:
                  description: The URL of the HTTP server. Once set, cannot be updated.
                  type: string
                sharedSecret:
                  description: A shared secret that will be included in POSTs sent
                    to the HTTP server. This secret can be used to verify that the
                    request was sent by Meraki.
                  type: string
                payloadTemplate:
                  $ref: '#/components/schemas/_networks__networkId__webhooks_httpServers_payloadTemplate_1'
              required:
              - name
              - url
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                id: aHR0cHM6Ly93d3cuZXhhbXBsZS5jb20vbXlfY3VzdG9tX3dlYmhvb2s=
                name: Example Webhook Server
                url: https://www.example.com/my_custom_webhook
                networkId: N_12345678
                payloadTemplate:
                  payloadTemplateId: wpt_00001
                  name: Meraki (included)
              schema:
                $ref: '#/components/schemas/inline_response_200_74'
          description: Successful operation
      summary: Add an HTTP server to a network
      tags:
      - networks
      - configure
      - webhooks
      - httpServers
      x-codegen-request-body-name: createNetworkWebhooksHttpServer
  /networks/{networkId}/webhooks/httpServers/{httpServerId}:
    delete:
      description: Delete an HTTP server from a network
      operationId: deleteNetworkWebhooksHttpServer
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Http server ID
        in: path
        name: httpServerId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Successful operation
      summary: Delete an HTTP server from a network
      tags:
      - networks
      - configure
      - webhooks
      - httpServers
    get:
      description: Return an HTTP server for a network
      operationId: getNetworkWebhooksHttpServer
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Http server ID
        in: path
        name: httpServerId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                id: aHR0cHM6Ly93d3cuZXhhbXBsZS5jb20vbXlfY3VzdG9tX3dlYmhvb2s=
                name: Example Webhook Server
                url: https://www.example.com/my_custom_webhook
                networkId: N_12345678
                payloadTemplate:
                  payloadTemplateId: wpt_00001
                  name: Meraki (included)
              schema:
                $ref: '#/components/schemas/inline_response_200_74'
          description: Successful operation
      summary: Return an HTTP server for a network
      tags:
      - networks
      - configure
      - webhooks
      - httpServers
    put:
      description: Update an HTTP server. To change a URL, create a new HTTP server.
      operationId: updateNetworkWebhooksHttpServer
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Http server ID
        in: path
        name: httpServerId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_144'
        content:
          application/json:
            schema:
              example:
                name: Example Webhook Server
                sharedSecret: shhh
                payloadTemplate:
                  payloadTemplateId: wpt_00001
              properties:
                name:
                  description: A name for easy reference to the HTTP server
                  type: string
                sharedSecret:
                  description: A shared secret that will be included in POSTs sent
                    to the HTTP server. This secret can be used to verify that the
                    request was sent by Meraki.
                  type: string
                payloadTemplate:
                  $ref: '#/components/schemas/_networks__networkId__webhooks_httpServers__httpServerId__payloadTemplate'
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                id: aHR0cHM6Ly93d3cuZXhhbXBsZS5jb20vbXlfY3VzdG9tX3dlYmhvb2s=
                name: Example Webhook Server
                url: https://www.example.com/my_custom_webhook
                networkId: N_12345678
                payloadTemplate:
                  payloadTemplateId: wpt_00001
                  name: Meraki (included)
              schema:
                $ref: '#/components/schemas/inline_response_200_74'
          description: Successful operation
      summary: Update an HTTP server
      tags:
      - networks
      - configure
      - webhooks
      - httpServers
      x-codegen-request-body-name: updateNetworkWebhooksHttpServer
  /networks/{networkId}/webhooks/payloadTemplates:
    get:
      description: List the webhook payload templates for a network
      operationId: getNetworkWebhooksPayloadTemplates
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - payloadTemplateId: wpt_343
                type: custom
                name: Custom Template
                headers:
                - name: Authorization
                  template: Bearer {{sharedSecret}}
                body: '{"event_type":"{{alertTypeId}}","client_payload":{"text":"{{alertData}}"}}'
                sharing:
                  byNetwork:
                    adminsCanModify: false
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_75'
                type: array
          description: Successful operation
      summary: List the webhook payload templates for a network
      tags:
      - networks
      - configure
      - webhooks
      - payloadTemplates
    post:
      description: Create a webhook payload template for a network
      operationId: createNetworkWebhooksPayloadTemplate
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_145'
        content:
          application/json:
            schema:
              example:
                name: Custom Template
                body: '{"event_type":"{{alertTypeId}}","client_payload":{"text":"{{alertData}}"}}'
                headers:
                - name: Authorization
                  template: Bearer {{sharedSecret}}
                bodyFile: Qm9keSBGaWxl
                headersFile: SGVhZGVycyBGaWxl
              properties:
                name:
                  description: The name of the new template
                  type: string
                body:
                  description: The liquid template used for the body of the webhook
                    message. Either `body` or `bodyFile` must be specified.
                  type: string
                headers:
                  description: The liquid template used with the webhook headers.
                  items:
                    $ref: '#/components/schemas/_networks__networkId__webhooks_payloadTemplates_headers_1'
                  type: array
                bodyFile:
                  description: A file containing liquid template used for the body
                    of the webhook message. Either `body` or `bodyFile` must be specified.
                  format: byte
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                headersFile:
                  description: A file containing the liquid template used with the
                    webhook headers.
                  format: byte
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
              required:
              - name
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                payloadTemplateId: wpt_343
                type: custom
                name: Custom Template
                headers:
                - name: Authorization
                  template: Bearer {{sharedSecret}}
                body: '{"event_type":"{{alertTypeId}}","client_payload":{"text":"{{alertData}}"}}'
                sharing:
                  byNetwork:
                    adminsCanModify: false
              schema:
                $ref: '#/components/schemas/inline_response_200_75'
          description: Successful operation
      summary: Create a webhook payload template for a network
      tags:
      - networks
      - configure
      - webhooks
      - payloadTemplates
      x-codegen-request-body-name: createNetworkWebhooksPayloadTemplate
  /networks/{networkId}/webhooks/payloadTemplates/{payloadTemplateId}:
    delete:
      description: Destroy a webhook payload template for a network. Does not work
        for included templates ('wpt_00001', 'wpt_00002', 'wpt_00003', 'wpt_00004',
        'wpt_00005' or 'wpt_00006')
      operationId: deleteNetworkWebhooksPayloadTemplate
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Payload template ID
        in: path
        name: payloadTemplateId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Successful operation
      summary: Destroy a webhook payload template for a network
      tags:
      - networks
      - configure
      - webhooks
      - payloadTemplates
    get:
      description: Get the webhook payload template for a network
      operationId: getNetworkWebhooksPayloadTemplate
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Payload template ID
        in: path
        name: payloadTemplateId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                payloadTemplateId: wpt_343
                type: custom
                name: Custom Template
                headers:
                - name: Authorization
                  template: Bearer {{sharedSecret}}
                body: '{"event_type":"{{alertTypeId}}","client_payload":{"text":"{{alertData}}"}}'
                sharing:
                  byNetwork:
                    adminsCanModify: false
              schema:
                $ref: '#/components/schemas/inline_response_200_75'
          description: Successful operation
      summary: Get the webhook payload template for a network
      tags:
      - networks
      - configure
      - webhooks
      - payloadTemplates
    put:
      description: Update a webhook payload template for a network
      operationId: updateNetworkWebhooksPayloadTemplate
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Payload template ID
        in: path
        name: payloadTemplateId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_146'
        content:
          application/json:
            schema:
              example:
                name: Custom Template
                body: '{"event_type":"{{alertTypeId}}","client_payload":{"text":"{{alertData}}"}}'
                headers:
                - name: Authorization
                  template: Bearer {{sharedSecret}}
                bodyFile: Qm9keSBGaWxl
                headersFile: SGVhZGVycyBGaWxl
              properties:
                name:
                  description: The name of the template
                  type: string
                body:
                  description: The liquid template used for the body of the webhook
                    message.
                  type: string
                headers:
                  description: The liquid template used with the webhook headers.
                  items:
                    $ref: '#/components/schemas/_networks__networkId__webhooks_payloadTemplates_headers_1'
                  type: array
                bodyFile:
                  description: A file containing liquid template used for the body
                    of the webhook message.
                  format: byte
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                headersFile:
                  description: A file containing the liquid template used with the
                    webhook headers.
                  format: byte
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                payloadTemplateId: wpt_343
                type: custom
                name: Custom Template
                headers:
                - name: Authorization
                  template: Bearer {{sharedSecret}}
                body: '{"event_type":"{{alertTypeId}}","client_payload":{"text":"{{alertData}}"}}'
                sharing:
                  byNetwork:
                    adminsCanModify: false
              schema:
                $ref: '#/components/schemas/inline_response_200_75'
          description: Successful operation
      summary: Update a webhook payload template for a network
      tags:
      - networks
      - configure
      - webhooks
      - payloadTemplates
      x-codegen-request-body-name: updateNetworkWebhooksPayloadTemplate
  /networks/{networkId}/webhooks/webhookTests:
    post:
      description: Send a test webhook for a network
      operationId: createNetworkWebhooksWebhookTest
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_147'
        content:
          application/json:
            schema:
              example:
                url: https://www.example.com/path
                sharedSecret: shhh
                payloadTemplateId: wpt_00001
                payloadTemplateName: Payload Template
                alertTypeId: power_supply_down
              properties:
                url:
                  description: The URL where the test webhook will be sent
                  type: string
                sharedSecret:
                  default: ""
                  description: The shared secret the test webhook will send. Optional.
                    Defaults to an empty string.
                  type: string
                payloadTemplateId:
                  description: The ID of the payload template of the test webhook.
                    Defaults to the HTTP server's template ID if one exists for the
                    given URL, or Generic template ID otherwise
                  type: string
                payloadTemplateName:
                  description: The name of the payload template.
                  type: string
                alertTypeId:
                  default: power_supply_down
                  description: The type of alert which the test webhook will send.
                    Optional. Defaults to power_supply_down.
                  type: string
              required:
              - url
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                id: "1234"
                url: https://www.example.com/path
                status: enqueued
              schema:
                $ref: '#/components/schemas/inline_response_201_3'
          description: Successful operation
      summary: Send a test webhook for a network
      tags:
      - networks
      - configure
      - webhooks
      - webhookTests
      x-codegen-request-body-name: createNetworkWebhooksWebhookTest
  /networks/{networkId}/webhooks/webhookTests/{webhookTestId}:
    get:
      description: Return the status of a webhook test for a network
      operationId: getNetworkWebhooksWebhookTest
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Webhook test ID
        in: path
        name: webhookTestId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                id: "1234"
                url: https://www.example.com/path
                status: enqueued
              schema:
                $ref: '#/components/schemas/inline_response_201_3'
          description: Successful operation
      summary: Return the status of a webhook test for a network
      tags:
      - networks
      - configure
      - webhooks
      - webhookTests
  /networks/{networkId}/wireless/airMarshal:
    get:
      description: List Air Marshal scan results from a network
      operationId: getNetworkWirelessAirMarshal
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: The beginning of the timespan for the data. The maximum lookback
          period is 31 days from today.
        in: query
        name: t0
        schema:
          type: string
      - description: The timespan for which the information will be fetched. If specifying
          timespan, do not specify parameter t0. The value must be in seconds and
          be less than or equal to 31 days. The default is 7 days.
        in: query
        name: timespan
        schema:
          format: float
          type: number
      responses:
        "200":
          content:
            application/json:
              example:
              - ssid: linksys
                bssids:
                - bssid: 00:11:22:33:44:55
                  contained: false
                  detectedBy:
                  - device: Q234-ABCD-5678
                    rssi: 17
                channels:
                - 36
                - 40
                firstSeen: 1518365681
                lastSeen: 1526087474
                wiredMacs:
                - 00:11:22:33:44:55
                wiredVlans:
                - 0
                - 108
                wiredLastSeen: 1526087474
              schema:
                items:
                  properties: {}
                  type: object
                type: array
          description: Successful operation
      summary: List Air Marshal scan results from a network
      tags:
      - wireless
      - monitor
      - airMarshal
  /networks/{networkId}/wireless/alternateManagementInterface:
    get:
      description: Return alternate management interface and devices with IP assigned
      operationId: getNetworkWirelessAlternateManagementInterface
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                enabled: true
                vlanId: 100
                protocols:
                - radius
                - snmp
                - syslog
                - ldap
                accessPoints:
                - serial: Q234-ABCD-5678
                  alternateManagementIp: 1.2.3.4
                  subnetMask: 255.255.255.0
                  gateway: 1.2.3.5
                  dns1: 8.8.8.8
                  dns2: 8.8.4.4
              schema:
                type: object
          description: Successful operation
      summary: Return alternate management interface and devices with IP assigned
      tags:
      - wireless
      - configure
      - alternateManagementInterface
    put:
      description: Update alternate management interface and device static IP
      operationId: updateNetworkWirelessAlternateManagementInterface
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_148'
        content:
          application/json:
            schema:
              example:
                enabled: true
                vlanId: 100
                protocols:
                - radius
                - snmp
                - syslog
                - ldap
                accessPoints:
                - serial: Q234-ABCD-5678
                  alternateManagementIp: 1.2.3.4
                  subnetMask: 255.255.255.0
                  gateway: 1.2.3.5
                  dns1: 8.8.8.8
                  dns2: 8.8.4.4
              properties:
                enabled:
                  description: Boolean value to enable or disable alternate management
                    interface
                  type: boolean
                vlanId:
                  description: Alternate management interface VLAN, must be between
                    1 and 4094
                  type: integer
                protocols:
                  description: 'Can be one or more of the following values: ''radius'',
                    ''snmp'', ''syslog'' or ''ldap'''
                  items:
                    enum:
                    - ldap
                    - radius
                    - snmp
                    - syslog
                    type: string
                  type: array
                accessPoints:
                  description: 'Array of access point serial number and IP assignment.
                    Note: accessPoints IP assignment is not applicable for template
                    networks, in other words, do not put ''accessPoints'' in the body
                    when updating template networks. Also, an empty ''accessPoints''
                    array will remove all previous static IP assignments'
                  items:
                    $ref: '#/components/schemas/_networks__networkId__wireless_alternateManagementInterface_accessPoints'
                  type: array
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                enabled: true
                vlanId: 100
                protocols:
                - radius
                - snmp
                - syslog
                - ldap
                accessPoints:
                - serial: Q234-ABCD-5678
                  alternateManagementIp: 1.2.3.4
                  subnetMask: 255.255.255.0
                  gateway: 1.2.3.5
                  dns1: 8.8.8.8
                  dns2: 8.8.4.4
              schema:
                type: object
          description: Successful operation
      summary: Update alternate management interface and device static IP
      tags:
      - wireless
      - configure
      - alternateManagementInterface
      x-codegen-request-body-name: updateNetworkWirelessAlternateManagementInterface
  /networks/{networkId}/wireless/billing:
    get:
      description: Return the billing settings of this network
      operationId: getNetworkWirelessBilling
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                currency: USD
                plans:
                - id: "1"
                  price: 5
                  bandwidthLimits:
                    limitUp: 1000
                    limitDown: 1000
                  timeLimit: 1 hour
              schema:
                type: object
          description: Successful operation
      summary: Return the billing settings of this network
      tags:
      - wireless
      - configure
      - billing
    put:
      description: Update the billing settings
      operationId: updateNetworkWirelessBilling
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_149'
        content:
          application/json:
            schema:
              example:
                currency: USD
                plans:
                - id: "1"
                  price: 5
                  bandwidthLimits:
                    limitUp: 1000
                    limitDown: 1000
                  timeLimit: 1 hour
              properties:
                currency:
                  description: The currency code of this node group's billing plans
                  type: string
                plans:
                  description: Array of billing plans in the node group. (Can configure
                    a maximum of 5)
                  items:
                    $ref: '#/components/schemas/_networks__networkId__wireless_billing_plans'
                  type: array
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                currency: USD
                plans:
                - id: "1"
                  price: 5
                  bandwidthLimits:
                    limitUp: 1000
                    limitDown: 1000
                  timeLimit: 1 hour
              schema:
                type: object
          description: Successful operation
      summary: Update the billing settings
      tags:
      - wireless
      - configure
      - billing
      x-codegen-request-body-name: updateNetworkWirelessBilling
  /networks/{networkId}/wireless/bluetooth/settings:
    get:
      description: Return the Bluetooth settings for a network. <a href="https://documentation.meraki.com/MR/Bluetooth/Bluetooth_Low_Energy_(BLE)">Bluetooth
        settings</a> must be enabled on the network.
      operationId: getNetworkWirelessBluetoothSettings
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                scanningEnabled: true
                advertisingEnabled: true
                uuid: 00000000-0000-0000-000-000000000000
                majorMinorAssignmentMode: Non-unique
                major: 1
                minor: 1
                eslEnabled: true
              schema:
                $ref: '#/components/schemas/inline_response_200_76'
          description: Successful operation
      summary: Return the Bluetooth settings for a network. <a href="https://documentation.meraki.com/MR/Bluetooth/Bluetooth_Low_Energy_(BLE)">Bluetooth
        settings</a> must be enabled on the network.
      tags:
      - wireless
      - configure
      - bluetooth
      - settings
    put:
      description: Update the Bluetooth settings for a network. See the docs page
        for <a href="https://documentation.meraki.com/MR/Bluetooth/Bluetooth_Low_Energy_(BLE)">Bluetooth
        settings</a>.
      operationId: updateNetworkWirelessBluetoothSettings
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_150'
        content:
          application/json:
            schema:
              example:
                scanningEnabled: true
                advertisingEnabled: true
                uuid: 00000000-0000-0000-000-000000000000
                majorMinorAssignmentMode: Non-unique
                major: 1
                minor: 1
              properties:
                scanningEnabled:
                  description: Whether APs will scan for Bluetooth enabled clients.
                  type: boolean
                advertisingEnabled:
                  description: Whether APs will advertise beacons.
                  type: boolean
                uuid:
                  description: The UUID to be used in the beacon identifier.
                  type: string
                majorMinorAssignmentMode:
                  description: The way major and minor number should be assigned to
                    nodes in the network. ('Unique', 'Non-unique')
                  enum:
                  - Non-unique
                  - Unique
                  type: string
                major:
                  description: The major number to be used in the beacon identifier.
                    Only valid in 'Non-unique' mode.
                  type: integer
                minor:
                  description: The minor number to be used in the beacon identifier.
                    Only valid in 'Non-unique' mode.
                  type: integer
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                scanningEnabled: true
                advertisingEnabled: true
                uuid: 00000000-0000-0000-000-000000000000
                majorMinorAssignmentMode: Non-unique
                major: 1
                minor: 1
                eslEnabled: true
              schema:
                $ref: '#/components/schemas/inline_response_200_76'
          description: Successful operation
      summary: Update the Bluetooth settings for a network
      tags:
      - wireless
      - configure
      - bluetooth
      - settings
      x-codegen-request-body-name: updateNetworkWirelessBluetoothSettings
  /networks/{networkId}/wireless/channelUtilizationHistory:
    get:
      description: Return AP channel utilization over time for a device or network
        client
      operationId: getNetworkWirelessChannelUtilizationHistory
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: The beginning of the timespan for the data. The maximum lookback
          period is 31 days from today.
        in: query
        name: t0
        schema:
          type: string
      - description: The end of the timespan for the data. t1 can be a maximum of
          31 days after t0.
        in: query
        name: t1
        schema:
          type: string
      - description: The timespan for which the information will be fetched. If specifying
          timespan, do not specify parameters t0 and t1. The value must be in seconds
          and be less than or equal to 31 days. The default is 7 days.
        in: query
        name: timespan
        schema:
          format: float
          type: number
      - description: 'The time resolution in seconds for returned data. The valid
          resolutions are: 600, 1200, 3600, 14400, 86400. The default is 86400.'
        in: query
        name: resolution
        schema:
          type: integer
      - description: Automatically select a data resolution based on the given timespan;
          this overrides the value specified by the 'resolution' parameter. The default
          setting is false.
        in: query
        name: autoResolution
        schema:
          type: boolean
      - description: Filter results by network client to return per-device, per-band
          AP channel utilization metrics inner joined by the queried client's connection
          history.
        in: query
        name: clientId
        schema:
          type: string
      - description: Filter results by device to return AP channel utilization metrics
          for the queried device; either :band or :clientId must be jointly specified.
        in: query
        name: deviceSerial
        schema:
          type: string
      - description: Filter results by AP tag to return AP channel utilization metrics
          for devices labeled with the given tag; either :clientId or :deviceSerial
          must be jointly specified.
        in: query
        name: apTag
        schema:
          type: string
      - description: Filter results by band (either '2.4', '5' or '6').
        in: query
        name: band
        schema:
          enum:
          - "2.4"
          - "5"
          - "6"
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - startTs: 2020-01-01T00:00:00Z
                endTs: 2020-01-01T01:00:00Z
                utilizationTotal: 9.89
                utilization80211: 7.22
                utilizationNon80211: 2.67
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_77'
                type: array
          description: Successful operation
      summary: Return AP channel utilization over time for a device or network client
      tags:
      - wireless
      - monitor
      - channelUtilizationHistory
  /networks/{networkId}/wireless/clientCountHistory:
    get:
      description: Return wireless client counts over time for a network, device,
        or network client
      operationId: getNetworkWirelessClientCountHistory
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: The beginning of the timespan for the data. The maximum lookback
          period is 31 days from today.
        in: query
        name: t0
        schema:
          type: string
      - description: The end of the timespan for the data. t1 can be a maximum of
          31 days after t0.
        in: query
        name: t1
        schema:
          type: string
      - description: The timespan for which the information will be fetched. If specifying
          timespan, do not specify parameters t0 and t1. The value must be in seconds
          and be less than or equal to 31 days. The default is 7 days.
        in: query
        name: timespan
        schema:
          format: float
          type: number
      - description: 'The time resolution in seconds for returned data. The valid
          resolutions are: 300, 600, 1200, 3600, 14400, 86400. The default is 86400.'
        in: query
        name: resolution
        schema:
          type: integer
      - description: Automatically select a data resolution based on the given timespan;
          this overrides the value specified by the 'resolution' parameter. The default
          setting is false.
        in: query
        name: autoResolution
        schema:
          type: boolean
      - description: Filter results by network client to return per-device client
          counts over time inner joined by the queried client's connection history.
        in: query
        name: clientId
        schema:
          type: string
      - description: Filter results by device.
        in: query
        name: deviceSerial
        schema:
          type: string
      - description: Filter results by AP tag.
        in: query
        name: apTag
        schema:
          type: string
      - description: Filter results by band (either '2.4', '5' or '6').
        in: query
        name: band
        schema:
          enum:
          - "2.4"
          - "5"
          - "6"
          type: string
      - description: Filter results by SSID number.
        in: query
        name: ssid
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              example:
              - startTs: 2020-01-01T00:00:00Z
                endTs: 2020-01-01T01:00:00Z
                clientCount: 14
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_78'
                type: array
          description: Successful operation
      summary: Return wireless client counts over time for a network, device, or network
        client
      tags:
      - wireless
      - monitor
      - clientCountHistory
  /networks/{networkId}/wireless/clients/connectionStats:
    get:
      description: Aggregated connectivity info for this network, grouped by clients
      operationId: getNetworkWirelessClientsConnectionStats
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: The beginning of the timespan for the data. The maximum lookback
          period is 180 days from today.
        in: query
        name: t0
        schema:
          type: string
      - description: The end of the timespan for the data. t1 can be a maximum of
          7 days after t0.
        in: query
        name: t1
        schema:
          type: string
      - description: The timespan for which the information will be fetched. If specifying
          timespan, do not specify parameters t0 and t1. The value must be in seconds
          and be less than or equal to 7 days.
        in: query
        name: timespan
        schema:
          format: float
          type: number
      - description: Filter results by band (either '2.4', '5' or '6'). Note that
          data prior to February 2020 will not have band information.
        in: query
        name: band
        schema:
          enum:
          - "2.4"
          - "5"
          - "6"
          type: string
      - description: Filter results by SSID
        in: query
        name: ssid
        schema:
          type: integer
      - description: Filter results by VLAN
        in: query
        name: vlan
        schema:
          type: integer
      - description: Filter results by AP Tag
        in: query
        name: apTag
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - mac: 00:61:71:c8:51:27
                connectionStats:
                  assoc: 0
                  auth: 4
                  dhcp: 0
                  dns: 0
                  success: 10
              - mac: 1c:4d:70:7f:5e:5e
                connectionStats:
                  assoc: 0
                  auth: 1
                  dhcp: 0
                  dns: 0
                  success: 24
              - mac: 1c:4d:70:81:8d:0a
                connectionStats:
                  assoc: 1
                  auth: 0
                  dhcp: 0
                  dns: 0
                  success: 16
              schema:
                items:
                  properties: {}
                  type: object
                type: array
          description: Successful operation
      summary: Aggregated connectivity info for this network, grouped by clients
      tags:
      - wireless
      - monitor
      - clients
      - connectionStats
  /networks/{networkId}/wireless/clients/latencyStats:
    get:
      description: Aggregated latency info for this network, grouped by clients
      operationId: getNetworkWirelessClientsLatencyStats
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: The beginning of the timespan for the data. The maximum lookback
          period is 180 days from today.
        in: query
        name: t0
        schema:
          type: string
      - description: The end of the timespan for the data. t1 can be a maximum of
          7 days after t0.
        in: query
        name: t1
        schema:
          type: string
      - description: The timespan for which the information will be fetched. If specifying
          timespan, do not specify parameters t0 and t1. The value must be in seconds
          and be less than or equal to 7 days.
        in: query
        name: timespan
        schema:
          format: float
          type: number
      - description: Filter results by band (either '2.4', '5' or '6'). Note that
          data prior to February 2020 will not have band information.
        in: query
        name: band
        schema:
          enum:
          - "2.4"
          - "5"
          - "6"
          type: string
      - description: Filter results by SSID
        in: query
        name: ssid
        schema:
          type: integer
      - description: Filter results by VLAN
        in: query
        name: vlan
        schema:
          type: integer
      - description: Filter results by AP Tag
        in: query
        name: apTag
        schema:
          type: string
      - description: 'Partial selection: If present, this call will return only the
          selected fields of ["rawDistribution", "avg"]. All fields will be returned
          by default. Selected fields must be entered as a comma separated string.'
        in: query
        name: fields
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - mac: 00:61:71:c8:51:27
                latencyStats:
                  backgroundTraffic:
                    rawDistribution:
                      "0": 1234
                      "1": 2345
                      "2": 3456
                      "4": 4567
                      "8": 5678
                      "16": 6789
                      "32": 7890
                      "64": 8901
                      "128": 9012
                      "256": 83
                      "512": 1234
                      "1024": 2345
                      "2048": 9999
                    avg: 606.52
                  bestEffortTraffic: same shape as backgroundTraffic
                  videoTraffic: same shape as backgroundTraffic
                  voiceTraffic: same shape as backgroundTraffic
              - mac: 1c:4d:70:7f:5e:5e
                latencyStats:
                  backgroundTraffic:
                    rawDistribution:
                      "0": 1234
                      "1": 2345
                      "2": 3456
                      "4": 4567
                      "8": 5678
                      "16": 6789
                      "32": 7890
                      "64": 8901
                      "128": 9012
                      "256": 83
                      "512": 1234
                      "1024": 2345
                      "2048": 9999
                    avg: 606.52
                  bestEffortTraffic: same shape as backgroundTraffic
                  videoTraffic: same shape as backgroundTraffic
                  voiceTraffic: same shape as backgroundTraffic
              - mac: 1c:4d:70:81:8d:0a
                latencyStats:
                  backgroundTraffic:
                    rawDistribution:
                      "0": 1234
                      "1": 2345
                      "2": 3456
                      "4": 4567
                      "8": 5678
                      "16": 6789
                      "32": 7890
                      "64": 8901
                      "128": 9012
                      "256": 83
                      "512": 1234
                      "1024": 2345
                      "2048": 9999
                    avg: 606.52
                  bestEffortTraffic: same shape as backgroundTraffic
                  videoTraffic: same shape as backgroundTraffic
                  voiceTraffic: same shape as backgroundTraffic
              schema:
                items:
                  properties: {}
                  type: object
                type: array
          description: Successful operation
      summary: Aggregated latency info for this network, grouped by clients
      tags:
      - wireless
      - monitor
      - clients
      - latencyStats
  /networks/{networkId}/wireless/clients/{clientId}/connectionStats:
    get:
      description: Aggregated connectivity info for a given client on this network.
        Clients are identified by their MAC.
      operationId: getNetworkWirelessClientConnectionStats
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Client ID
        in: path
        name: clientId
        required: true
        schema:
          type: string
      - description: The beginning of the timespan for the data. The maximum lookback
          period is 180 days from today.
        in: query
        name: t0
        schema:
          type: string
      - description: The end of the timespan for the data. t1 can be a maximum of
          7 days after t0.
        in: query
        name: t1
        schema:
          type: string
      - description: The timespan for which the information will be fetched. If specifying
          timespan, do not specify parameters t0 and t1. The value must be in seconds
          and be less than or equal to 7 days.
        in: query
        name: timespan
        schema:
          format: float
          type: number
      - description: Filter results by band (either '2.4', '5' or '6'). Note that
          data prior to February 2020 will not have band information.
        in: query
        name: band
        schema:
          enum:
          - "2.4"
          - "5"
          - "6"
          type: string
      - description: Filter results by SSID
        in: query
        name: ssid
        schema:
          type: integer
      - description: Filter results by VLAN
        in: query
        name: vlan
        schema:
          type: integer
      - description: Filter results by AP Tag
        in: query
        name: apTag
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                mac: 00:61:71:c8:51:27
                connectionStats:
                  assoc: 0
                  auth: 4
                  dhcp: 0
                  dns: 0
                  success: 10
              schema:
                type: object
          description: Successful operation
      summary: Aggregated connectivity info for a given client on this network
      tags:
      - wireless
      - monitor
      - clients
      - connectionStats
  /networks/{networkId}/wireless/clients/{clientId}/connectivityEvents:
    get:
      description: List the wireless connectivity events for a client within a network
        in the timespan.
      operationId: getNetworkWirelessClientConnectivityEvents
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Client ID
        in: path
        name: clientId
        required: true
        schema:
          type: string
      - description: The number of entries per page returned. Acceptable range is
          3 - 1000.
        in: query
        name: perPage
        schema:
          type: integer
      - description: A token used by the server to indicate the start of the page.
          Often this is a timestamp or an ID but it is not limited to those. This
          parameter should not be defined by client applications. The link for the
          first, last, prev, or next page in the HTTP Link header should define it.
        in: query
        name: startingAfter
        schema:
          type: string
      - description: A token used by the server to indicate the end of the page. Often
          this is a timestamp or an ID but it is not limited to those. This parameter
          should not be defined by client applications. The link for the first, last,
          prev, or next page in the HTTP Link header should define it.
        in: query
        name: endingBefore
        schema:
          type: string
      - description: The beginning of the timespan for the data. The maximum lookback
          period is 31 days from today.
        in: query
        name: t0
        schema:
          type: string
      - description: The end of the timespan for the data. t1 can be a maximum of
          31 days after t0.
        in: query
        name: t1
        schema:
          type: string
      - description: The timespan for which the information will be fetched. If specifying
          timespan, do not specify parameters t0 and t1. The value must be in seconds
          and be less than or equal to 31 days. The default is 1 day.
        in: query
        name: timespan
        schema:
          format: float
          type: number
      - description: A list of event types to include. If not specified, events of
          all types will be returned. Valid types are 'assoc', 'disassoc', 'auth',
          'deauth', 'dns', 'dhcp', 'roam', 'connection' and/or 'sticky'.
        explode: false
        in: query
        name: types
        schema:
          items:
            enum:
            - assoc
            - auth
            - connection
            - deauth
            - dhcp
            - disassoc
            - dns
            - roam
            - sticky
            type: string
          type: array
        style: form
      - description: A list of severities to include. If not specified, events of
          all severities will be returned. Valid severities are 'good', 'info', 'warn'
          and/or 'bad'.
        explode: false
        in: query
        name: includedSeverities
        schema:
          items:
            enum:
            - bad
            - good
            - info
            - warn
            type: string
          type: array
        style: form
      - description: Filter results by band (either '2.4', '5', '6').
        in: query
        name: band
        schema:
          enum:
          - "2.4"
          - "5"
          - "6"
          type: string
      - description: An SSID number to include. If not specified, events for all SSIDs
          will be returned.
        in: query
        name: ssidNumber
        schema:
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
          - 10
          - 11
          - 12
          - 13
          - 14
          type: integer
      - description: Filter results by an AP's serial number.
        in: query
        name: deviceSerial
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - occurredAt: 1518365681
                deviceSerial: Q234-ABCD-5678
                band: 5
                ssidNumber: 1
                type: bad
                subtype: radius
                severity: bad
                durationMs: 100.1
                channel: 44
                rssi: 80
                eventData:
                  clientIp: 10.1.2.3
              schema:
                items:
                  properties: {}
                  type: object
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative
                links used for subsequent paginated requests.
              schema:
                type: string
      summary: List the wireless connectivity events for a client within a network
        in the timespan.
      tags:
      - wireless
      - monitor
      - clients
      - connectivityEvents
  /networks/{networkId}/wireless/clients/{clientId}/latencyHistory:
    get:
      description: 'Return the latency history for a client. Clients can be identified
        by a client key or either the MAC or IP depending on whether the network uses
        Track-by-IP. The latency data is from a sample of 2% of packets and is grouped
        into 4 traffic categories: background, best effort, video, voice. Within these
        categories the sampled packet counters are bucketed by latency in milliseconds.'
      operationId: getNetworkWirelessClientLatencyHistory
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Client ID
        in: path
        name: clientId
        required: true
        schema:
          type: string
      - description: The beginning of the timespan for the data. The maximum lookback
          period is 791 days from today.
        in: query
        name: t0
        schema:
          type: string
      - description: The end of the timespan for the data. t1 can be a maximum of
          791 days after t0.
        in: query
        name: t1
        schema:
          type: string
      - description: The timespan for which the information will be fetched. If specifying
          timespan, do not specify parameters t0 and t1. The value must be in seconds
          and be less than or equal to 791 days. The default is 1 day.
        in: query
        name: timespan
        schema:
          format: float
          type: number
      - description: 'The time resolution in seconds for returned data. The valid
          resolutions are: 86400. The default is 86400.'
        in: query
        name: resolution
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              example:
              - t0: 1550534400
                t1: 1550620800
                latencyBinsByCategory:
                  backgroundTraffic:
                    "0.5": 41750
                    "1.0": 21552
                    "2.0": 59940
                    "4.0": 146622
                    "8.0": 57354
                    "16.0": 0
                    "32.0": 9954
                    "64.0": 0
                    "128.0": 0
                    "256.0": 1896
                    "512.0": 0
                    "1024.0": 0
                    "2048.0": 0
                  bestEffortTraffic:
                    "0.5": 1840899
                    "1.0": 1644506
                    "2.0": 629958
                    "4.0": 449564
                    "8.0": 2009658
                    "16.0": 1329568
                    "32.0": 282168
                    "64.0": 97573
                    "128.0": 191977
                    "256.0": 30560
                    "512.0": 26032
                    "1024.0": 4943
                    "2048.0": 12072
                  videoTraffic:
                    "0.5": 0
                    "1.0": 0
                    "2.0": 0
                    "4.0": 0
                    "8.0": 0
                    "16.0": 0
                    "32.0": 0
                    "64.0": 0
                    "128.0": 0
                    "256.0": 0
                    "512.0": 0
                    "1024.0": 0
                    "2048.0": 0
                  voiceTraffic:
                    "0.5": 716
                    "1.0": 948
                    "2.0": 474
                    "4.0": 78
                    "8.0": 0
                    "16.0": 0
                    "32.0": 0
                    "64.0": 0
                    "128.0": 0
                    "256.0": 0
                    "512.0": 0
                    "1024.0": 0
                    "2048.0": 0
              schema:
                items:
                  properties: {}
                  type: object
                type: array
          description: Successful operation
      summary: Return the latency history for a client
      tags:
      - wireless
      - monitor
      - clients
      - latencyHistory
  /networks/{networkId}/wireless/clients/{clientId}/latencyStats:
    get:
      description: Aggregated latency info for a given client on this network. Clients
        are identified by their MAC.
      operationId: getNetworkWirelessClientLatencyStats
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Client ID
        in: path
        name: clientId
        required: true
        schema:
          type: string
      - description: The beginning of the timespan for the data. The maximum lookback
          period is 180 days from today.
        in: query
        name: t0
        schema:
          type: string
      - description: The end of the timespan for the data. t1 can be a maximum of
          7 days after t0.
        in: query
        name: t1
        schema:
          type: string
      - description: The timespan for which the information will be fetched. If specifying
          timespan, do not specify parameters t0 and t1. The value must be in seconds
          and be less than or equal to 7 days.
        in: query
        name: timespan
        schema:
          format: float
          type: number
      - description: Filter results by band (either '2.4', '5' or '6'). Note that
          data prior to February 2020 will not have band information.
        in: query
        name: band
        schema:
          enum:
          - "2.4"
          - "5"
          - "6"
          type: string
      - description: Filter results by SSID
        in: query
        name: ssid
        schema:
          type: integer
      - description: Filter results by VLAN
        in: query
        name: vlan
        schema:
          type: integer
      - description: Filter results by AP Tag
        in: query
        name: apTag
        schema:
          type: string
      - description: 'Partial selection: If present, this call will return only the
          selected fields of ["rawDistribution", "avg"]. All fields will be returned
          by default. Selected fields must be entered as a comma separated string.'
        in: query
        name: fields
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                mac: 00:61:71:c8:51:27
                latencyStats:
                  backgroundTraffic:
                    rawDistribution:
                      "0": 1234
                      "1": 2345
                      "2": 3456
                      "4": 4567
                      "8": 5678
                      "16": 6789
                      "32": 7890
                      "64": 8901
                      "128": 9012
                      "256": 83
                      "512": 1234
                      "1024": 2345
                      "2048": 9999
                    avg: 606.52
                  bestEffortTraffic: same shape as backgroundTraffic
                  videoTraffic: same shape as backgroundTraffic
                  voiceTraffic: same shape as backgroundTraffic
              schema:
                type: object
          description: Successful operation
      summary: Aggregated latency info for a given client on this network
      tags:
      - wireless
      - monitor
      - clients
      - latencyStats
  /networks/{networkId}/wireless/connectionStats:
    get:
      description: Aggregated connectivity info for this network
      operationId: getNetworkWirelessConnectionStats
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: The beginning of the timespan for the data. The maximum lookback
          period is 180 days from today.
        in: query
        name: t0
        schema:
          type: string
      - description: The end of the timespan for the data. t1 can be a maximum of
          7 days after t0.
        in: query
        name: t1
        schema:
          type: string
      - description: The timespan for which the information will be fetched. If specifying
          timespan, do not specify parameters t0 and t1. The value must be in seconds
          and be less than or equal to 7 days.
        in: query
        name: timespan
        schema:
          format: float
          type: number
      - description: Filter results by band (either '2.4', '5' or '6'). Note that
          data prior to February 2020 will not have band information.
        in: query
        name: band
        schema:
          enum:
          - "2.4"
          - "5"
          - "6"
          type: string
      - description: Filter results by SSID
        in: query
        name: ssid
        schema:
          type: integer
      - description: Filter results by VLAN
        in: query
        name: vlan
        schema:
          type: integer
      - description: Filter results by AP Tag
        in: query
        name: apTag
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                assoc: 1
                auth: 5
                dhcp: 0
                dns: 0
                success: 51
              schema:
                $ref: '#/components/schemas/inline_response_200_79'
          description: Successful operation
      summary: Aggregated connectivity info for this network
      tags:
      - wireless
      - monitor
      - connectionStats
  /networks/{networkId}/wireless/dataRateHistory:
    get:
      description: Return PHY data rates over time for a network, device, or network
        client
      operationId: getNetworkWirelessDataRateHistory
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: The beginning of the timespan for the data. The maximum lookback
          period is 31 days from today.
        in: query
        name: t0
        schema:
          type: string
      - description: The end of the timespan for the data. t1 can be a maximum of
          31 days after t0.
        in: query
        name: t1
        schema:
          type: string
      - description: The timespan for which the information will be fetched. If specifying
          timespan, do not specify parameters t0 and t1. The value must be in seconds
          and be less than or equal to 31 days. The default is 7 days.
        in: query
        name: timespan
        schema:
          format: float
          type: number
      - description: 'The time resolution in seconds for returned data. The valid
          resolutions are: 300, 600, 1200, 3600, 14400, 86400. The default is 86400.'
        in: query
        name: resolution
        schema:
          type: integer
      - description: Automatically select a data resolution based on the given timespan;
          this overrides the value specified by the 'resolution' parameter. The default
          setting is false.
        in: query
        name: autoResolution
        schema:
          type: boolean
      - description: Filter results by network client.
        in: query
        name: clientId
        schema:
          type: string
      - description: Filter results by device.
        in: query
        name: deviceSerial
        schema:
          type: string
      - description: Filter results by AP tag.
        in: query
        name: apTag
        schema:
          type: string
      - description: Filter results by band (either '2.4', '5' or '6').
        in: query
        name: band
        schema:
          enum:
          - "2.4"
          - "5"
          - "6"
          type: string
      - description: Filter results by SSID number.
        in: query
        name: ssid
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              example:
              - startTs: 2020-01-01T00:00:00Z
                endTs: 2020-01-01T01:00:00Z
                averageKbps: 151806
                downloadKbps: 144839
                uploadKbps: 158837
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_80'
                type: array
          description: Successful operation
      summary: Return PHY data rates over time for a network, device, or network client
      tags:
      - wireless
      - monitor
      - dataRateHistory
  /networks/{networkId}/wireless/devices/connectionStats:
    get:
      description: Aggregated connectivity info for this network, grouped by node
      operationId: getNetworkWirelessDevicesConnectionStats
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: The beginning of the timespan for the data. The maximum lookback
          period is 180 days from today.
        in: query
        name: t0
        schema:
          type: string
      - description: The end of the timespan for the data. t1 can be a maximum of
          7 days after t0.
        in: query
        name: t1
        schema:
          type: string
      - description: The timespan for which the information will be fetched. If specifying
          timespan, do not specify parameters t0 and t1. The value must be in seconds
          and be less than or equal to 7 days.
        in: query
        name: timespan
        schema:
          format: float
          type: number
      - description: Filter results by band (either '2.4', '5' or '6'). Note that
          data prior to February 2020 will not have band information.
        in: query
        name: band
        schema:
          enum:
          - "2.4"
          - "5"
          - "6"
          type: string
      - description: Filter results by SSID
        in: query
        name: ssid
        schema:
          type: integer
      - description: Filter results by VLAN
        in: query
        name: vlan
        schema:
          type: integer
      - description: Filter results by AP Tag
        in: query
        name: apTag
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - serial: Q234-ABCD-5678
                connectionStats:
                  assoc: 0
                  auth: 1
                  dhcp: 0
                  dns: 0
                  success: 43
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_10'
                type: array
          description: Successful operation
      summary: Aggregated connectivity info for this network, grouped by node
      tags:
      - wireless
      - monitor
      - devices
      - connectionStats
  /networks/{networkId}/wireless/devices/latencyStats:
    get:
      description: Aggregated latency info for this network, grouped by node
      operationId: getNetworkWirelessDevicesLatencyStats
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: The beginning of the timespan for the data. The maximum lookback
          period is 180 days from today.
        in: query
        name: t0
        schema:
          type: string
      - description: The end of the timespan for the data. t1 can be a maximum of
          7 days after t0.
        in: query
        name: t1
        schema:
          type: string
      - description: The timespan for which the information will be fetched. If specifying
          timespan, do not specify parameters t0 and t1. The value must be in seconds
          and be less than or equal to 7 days.
        in: query
        name: timespan
        schema:
          format: float
          type: number
      - description: Filter results by band (either '2.4', '5' or '6'). Note that
          data prior to February 2020 will not have band information.
        in: query
        name: band
        schema:
          enum:
          - "2.4"
          - "5"
          - "6"
          type: string
      - description: Filter results by SSID
        in: query
        name: ssid
        schema:
          type: integer
      - description: Filter results by VLAN
        in: query
        name: vlan
        schema:
          type: integer
      - description: Filter results by AP Tag
        in: query
        name: apTag
        schema:
          type: string
      - description: 'Partial selection: If present, this call will return only the
          selected fields of ["rawDistribution", "avg"]. All fields will be returned
          by default. Selected fields must be entered as a comma separated string.'
        in: query
        name: fields
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - serial: Q2JC-2MJM-FHRD
                latencyStats:
                  backgroundTraffic:
                    rawDistribution:
                      "0": 1234
                      "1": 2345
                      "2": 3456
                      "4": 4567
                      "8": 5678
                      "16": 6789
                      "32": 7890
                      "64": 8901
                      "128": 9012
                      "256": 83
                      "512": 1234
                      "1024": 2345
                      "2048": 9999
                    avg: 606.52
                  bestEffortTraffic: same shape as backgroundTraffic
                  videoTraffic: same shape as backgroundTraffic
                  voiceTraffic: same shape as backgroundTraffic
              - serial: Q2FJ-3SHB-Y2K2
                latencyStats:
                  backgroundTraffic:
                    rawDistribution:
                      "0": 1234
                      "1": 2345
                      "2": 3456
                      "4": 4567
                      "8": 5678
                      "16": 6789
                      "32": 7890
                      "64": 8901
                      "128": 9012
                      "256": 83
                      "512": 1234
                      "1024": 2345
                      "2048": 9999
                    avg: 606.52
                  bestEffortTraffic: same shape as backgroundTraffic
                  videoTraffic: same shape as backgroundTraffic
                  voiceTraffic: same shape as backgroundTraffic
              schema:
                items:
                  properties: {}
                  type: object
                type: array
          description: Successful operation
      summary: Aggregated latency info for this network, grouped by node
      tags:
      - wireless
      - monitor
      - devices
      - latencyStats
  /networks/{networkId}/wireless/failedConnections:
    get:
      description: List of all failed client connection events on this network in
        a given time range
      operationId: getNetworkWirelessFailedConnections
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: The beginning of the timespan for the data. The maximum lookback
          period is 180 days from today.
        in: query
        name: t0
        schema:
          type: string
      - description: The end of the timespan for the data. t1 can be a maximum of
          7 days after t0.
        in: query
        name: t1
        schema:
          type: string
      - description: The timespan for which the information will be fetched. If specifying
          timespan, do not specify parameters t0 and t1. The value must be in seconds
          and be less than or equal to 7 days.
        in: query
        name: timespan
        schema:
          format: float
          type: number
      - description: Filter results by band (either '2.4', '5' or '6'). Note that
          data prior to February 2020 will not have band information.
        in: query
        name: band
        schema:
          enum:
          - "2.4"
          - "5"
          - "6"
          type: string
      - description: Filter results by SSID
        in: query
        name: ssid
        schema:
          type: integer
      - description: Filter results by VLAN
        in: query
        name: vlan
        schema:
          type: integer
      - description: Filter results by AP Tag
        in: query
        name: apTag
        schema:
          type: string
      - description: Filter by AP
        in: query
        name: serial
        schema:
          type: string
      - description: Filter by client MAC
        in: query
        name: clientId
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - ssidNumber: 1
                vlan: 100
                clientMac: 22:33:44:55:66:77
                serial: Q234-ABCD-5678
                failureStep: dns
                type: 802.1X auth fail
                ts: 2018-02-11T00:00:00.090210Z
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_81'
                type: array
          description: Successful operation
      summary: List of all failed client connection events on this network in a given
        time range
      tags:
      - wireless
      - monitor
      - failedConnections
  /networks/{networkId}/wireless/latencyHistory:
    get:
      description: Return average wireless latency over time for a network, device,
        or network client
      operationId: getNetworkWirelessLatencyHistory
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: The beginning of the timespan for the data. The maximum lookback
          period is 31 days from today.
        in: query
        name: t0
        schema:
          type: string
      - description: The end of the timespan for the data. t1 can be a maximum of
          31 days after t0.
        in: query
        name: t1
        schema:
          type: string
      - description: The timespan for which the information will be fetched. If specifying
          timespan, do not specify parameters t0 and t1. The value must be in seconds
          and be less than or equal to 31 days. The default is 7 days.
        in: query
        name: timespan
        schema:
          format: float
          type: number
      - description: 'The time resolution in seconds for returned data. The valid
          resolutions are: 300, 600, 1200, 3600, 14400, 86400. The default is 86400.'
        in: query
        name: resolution
        schema:
          type: integer
      - description: Automatically select a data resolution based on the given timespan;
          this overrides the value specified by the 'resolution' parameter. The default
          setting is false.
        in: query
        name: autoResolution
        schema:
          type: boolean
      - description: Filter results by network client.
        in: query
        name: clientId
        schema:
          type: string
      - description: Filter results by device.
        in: query
        name: deviceSerial
        schema:
          type: string
      - description: Filter results by AP tag.
        in: query
        name: apTag
        schema:
          type: string
      - description: Filter results by band (either '2.4', '5' or '6').
        in: query
        name: band
        schema:
          enum:
          - "2.4"
          - "5"
          - "6"
          type: string
      - description: Filter results by SSID number.
        in: query
        name: ssid
        schema:
          type: integer
      - description: Filter by access category.
        in: query
        name: accessCategory
        schema:
          enum:
          - backgroundTraffic
          - bestEffortTraffic
          - videoTraffic
          - voiceTraffic
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - startTs: 2020-01-01T00:00:00Z
                endTs: 2020-01-01T01:00:00Z
                avgLatencyMs: 29
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_82'
                type: array
          description: Successful operation
      summary: Return average wireless latency over time for a network, device, or
        network client
      tags:
      - wireless
      - monitor
      - latencyHistory
  /networks/{networkId}/wireless/latencyStats:
    get:
      description: Aggregated latency info for this network
      operationId: getNetworkWirelessLatencyStats
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: The beginning of the timespan for the data. The maximum lookback
          period is 180 days from today.
        in: query
        name: t0
        schema:
          type: string
      - description: The end of the timespan for the data. t1 can be a maximum of
          7 days after t0.
        in: query
        name: t1
        schema:
          type: string
      - description: The timespan for which the information will be fetched. If specifying
          timespan, do not specify parameters t0 and t1. The value must be in seconds
          and be less than or equal to 7 days.
        in: query
        name: timespan
        schema:
          format: float
          type: number
      - description: Filter results by band (either '2.4', '5' or '6'). Note that
          data prior to February 2020 will not have band information.
        in: query
        name: band
        schema:
          enum:
          - "2.4"
          - "5"
          - "6"
          type: string
      - description: Filter results by SSID
        in: query
        name: ssid
        schema:
          type: integer
      - description: Filter results by VLAN
        in: query
        name: vlan
        schema:
          type: integer
      - description: Filter results by AP Tag
        in: query
        name: apTag
        schema:
          type: string
      - description: 'Partial selection: If present, this call will return only the
          selected fields of ["rawDistribution", "avg"]. All fields will be returned
          by default. Selected fields must be entered as a comma separated string.'
        in: query
        name: fields
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                backgroundTraffic:
                  rawDistribution:
                    "0": 1234
                    "1": 2345
                    "2": 3456
                    "4": 4567
                    "8": 5678
                    "16": 6789
                    "32": 7890
                    "64": 8901
                    "128": 9012
                    "256": 83
                    "512": 1234
                    "1024": 2345
                    "2048": 9999
                  avg: 606.52
                bestEffortTraffic: same shape as backgroundTraffic
                videoTraffic: same shape as backgroundTraffic
                voiceTraffic: same shape as backgroundTraffic
              schema:
                type: object
          description: Successful operation
      summary: Aggregated latency info for this network
      tags:
      - wireless
      - monitor
      - latencyStats
  /networks/{networkId}/wireless/meshStatuses:
    get:
      description: List wireless mesh statuses for repeaters
      operationId: getNetworkWirelessMeshStatuses
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: The number of entries per page returned. Acceptable range is
          3 - 500. Default is 50.
        in: query
        name: perPage
        schema:
          type: integer
      - description: A token used by the server to indicate the start of the page.
          Often this is a timestamp or an ID but it is not limited to those. This
          parameter should not be defined by client applications. The link for the
          first, last, prev, or next page in the HTTP Link header should define it.
        in: query
        name: startingAfter
        schema:
          type: string
      - description: A token used by the server to indicate the end of the page. Often
          this is a timestamp or an ID but it is not limited to those. This parameter
          should not be defined by client applications. The link for the first, last,
          prev, or next page in the HTTP Link header should define it.
        in: query
        name: endingBefore
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                serial: Q234-ABCD-5678
                meshRoute:
                - Q234-ABCD-5678
                - QWEY-SKTD-ST01
                - QWEY-SKTD-ST02
                latestMeshPerformance:
                  mbps: 43
                  metric: 12345
                  usagePercentage: 100%
              schema:
                type: object
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative
                links used for subsequent paginated requests.
              schema:
                type: string
      summary: List wireless mesh statuses for repeaters
      tags:
      - wireless
      - monitor
      - meshStatuses
  /networks/{networkId}/wireless/rfProfiles:
    get:
      description: List the non-basic RF profiles for this network
      operationId: getNetworkWirelessRfProfiles
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: If the network is bound to a template, this parameter controls
          whether or not the non-basic RF profiles defined on the template should
          be included in the response alongside the non-basic profiles defined on
          the bound network. Defaults to false.
        in: query
        name: includeTemplateProfiles
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              example:
              - id: "1234"
                networkId: N_24329156
                name: Some Custom RF Profile
                clientBalancingEnabled: true
                minBitrateType: band
                bandSelectionType: ap
                apBandSettings:
                  bandOperationMode: dual
                  bandSteeringEnabled: true
                twoFourGhzSettings:
                  maxPower: 30
                  minPower: 5
                  minBitrate: 11
                  validAutoChannels:
                  - 1
                  - 6
                  - 11
                  axEnabled: true
                fiveGhzSettings:
                  maxPower: 30
                  minPower: 8
                  minBitrate: 12
                  validAutoChannels:
                  - 36
                  - 40
                  - 44
                  - 48
                  - 52
                  - 56
                  - 60
                  - 64
                  - 100
                  - 104
                  - 108
                  - 112
                  - 116
                  - 120
                  - 124
                  - 128
                  - 132
                  - 136
                  - 140
                  - 144
                  - 149
                  - 153
                  - 157
                  - 161
                  - 165
                  channelWidth: auto
                perSsidSettings:
                  "0":
                    name: SSID 0
                    minBitrate: 11
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                  "1":
                    name: SSID 1
                    minBitrate: 11
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                  "2":
                    name: SSID 2
                    minBitrate: 11
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                  "3":
                    name: SSID 3
                    minBitrate: 11
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                  "4":
                    name: SSID 4
                    minBitrate: 11
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                  "5":
                    name: SSID 5
                    minBitrate: 11
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                  "6":
                    name: SSID 6
                    minBitrate: 11
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                  "7":
                    name: SSID 7
                    minBitrate: 11
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                  "8":
                    name: SSID 8
                    minBitrate: 11
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                  "9":
                    name: SSID 9
                    minBitrate: 11
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                  "10":
                    name: SSID 10
                    minBitrate: 11
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                  "11":
                    name: SSID 11
                    minBitrate: 11
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                  "12":
                    name: SSID 12
                    minBitrate: 11
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                  "13":
                    name: SSID 13
                    minBitrate: 11
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                  "14":
                    name: SSID 14
                    minBitrate: 11
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                transmission:
                  enabled: true
                afcEnabled: true
              schema:
                items:
                  properties: {}
                  type: object
                type: array
          description: Successful operation
      summary: List the non-basic RF profiles for this network
      tags:
      - wireless
      - configure
      - rfProfiles
    post:
      description: Creates new RF profile for this network
      operationId: createNetworkWirelessRfProfile
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_151'
        content:
          application/json:
            schema:
              example:
                name: Main Office
                clientBalancingEnabled: true
                minBitrateType: band
                bandSelectionType: ap
                apBandSettings:
                  bandOperationMode: dual
                  bandSteeringEnabled: true
                twoFourGhzSettings:
                  maxPower: 30
                  minPower: 5
                  minBitrate: 11.0
                  validAutoChannels:
                  - 1
                  - 6
                  - 11
                  axEnabled: true
                  rxsop: -95
                fiveGhzSettings:
                  maxPower: 30
                  minPower: 8
                  minBitrate: 12
                  validAutoChannels:
                  - 36
                  - 40
                  - 44
                  - 48
                  - 52
                  - 56
                  - 60
                  - 64
                  - 100
                  - 104
                  - 108
                  - 112
                  - 116
                  - 120
                  - 124
                  - 128
                  - 132
                  - 136
                  - 140
                  - 144
                  - 149
                  - 153
                  - 157
                  - 161
                  - 165
                  channelWidth: auto
                  rxsop: -95
                transmission:
                  enabled: true
                perSsidSettings:
                  "0":
                    minBitrate: 11.0
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                  "1":
                    minBitrate: 11.0
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                  "2":
                    minBitrate: 11.0
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                  "3":
                    minBitrate: 11.0
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                  "4":
                    minBitrate: 11.0
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                  "5":
                    minBitrate: 11.0
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                  "6":
                    minBitrate: 11.0
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                  "7":
                    minBitrate: 11.0
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                  "8":
                    minBitrate: 11.0
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                  "9":
                    minBitrate: 11.0
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                  "10":
                    minBitrate: 11.0
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                  "11":
                    minBitrate: 11.0
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                  "12":
                    minBitrate: 11.0
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                  "13":
                    minBitrate: 11.0
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                  "14":
                    minBitrate: 11.0
                    bandOperationMode: dual
                    bandSteeringEnabled: true
              properties:
                name:
                  description: The name of the new profile. Must be unique. This param
                    is required on creation.
                  type: string
                clientBalancingEnabled:
                  description: Steers client to best available access point. Can be
                    either true or false. Defaults to true.
                  type: boolean
                minBitrateType:
                  description: Minimum bitrate can be set to either 'band' or 'ssid'.
                    Defaults to band.
                  enum:
                  - band
                  - ssid
                  type: string
                bandSelectionType:
                  description: Band selection can be set to either 'ssid' or 'ap'.
                    This param is required on creation.
                  enum:
                  - ap
                  - ssid
                  type: string
                apBandSettings:
                  $ref: '#/components/schemas/_networks__networkId__wireless_rfProfiles_apBandSettings'
                twoFourGhzSettings:
                  $ref: '#/components/schemas/_networks__networkId__wireless_rfProfiles_twoFourGhzSettings'
                fiveGhzSettings:
                  $ref: '#/components/schemas/_networks__networkId__wireless_rfProfiles_fiveGhzSettings'
                transmission:
                  $ref: '#/components/schemas/_networks__networkId__wireless_rfProfiles_transmission'
                perSsidSettings:
                  $ref: '#/components/schemas/_networks__networkId__wireless_rfProfiles_perSsidSettings'
              required:
              - bandSelectionType
              - name
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                id: "1234"
                networkId: N_24329156
                name: Main Office
                clientBalancingEnabled: true
                minBitrateType: band
                bandSelectionType: ap
                apBandSettings:
                  bandOperationMode: dual
                  bandSteeringEnabled: true
                twoFourGhzSettings:
                  maxPower: 30
                  minPower: 5
                  minBitrate: 11.0
                  validAutoChannels:
                  - 1
                  - 6
                  - 11
                  axEnabled: true
                  rxsop: -95
                fiveGhzSettings:
                  maxPower: 30
                  minPower: 8
                  minBitrate: 12
                  validAutoChannels:
                  - 36
                  - 40
                  - 44
                  - 48
                  - 52
                  - 56
                  - 60
                  - 64
                  - 100
                  - 104
                  - 108
                  - 112
                  - 116
                  - 120
                  - 124
                  - 128
                  - 132
                  - 136
                  - 140
                  - 144
                  - 149
                  - 153
                  - 157
                  - 161
                  - 165
                  channelWidth: auto
                  rxsop: -95
                transmission:
                  enabled: true
                perSsidSettings:
                  "0":
                    name: SSID 0
                    minBitrate: 11
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                  "1":
                    name: SSID 1
                    minBitrate: 11
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                  "2":
                    name: SSID 2
                    minBitrate: 11
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                  "3":
                    name: SSID 3
                    minBitrate: 11
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                  "4":
                    name: SSID 4
                    minBitrate: 11
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                  "5":
                    name: SSID 5
                    minBitrate: 11
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                  "6":
                    name: SSID 6
                    minBitrate: 11
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                  "7":
                    name: SSID 7
                    minBitrate: 11
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                  "8":
                    name: SSID 8
                    minBitrate: 11
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                  "9":
                    name: SSID 9
                    minBitrate: 11
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                  "10":
                    name: SSID 10
                    minBitrate: 11
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                  "11":
                    name: SSID 11
                    minBitrate: 11
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                  "12":
                    name: SSID 12
                    minBitrate: 11
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                  "13":
                    name: SSID 13
                    minBitrate: 11
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                  "14":
                    name: SSID 14
                    minBitrate: 11
                    bandOperationMode: dual
                    bandSteeringEnabled: true
              schema:
                $ref: '#/components/schemas/inline_response_201_4'
          description: Successful operation
      summary: Creates new RF profile for this network
      tags:
      - wireless
      - configure
      - rfProfiles
      x-codegen-request-body-name: createNetworkWirelessRfProfile
  /networks/{networkId}/wireless/rfProfiles/{rfProfileId}:
    delete:
      description: Delete a RF Profile
      operationId: deleteNetworkWirelessRfProfile
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Rf profile ID
        in: path
        name: rfProfileId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Successful operation
      summary: Delete a RF Profile
      tags:
      - wireless
      - configure
      - rfProfiles
    get:
      description: Return a RF profile
      operationId: getNetworkWirelessRfProfile
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Rf profile ID
        in: path
        name: rfProfileId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                id: "1234"
                networkId: N_24329156
                name: Some Custom RF Profile
                clientBalancingEnabled: true
                minBitrateType: band
                bandSelectionType: ap
                apBandSettings:
                  bandOperationMode: dual
                  bandSteeringEnabled: true
                twoFourGhzSettings:
                  maxPower: 30
                  minPower: 5
                  minBitrate: 11
                  validAutoChannels:
                  - 1
                  - 6
                  - 11
                  axEnabled: true
                fiveGhzSettings:
                  maxPower: 30
                  minPower: 8
                  minBitrate: 12
                  validAutoChannels:
                  - 36
                  - 40
                  - 44
                  - 48
                  - 52
                  - 56
                  - 60
                  - 64
                  - 100
                  - 104
                  - 108
                  - 112
                  - 116
                  - 120
                  - 124
                  - 128
                  - 132
                  - 136
                  - 140
                  - 144
                  - 149
                  - 153
                  - 157
                  - 161
                  - 165
                  channelWidth: auto
                perSsidSettings:
                  "0":
                    name: SSID 0
                    minBitrate: 11
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                  "1":
                    name: SSID 1
                    minBitrate: 11
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                  "2":
                    name: SSID 2
                    minBitrate: 11
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                  "3":
                    name: SSID 3
                    minBitrate: 11
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                  "4":
                    name: SSID 4
                    minBitrate: 11
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                  "5":
                    name: SSID 5
                    minBitrate: 11
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                  "6":
                    name: SSID 6
                    minBitrate: 11
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                  "7":
                    name: SSID 7
                    minBitrate: 11
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                  "8":
                    name: SSID 8
                    minBitrate: 11
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                  "9":
                    name: SSID 9
                    minBitrate: 11
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                  "10":
                    name: SSID 10
                    minBitrate: 11
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                  "11":
                    name: SSID 11
                    minBitrate: 11
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                  "12":
                    name: SSID 12
                    minBitrate: 11
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                  "13":
                    name: SSID 13
                    minBitrate: 11
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                  "14":
                    name: SSID 14
                    minBitrate: 11
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                transmission:
                  enabled: true
                afcEnabled: true
              schema:
                type: object
          description: Successful operation
      summary: Return a RF profile
      tags:
      - wireless
      - configure
      - rfProfiles
    put:
      description: Updates specified RF profile for this network
      operationId: updateNetworkWirelessRfProfile
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Rf profile ID
        in: path
        name: rfProfileId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_152'
        content:
          application/json:
            schema:
              example:
                name: "1234"
                clientBalancingEnabled: true
                minBitrateType: band
                bandSelectionType: ap
                apBandSettings:
                  bandOperationMode: dual
                  bandSteeringEnabled: true
                twoFourGhzSettings:
                  maxPower: 30
                  minPower: 5
                  minBitrate: 11.0
                  validAutoChannels:
                  - 1
                  - 6
                  - 11
                  axEnabled: true
                  rxsop: -95
                fiveGhzSettings:
                  maxPower: 30
                  minPower: 8
                  minBitrate: 12
                  validAutoChannels:
                  - 36
                  - 40
                  - 44
                  - 48
                  - 52
                  - 56
                  - 60
                  - 64
                  - 100
                  - 104
                  - 108
                  - 112
                  - 116
                  - 120
                  - 124
                  - 128
                  - 132
                  - 136
                  - 140
                  - 144
                  - 149
                  - 153
                  - 157
                  - 161
                  - 165
                  channelWidth: auto
                  rxsop: -95
                transmission:
                  enabled: true
                perSsidSettings:
                  "0":
                    minBitrate: 11.0
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                  "1":
                    minBitrate: 11.0
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                  "2":
                    minBitrate: 11.0
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                  "3":
                    minBitrate: 11.0
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                  "4":
                    minBitrate: 11.0
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                  "5":
                    minBitrate: 11.0
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                  "6":
                    minBitrate: 11.0
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                  "7":
                    minBitrate: 11.0
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                  "8":
                    minBitrate: 11.0
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                  "9":
                    minBitrate: 11.0
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                  "10":
                    minBitrate: 11.0
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                  "11":
                    minBitrate: 11.0
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                  "12":
                    minBitrate: 11.0
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                  "13":
                    minBitrate: 11.0
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                  "14":
                    minBitrate: 11.0
                    bandOperationMode: dual
                    bandSteeringEnabled: true
              properties:
                name:
                  description: The name of the new profile. Must be unique.
                  type: string
                clientBalancingEnabled:
                  description: Steers client to best available access point. Can be
                    either true or false.
                  type: boolean
                minBitrateType:
                  description: Minimum bitrate can be set to either 'band' or 'ssid'.
                  enum:
                  - band
                  - ssid
                  type: string
                bandSelectionType:
                  description: Band selection can be set to either 'ssid' or 'ap'.
                  enum:
                  - ap
                  - ssid
                  type: string
                apBandSettings:
                  $ref: '#/components/schemas/_networks__networkId__wireless_rfProfiles__rfProfileId__apBandSettings'
                twoFourGhzSettings:
                  $ref: '#/components/schemas/_networks__networkId__wireless_rfProfiles__rfProfileId__twoFourGhzSettings'
                fiveGhzSettings:
                  $ref: '#/components/schemas/_networks__networkId__wireless_rfProfiles__rfProfileId__fiveGhzSettings'
                transmission:
                  $ref: '#/components/schemas/_networks__networkId__wireless_rfProfiles_transmission'
                perSsidSettings:
                  $ref: '#/components/schemas/_networks__networkId__wireless_rfProfiles_perSsidSettings'
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                id: "1234"
                networkId: N_24329156
                name: Main Office
                clientBalancingEnabled: true
                minBitrateType: band
                bandSelectionType: ap
                apBandSettings:
                  bandOperationMode: dual
                  bandSteeringEnabled: true
                twoFourGhzSettings:
                  maxPower: 30
                  minPower: 5
                  minBitrate: 11.0
                  validAutoChannels:
                  - 1
                  - 6
                  - 11
                  axEnabled: true
                  rxsop: -95
                fiveGhzSettings:
                  maxPower: 30
                  minPower: 8
                  minBitrate: 12
                  validAutoChannels:
                  - 36
                  - 40
                  - 44
                  - 48
                  - 52
                  - 56
                  - 60
                  - 64
                  - 100
                  - 104
                  - 108
                  - 112
                  - 116
                  - 120
                  - 124
                  - 128
                  - 132
                  - 136
                  - 140
                  - 144
                  - 149
                  - 153
                  - 157
                  - 161
                  - 165
                  channelWidth: auto
                  rxsop: -95
                transmission:
                  enabled: true
                perSsidSettings:
                  "0":
                    name: SSID 0
                    minBitrate: 11
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                  "1":
                    name: SSID 1
                    minBitrate: 11
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                  "2":
                    name: SSID 2
                    minBitrate: 11
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                  "3":
                    name: SSID 3
                    minBitrate: 11
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                  "4":
                    name: SSID 4
                    minBitrate: 11
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                  "5":
                    name: SSID 5
                    minBitrate: 11
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                  "6":
                    name: SSID 6
                    minBitrate: 11
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                  "7":
                    name: SSID 7
                    minBitrate: 11
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                  "8":
                    name: SSID 8
                    minBitrate: 11
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                  "9":
                    name: SSID 9
                    minBitrate: 11
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                  "10":
                    name: SSID 10
                    minBitrate: 11
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                  "11":
                    name: SSID 11
                    minBitrate: 11
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                  "12":
                    name: SSID 12
                    minBitrate: 11
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                  "13":
                    name: SSID 13
                    minBitrate: 11
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                  "14":
                    name: SSID 14
                    minBitrate: 11
                    bandOperationMode: dual
                    bandSteeringEnabled: true
              schema:
                $ref: '#/components/schemas/inline_response_201_4'
          description: Successful operation
      summary: Updates specified RF profile for this network
      tags:
      - wireless
      - configure
      - rfProfiles
      x-codegen-request-body-name: updateNetworkWirelessRfProfile
  /networks/{networkId}/wireless/settings:
    get:
      description: Return the wireless settings for a network
      operationId: getNetworkWirelessSettings
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                meshingEnabled: true
                ipv6BridgeEnabled: false
                locationAnalyticsEnabled: false
                upgradeStrategy: minimizeUpgradeTime
                ledLightsOn: false
                namedVlans:
                  poolDhcpMonitoring:
                    enabled: true
                    duration: 5
              schema:
                $ref: '#/components/schemas/inline_response_200_83'
          description: Successful operation
      summary: Return the wireless settings for a network
      tags:
      - wireless
      - configure
      - settings
    put:
      description: Update the wireless settings for a network
      operationId: updateNetworkWirelessSettings
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_153'
        content:
          application/json:
            schema:
              example:
                meshingEnabled: true
                ipv6BridgeEnabled: false
                locationAnalyticsEnabled: false
                upgradeStrategy: minimizeUpgradeTime
                ledLightsOn: false
              properties:
                meshingEnabled:
                  description: Toggle for enabling or disabling meshing in a network
                  type: boolean
                ipv6BridgeEnabled:
                  description: 'Toggle for enabling or disabling IPv6 bridging in
                    a network (Note: if enabled, SSIDs must also be configured to
                    use bridge mode)'
                  type: boolean
                locationAnalyticsEnabled:
                  description: Toggle for enabling or disabling location analytics
                    for your network
                  type: boolean
                upgradeStrategy:
                  description: The upgrade strategy to apply to the network. Must
                    be one of 'minimizeUpgradeTime' or 'minimizeClientDowntime'. Requires
                    firmware version MR 26.8 or higher'
                  enum:
                  - minimizeClientDowntime
                  - minimizeUpgradeTime
                  type: string
                ledLightsOn:
                  description: Toggle for enabling or disabling LED lights on all
                    APs in the network (making them run dark)
                  type: boolean
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                meshingEnabled: true
                ipv6BridgeEnabled: false
                locationAnalyticsEnabled: false
                upgradeStrategy: minimizeUpgradeTime
                ledLightsOn: false
                namedVlans:
                  poolDhcpMonitoring:
                    enabled: true
                    duration: 5
              schema:
                $ref: '#/components/schemas/inline_response_200_83'
          description: Successful operation
      summary: Update the wireless settings for a network
      tags:
      - wireless
      - configure
      - settings
      x-codegen-request-body-name: updateNetworkWirelessSettings
  /networks/{networkId}/wireless/signalQualityHistory:
    get:
      description: Return signal quality (SNR/RSSI) over time for a device or network
        client
      operationId: getNetworkWirelessSignalQualityHistory
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: The beginning of the timespan for the data. The maximum lookback
          period is 31 days from today.
        in: query
        name: t0
        schema:
          type: string
      - description: The end of the timespan for the data. t1 can be a maximum of
          31 days after t0.
        in: query
        name: t1
        schema:
          type: string
      - description: The timespan for which the information will be fetched. If specifying
          timespan, do not specify parameters t0 and t1. The value must be in seconds
          and be less than or equal to 31 days. The default is 7 days.
        in: query
        name: timespan
        schema:
          format: float
          type: number
      - description: 'The time resolution in seconds for returned data. The valid
          resolutions are: 300, 600, 1200, 3600, 14400, 86400. The default is 86400.'
        in: query
        name: resolution
        schema:
          type: integer
      - description: Automatically select a data resolution based on the given timespan;
          this overrides the value specified by the 'resolution' parameter. The default
          setting is false.
        in: query
        name: autoResolution
        schema:
          type: boolean
      - description: Filter results by network client.
        in: query
        name: clientId
        schema:
          type: string
      - description: Filter results by device.
        in: query
        name: deviceSerial
        schema:
          type: string
      - description: Filter results by AP tag; either :clientId or :deviceSerial must
          be jointly specified.
        in: query
        name: apTag
        schema:
          type: string
      - description: Filter results by band (either '2.4', '5' or '6').
        in: query
        name: band
        schema:
          enum:
          - "2.4"
          - "5"
          - "6"
          type: string
      - description: Filter results by SSID number.
        in: query
        name: ssid
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              example:
              - startTs: 2020-01-01T00:00:00Z
                endTs: 2020-01-01T01:00:00Z
                snr: 27
                rssi: -77
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_84'
                type: array
          description: Successful operation
      summary: Return signal quality (SNR/RSSI) over time for a device or network
        client
      tags:
      - wireless
      - monitor
      - signalQualityHistory
  /networks/{networkId}/wireless/ssids:
    get:
      description: List the MR SSIDs in a network
      operationId: getNetworkWirelessSsids
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - number: 0
                name: My SSID
                enabled: true
                splashPage: Click-through splash page
                ssidAdminAccessible: false
                authMode: 8021x-radius
                encryptionMode: wpa-eap
                wpaEncryptionMode: WPA2 only
                radiusServers:
                - host: 0.0.0.0
                  port: 3000
                  openRoamingCertificateId: 2
                  caCertificate: |-
                    -----BEGIN CERTIFICATE-----
                    MIIEKjCCAxKgAwIBAgIRANb+lsED3eb4+6YKLFFYqEkwDQYJKoZIhvcNAQELBQAw
                    gYcxCzAJBgNVBAYTAlVTMRMwEQYDVQQIDApDYWxpZm9ybmlhMREwDwYDVQQHDAhT
                    YW4gSm9zZTEcMBoGA1UECgwTQ2lzY28gU3lzdGVtcywgSW5jLjESMBAGA1UECwwJ
                    RE5BU3BhY2VzMR4wHAYDVQQDDBVjaXNjby5vcGVucm9hbWluZy5vcmcwHhcNMjAx
                    MTA1MjEzMzM1WhcNMjExMTA1MjIzMzM1WjCBpDEcMBoGCgmSJomT8ixkAQETDGRu
                    YXNwYWNlczpVUzELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAkNBMQ4wDAYDVQQKEwVD
                    aXNjbzEcMBoGA1UECxMTV0JBOldSSVggRW5kLUVudGl0eTE8MDoGA1UEAxMzNjQ3
                    MDcwNDM4NDQ5NjQxMjAwMDAuMTg4MzQuaHMuY2lzY28ub3BlbnJvYW1pbmcub3Jn
                    MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAoqjP9QgRGyUO3p7SH9QK
                    uTq6UYK7nAyjImgS4yQxeBkyZ5f2EUkX8m/AOcewpPxxPBhjPKRwxGeX3S50ksiA
                    ayFomUeslR0S0Z7RN9rzJa+CFyi9MwWIHMbLgXpB8tsSpgTAqwrzoTzOGq9fgC6u
                    pZhdZrBkg3FeJgD88goCi9mZDsY2YAoeGRLFJ2fR8iICqIVQy+Htq9pE22WBLpnS
                    KjL3+mR9FArHNFtWlhKF2YHMUqyHHrnZnF/Ns7QNoMMF7/CK18iAKgnb+2wuGKM2
                    aEMddOeOTtz+i/rgjkp/RGMt011EdCsso0/cTo9qqX/bxOOCE4/Mne/ChMkQPnNU
                    CwIDAQABo3IwcDAJBgNVHRMEAjAAMB8GA1UdIwQYMBaAFIG+4l5yiB01gP0sw4ML
                    USopqYcuMB0GA1UdDgQWBBSby1T9leYVOVVdOZXiHCSaDDEMiDAOBgNVHQ8BAf8E
                    BAMCBaAwEwYDVR0lBAwwCgYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAEyE
                    1mjSUyY6uNp6W4l20w7SskALSJDRKkOeZxAgF3VMxlsCuEl70s9oEfntwIpyQtSa
                    jON/9yJHbwm/Az824bmk8Dc7AXIPhay+dftXb8j529gPuYB9AKoPNg0NctkyYCQh
                    a/3YQVdDWX7XgmEiXkL57M7G6+IdcPDONLArfjOcT9qHdkVVq1AIjlMSx3OQQmm/
                    uoLb/G9q/97QA2/l8shG/Na8HjVqGLcl5TNZdbNhs2w9ogxr/GNzqdvym6RQ8vT/
                    UR2n+uwH4n1MUxmHYYeyot5dnIV1IJ6hQ54JAncM9HvCLFk1WHz6RKshQUCuPBiJ
                    wTw70BVktzJnb0VLeDg=
                    -----END CERTIFICATE-----
                radiusAccountingEnabled: false
                radiusEnabled: true
                radiusAttributeForGroupPolicies: Filter-Id
                radiusFailoverPolicy: "null"
                radiusLoadBalancingPolicy: "null"
                ipAssignmentMode: NAT mode
                adminSplashUrl: http://example.com
                splashTimeout: 30 minutes
                walledGardenEnabled: true
                walledGardenRanges:
                - example.com
                - 1.1.1.1/32
                minBitrate: 11
                bandSelection: 5 GHz band only
                perClientBandwidthLimitUp: 0
                perClientBandwidthLimitDown: 0
                visible: true
                availableOnAllAps: false
                availabilityTags:
                - test-tag
                perSsidBandwidthLimitUp: 0
                perSsidBandwidthLimitDown: 0
                mandatoryDhcpEnabled: false
                radiusAccountingServers:
                - host: 0.0.0.0
                  port: 3000
                  openRoamingCertificateId: 2
                  caCertificate: |-
                    -----BEGIN CERTIFICATE-----
                    MIIEKjCCAxKgAwIBAgIRANb+lsED3eb4+6YKLFFYqEkwDQYJKoZIhvcNAQELBQAw
                    gYcxCzAJBgNVBAYTAlVTMRMwEQYDVQQIDApDYWxpZm9ybmlhMREwDwYDVQQHDAhT
                    YW4gSm9zZTEcMBoGA1UECgwTQ2lzY28gU3lzdGVtcywgSW5jLjESMBAGA1UECwwJ
                    RE5BU3BhY2VzMR4wHAYDVQQDDBVjaXNjby5vcGVucm9hbWluZy5vcmcwHhcNMjAx
                    MTA1MjEzMzM1WhcNMjExMTA1MjIzMzM1WjCBpDEcMBoGCgmSJomT8ixkAQETDGRu
                    YXNwYWNlczpVUzELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAkNBMQ4wDAYDVQQKEwVD
                    aXNjbzEcMBoGA1UECxMTV0JBOldSSVggRW5kLUVudGl0eTE8MDoGA1UEAxMzNjQ3
                    MDcwNDM4NDQ5NjQxMjAwMDAuMTg4MzQuaHMuY2lzY28ub3BlbnJvYW1pbmcub3Jn
                    MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAoqjP9QgRGyUO3p7SH9QK
                    uTq6UYK7nAyjImgS4yQxeBkyZ5f2EUkX8m/AOcewpPxxPBhjPKRwxGeX3S50ksiA
                    ayFomUeslR0S0Z7RN9rzJa+CFyi9MwWIHMbLgXpB8tsSpgTAqwrzoTzOGq9fgC6u
                    pZhdZrBkg3FeJgD88goCi9mZDsY2YAoeGRLFJ2fR8iICqIVQy+Htq9pE22WBLpnS
                    KjL3+mR9FArHNFtWlhKF2YHMUqyHHrnZnF/Ns7QNoMMF7/CK18iAKgnb+2wuGKM2
                    aEMddOeOTtz+i/rgjkp/RGMt011EdCsso0/cTo9qqX/bxOOCE4/Mne/ChMkQPnNU
                    CwIDAQABo3IwcDAJBgNVHRMEAjAAMB8GA1UdIwQYMBaAFIG+4l5yiB01gP0sw4ML
                    USopqYcuMB0GA1UdDgQWBBSby1T9leYVOVVdOZXiHCSaDDEMiDAOBgNVHQ8BAf8E
                    BAMCBaAwEwYDVR0lBAwwCgYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAEyE
                    1mjSUyY6uNp6W4l20w7SskALSJDRKkOeZxAgF3VMxlsCuEl70s9oEfntwIpyQtSa
                    jON/9yJHbwm/Az824bmk8Dc7AXIPhay+dftXb8j529gPuYB9AKoPNg0NctkyYCQh
                    a/3YQVdDWX7XgmEiXkL57M7G6+IdcPDONLArfjOcT9qHdkVVq1AIjlMSx3OQQmm/
                    uoLb/G9q/97QA2/l8shG/Na8HjVqGLcl5TNZdbNhs2w9ogxr/GNzqdvym6RQ8vT/
                    UR2n+uwH4n1MUxmHYYeyot5dnIV1IJ6hQ54JAncM9HvCLFk1WHz6RKshQUCuPBiJ
                    wTw70BVktzJnb0VLeDg=
                    -----END CERTIFICATE-----
              schema:
                items:
                  properties: {}
                  type: object
                type: array
          description: Successful operation
      summary: List the MR SSIDs in a network
      tags:
      - wireless
      - configure
      - ssids
  /networks/{networkId}/wireless/ssids/{number}:
    get:
      description: Return a single MR SSID
      operationId: getNetworkWirelessSsid
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Number
        in: path
        name: number
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                number: 0
                name: My SSID
                enabled: true
                splashPage: Click-through splash page
                ssidAdminAccessible: false
                authMode: 8021x-radius
                encryptionMode: wpa-eap
                wpaEncryptionMode: WPA2 only
                radiusServers:
                - host: 0.0.0.0
                  port: 3000
                  openRoamingCertificateId: 2
                  caCertificate: |-
                    -----BEGIN CERTIFICATE-----
                    MIIEKjCCAxKgAwIBAgIRANb+lsED3eb4+6YKLFFYqEkwDQYJKoZIhvcNAQELBQAw
                    gYcxCzAJBgNVBAYTAlVTMRMwEQYDVQQIDApDYWxpZm9ybmlhMREwDwYDVQQHDAhT
                    YW4gSm9zZTEcMBoGA1UECgwTQ2lzY28gU3lzdGVtcywgSW5jLjESMBAGA1UECwwJ
                    RE5BU3BhY2VzMR4wHAYDVQQDDBVjaXNjby5vcGVucm9hbWluZy5vcmcwHhcNMjAx
                    MTA1MjEzMzM1WhcNMjExMTA1MjIzMzM1WjCBpDEcMBoGCgmSJomT8ixkAQETDGRu
                    YXNwYWNlczpVUzELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAkNBMQ4wDAYDVQQKEwVD
                    aXNjbzEcMBoGA1UECxMTV0JBOldSSVggRW5kLUVudGl0eTE8MDoGA1UEAxMzNjQ3
                    MDcwNDM4NDQ5NjQxMjAwMDAuMTg4MzQuaHMuY2lzY28ub3BlbnJvYW1pbmcub3Jn
                    MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAoqjP9QgRGyUO3p7SH9QK
                    uTq6UYK7nAyjImgS4yQxeBkyZ5f2EUkX8m/AOcewpPxxPBhjPKRwxGeX3S50ksiA
                    ayFomUeslR0S0Z7RN9rzJa+CFyi9MwWIHMbLgXpB8tsSpgTAqwrzoTzOGq9fgC6u
                    pZhdZrBkg3FeJgD88goCi9mZDsY2YAoeGRLFJ2fR8iICqIVQy+Htq9pE22WBLpnS
                    KjL3+mR9FArHNFtWlhKF2YHMUqyHHrnZnF/Ns7QNoMMF7/CK18iAKgnb+2wuGKM2
                    aEMddOeOTtz+i/rgjkp/RGMt011EdCsso0/cTo9qqX/bxOOCE4/Mne/ChMkQPnNU
                    CwIDAQABo3IwcDAJBgNVHRMEAjAAMB8GA1UdIwQYMBaAFIG+4l5yiB01gP0sw4ML
                    USopqYcuMB0GA1UdDgQWBBSby1T9leYVOVVdOZXiHCSaDDEMiDAOBgNVHQ8BAf8E
                    BAMCBaAwEwYDVR0lBAwwCgYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAEyE
                    1mjSUyY6uNp6W4l20w7SskALSJDRKkOeZxAgF3VMxlsCuEl70s9oEfntwIpyQtSa
                    jON/9yJHbwm/Az824bmk8Dc7AXIPhay+dftXb8j529gPuYB9AKoPNg0NctkyYCQh
                    a/3YQVdDWX7XgmEiXkL57M7G6+IdcPDONLArfjOcT9qHdkVVq1AIjlMSx3OQQmm/
                    uoLb/G9q/97QA2/l8shG/Na8HjVqGLcl5TNZdbNhs2w9ogxr/GNzqdvym6RQ8vT/
                    UR2n+uwH4n1MUxmHYYeyot5dnIV1IJ6hQ54JAncM9HvCLFk1WHz6RKshQUCuPBiJ
                    wTw70BVktzJnb0VLeDg=
                    -----END CERTIFICATE-----
                radiusAccountingEnabled: false
                radiusEnabled: true
                radiusAttributeForGroupPolicies: Filter-Id
                radiusFailoverPolicy: "null"
                radiusLoadBalancingPolicy: "null"
                ipAssignmentMode: NAT mode
                adminSplashUrl: http://example.com
                splashTimeout: 30 minutes
                walledGardenEnabled: true
                walledGardenRanges:
                - example.com
                - 1.1.1.1/32
                minBitrate: 11
                bandSelection: 5 GHz band only
                perClientBandwidthLimitUp: 0
                perClientBandwidthLimitDown: 0
                visible: true
                availableOnAllAps: false
                availabilityTags:
                - test-tag
                perSsidBandwidthLimitUp: 0
                perSsidBandwidthLimitDown: 0
                mandatoryDhcpEnabled: false
                radiusAccountingServers:
                - host: 0.0.0.0
                  port: 3000
                  openRoamingCertificateId: 2
                  caCertificate: |-
                    -----BEGIN CERTIFICATE-----
                    MIIEKjCCAxKgAwIBAgIRANb+lsED3eb4+6YKLFFYqEkwDQYJKoZIhvcNAQELBQAw
                    gYcxCzAJBgNVBAYTAlVTMRMwEQYDVQQIDApDYWxpZm9ybmlhMREwDwYDVQQHDAhT
                    YW4gSm9zZTEcMBoGA1UECgwTQ2lzY28gU3lzdGVtcywgSW5jLjESMBAGA1UECwwJ
                    RE5BU3BhY2VzMR4wHAYDVQQDDBVjaXNjby5vcGVucm9hbWluZy5vcmcwHhcNMjAx
                    MTA1MjEzMzM1WhcNMjExMTA1MjIzMzM1WjCBpDEcMBoGCgmSJomT8ixkAQETDGRu
                    YXNwYWNlczpVUzELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAkNBMQ4wDAYDVQQKEwVD
                    aXNjbzEcMBoGA1UECxMTV0JBOldSSVggRW5kLUVudGl0eTE8MDoGA1UEAxMzNjQ3
                    MDcwNDM4NDQ5NjQxMjAwMDAuMTg4MzQuaHMuY2lzY28ub3BlbnJvYW1pbmcub3Jn
                    MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAoqjP9QgRGyUO3p7SH9QK
                    uTq6UYK7nAyjImgS4yQxeBkyZ5f2EUkX8m/AOcewpPxxPBhjPKRwxGeX3S50ksiA
                    ayFomUeslR0S0Z7RN9rzJa+CFyi9MwWIHMbLgXpB8tsSpgTAqwrzoTzOGq9fgC6u
                    pZhdZrBkg3FeJgD88goCi9mZDsY2YAoeGRLFJ2fR8iICqIVQy+Htq9pE22WBLpnS
                    KjL3+mR9FArHNFtWlhKF2YHMUqyHHrnZnF/Ns7QNoMMF7/CK18iAKgnb+2wuGKM2
                    aEMddOeOTtz+i/rgjkp/RGMt011EdCsso0/cTo9qqX/bxOOCE4/Mne/ChMkQPnNU
                    CwIDAQABo3IwcDAJBgNVHRMEAjAAMB8GA1UdIwQYMBaAFIG+4l5yiB01gP0sw4ML
                    USopqYcuMB0GA1UdDgQWBBSby1T9leYVOVVdOZXiHCSaDDEMiDAOBgNVHQ8BAf8E
                    BAMCBaAwEwYDVR0lBAwwCgYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAEyE
                    1mjSUyY6uNp6W4l20w7SskALSJDRKkOeZxAgF3VMxlsCuEl70s9oEfntwIpyQtSa
                    jON/9yJHbwm/Az824bmk8Dc7AXIPhay+dftXb8j529gPuYB9AKoPNg0NctkyYCQh
                    a/3YQVdDWX7XgmEiXkL57M7G6+IdcPDONLArfjOcT9qHdkVVq1AIjlMSx3OQQmm/
                    uoLb/G9q/97QA2/l8shG/Na8HjVqGLcl5TNZdbNhs2w9ogxr/GNzqdvym6RQ8vT/
                    UR2n+uwH4n1MUxmHYYeyot5dnIV1IJ6hQ54JAncM9HvCLFk1WHz6RKshQUCuPBiJ
                    wTw70BVktzJnb0VLeDg=
                    -----END CERTIFICATE-----
              schema:
                type: object
          description: Successful operation
      summary: Return a single MR SSID
      tags:
      - wireless
      - configure
      - ssids
    put:
      description: Update the attributes of an MR SSID
      operationId: updateNetworkWirelessSsid
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Number
        in: path
        name: number
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_154'
        content:
          application/json:
            schema:
              example:
                name: My SSID
                enabled: true
              properties:
                name:
                  description: The name of the SSID
                  type: string
                enabled:
                  description: Whether or not the SSID is enabled
                  type: boolean
                authMode:
                  description: The association control method for the SSID ('open',
                    'open-enhanced', 'psk', 'open-with-radius', 'open-with-nac', '8021x-meraki',
                    '8021x-nac', '8021x-radius', '8021x-google', '8021x-localradius',
                    'ipsk-with-radius' or 'ipsk-without-radius')
                  enum:
                  - 8021x-google
                  - 8021x-localradius
                  - 8021x-meraki
                  - 8021x-nac
                  - 8021x-radius
                  - ipsk-with-radius
                  - ipsk-without-radius
                  - open
                  - open-enhanced
                  - open-with-nac
                  - open-with-radius
                  - psk
                  type: string
                enterpriseAdminAccess:
                  description: Whether or not an SSID is accessible by 'enterprise'
                    administrators ('access disabled' or 'access enabled')
                  enum:
                  - access disabled
                  - access enabled
                  type: string
                encryptionMode:
                  description: The psk encryption mode for the SSID ('wep' or 'wpa').
                    This param is only valid if the authMode is 'psk'
                  enum:
                  - wep
                  - wpa
                  type: string
                psk:
                  description: The passkey for the SSID. This param is only valid
                    if the authMode is 'psk'
                  type: string
                wpaEncryptionMode:
                  description: The types of WPA encryption. ('WPA1 only', 'WPA1 and
                    WPA2', 'WPA2 only', 'WPA3 Transition Mode', 'WPA3 only' or 'WPA3
                    192-bit Security')
                  enum:
                  - WPA1 and WPA2
                  - WPA1 only
                  - WPA2 only
                  - WPA3 192-bit Security
                  - WPA3 Transition Mode
                  - WPA3 only
                  type: string
                dot11w:
                  $ref: '#/components/schemas/_networks__networkId__wireless_ssids__number__dot11w'
                dot11r:
                  $ref: '#/components/schemas/_networks__networkId__wireless_ssids__number__dot11r'
                splashPage:
                  description: The type of splash page for the SSID ('None', 'Click-through
                    splash page', 'Billing', 'Password-protected with Meraki RADIUS',
                    'Password-protected with custom RADIUS', 'Password-protected with
                    Active Directory', 'Password-protected with LDAP', 'SMS authentication',
                    'Systems Manager Sentry', 'Facebook Wi-Fi', 'Google OAuth', 'Sponsored
                    guest', 'Cisco ISE' or 'Google Apps domain'). This attribute is
                    not supported for template children.
                  enum:
                  - Billing
                  - Cisco ISE
                  - Click-through splash page
                  - Facebook Wi-Fi
                  - Google Apps domain
                  - Google OAuth
                  - None
                  - Password-protected with Active Directory
                  - Password-protected with LDAP
                  - Password-protected with Meraki RADIUS
                  - Password-protected with custom RADIUS
                  - SMS authentication
                  - Sponsored guest
                  - Systems Manager Sentry
                  type: string
                splashGuestSponsorDomains:
                  description: Array of valid sponsor email domains for sponsored
                    guest splash type.
                  items:
                    type: string
                  type: array
                oauth:
                  $ref: '#/components/schemas/_networks__networkId__wireless_ssids__number__oauth'
                localRadius:
                  $ref: '#/components/schemas/_networks__networkId__wireless_ssids__number__localRadius'
                ldap:
                  $ref: '#/components/schemas/_networks__networkId__wireless_ssids__number__ldap'
                activeDirectory:
                  $ref: '#/components/schemas/_networks__networkId__wireless_ssids__number__activeDirectory'
                radiusServers:
                  description: The RADIUS 802.1X servers to be used for authentication.
                    This param is only valid if the authMode is 'open-with-radius',
                    '8021x-radius' or 'ipsk-with-radius'
                  items:
                    $ref: '#/components/schemas/_networks__networkId__wireless_ssids__number__radiusServers'
                  type: array
                radiusProxyEnabled:
                  description: If true, Meraki devices will proxy RADIUS messages
                    through the Meraki cloud to the configured RADIUS auth and accounting
                    servers.
                  type: boolean
                radiusTestingEnabled:
                  description: If true, Meraki devices will periodically send Access-Request
                    messages to configured RADIUS servers using identity 'meraki_8021x_test'
                    to ensure that the RADIUS servers are reachable.
                  type: boolean
                radiusCalledStationId:
                  description: The template of the called station identifier to be
                    used for RADIUS (ex. $NODE_MAC$:$VAP_NUM$).
                  type: string
                radiusAuthenticationNasId:
                  description: The template of the NAS identifier to be used for RADIUS
                    authentication (ex. $NODE_MAC$:$VAP_NUM$).
                  type: string
                radiusServerTimeout:
                  description: The amount of time for which a RADIUS client waits
                    for a reply from the RADIUS server (must be between 1-10 seconds).
                  type: integer
                radiusServerAttemptsLimit:
                  description: The maximum number of transmit attempts after which
                    a RADIUS server is failed over (must be between 1-5).
                  type: integer
                radiusFallbackEnabled:
                  description: Whether or not higher priority RADIUS servers should
                    be retried after 60 seconds.
                  type: boolean
                radiusCoaEnabled:
                  description: If true, Meraki devices will act as a RADIUS Dynamic
                    Authorization Server and will respond to RADIUS Change-of-Authorization
                    and Disconnect messages sent by the RADIUS server.
                  type: boolean
                radiusFailoverPolicy:
                  description: This policy determines how authentication requests
                    should be handled in the event that all of the configured RADIUS
                    servers are unreachable ('Deny access' or 'Allow access')
                  enum:
                  - Allow access
                  - Deny access
                  type: string
                radiusLoadBalancingPolicy:
                  description: This policy determines which RADIUS server will be
                    contacted first in an authentication attempt and the ordering
                    of any necessary retry attempts ('Strict priority order' or 'Round
                    robin')
                  enum:
                  - Round robin
                  - Strict priority order
                  type: string
                radiusAccountingEnabled:
                  description: Whether or not RADIUS accounting is enabled. This param
                    is only valid if the authMode is 'open-with-radius', '8021x-radius'
                    or 'ipsk-with-radius'
                  type: boolean
                radiusAccountingServers:
                  description: The RADIUS accounting 802.1X servers to be used for
                    authentication. This param is only valid if the authMode is 'open-with-radius',
                    '8021x-radius' or 'ipsk-with-radius' and radiusAccountingEnabled
                    is 'true'
                  items:
                    $ref: '#/components/schemas/_networks__networkId__wireless_ssids__number__radiusAccountingServers'
                  type: array
                radiusAccountingInterimInterval:
                  description: The interval (in seconds) in which accounting information
                    is updated and sent to the RADIUS accounting server.
                  type: integer
                radiusAttributeForGroupPolicies:
                  description: Specify the RADIUS attribute used to look up group
                    policies ('Filter-Id', 'Reply-Message', 'Airespace-ACL-Name' or
                    'Aruba-User-Role'). Access points must receive this attribute
                    in the RADIUS Access-Accept message
                  enum:
                  - Airespace-ACL-Name
                  - Aruba-User-Role
                  - Filter-Id
                  - Reply-Message
                  type: string
                ipAssignmentMode:
                  description: The client IP assignment mode ('NAT mode', 'Bridge
                    mode', 'Layer 3 roaming', 'Ethernet over GRE', 'Layer 3 roaming
                    with a concentrator' or 'VPN')
                  type: string
                useVlanTagging:
                  description: Whether or not traffic should be directed to use specific
                    VLANs. This param is only valid if the ipAssignmentMode is 'Bridge
                    mode' or 'Layer 3 roaming'
                  type: boolean
                concentratorNetworkId:
                  description: The concentrator to use when the ipAssignmentMode is
                    'Layer 3 roaming with a concentrator' or 'VPN'.
                  type: string
                secondaryConcentratorNetworkId:
                  description: The secondary concentrator to use when the ipAssignmentMode
                    is 'VPN'. If configured, the APs will switch to using this concentrator
                    if the primary concentrator is unreachable. This param is optional.
                    ('disabled' represents no secondary concentrator.)
                  type: string
                disassociateClientsOnVpnFailover:
                  description: Disassociate clients when 'VPN' concentrator failover
                    occurs in order to trigger clients to re-associate and generate
                    new DHCP requests. This param is only valid if ipAssignmentMode
                    is 'VPN'.
                  type: boolean
                vlanId:
                  description: The VLAN ID used for VLAN tagging. This param is only
                    valid when the ipAssignmentMode is 'Layer 3 roaming with a concentrator'
                    or 'VPN'
                  type: integer
                defaultVlanId:
                  description: The default VLAN ID used for 'all other APs'. This
                    param is only valid when the ipAssignmentMode is 'Bridge mode'
                    or 'Layer 3 roaming'
                  type: integer
                apTagsAndVlanIds:
                  description: The list of tags and VLAN IDs used for VLAN tagging.
                    This param is only valid when the ipAssignmentMode is 'Bridge
                    mode' or 'Layer 3 roaming'
                  items:
                    $ref: '#/components/schemas/_networks__networkId__wireless_ssids__number__apTagsAndVlanIds'
                  type: array
                walledGardenEnabled:
                  description: Allow access to a configurable list of IP ranges, which
                    users may access prior to sign-on.
                  type: boolean
                walledGardenRanges:
                  description: Specify your walled garden by entering an array of
                    addresses, ranges using CIDR notation, domain names, and domain
                    wildcards (e.g. '192.168.1.1/24', '192.168.37.10/32', 'www.yahoo.com',
                    '*.google.com']). Meraki's splash page is automatically included
                    in your walled garden.
                  items:
                    type: string
                  type: array
                gre:
                  $ref: '#/components/schemas/_networks__networkId__wireless_ssids__number__gre'
                radiusOverride:
                  description: If true, the RADIUS response can override VLAN tag.
                    This is not valid when ipAssignmentMode is 'NAT mode'.
                  type: boolean
                radiusGuestVlanEnabled:
                  description: Whether or not RADIUS Guest VLAN is enabled. This param
                    is only valid if the authMode is 'open-with-radius' and addressing
                    mode is not set to 'isolated' or 'nat' mode
                  type: boolean
                radiusGuestVlanId:
                  description: VLAN ID of the RADIUS Guest VLAN. This param is only
                    valid if the authMode is 'open-with-radius' and addressing mode
                    is not set to 'isolated' or 'nat' mode
                  type: integer
                minBitrate:
                  description: The minimum bitrate in Mbps of this SSID in the default
                    indoor RF profile. ('1', '2', '5.5', '6', '9', '11', '12', '18',
                    '24', '36', '48' or '54')
                  format: float
                  type: number
                bandSelection:
                  description: The client-serving radio frequencies of this SSID in
                    the default indoor RF profile. ('Dual band operation', '5 GHz
                    band only' or 'Dual band operation with Band Steering')
                  type: string
                perClientBandwidthLimitUp:
                  description: The upload bandwidth limit in Kbps. (0 represents no
                    limit.)
                  type: integer
                perClientBandwidthLimitDown:
                  description: The download bandwidth limit in Kbps. (0 represents
                    no limit.)
                  type: integer
                perSsidBandwidthLimitUp:
                  description: The total upload bandwidth limit in Kbps. (0 represents
                    no limit.)
                  type: integer
                perSsidBandwidthLimitDown:
                  description: The total download bandwidth limit in Kbps. (0 represents
                    no limit.)
                  type: integer
                lanIsolationEnabled:
                  description: Boolean indicating whether Layer 2 LAN isolation should
                    be enabled or disabled. Only configurable when ipAssignmentMode
                    is 'Bridge mode'.
                  type: boolean
                visible:
                  description: Boolean indicating whether APs should advertise or
                    hide this SSID. APs will only broadcast this SSID if set to true
                  type: boolean
                availableOnAllAps:
                  description: Boolean indicating whether all APs should broadcast
                    the SSID or if it should be restricted to APs matching any availability
                    tags. Can only be false if the SSID has availability tags.
                  type: boolean
                availabilityTags:
                  description: Accepts a list of tags for this SSID. If availableOnAllAps
                    is false, then the SSID will only be broadcast by APs with tags
                    matching any of the tags in this list.
                  items:
                    type: string
                  type: array
                mandatoryDhcpEnabled:
                  description: If true, Mandatory DHCP will enforce that clients connecting
                    to this SSID must use the IP address assigned by the DHCP server.
                    Clients who use a static IP address won't be able to associate.
                  type: boolean
                adultContentFilteringEnabled:
                  description: Boolean indicating whether or not adult content will
                    be blocked
                  type: boolean
                dnsRewrite:
                  $ref: '#/components/schemas/_networks__networkId__wireless_ssids__number__dnsRewrite'
                speedBurst:
                  $ref: '#/components/schemas/_networks__networkId__wireless_ssids__number__speedBurst'
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                number: 0
                name: My SSID
                enabled: true
                splashPage: Click-through splash page
                ssidAdminAccessible: false
                authMode: 8021x-radius
                encryptionMode: wpa-eap
                wpaEncryptionMode: WPA2 only
                radiusServers:
                - host: 0.0.0.0
                  port: 3000
                  openRoamingCertificateId: 2
                  caCertificate: |-
                    -----BEGIN CERTIFICATE-----
                    MIIEKjCCAxKgAwIBAgIRANb+lsED3eb4+6YKLFFYqEkwDQYJKoZIhvcNAQELBQAw
                    gYcxCzAJBgNVBAYTAlVTMRMwEQYDVQQIDApDYWxpZm9ybmlhMREwDwYDVQQHDAhT
                    YW4gSm9zZTEcMBoGA1UECgwTQ2lzY28gU3lzdGVtcywgSW5jLjESMBAGA1UECwwJ
                    RE5BU3BhY2VzMR4wHAYDVQQDDBVjaXNjby5vcGVucm9hbWluZy5vcmcwHhcNMjAx
                    MTA1MjEzMzM1WhcNMjExMTA1MjIzMzM1WjCBpDEcMBoGCgmSJomT8ixkAQETDGRu
                    YXNwYWNlczpVUzELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAkNBMQ4wDAYDVQQKEwVD
                    aXNjbzEcMBoGA1UECxMTV0JBOldSSVggRW5kLUVudGl0eTE8MDoGA1UEAxMzNjQ3
                    MDcwNDM4NDQ5NjQxMjAwMDAuMTg4MzQuaHMuY2lzY28ub3BlbnJvYW1pbmcub3Jn
                    MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAoqjP9QgRGyUO3p7SH9QK
                    uTq6UYK7nAyjImgS4yQxeBkyZ5f2EUkX8m/AOcewpPxxPBhjPKRwxGeX3S50ksiA
                    ayFomUeslR0S0Z7RN9rzJa+CFyi9MwWIHMbLgXpB8tsSpgTAqwrzoTzOGq9fgC6u
                    pZhdZrBkg3FeJgD88goCi9mZDsY2YAoeGRLFJ2fR8iICqIVQy+Htq9pE22WBLpnS
                    KjL3+mR9FArHNFtWlhKF2YHMUqyHHrnZnF/Ns7QNoMMF7/CK18iAKgnb+2wuGKM2
                    aEMddOeOTtz+i/rgjkp/RGMt011EdCsso0/cTo9qqX/bxOOCE4/Mne/ChMkQPnNU
                    CwIDAQABo3IwcDAJBgNVHRMEAjAAMB8GA1UdIwQYMBaAFIG+4l5yiB01gP0sw4ML
                    USopqYcuMB0GA1UdDgQWBBSby1T9leYVOVVdOZXiHCSaDDEMiDAOBgNVHQ8BAf8E
                    BAMCBaAwEwYDVR0lBAwwCgYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAEyE
                    1mjSUyY6uNp6W4l20w7SskALSJDRKkOeZxAgF3VMxlsCuEl70s9oEfntwIpyQtSa
                    jON/9yJHbwm/Az824bmk8Dc7AXIPhay+dftXb8j529gPuYB9AKoPNg0NctkyYCQh
                    a/3YQVdDWX7XgmEiXkL57M7G6+IdcPDONLArfjOcT9qHdkVVq1AIjlMSx3OQQmm/
                    uoLb/G9q/97QA2/l8shG/Na8HjVqGLcl5TNZdbNhs2w9ogxr/GNzqdvym6RQ8vT/
                    UR2n+uwH4n1MUxmHYYeyot5dnIV1IJ6hQ54JAncM9HvCLFk1WHz6RKshQUCuPBiJ
                    wTw70BVktzJnb0VLeDg=
                    -----END CERTIFICATE-----
                radiusAccountingEnabled: false
                radiusEnabled: true
                radiusAttributeForGroupPolicies: Filter-Id
                radiusFailoverPolicy: "null"
                radiusLoadBalancingPolicy: "null"
                ipAssignmentMode: NAT mode
                adminSplashUrl: http://example.com
                splashTimeout: 30 minutes
                walledGardenEnabled: true
                walledGardenRanges:
                - example.com
                - 1.1.1.1/32
                minBitrate: 11
                bandSelection: 5 GHz band only
                perClientBandwidthLimitUp: 0
                perClientBandwidthLimitDown: 0
                visible: true
                availableOnAllAps: false
                availabilityTags:
                - test-tag
                perSsidBandwidthLimitUp: 0
                perSsidBandwidthLimitDown: 0
                mandatoryDhcpEnabled: false
                radiusAccountingServers:
                - host: 0.0.0.0
                  port: 3000
                  openRoamingCertificateId: 2
                  caCertificate: |-
                    -----BEGIN CERTIFICATE-----
                    MIIEKjCCAxKgAwIBAgIRANb+lsED3eb4+6YKLFFYqEkwDQYJKoZIhvcNAQELBQAw
                    gYcxCzAJBgNVBAYTAlVTMRMwEQYDVQQIDApDYWxpZm9ybmlhMREwDwYDVQQHDAhT
                    YW4gSm9zZTEcMBoGA1UECgwTQ2lzY28gU3lzdGVtcywgSW5jLjESMBAGA1UECwwJ
                    RE5BU3BhY2VzMR4wHAYDVQQDDBVjaXNjby5vcGVucm9hbWluZy5vcmcwHhcNMjAx
                    MTA1MjEzMzM1WhcNMjExMTA1MjIzMzM1WjCBpDEcMBoGCgmSJomT8ixkAQETDGRu
                    YXNwYWNlczpVUzELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAkNBMQ4wDAYDVQQKEwVD
                    aXNjbzEcMBoGA1UECxMTV0JBOldSSVggRW5kLUVudGl0eTE8MDoGA1UEAxMzNjQ3
                    MDcwNDM4NDQ5NjQxMjAwMDAuMTg4MzQuaHMuY2lzY28ub3BlbnJvYW1pbmcub3Jn
                    MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAoqjP9QgRGyUO3p7SH9QK
                    uTq6UYK7nAyjImgS4yQxeBkyZ5f2EUkX8m/AOcewpPxxPBhjPKRwxGeX3S50ksiA
                    ayFomUeslR0S0Z7RN9rzJa+CFyi9MwWIHMbLgXpB8tsSpgTAqwrzoTzOGq9fgC6u
                    pZhdZrBkg3FeJgD88goCi9mZDsY2YAoeGRLFJ2fR8iICqIVQy+Htq9pE22WBLpnS
                    KjL3+mR9FArHNFtWlhKF2YHMUqyHHrnZnF/Ns7QNoMMF7/CK18iAKgnb+2wuGKM2
                    aEMddOeOTtz+i/rgjkp/RGMt011EdCsso0/cTo9qqX/bxOOCE4/Mne/ChMkQPnNU
                    CwIDAQABo3IwcDAJBgNVHRMEAjAAMB8GA1UdIwQYMBaAFIG+4l5yiB01gP0sw4ML
                    USopqYcuMB0GA1UdDgQWBBSby1T9leYVOVVdOZXiHCSaDDEMiDAOBgNVHQ8BAf8E
                    BAMCBaAwEwYDVR0lBAwwCgYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEBAEyE
                    1mjSUyY6uNp6W4l20w7SskALSJDRKkOeZxAgF3VMxlsCuEl70s9oEfntwIpyQtSa
                    jON/9yJHbwm/Az824bmk8Dc7AXIPhay+dftXb8j529gPuYB9AKoPNg0NctkyYCQh
                    a/3YQVdDWX7XgmEiXkL57M7G6+IdcPDONLArfjOcT9qHdkVVq1AIjlMSx3OQQmm/
                    uoLb/G9q/97QA2/l8shG/Na8HjVqGLcl5TNZdbNhs2w9ogxr/GNzqdvym6RQ8vT/
                    UR2n+uwH4n1MUxmHYYeyot5dnIV1IJ6hQ54JAncM9HvCLFk1WHz6RKshQUCuPBiJ
                    wTw70BVktzJnb0VLeDg=
                    -----END CERTIFICATE-----
              schema:
                type: object
          description: Successful operation
      summary: Update the attributes of an MR SSID
      tags:
      - wireless
      - configure
      - ssids
      x-codegen-request-body-name: updateNetworkWirelessSsid
  /networks/{networkId}/wireless/ssids/{number}/bonjourForwarding:
    get:
      description: List the Bonjour forwarding setting and rules for the SSID
      operationId: getNetworkWirelessSsidBonjourForwarding
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Number
        in: path
        name: number
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                enabled: true
                rules:
                - description: A simple bonjour rule
                  vlanId: "1"
                  services:
                  - All Services
              schema:
                type: object
          description: Successful operation
      summary: List the Bonjour forwarding setting and rules for the SSID
      tags:
      - wireless
      - configure
      - ssids
      - bonjourForwarding
    put:
      description: Update the bonjour forwarding setting and rules for the SSID
      operationId: updateNetworkWirelessSsidBonjourForwarding
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Number
        in: path
        name: number
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_155'
        content:
          application/json:
            schema:
              example:
                enabled: true
                rules:
                - description: A simple bonjour rule
                  vlanId: "1"
                  services:
                  - All Services
              properties:
                enabled:
                  description: If true, Bonjour forwarding is enabled on this SSID.
                  type: boolean
                rules:
                  description: List of bonjour forwarding rules.
                  items:
                    $ref: '#/components/schemas/_networks__networkId__groupPolicies_bonjourForwarding_rules'
                  type: array
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                enabled: true
                rules:
                - description: A simple bonjour rule
                  vlanId: "1"
                  services:
                  - All Services
              schema:
                type: object
          description: Successful operation
      summary: Update the bonjour forwarding setting and rules for the SSID
      tags:
      - wireless
      - configure
      - ssids
      - bonjourForwarding
      x-codegen-request-body-name: updateNetworkWirelessSsidBonjourForwarding
  /networks/{networkId}/wireless/ssids/{number}/deviceTypeGroupPolicies:
    get:
      description: List the device type group policies for the SSID
      operationId: getNetworkWirelessSsidDeviceTypeGroupPolicies
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Number
        in: path
        name: number
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                enabled: true
                deviceTypePolicies:
                - deviceType: Android
                  devicePolicy: Allowed
                - deviceType: iPhone
                  devicePolicy: Group policy
                  groupPolicyId: 101
              schema:
                type: object
          description: Successful operation
      summary: List the device type group policies for the SSID
      tags:
      - wireless
      - configure
      - ssids
      - deviceTypeGroupPolicies
    put:
      description: Update the device type group policies for the SSID
      operationId: updateNetworkWirelessSsidDeviceTypeGroupPolicies
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Number
        in: path
        name: number
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_156'
        content:
          application/json:
            schema:
              example:
                enabled: true
                deviceTypePolicies:
                - deviceType: Android
                  devicePolicy: Allowed
                - deviceType: iPhone
                  devicePolicy: Group policy
                  groupPolicyId: 101
              properties:
                enabled:
                  description: If true, the SSID device type group policies are enabled.
                  type: boolean
                deviceTypePolicies:
                  description: List of device type policies.
                  items:
                    $ref: '#/components/schemas/_networks__networkId__wireless_ssids__number__deviceTypeGroupPolicies_deviceTypePolicies'
                  type: array
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                enabled: true
                deviceTypePolicies:
                - deviceType: Android
                  devicePolicy: Allowed
                - deviceType: iPhone
                  devicePolicy: Group policy
                  groupPolicyId: 101
              schema:
                type: object
          description: Successful operation
      summary: Update the device type group policies for the SSID
      tags:
      - wireless
      - configure
      - ssids
      - deviceTypeGroupPolicies
      x-codegen-request-body-name: updateNetworkWirelessSsidDeviceTypeGroupPolicies
  /networks/{networkId}/wireless/ssids/{number}/eapOverride:
    get:
      description: Return the EAP overridden parameters for an SSID
      operationId: getNetworkWirelessSsidEapOverride
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Number
        in: path
        name: number
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                timeout: 50
                maxRetries: 5
                identity:
                  retries: 5
                  timeout: 50
                eapolKey:
                  retries: 50
                  timeoutInMs: 5000
              schema:
                $ref: '#/components/schemas/inline_response_200_85'
          description: Successful operation
      summary: Return the EAP overridden parameters for an SSID
      tags:
      - wireless
      - configure
      - ssids
      - eapOverride
    put:
      description: Update the EAP overridden parameters for an SSID.
      operationId: updateNetworkWirelessSsidEapOverride
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Number
        in: path
        name: number
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_157'
        content:
          application/json:
            schema:
              example:
                timeout: 5
                identity:
                  retries: 5
                  timeout: 5
                maxRetries: 5
                eapolKey:
                  retries: 5
                  timeoutInMs: 5000
              properties:
                timeout:
                  description: General EAP timeout in seconds.
                  type: integer
                identity:
                  $ref: '#/components/schemas/inline_response_200_85_identity'
                maxRetries:
                  description: Maximum number of general EAP retries.
                  type: integer
                eapolKey:
                  $ref: '#/components/schemas/inline_response_200_85_eapolKey'
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                timeout: 50
                maxRetries: 5
                identity:
                  retries: 5
                  timeout: 50
                eapolKey:
                  retries: 50
                  timeoutInMs: 5000
              schema:
                $ref: '#/components/schemas/inline_response_200_85'
          description: Successful operation
      summary: Update the EAP overridden parameters for an SSID.
      tags:
      - wireless
      - configure
      - ssids
      - eapOverride
      x-codegen-request-body-name: updateNetworkWirelessSsidEapOverride
  /networks/{networkId}/wireless/ssids/{number}/firewall/l3FirewallRules:
    get:
      description: Return the L3 firewall rules for an SSID on an MR network
      operationId: getNetworkWirelessSsidFirewallL3FirewallRules
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Number
        in: path
        name: number
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                rules:
                - comment: Allow TCP traffic to subnet with HTTP servers.
                  policy: allow
                  protocol: tcp
                  destPort: "443"
                  destCidr: 192.168.1.0/24
              schema:
                type: object
          description: Successful operation
      summary: Return the L3 firewall rules for an SSID on an MR network
      tags:
      - wireless
      - configure
      - ssids
      - firewall
      - l3FirewallRules
    put:
      description: Update the L3 firewall rules of an SSID on an MR network
      operationId: updateNetworkWirelessSsidFirewallL3FirewallRules
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Number
        in: path
        name: number
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_158'
        content:
          application/json:
            schema:
              example:
                rules:
                - comment: Allow TCP traffic to subnet with HTTP servers.
                  policy: allow
                  protocol: tcp
                  destPort: "443"
                  destCidr: 192.168.1.0/24
              properties:
                rules:
                  description: An ordered array of the firewall rules for this SSID
                    (not including the local LAN access rule or the default rule)
                  items:
                    $ref: '#/components/schemas/_networks__networkId__wireless_ssids__number__firewall_l3FirewallRules_rules'
                  type: array
                allowLanAccess:
                  description: Allow wireless client access to local LAN (boolean
                    value - true allows access and false denies access) (optional)
                  type: boolean
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                rules:
                - comment: Allow TCP traffic to subnet with HTTP servers.
                  policy: allow
                  protocol: tcp
                  destPort: "443"
                  destCidr: 192.168.1.0/24
              schema:
                type: object
          description: Successful operation
      summary: Update the L3 firewall rules of an SSID on an MR network
      tags:
      - wireless
      - configure
      - ssids
      - firewall
      - l3FirewallRules
      x-codegen-request-body-name: updateNetworkWirelessSsidFirewallL3FirewallRules
  /networks/{networkId}/wireless/ssids/{number}/firewall/l7FirewallRules:
    get:
      description: Return the L7 firewall rules for an SSID on an MR network
      operationId: getNetworkWirelessSsidFirewallL7FirewallRules
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Number
        in: path
        name: number
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                rules:
                - policy: deny
                  type: host
                  value: google.com
                - policy: deny
                  type: port
                  value: "23"
                - policy: deny
                  type: ipRange
                  value: 10.11.12.00/24
                - policy: deny
                  type: ipRange
                  value: 10.11.12.00/24:5555
              schema:
                type: object
          description: Successful operation
      summary: Return the L7 firewall rules for an SSID on an MR network
      tags:
      - wireless
      - configure
      - ssids
      - firewall
      - l7FirewallRules
    put:
      description: Update the L7 firewall rules of an SSID on an MR network
      operationId: updateNetworkWirelessSsidFirewallL7FirewallRules
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Number
        in: path
        name: number
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_159'
        content:
          application/json:
            schema:
              example:
                rules:
                - policy: deny
                  type: host
                  value: google.com
                - policy: deny
                  type: port
                  value: "23"
                - policy: deny
                  type: ipRange
                  value: 10.11.12.00/24
                - policy: deny
                  type: ipRange
                  value: 10.11.12.00/24:5555
              properties:
                rules:
                  description: An array of L7 firewall rules for this SSID. Rules
                    will get applied in the same order user has specified in request.
                    Empty array will clear the L7 firewall rule configuration.
                  items:
                    $ref: '#/components/schemas/_networks__networkId__wireless_ssids__number__firewall_l7FirewallRules_rules'
                  type: array
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                rules:
                - policy: deny
                  type: host
                  value: google.com
                - policy: deny
                  type: port
                  value: "23"
                - policy: deny
                  type: ipRange
                  value: 10.11.12.00/24
                - policy: deny
                  type: ipRange
                  value: 10.11.12.00/24:5555
              schema:
                type: object
          description: Successful operation
      summary: Update the L7 firewall rules of an SSID on an MR network
      tags:
      - wireless
      - configure
      - ssids
      - firewall
      - l7FirewallRules
      x-codegen-request-body-name: updateNetworkWirelessSsidFirewallL7FirewallRules
  /networks/{networkId}/wireless/ssids/{number}/hotspot20:
    get:
      description: Return the Hotspot 2.0 settings for an SSID
      operationId: getNetworkWirelessSsidHotspot20
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Number
        in: path
        name: number
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                enabled: true
                operator:
                  name: Meraki Product Management
                venue:
                  name: SF Branch
                  type: Unspecified Assembly
                networkAccessType: Private network
                domains:
                - meraki.local
                - domain2.com
                roamConsortOis:
                - ABC123
                - 456EFG
                mccMncs:
                - mcc: "123"
                  mnc: "456"
                - mcc: "563"
                  mnc: "232"
                naiRealms:
                - format: "1"
                  name: Realm 1
                  methods:
                  - id: "1"
                    authenticationTypes:
                      nonEapInnerAuthentication:
                      - MSCHAP
                      eapInnerAuthentication:
                      - EAP-TTLS with MSCHAPv2
                      credentials: []
                      tunneledEapMethodCredentials: []
              schema:
                type: object
          description: Successful operation
      summary: Return the Hotspot 2.0 settings for an SSID
      tags:
      - wireless
      - configure
      - ssids
      - hotspot20
    put:
      description: Update the Hotspot 2.0 settings of an SSID
      operationId: updateNetworkWirelessSsidHotspot20
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Number
        in: path
        name: number
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_160'
        content:
          application/json:
            schema:
              example:
                enabled: true
                operator:
                  name: Meraki Product Management
                venue:
                  name: SF Branch
                  type: Unspecified Assembly
                networkAccessType: Private network
                domains:
                - meraki.local
                - domain2.com
                roamConsortOis:
                - ABC123
                - 456EFG
                mccMncs:
                - mcc: "123"
                  mnc: "456"
                - mcc: "563"
                  mnc: "232"
                naiRealms:
                - format: "1"
                  name: Realm 1
                  methods:
                  - id: "1"
                    authenticationTypes:
                      nonEapInnerAuthentication:
                      - MSCHAP
                      eapInnerAuthentication:
                      - EAP-TTLS with MSCHAPv2
                      credentials: []
                      tunneledEapMethodCredentials: []
              properties:
                enabled:
                  description: Whether or not Hotspot 2.0 for this SSID is enabled
                  type: boolean
                operator:
                  $ref: '#/components/schemas/_networks__networkId__wireless_ssids__number__hotspot20_operator'
                venue:
                  $ref: '#/components/schemas/_networks__networkId__wireless_ssids__number__hotspot20_venue'
                networkAccessType:
                  description: The network type of this SSID ('Private network', 'Private
                    network with guest access', 'Chargeable public network', 'Free
                    public network', 'Personal device network', 'Emergency services
                    only network', 'Test or experimental', 'Wildcard')
                  enum:
                  - Chargeable public network
                  - Emergency services only network
                  - Free public network
                  - Personal device network
                  - Private network
                  - Private network with guest access
                  - Test or experimental
                  - Wildcard
                  type: string
                domains:
                  description: An array of domain names
                  items:
                    type: string
                  type: array
                roamConsortOis:
                  description: An array of roaming consortium OIs (hexadecimal number
                    3-5 octets in length)
                  items:
                    type: string
                  type: array
                mccMncs:
                  description: An array of MCC/MNC pairs
                  items:
                    $ref: '#/components/schemas/_networks__networkId__wireless_ssids__number__hotspot20_mccMncs'
                  type: array
                naiRealms:
                  description: An array of NAI realms
                  items:
                    $ref: '#/components/schemas/_networks__networkId__wireless_ssids__number__hotspot20_naiRealms'
                  type: array
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                enabled: true
                operator:
                  name: Meraki Product Management
                venue:
                  name: SF Branch
                  type: Unspecified Assembly
                networkAccessType: Private network
                domains:
                - meraki.local
                - domain2.com
                roamConsortOis:
                - ABC123
                - 456EFG
                mccMncs:
                - mcc: "123"
                  mnc: "456"
                - mcc: "563"
                  mnc: "232"
                naiRealms:
                - format: "1"
                  name: Realm 1
                  methods:
                  - id: "1"
                    authenticationTypes:
                      nonEapInnerAuthentication:
                      - MSCHAP
                      eapInnerAuthentication:
                      - EAP-TTLS with MSCHAPv2
                      credentials: []
                      tunneledEapMethodCredentials: []
              schema:
                type: object
          description: Successful operation
      summary: Update the Hotspot 2.0 settings of an SSID
      tags:
      - wireless
      - configure
      - ssids
      - hotspot20
      x-codegen-request-body-name: updateNetworkWirelessSsidHotspot20
  /networks/{networkId}/wireless/ssids/{number}/identityPsks:
    get:
      description: List all Identity PSKs in a wireless network
      operationId: getNetworkWirelessSsidIdentityPsks
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Number
        in: path
        name: number
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - name: Sample Identity PSK
                id: "1284392014819"
                groupPolicyId: "101"
                passphrase: secret
                wifiPersonalNetworkId: "1284392014819"
                email: miles@meraki.com
                expiresAt: 2018-02-11T00:00:00.090210Z
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_86'
                type: array
          description: Successful operation
      summary: List all Identity PSKs in a wireless network
      tags:
      - wireless
      - configure
      - ssids
      - identityPsks
    post:
      description: Create an Identity PSK
      operationId: createNetworkWirelessSsidIdentityPsk
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Number
        in: path
        name: number
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_161'
        content:
          application/json:
            schema:
              example:
                id: "1284392014819"
                name: Sample Identity PSK
                passphrase: secret
                groupPolicyId: "101"
                expiresAt: 2018-02-11T00:00:00.090210Z
              properties:
                name:
                  description: The name of the Identity PSK
                  type: string
                passphrase:
                  description: The passphrase for client authentication. If left blank,
                    one will be auto-generated.
                  type: string
                groupPolicyId:
                  description: The group policy to be applied to clients
                  type: string
                expiresAt:
                  description: Timestamp for when the Identity PSK expires. Will not
                    expire if left blank.
                  format: date-time
                  type: string
              required:
              - groupPolicyId
              - name
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                id: "1284392014819"
                name: Sample Identity PSK
                passphrase: secret
                groupPolicyId: "101"
                expiresAt: 2018-02-11T00:00:00.090210Z
              schema:
                type: object
          description: Successful operation
      summary: Create an Identity PSK
      tags:
      - wireless
      - configure
      - ssids
      - identityPsks
      x-codegen-request-body-name: createNetworkWirelessSsidIdentityPsk
  /networks/{networkId}/wireless/ssids/{number}/identityPsks/{identityPskId}:
    delete:
      description: Delete an Identity PSK
      operationId: deleteNetworkWirelessSsidIdentityPsk
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Number
        in: path
        name: number
        required: true
        schema:
          type: string
      - description: Identity psk ID
        in: path
        name: identityPskId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Successful operation
      summary: Delete an Identity PSK
      tags:
      - wireless
      - configure
      - ssids
      - identityPsks
    get:
      description: Return an Identity PSK
      operationId: getNetworkWirelessSsidIdentityPsk
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Number
        in: path
        name: number
        required: true
        schema:
          type: string
      - description: Identity psk ID
        in: path
        name: identityPskId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                name: Sample Identity PSK
                id: "1284392014819"
                groupPolicyId: "101"
                passphrase: secret
                wifiPersonalNetworkId: "1284392014819"
                email: miles@meraki.com
                expiresAt: 2018-02-11T00:00:00.090210Z
              schema:
                $ref: '#/components/schemas/inline_response_200_86'
          description: Successful operation
      summary: Return an Identity PSK
      tags:
      - wireless
      - configure
      - ssids
      - identityPsks
    put:
      description: Update an Identity PSK
      operationId: updateNetworkWirelessSsidIdentityPsk
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Number
        in: path
        name: number
        required: true
        schema:
          type: string
      - description: Identity psk ID
        in: path
        name: identityPskId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_162'
        content:
          application/json:
            schema:
              example:
                id: "1284392014819"
                name: Sample Identity PSK
                passphrase: secret
                groupPolicyId: "101"
                expiresAt: 2018-02-11T00:00:00.090210Z
              properties:
                name:
                  description: The name of the Identity PSK
                  type: string
                passphrase:
                  description: The passphrase for client authentication
                  type: string
                groupPolicyId:
                  description: The group policy to be applied to clients
                  type: string
                expiresAt:
                  description: Timestamp for when the Identity PSK expires, or 'null'
                    to never expire
                  format: date-time
                  type: string
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                id: "1284392014819"
                name: Sample Identity PSK
                passphrase: secret
                groupPolicyId: "101"
                expiresAt: 2018-02-11T00:00:00.090210Z
              schema:
                type: object
          description: Successful operation
      summary: Update an Identity PSK
      tags:
      - wireless
      - configure
      - ssids
      - identityPsks
      x-codegen-request-body-name: updateNetworkWirelessSsidIdentityPsk
  /networks/{networkId}/wireless/ssids/{number}/schedules:
    get:
      description: List the outage schedule for the SSID
      operationId: getNetworkWirelessSsidSchedules
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Number
        in: path
        name: number
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                enabled: true
                ranges:
                - startDay: Tuesday
                  startTime: 01:00
                  endDay: Tuesday
                  endTime: 05:00
                - startDay: Fri
                  startTime: 19:00
                  endDay: monday
                  endTime: 05:00
              schema:
                type: object
          description: Successful operation
      summary: List the outage schedule for the SSID
      tags:
      - wireless
      - configure
      - ssids
      - schedules
    put:
      description: Update the outage schedule for the SSID
      operationId: updateNetworkWirelessSsidSchedules
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Number
        in: path
        name: number
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_163'
        content:
          application/json:
            schema:
              example:
                enabled: true
                ranges:
                - startDay: Tuesday
                  startTime: 01:00
                  endDay: Tuesday
                  endTime: 05:00
                - startDay: Fri
                  startTime: 19:00
                  endDay: monday
                  endTime: 05:00
              properties:
                enabled:
                  description: If true, the SSID outage schedule is enabled.
                  type: boolean
                ranges:
                  description: List of outage ranges. Has a start date and time, and
                    end date and time. If this parameter is passed in along with rangesInSeconds
                    parameter, this will take precedence.
                  items:
                    $ref: '#/components/schemas/_networks__networkId__wireless_ssids__number__schedules_ranges'
                  type: array
                rangesInSeconds:
                  description: List of outage ranges in seconds since Sunday at Midnight.
                    Has a start and end. If this parameter is passed in along with
                    the ranges parameter, ranges will take precedence.
                  items:
                    $ref: '#/components/schemas/_networks__networkId__wireless_ssids__number__schedules_rangesInSeconds'
                  type: array
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                enabled: true
                ranges:
                - startDay: Tuesday
                  startTime: 01:00
                  endDay: Tuesday
                  endTime: 05:00
                - startDay: Fri
                  startTime: 19:00
                  endDay: monday
                  endTime: 05:00
              schema:
                type: object
          description: Successful operation
      summary: Update the outage schedule for the SSID
      tags:
      - wireless
      - configure
      - ssids
      - schedules
      x-codegen-request-body-name: updateNetworkWirelessSsidSchedules
  /networks/{networkId}/wireless/ssids/{number}/splash/settings:
    get:
      description: Display the splash page settings for the given SSID
      operationId: getNetworkWirelessSsidSplashSettings
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Number
        in: path
        name: number
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                ssidNumber: 0
                splashPage: Click-through splash page
                useSplashUrl: true
                splashUrl: https://www.custom_splash_url.com
                splashTimeout: 1440
                redirectUrl: https://example.com
                useRedirectUrl: true
                welcomeMessage: Welcome!
                splashLogo:
                  md5: abcd1234
                  extension: jpg
                splashImage:
                  md5: 542cccac8d7dedee0f185311d154d194
                  extension: jpg
                splashPrepaidFront:
                  md5: 542cccac8d7dedee0f185311d154d194
                  extension: jpg
                guestSponsorship:
                  durationInMinutes: 30
                  guestCanRequestTimeframe: false
                blockAllTrafficBeforeSignOn: false
                controllerDisconnectionBehavior: default
                allowSimultaneousLogins: false
                billing:
                  freeAccess:
                    enabled: true
                    durationInMinutes: 120
                  prepaidAccessFastLoginEnabled: true
                  replyToEmailAddress: user@email.com
                sentryEnrollment:
                  systemsManagerNetwork:
                    id: N_1234
                  strength: focused
                  enforcedSystems:
                  - iOS
                selfRegistration:
                  enabled: true
                  authorizationType: admin
              schema:
                $ref: '#/components/schemas/inline_response_200_87'
          description: Successful operation
      summary: Display the splash page settings for the given SSID
      tags:
      - wireless
      - configure
      - ssids
      - splash
      - settings
    put:
      description: Modify the splash page settings for the given SSID
      operationId: updateNetworkWirelessSsidSplashSettings
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Number
        in: path
        name: number
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_164'
        content:
          application/json:
            schema:
              example:
                splashUrl: https://www.custom_splash_url.com
                useSplashUrl: true
                splashTimeout: 1440
                redirectUrl: https://example.com
                useRedirectUrl: true
                welcomeMessage: Welcome!
                splashLogo:
                  md5: abcd1234
                  extension: jpg
                  image:
                    format: jpg
                    contents: Q2lzY28gTWVyYWtp
                splashImage:
                  md5: 542cccac8d7dedee0f185311d154d194
                  extension: jpg
                  image:
                    format: jpg
                    contents: Q2lzY28gTWVyYWtp
                splashPrepaidFront:
                  md5: 542cccac8d7dedee0f185311d154d194
                  extension: jpg
                  image:
                    format: jpg
                    contents: Q2lzY28gTWVyYWtp
                blockAllTrafficBeforeSignOn: false
                controllerDisconnectionBehavior: default
                allowSimultaneousLogins: false
                guestSponsorship:
                  durationInMinutes: 30
                  guestCanRequestTimeframe: false
                billing:
                  freeAccess:
                    enabled: true
                    durationInMinutes: 120
                  prepaidAccessFastLoginEnabled: true
                  replyToEmailAddress: user@email.com
                sentryEnrollment:
                  systemsManagerNetwork:
                    id: N_1234
                  strength: focused
                  enforcedSystems:
                  - iOS
              properties:
                splashUrl:
                  description: '[optional] The custom splash URL of the click-through
                    splash page. Note that the URL can be configured without necessarily
                    being used. In order to enable the custom URL, see ''useSplashUrl'''
                  type: string
                useSplashUrl:
                  description: '[optional] Boolean indicating whether the users will
                    be redirected to the custom splash url. A custom splash URL must
                    be set if this is true. Note that depending on your SSID''s access
                    control settings, it may not be possible to use the custom splash
                    URL.'
                  type: boolean
                splashTimeout:
                  description: Splash timeout in minutes. This will determine how
                    often users will see the splash page.
                  type: integer
                redirectUrl:
                  description: The custom redirect URL where the users will go after
                    the splash page.
                  type: string
                useRedirectUrl:
                  description: The Boolean indicating whether the the user will be
                    redirected to the custom redirect URL after the splash page. A
                    custom redirect URL must be set if this is true.
                  type: boolean
                welcomeMessage:
                  description: The welcome message for the users on the splash page.
                  type: string
                splashLogo:
                  $ref: '#/components/schemas/_networks__networkId__wireless_ssids__number__splash_settings_splashLogo'
                splashImage:
                  $ref: '#/components/schemas/_networks__networkId__wireless_ssids__number__splash_settings_splashImage'
                splashPrepaidFront:
                  $ref: '#/components/schemas/_networks__networkId__wireless_ssids__number__splash_settings_splashPrepaidFront'
                blockAllTrafficBeforeSignOn:
                  description: How restricted allowing traffic should be. If true,
                    all traffic types are blocked until the splash page is acknowledged.
                    If false, all non-HTTP traffic is allowed before the splash page
                    is acknowledged.
                  type: boolean
                controllerDisconnectionBehavior:
                  description: How login attempts should be handled when the controller
                    is unreachable. Can be either 'open', 'restricted', or 'default'.
                  enum:
                  - default
                  - open
                  - restricted
                  type: string
                allowSimultaneousLogins:
                  description: Whether or not to allow simultaneous logins from different
                    devices.
                  type: boolean
                guestSponsorship:
                  $ref: '#/components/schemas/_networks__networkId__wireless_ssids__number__splash_settings_guestSponsorship'
                billing:
                  $ref: '#/components/schemas/_networks__networkId__wireless_ssids__number__splash_settings_billing'
                sentryEnrollment:
                  $ref: '#/components/schemas/_networks__networkId__wireless_ssids__number__splash_settings_sentryEnrollment'
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                ssidNumber: 0
                splashPage: Click-through splash page
                useSplashUrl: true
                splashUrl: https://www.custom_splash_url.com
                splashTimeout: 1440
                redirectUrl: https://example.com
                useRedirectUrl: true
                welcomeMessage: Welcome!
                splashLogo:
                  md5: abcd1234
                  extension: jpg
                splashImage:
                  md5: 542cccac8d7dedee0f185311d154d194
                  extension: jpg
                splashPrepaidFront:
                  md5: 542cccac8d7dedee0f185311d154d194
                  extension: jpg
                guestSponsorship:
                  durationInMinutes: 30
                  guestCanRequestTimeframe: false
                blockAllTrafficBeforeSignOn: false
                controllerDisconnectionBehavior: default
                allowSimultaneousLogins: false
                billing:
                  freeAccess:
                    enabled: true
                    durationInMinutes: 120
                  prepaidAccessFastLoginEnabled: true
                  replyToEmailAddress: user@email.com
                sentryEnrollment:
                  systemsManagerNetwork:
                    id: N_1234
                  strength: focused
                  enforcedSystems:
                  - iOS
                selfRegistration:
                  enabled: true
                  authorizationType: admin
              schema:
                $ref: '#/components/schemas/inline_response_200_87'
          description: Successful operation
      summary: Modify the splash page settings for the given SSID
      tags:
      - wireless
      - configure
      - ssids
      - splash
      - settings
      x-codegen-request-body-name: updateNetworkWirelessSsidSplashSettings
  /networks/{networkId}/wireless/ssids/{number}/trafficShaping/rules:
    get:
      description: Display the traffic shaping settings for a SSID on an MR network
      operationId: getNetworkWirelessSsidTrafficShapingRules
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Number
        in: path
        name: number
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                trafficShapingEnabled: true
                defaultRulesEnabled: true
                rules:
                - definitions:
                  - type: host
                    value: google.com
                  - type: port
                    value: "9090"
                  - type: ipRange
                    value: 192.1.0.0
                  - type: ipRange
                    value: 192.1.0.0/16
                  - type: ipRange
                    value: 10.1.0.0/16:80
                  - type: localNet
                    value: 192.168.0.0/16
                  perClientBandwidthLimits:
                    settings: custom
                    bandwidthLimits:
                      limitUp: 1000000
                      limitDown: 1000000
                  dscpTagValue: 0
                  pcpTagValue: 0
              schema:
                type: object
          description: Successful operation
      summary: Display the traffic shaping settings for a SSID on an MR network
      tags:
      - wireless
      - configure
      - ssids
      - trafficShaping
      - rules
    put:
      description: Update the traffic shaping settings for an SSID on an MR network
      operationId: updateNetworkWirelessSsidTrafficShapingRules
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Number
        in: path
        name: number
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_165'
        content:
          application/json:
            schema:
              example:
                trafficShapingEnabled: true
                defaultRulesEnabled: true
                rules:
                - definitions:
                  - type: host
                    value: google.com
                  - type: port
                    value: "9090"
                  - type: ipRange
                    value: 192.1.0.0
                  - type: ipRange
                    value: 192.1.0.0/16
                  - type: ipRange
                    value: 10.1.0.0/16:80
                  - type: localNet
                    value: 192.168.0.0/16
                  perClientBandwidthLimits:
                    settings: custom
                    bandwidthLimits:
                      limitUp: 1000000
                      limitDown: 1000000
                  dscpTagValue: 0
                  pcpTagValue: 0
              properties:
                trafficShapingEnabled:
                  description: Whether traffic shaping rules are applied to clients
                    on your SSID.
                  type: boolean
                defaultRulesEnabled:
                  description: Whether default traffic shaping rules are enabled (true)
                    or disabled (false). There are 4 default rules, which can be seen
                    on your network's traffic shaping page. Note that default rules
                    count against the rule limit of 8.
                  type: boolean
                rules:
                  description: |2
                        An array of traffic shaping rules. Rules are applied in the order that
                        they are specified in. An empty list (or null) means no rules. Note that
                        you are allowed a maximum of 8 rules.
                  items:
                    $ref: '#/components/schemas/_networks__networkId__wireless_ssids__number__trafficShaping_rules_rules'
                  type: array
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                trafficShapingEnabled: true
                defaultRulesEnabled: true
                rules:
                - definitions:
                  - type: host
                    value: google.com
                  - type: port
                    value: "9090"
                  - type: ipRange
                    value: 192.1.0.0
                  - type: ipRange
                    value: 192.1.0.0/16
                  - type: ipRange
                    value: 10.1.0.0/16:80
                  - type: localNet
                    value: 192.168.0.0/16
                  perClientBandwidthLimits:
                    settings: custom
                    bandwidthLimits:
                      limitUp: 1000000
                      limitDown: 1000000
                  dscpTagValue: 0
                  pcpTagValue: 0
              schema:
                type: object
          description: Successful operation
      summary: Update the traffic shaping settings for an SSID on an MR network
      tags:
      - wireless
      - configure
      - ssids
      - trafficShaping
      - rules
      x-codegen-request-body-name: updateNetworkWirelessSsidTrafficShapingRules
  /networks/{networkId}/wireless/ssids/{number}/vpn:
    get:
      description: List the VPN settings for the SSID.
      operationId: getNetworkWirelessSsidVpn
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Number
        in: path
        name: number
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                concentrator:
                  networkId: N_123
                  vlanId: 44
                  name: some concentrator name
                failover:
                  requestIp: 1.1.1.1
                  heartbeatInterval: 10
                  idleTimeout: 30
                splitTunnel:
                  enabled: true
                  rules:
                  - protocol: Any
                    destCidr: 1.1.1.1/32
                    destPort: any
                    policy: allow
                    comment: split tunnel rule 1
                  - destCidr: foo.com
                    destPort: any
                    policy: deny
                    comment: split tunnel rule 2
              schema:
                type: object
          description: Successful operation
      summary: List the VPN settings for the SSID.
      tags:
      - wireless
      - configure
      - ssids
      - vpn
    put:
      description: Update the VPN settings for the SSID
      operationId: updateNetworkWirelessSsidVpn
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: Number
        in: path
        name: number
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_166'
        content:
          application/json:
            schema:
              example:
                concentrator:
                  networkId: N_123
                  vlanId: 44
                  name: some concentrator name
                failover:
                  requestIp: 1.1.1.1
                  heartbeatInterval: 10
                  idleTimeout: 30
                splitTunnel:
                  enabled: true
                  rules:
                  - protocol: Any
                    destCidr: 1.1.1.1/32
                    destPort: any
                    policy: allow
                    comment: split tunnel rule 1
                  - destCidr: foo.com
                    destPort: any
                    policy: deny
                    comment: split tunnel rule 2
              properties:
                concentrator:
                  $ref: '#/components/schemas/_networks__networkId__wireless_ssids__number__vpn_concentrator'
                splitTunnel:
                  $ref: '#/components/schemas/_networks__networkId__wireless_ssids__number__vpn_splitTunnel'
                failover:
                  $ref: '#/components/schemas/_networks__networkId__wireless_ssids__number__vpn_failover'
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                concentrator:
                  networkId: N_123
                  vlanId: 44
                  name: some concentrator name
                failover:
                  requestIp: 1.1.1.1
                  heartbeatInterval: 10
                  idleTimeout: 30
                splitTunnel:
                  enabled: true
                  rules:
                  - protocol: Any
                    destCidr: 1.1.1.1/32
                    destPort: any
                    policy: allow
                    comment: split tunnel rule 1
                  - destCidr: foo.com
                    destPort: any
                    policy: deny
                    comment: split tunnel rule 2
              schema:
                type: object
          description: Successful operation
      summary: Update the VPN settings for the SSID
      tags:
      - wireless
      - configure
      - ssids
      - vpn
      x-codegen-request-body-name: updateNetworkWirelessSsidVpn
  /networks/{networkId}/wireless/usageHistory:
    get:
      description: Return AP usage over time for a device or network client
      operationId: getNetworkWirelessUsageHistory
      parameters:
      - description: Network ID
        in: path
        name: networkId
        required: true
        schema:
          type: string
      - description: The beginning of the timespan for the data. The maximum lookback
          period is 31 days from today.
        in: query
        name: t0
        schema:
          type: string
      - description: The end of the timespan for the data. t1 can be a maximum of
          31 days after t0.
        in: query
        name: t1
        schema:
          type: string
      - description: The timespan for which the information will be fetched. If specifying
          timespan, do not specify parameters t0 and t1. The value must be in seconds
          and be less than or equal to 31 days. The default is 7 days.
        in: query
        name: timespan
        schema:
          format: float
          type: number
      - description: 'The time resolution in seconds for returned data. The valid
          resolutions are: 300, 600, 1200, 3600, 14400, 86400. The default is 86400.'
        in: query
        name: resolution
        schema:
          type: integer
      - description: Automatically select a data resolution based on the given timespan;
          this overrides the value specified by the 'resolution' parameter. The default
          setting is false.
        in: query
        name: autoResolution
        schema:
          type: boolean
      - description: Filter results by network client to return per-device AP usage
          over time inner joined by the queried client's connection history.
        in: query
        name: clientId
        schema:
          type: string
      - description: Filter results by device. Requires :band.
        in: query
        name: deviceSerial
        schema:
          type: string
      - description: Filter results by AP tag; either :clientId or :deviceSerial must
          be jointly specified.
        in: query
        name: apTag
        schema:
          type: string
      - description: Filter results by band (either '2.4', '5' or '6').
        in: query
        name: band
        schema:
          enum:
          - "2.4"
          - "5"
          - "6"
          type: string
      - description: Filter results by SSID number.
        in: query
        name: ssid
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              example:
              - startTs: 2020-01-01T00:00:00Z
                endTs: 2020-01-01T01:00:00Z
                totalKbps: 2590
                sentKbps: 159
                receivedKbps: 2431
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_88'
                type: array
          description: Successful operation
      summary: Return AP usage over time for a device or network client
      tags:
      - wireless
      - monitor
      - usageHistory
  /organizations:
    get:
      description: List the organizations that the user has privileges on
      operationId: getOrganizations
      responses:
        "200":
          content:
            application/json:
              example:
              - id: "2930418"
                name: My organization
                url: https://dashboard.meraki.com/o/VjjsAd/manage/organization/overview
                api:
                  enabled: true
                licensing:
                  model: co-term
                cloud:
                  region:
                    name: North America
                management:
                  details:
                  - name: MSP ID
                    value: "123456"
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_89'
                type: array
          description: Successful operation
      summary: List the organizations that the user has privileges on
      tags:
      - organizations
      - configure
    post:
      description: Create a new organization
      operationId: createOrganization
      requestBody:
        $ref: '#/components/requestBodies/inline_object_167'
        content:
          application/json:
            schema:
              example:
                name: My organization
                management:
                  details:
                  - name: MSP ID
                    value: "123456"
              properties:
                name:
                  description: The name of the organization
                  type: string
                management:
                  $ref: '#/components/schemas/_organizations_management'
              required:
              - name
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                id: "2930418"
                name: My organization
                url: https://dashboard.meraki.com/o/VjjsAd/manage/organization/overview
                api:
                  enabled: true
                licensing:
                  model: co-term
                cloud:
                  region:
                    name: North America
                management:
                  details:
                  - name: MSP ID
                    value: "123456"
              schema:
                $ref: '#/components/schemas/inline_response_200_89'
          description: Successful operation
      summary: Create a new organization
      tags:
      - organizations
      - configure
      x-codegen-request-body-name: createOrganization
  /organizations/{organizationId}:
    delete:
      description: Delete an organization
      operationId: deleteOrganization
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Successful operation
      summary: Delete an organization
      tags:
      - organizations
      - configure
    get:
      description: Return an organization
      operationId: getOrganization
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                id: "2930418"
                name: My organization
                url: https://dashboard.meraki.com/o/VjjsAd/manage/organization/overview
                api:
                  enabled: true
                licensing:
                  model: co-term
                cloud:
                  region:
                    name: North America
                management:
                  details:
                  - name: MSP ID
                    value: "123456"
              schema:
                $ref: '#/components/schemas/inline_response_200_89'
          description: Successful operation
      summary: Return an organization
      tags:
      - organizations
      - configure
    put:
      description: Update an organization
      operationId: updateOrganization
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_168'
        content:
          application/json:
            schema:
              example:
                name: My organization
                management:
                  details:
                  - name: MSP ID
                    value: "123456"
                api:
                  enabled: true
              properties:
                name:
                  description: The name of the organization
                  type: string
                management:
                  $ref: '#/components/schemas/_organizations_management'
                api:
                  $ref: '#/components/schemas/_organizations__organizationId__api'
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                id: "2930418"
                name: My organization
                url: https://dashboard.meraki.com/o/VjjsAd/manage/organization/overview
                api:
                  enabled: true
                licensing:
                  model: co-term
                cloud:
                  region:
                    name: North America
                management:
                  details:
                  - name: MSP ID
                    value: "123456"
              schema:
                $ref: '#/components/schemas/inline_response_200_89'
          description: Successful operation
      summary: Update an organization
      tags:
      - organizations
      - configure
      x-codegen-request-body-name: updateOrganization
  /organizations/{organizationId}/actionBatches:
    get:
      description: Return the list of action batches in the organization
      operationId: getOrganizationActionBatches
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: Filter batches by status. Valid types are pending, completed,
          and failed.
        in: query
        name: status
        schema:
          enum:
          - completed
          - failed
          - pending
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - id: "123"
                organizationId: "2930418"
                confirmed: true
                synchronous: false
                status:
                  completed: true
                  failed: false
                  errors: []
                  createdResources:
                  - id: 100
                    uri: /networks/L_XXXXX/groupPolicies/100
                actions:
                - resource: /devices/QXXX-XXXX-XXXX/switch/ports/3
                  operation: update
                  body:
                    enabled: false
                - resource: /networks/L_XXXXX/groupPolicies
                  operation: create
                  body:
                    name: Group 1
              schema:
                items:
                  properties: {}
                  type: object
                type: array
          description: Successful operation
      summary: Return the list of action batches in the organization
      tags:
      - organizations
      - configure
      - actionBatches
    post:
      description: Create an action batch
      operationId: createOrganizationActionBatch
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_169'
        content:
          application/json:
            schema:
              example:
                confirmed: true
                synchronous: true
                actions:
                - resource: /devices/QXXX-XXXX-XXXX/switch/ports/3
                  operation: create
              properties:
                confirmed:
                  description: Set to true for immediate execution. Set to false if
                    the action should be previewed before executing. This property
                    cannot be unset once it is true. Defaults to false.
                  type: boolean
                synchronous:
                  description: Set to true to force the batch to run synchronous.
                    There can be at most 20 actions in synchronous batch. Defaults
                    to false.
                  type: boolean
                actions:
                  description: A set of changes to make as part of this action (<a
                    href='https://developer.cisco.com/meraki/api/#/rest/guides/action-batches/'>more
                    details</a>)
                  items:
                    $ref: '#/components/schemas/_organizations__organizationId__actionBatches_actions'
                  type: array
              required:
              - actions
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                id: "1234"
                organizationId: "2930418"
                confirmed: true
                synchronous: false
                status:
                  completed: true
                  failed: false
                  errors: []
                  createdResources:
                  - id: "1284392014819"
                    uri: /networks/L_XXXXX/groupPolicies/100
                actions:
                - resource: /devices/QXXX-XXXX-XXXX/switch/ports/3
                  operation: update
              schema:
                $ref: '#/components/schemas/inline_response_201_5'
          description: Successful operation
      summary: Create an action batch
      tags:
      - organizations
      - configure
      - actionBatches
      x-codegen-request-body-name: createOrganizationActionBatch
  /organizations/{organizationId}/actionBatches/{actionBatchId}:
    delete:
      description: Delete an action batch
      operationId: deleteOrganizationActionBatch
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: Action batch ID
        in: path
        name: actionBatchId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Successful operation
      summary: Delete an action batch
      tags:
      - organizations
      - configure
      - actionBatches
    get:
      description: Return an action batch
      operationId: getOrganizationActionBatch
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: Action batch ID
        in: path
        name: actionBatchId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                id: "1234"
                organizationId: "2930418"
                confirmed: true
                synchronous: false
                status:
                  completed: true
                  failed: false
                  errors: []
                  createdResources:
                  - id: "1284392014819"
                    uri: /networks/L_XXXXX/groupPolicies/100
                actions:
                - resource: /devices/QXXX-XXXX-XXXX/switch/ports/3
                  operation: update
              schema:
                $ref: '#/components/schemas/inline_response_201_5'
          description: Successful operation
      summary: Return an action batch
      tags:
      - organizations
      - configure
      - actionBatches
    put:
      description: Update an action batch
      operationId: updateOrganizationActionBatch
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: Action batch ID
        in: path
        name: actionBatchId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_170'
        content:
          application/json:
            schema:
              example:
                confirmed: true
                synchronous: false
              properties:
                confirmed:
                  description: A boolean representing whether or not the batch has
                    been confirmed. This property cannot be unset once it is true.
                  type: boolean
                synchronous:
                  description: Set to true to force the batch to run synchronous.
                    There can be at most 20 actions in synchronous batch.
                  type: boolean
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                id: "123"
                organizationId: "2930418"
                confirmed: true
                synchronous: false
                status:
                  completed: false
                  failed: false
                  errors: []
                  createdResources: []
                actions:
                - resource: /devices/QXXX-XXXX-XXXX/switch/ports/3
                  operation: update
                  body:
                    enabled: false
                - resource: /networks/L_XXXXX/groupPolicies
                  operation: create
                  body:
                    name: Group 1
              schema:
                type: object
          description: Successful operation
      summary: Update an action batch
      tags:
      - organizations
      - configure
      - actionBatches
      x-codegen-request-body-name: updateOrganizationActionBatch
  /organizations/{organizationId}/adaptivePolicy/acls:
    get:
      description: List adaptive policy ACLs in a organization
      operationId: getOrganizationAdaptivePolicyAcls
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - aclId: "12345678"
                name: Block sensitive web traffic
                description: Blocks sensitive web traffic
                ipVersion: ipv6
                rules:
                - policy: deny
                  protocol: tcp
                  srcPort: 1,33
                  dstPort: 22-30
                createdAt: 2021-05-19T17:08:25Z
                updatedAt: 2021-05-19T17:11:54Z
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_90'
                type: array
          description: Successful operation
      summary: List adaptive policy ACLs in a organization
      tags:
      - organizations
      - configure
      - adaptivePolicy
      - acls
    post:
      description: Creates new adaptive policy ACL
      operationId: createOrganizationAdaptivePolicyAcl
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_171'
        content:
          application/json:
            schema:
              example:
                name: Block sensitive web traffic
                description: Blocks sensitive web traffic
                rules:
                - policy: deny
                  protocol: tcp
                  srcPort: 1,33
                  dstPort: 22-30
                ipVersion: ipv6
              properties:
                name:
                  description: Name of the adaptive policy ACL
                  type: string
                description:
                  default: ""
                  description: Description of the adaptive policy ACL
                  type: string
                rules:
                  description: An ordered array of the adaptive policy ACL rules.
                  items:
                    $ref: '#/components/schemas/_organizations__organizationId__adaptivePolicy_acls_rules_1'
                  type: array
                ipVersion:
                  description: 'IP version of adpative policy ACL. One of: ''any'',
                    ''ipv4'' or ''ipv6'''
                  enum:
                  - any
                  - ipv4
                  - ipv6
                  type: string
              required:
              - ipVersion
              - name
              - rules
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                aclId: "12345678"
                name: Block sensitive web traffic
                description: Blocks sensitive web traffic
                ipVersion: ipv6
                rules:
                - policy: deny
                  protocol: tcp
                  srcPort: 1,33
                  dstPort: 22-30
                createdAt: 2021-05-19T17:08:25Z
                updatedAt: 2021-05-19T17:11:54Z
              schema:
                $ref: '#/components/schemas/inline_response_200_90'
          description: Successful operation
      summary: Creates new adaptive policy ACL
      tags:
      - organizations
      - configure
      - adaptivePolicy
      - acls
      x-codegen-request-body-name: createOrganizationAdaptivePolicyAcl
  /organizations/{organizationId}/adaptivePolicy/acls/{aclId}:
    delete:
      description: Deletes the specified adaptive policy ACL. Note this adaptive policy
        ACL will also be removed from policies using it.
      operationId: deleteOrganizationAdaptivePolicyAcl
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: Acl ID
        in: path
        name: aclId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Successful operation
      summary: Deletes the specified adaptive policy ACL
      tags:
      - organizations
      - configure
      - adaptivePolicy
      - acls
    get:
      description: Returns the adaptive policy ACL information
      operationId: getOrganizationAdaptivePolicyAcl
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: Acl ID
        in: path
        name: aclId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                aclId: "12345678"
                name: Block sensitive web traffic
                description: Blocks sensitive web traffic
                ipVersion: ipv6
                rules:
                - policy: deny
                  protocol: tcp
                  srcPort: 1,33
                  dstPort: 22-30
                createdAt: 2021-05-19T17:08:25Z
                updatedAt: 2021-05-19T17:11:54Z
              schema:
                $ref: '#/components/schemas/inline_response_200_90'
          description: Successful operation
      summary: Returns the adaptive policy ACL information
      tags:
      - organizations
      - configure
      - adaptivePolicy
      - acls
    put:
      description: Updates an adaptive policy ACL
      operationId: updateOrganizationAdaptivePolicyAcl
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: Acl ID
        in: path
        name: aclId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_172'
        content:
          application/json:
            schema:
              example:
                name: Block sensitive web traffic
                description: Blocks sensitive web traffic
                rules:
                - policy: deny
                  protocol: tcp
                  srcPort: 1,33
                  dstPort: 22-30
                ipVersion: ipv6
              properties:
                name:
                  description: Name of the adaptive policy ACL
                  type: string
                description:
                  description: Description of the adaptive policy ACL
                  type: string
                rules:
                  description: An ordered array of the adaptive policy ACL rules.
                    An empty array will clear the rules.
                  items:
                    $ref: '#/components/schemas/_organizations__organizationId__adaptivePolicy_acls_rules_1'
                  type: array
                ipVersion:
                  description: 'IP version of adpative policy ACL. One of: ''any'',
                    ''ipv4'' or ''ipv6'''
                  enum:
                  - any
                  - ipv4
                  - ipv6
                  type: string
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                aclId: "12345678"
                name: Block sensitive web traffic
                description: Blocks sensitive web traffic
                ipVersion: ipv6
                rules:
                - policy: deny
                  protocol: tcp
                  srcPort: 1,33
                  dstPort: 22-30
                createdAt: 2021-05-19T17:08:25Z
                updatedAt: 2021-05-19T17:11:54Z
              schema:
                $ref: '#/components/schemas/inline_response_200_90'
          description: Successful operation
      summary: Updates an adaptive policy ACL
      tags:
      - organizations
      - configure
      - adaptivePolicy
      - acls
      x-codegen-request-body-name: updateOrganizationAdaptivePolicyAcl
  /organizations/{organizationId}/adaptivePolicy/groups:
    get:
      description: List adaptive policy groups in a organization
      operationId: getOrganizationAdaptivePolicyGroups
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - groupId: "1234"
                name: Employee Group
                sgt: 1000
                description: Group of XYZ Corp Employees
                policyObjects:
                - id: "2345"
                  name: Example Policy Object
                isDefaultGroup: false
                requiredIpMappings: []
                createdAt: 2019-06-27T21:34:25.253480Z
                updatedAt: 2019-06-27T21:34:25.253480Z
              schema:
                items:
                  properties: {}
                  type: object
                type: array
          description: Successful operation
      summary: List adaptive policy groups in a organization
      tags:
      - organizations
      - configure
      - adaptivePolicy
      - groups
    post:
      description: Creates a new adaptive policy group
      operationId: createOrganizationAdaptivePolicyGroup
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_173'
        content:
          application/json:
            schema:
              example:
                name: Employee Group
                sgt: 1000
                description: Group of XYZ Corp Employees
                policyObjects:
                - id: "2345"
                  name: Example Policy Object
                isDefaultGroup: false
                requiredIpMappings: []
              properties:
                name:
                  description: Name of the group
                  type: string
                sgt:
                  description: SGT value of the group
                  type: integer
                description:
                  description: 'Description of the group (default: "")'
                  type: string
                policyObjects:
                  description: 'The policy objects that belong to this group; traffic
                    from addresses specified by these policy objects will be tagged
                    with this group''s SGT value if no other tagging scheme is being
                    used (each requires one unique attribute) (default: [])'
                  items:
                    $ref: '#/components/schemas/_organizations__organizationId__adaptivePolicy_groups_policyObjects'
                  type: array
              required:
              - name
              - sgt
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                groupId: "1234"
                name: Employee Group
                sgt: 1000
                description: Group of XYZ Corp Employees
                policyObjects:
                - id: "2345"
                  name: Example Policy Object
                isDefaultGroup: false
                requiredIpMappings: []
                createdAt: 2019-06-27T21:34:25.253480Z
                updatedAt: 2019-06-27T21:34:25.253480Z
              schema:
                type: object
          description: Successful operation
      summary: Creates a new adaptive policy group
      tags:
      - organizations
      - configure
      - adaptivePolicy
      - groups
      x-codegen-request-body-name: createOrganizationAdaptivePolicyGroup
  /organizations/{organizationId}/adaptivePolicy/groups/{id}:
    delete:
      description: Deletes the specified adaptive policy group and any associated
        policies and references
      operationId: deleteOrganizationAdaptivePolicyGroup
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: Id
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Successful operation
      summary: Deletes the specified adaptive policy group and any associated policies
        and references
      tags:
      - organizations
      - configure
      - adaptivePolicy
      - groups
    get:
      description: Returns an adaptive policy group
      operationId: getOrganizationAdaptivePolicyGroup
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: Id
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                groupId: "1234"
                name: Employee Group
                sgt: 1000
                description: Group of XYZ Corp Employees
                policyObjects:
                - id: "2345"
                  name: Example Policy Object
                isDefaultGroup: false
                requiredIpMappings: []
                createdAt: 2019-06-27T21:34:25.253480Z
                updatedAt: 2019-06-27T21:34:25.253480Z
              schema:
                type: object
          description: Successful operation
      summary: Returns an adaptive policy group
      tags:
      - organizations
      - configure
      - adaptivePolicy
      - groups
    put:
      description: Updates an adaptive policy group. If updating "Infrastructure",
        only the SGT is allowed. Cannot update "Unknown".
      operationId: updateOrganizationAdaptivePolicyGroup
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: Id
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_174'
        content:
          application/json:
            schema:
              example:
                name: Employee Group
                sgt: 1000
                description: Group of XYZ Corp Employees
                policyObjects:
                - id: "2345"
                  name: Example Policy Object
                isDefaultGroup: false
                requiredIpMappings: []
              properties:
                name:
                  description: Name of the group
                  type: string
                sgt:
                  description: SGT value of the group
                  type: integer
                description:
                  description: Description of the group
                  type: string
                policyObjects:
                  description: The policy objects that belong to this group; traffic
                    from addresses specified by these policy objects will be tagged
                    with this group's SGT value if no other tagging scheme is being
                    used (each requires one unique attribute)
                  items:
                    $ref: '#/components/schemas/_organizations__organizationId__adaptivePolicy_groups_policyObjects'
                  type: array
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                groupId: "1234"
                name: Employee Group
                sgt: 1000
                description: Group of XYZ Corp Employees
                policyObjects:
                - id: "2345"
                  name: Example Policy Object
                isDefaultGroup: false
                requiredIpMappings: []
                createdAt: 2019-06-27T21:34:25.253480Z
                updatedAt: 2019-06-27T21:34:25.253480Z
              schema:
                type: object
          description: Successful operation
      summary: Updates an adaptive policy group
      tags:
      - organizations
      - configure
      - adaptivePolicy
      - groups
      x-codegen-request-body-name: updateOrganizationAdaptivePolicyGroup
  /organizations/{organizationId}/adaptivePolicy/overview:
    get:
      description: Returns adaptive policy aggregate statistics for an organization
      operationId: getOrganizationAdaptivePolicyOverview
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                counts:
                  groups: 10
                  customGroups: 8
                  customAcls: 12
                  policies: 100
                  denyPolicies: 30
                  allowPolicies: 70
                  policyObjects: 13
                limits:
                  customGroups: 60
                  rulesInAnAcl: 16
                  aclsInAPolicy: 7
                  policyObjects: 8000
              schema:
                $ref: '#/components/schemas/inline_response_200_91'
          description: Successful operation
      summary: Returns adaptive policy aggregate statistics for an organization
      tags:
      - organizations
      - monitor
      - adaptivePolicy
      - overview
  /organizations/{organizationId}/adaptivePolicy/policies:
    get:
      description: List adaptive policies in an organization
      operationId: getOrganizationAdaptivePolicyPolicies
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - adaptivePolicyId: "111"
                sourceGroup:
                  id: "222"
                  name: IoT Devices
                  sgt: 50
                destinationGroup:
                  id: "333"
                  name: IoT Servers
                  sgt: 51
                acls:
                - id: "444"
                  name: Block web
                lastEntryRule: allow
                createdAt: 2019-06-27T21:34:25.253480Z
                updatedAt: 2019-06-27T21:34:25.253480Z
              schema:
                items:
                  properties: {}
                  type: object
                type: array
          description: Successful operation
      summary: List adaptive policies in an organization
      tags:
      - organizations
      - configure
      - adaptivePolicy
      - policies
    post:
      description: Add an Adaptive Policy
      operationId: createOrganizationAdaptivePolicyPolicy
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_175'
        content:
          application/json:
            schema:
              example:
                sourceGroup:
                  id: "222"
                  name: IoT Devices
                  sgt: 50
                destinationGroup:
                  id: "333"
                  name: IoT Servers
                  sgt: 51
                acls:
                - id: "444"
                  name: Block web
                lastEntryRule: allow
              properties:
                sourceGroup:
                  $ref: '#/components/schemas/_organizations__organizationId__adaptivePolicy_policies_sourceGroup'
                destinationGroup:
                  $ref: '#/components/schemas/_organizations__organizationId__adaptivePolicy_policies_destinationGroup'
                acls:
                  description: 'An ordered array of adaptive policy ACLs (each requires
                    one unique attribute) that apply to this policy (default: [])'
                  items:
                    $ref: '#/components/schemas/_organizations__organizationId__adaptivePolicy_policies_acls'
                  type: array
                lastEntryRule:
                  description: 'The rule to apply if there is no matching ACL (default:
                    "default")'
                  enum:
                  - allow
                  - default
                  - deny
                  type: string
              required:
              - destinationGroup
              - sourceGroup
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                adaptivePolicyId: "111"
                sourceGroup:
                  id: "222"
                  name: IoT Devices
                  sgt: 50
                destinationGroup:
                  id: "333"
                  name: IoT Servers
                  sgt: 51
                acls:
                - id: "444"
                  name: Block web
                lastEntryRule: allow
                createdAt: 2019-06-27T21:34:25.253480Z
                updatedAt: 2019-06-27T21:34:25.253480Z
              schema:
                type: object
          description: Successful operation
      summary: Add an Adaptive Policy
      tags:
      - organizations
      - configure
      - adaptivePolicy
      - policies
      x-codegen-request-body-name: createOrganizationAdaptivePolicyPolicy
  /organizations/{organizationId}/adaptivePolicy/policies/{id}:
    delete:
      description: Delete an Adaptive Policy
      operationId: deleteOrganizationAdaptivePolicyPolicy
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: Id
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Successful operation
      summary: Delete an Adaptive Policy
      tags:
      - organizations
      - configure
      - adaptivePolicy
      - policies
    get:
      description: Return an adaptive policy
      operationId: getOrganizationAdaptivePolicyPolicy
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: Id
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                adaptivePolicyId: "111"
                sourceGroup:
                  id: "222"
                  name: IoT Devices
                  sgt: 50
                destinationGroup:
                  id: "333"
                  name: IoT Servers
                  sgt: 51
                acls:
                - id: "444"
                  name: Block web
                lastEntryRule: allow
                createdAt: 2019-06-27T21:34:25.253480Z
                updatedAt: 2019-06-27T21:34:25.253480Z
              schema:
                type: object
          description: Successful operation
      summary: Return an adaptive policy
      tags:
      - organizations
      - configure
      - adaptivePolicy
      - policies
    put:
      description: Update an Adaptive Policy
      operationId: updateOrganizationAdaptivePolicyPolicy
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: Id
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_176'
        content:
          application/json:
            schema:
              example:
                sourceGroup:
                  id: "222"
                  name: IoT Devices
                  sgt: 50
                destinationGroup:
                  id: "333"
                  name: IoT Servers
                  sgt: 51
                acls:
                - id: "444"
                  name: Block web
                lastEntryRule: allow
              properties:
                sourceGroup:
                  $ref: '#/components/schemas/_organizations__organizationId__adaptivePolicy_policies_sourceGroup'
                destinationGroup:
                  $ref: '#/components/schemas/_organizations__organizationId__adaptivePolicy_policies_destinationGroup'
                acls:
                  description: An ordered array of adaptive policy ACLs (each requires
                    one unique attribute) that apply to this policy
                  items:
                    $ref: '#/components/schemas/_organizations__organizationId__adaptivePolicy_policies_acls'
                  type: array
                lastEntryRule:
                  description: The rule to apply if there is no matching ACL
                  enum:
                  - allow
                  - default
                  - deny
                  type: string
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                adaptivePolicyId: "111"
                sourceGroup:
                  id: "222"
                  name: IoT Devices
                  sgt: 50
                destinationGroup:
                  id: "333"
                  name: IoT Servers
                  sgt: 51
                acls:
                - id: "444"
                  name: Block web
                lastEntryRule: allow
                createdAt: 2019-06-27T21:34:25.253480Z
                updatedAt: 2019-06-27T21:34:25.253480Z
              schema:
                type: object
          description: Successful operation
      summary: Update an Adaptive Policy
      tags:
      - organizations
      - configure
      - adaptivePolicy
      - policies
      x-codegen-request-body-name: updateOrganizationAdaptivePolicyPolicy
  /organizations/{organizationId}/adaptivePolicy/settings:
    get:
      description: Returns global adaptive policy settings in an organization
      operationId: getOrganizationAdaptivePolicySettings
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                enabledNetworks:
                - L_11111111
                - L_22222222
                - N_33333333
                - L_44444444
              schema:
                type: object
          description: Successful operation
      summary: Returns global adaptive policy settings in an organization
      tags:
      - organizations
      - configure
      - adaptivePolicy
      - settings
    put:
      description: Update global adaptive policy settings
      operationId: updateOrganizationAdaptivePolicySettings
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_177'
        content:
          application/json:
            schema:
              example:
                enabledNetworks:
                - L_11111111
                - L_22222222
                - N_33333333
                - L_44444444
              properties:
                enabledNetworks:
                  description: List of network IDs with adaptive policy enabled
                  items:
                    type: string
                  type: array
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                enabledNetworks:
                - L_11111111
                - L_22222222
                - N_33333333
                - L_44444444
              schema:
                type: object
          description: Successful operation
      summary: Update global adaptive policy settings
      tags:
      - organizations
      - configure
      - adaptivePolicy
      - settings
      x-codegen-request-body-name: updateOrganizationAdaptivePolicySettings
  /organizations/{organizationId}/admins:
    get:
      description: List the dashboard administrators in this organization
      operationId: getOrganizationAdmins
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - id: "212406"
                name: Miles Meraki
                email: miles@meraki.com
                orgAccess: none
                accountStatus: ok
                twoFactorAuthEnabled: false
                hasApiKey: true
                lastActive: 2018-02-11T00:00:00Z
                tags:
                - tag: west
                  access: read-only
                networks:
                - id: N_24329156
                  access: full
                authenticationMethod: Email
              schema:
                items:
                  properties: {}
                  type: object
                type: array
          description: Successful operation
      summary: List the dashboard administrators in this organization
      tags:
      - organizations
      - configure
      - admins
    post:
      description: Create a new dashboard administrator
      operationId: createOrganizationAdmin
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_178'
        content:
          application/json:
            schema:
              example:
                name: Miles Meraki
                email: miles@meraki.com
                orgAccess: none
                tags:
                - tag: west
                  access: read-only
              properties:
                email:
                  description: The email of the dashboard administrator. This attribute
                    can not be updated.
                  type: string
                name:
                  description: The name of the dashboard administrator
                  type: string
                orgAccess:
                  description: The privilege of the dashboard administrator on the
                    organization. Can be one of 'full', 'read-only', 'enterprise'
                    or 'none'
                  enum:
                  - enterprise
                  - full
                  - none
                  - read-only
                  type: string
                tags:
                  description: The list of tags that the dashboard administrator has
                    privileges on
                  items:
                    $ref: '#/components/schemas/_organizations__organizationId__admins_tags'
                  type: array
                networks:
                  description: The list of networks that the dashboard administrator
                    has privileges on
                  items:
                    $ref: '#/components/schemas/_organizations__organizationId__admins_networks'
                  type: array
                authenticationMethod:
                  description: The method of authentication the user will use to sign
                    in to the Meraki dashboard. Can be one of 'Email' or 'Cisco SecureX
                    Sign-On'. The default is Email authentication
                  enum:
                  - Cisco SecureX Sign-On
                  - Email
                  type: string
              required:
              - email
              - name
              - orgAccess
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                id: "212406"
                name: Miles Meraki
                email: miles@meraki.com
                orgAccess: none
                accountStatus: ok
                twoFactorAuthEnabled: false
                hasApiKey: true
                lastActive: 2018-02-11T00:00:00Z
                tags:
                - tag: west
                  access: read-only
                networks:
                - id: N_24329156
                  access: full
                authenticationMethod: Email
              schema:
                type: object
          description: Successful operation
      summary: Create a new dashboard administrator
      tags:
      - organizations
      - configure
      - admins
      x-codegen-request-body-name: createOrganizationAdmin
  /organizations/{organizationId}/admins/{adminId}:
    delete:
      description: Revoke all access for a dashboard administrator within this organization
      operationId: deleteOrganizationAdmin
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: Admin ID
        in: path
        name: adminId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Successful operation
      summary: Revoke all access for a dashboard administrator within this organization
      tags:
      - organizations
      - configure
      - admins
    put:
      description: Update an administrator
      operationId: updateOrganizationAdmin
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: Admin ID
        in: path
        name: adminId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_179'
        content:
          application/json:
            schema:
              example:
                name: Miles Meraki
                orgAccess: none
                tags:
                - tag: west
                  access: read-only
              properties:
                name:
                  description: The name of the dashboard administrator
                  type: string
                orgAccess:
                  description: The privilege of the dashboard administrator on the
                    organization. Can be one of 'full', 'read-only', 'enterprise'
                    or 'none'
                  enum:
                  - enterprise
                  - full
                  - none
                  - read-only
                  type: string
                tags:
                  description: The list of tags that the dashboard administrator has
                    privileges on
                  items:
                    $ref: '#/components/schemas/_organizations__organizationId__admins_tags'
                  type: array
                networks:
                  description: The list of networks that the dashboard administrator
                    has privileges on
                  items:
                    $ref: '#/components/schemas/_organizations__organizationId__admins_networks'
                  type: array
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                id: "212406"
                name: Miles Meraki
                email: miles@meraki.com
                orgAccess: none
                accountStatus: ok
                twoFactorAuthEnabled: false
                hasApiKey: true
                lastActive: 2018-02-11T00:00:00Z
                tags:
                - tag: west
                  access: read-only
                networks:
                - id: N_24329156
                  access: full
                authenticationMethod: Email
              schema:
                type: object
          description: Successful operation
      summary: Update an administrator
      tags:
      - organizations
      - configure
      - admins
      x-codegen-request-body-name: updateOrganizationAdmin
  /organizations/{organizationId}/alerts/profiles:
    get:
      description: List all organization-wide alert configurations
      operationId: getOrganizationAlertsProfiles
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - id: "1284392014819"
                type: wanUtilization
                enabled: true
                alertCondition:
                  duration: 60
                  window: 600
                  bit_rate_bps: 10000
                  interface: wan1
                recipients:
                  emails:
                  - admin@example.org
                  httpServerIds:
                  - aHR0cHM6Ly93d3cuZXhhbXBsZS5jb20vcGF0aA==
                networkTags:
                - tag1
                - tag2
                description: WAN 1 high utilization
              schema:
                items:
                  properties: {}
                  type: object
                type: array
          description: Successful operation
      summary: List all organization-wide alert configurations
      tags:
      - organizations
      - configure
      - alerts
      - profiles
    post:
      description: Create an organization-wide alert configuration
      operationId: createOrganizationAlertsProfile
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_180'
        content:
          application/json:
            schema:
              example:
                type: wanUtilization
                enabled: true
                alertCondition:
                  duration: 60
                  window: 600
                  bit_rate_bps: 10000
                  interface: wan1
                recipients:
                  emails:
                  - admin@example.org
                  httpServerIds:
                  - aHR0cHM6Ly93d3cuZXhhbXBsZS5jb20vcGF0aA==
                networkTags:
                - tag1
                - tag2
                description: WAN 1 high utilization
              properties:
                type:
                  description: The alert type
                  enum:
                  - appOutage
                  - voipJitter
                  - voipMos
                  - voipPacketLoss
                  - wanLatency
                  - wanPacketLoss
                  - wanStatus
                  - wanUtilization
                  type: string
                alertCondition:
                  $ref: '#/components/schemas/_organizations__organizationId__alerts_profiles_alertCondition'
                recipients:
                  $ref: '#/components/schemas/_organizations__organizationId__alerts_profiles_recipients'
                networkTags:
                  description: Networks with these tags will be monitored for the
                    alert
                  items:
                    type: string
                  type: array
                description:
                  description: User supplied description of the alert
                  type: string
              required:
              - alertCondition
              - networkTags
              - recipients
              - type
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                id: "1284392014819"
                type: wanUtilization
                enabled: true
                alertCondition:
                  duration: 60
                  window: 600
                  bit_rate_bps: 10000
                  interface: wan1
                recipients:
                  emails:
                  - admin@example.org
                  httpServerIds:
                  - aHR0cHM6Ly93d3cuZXhhbXBsZS5jb20vcGF0aA==
                networkTags:
                - tag1
                - tag2
                description: WAN 1 high utilization
              schema:
                type: object
          description: Successful operation
      summary: Create an organization-wide alert configuration
      tags:
      - organizations
      - configure
      - alerts
      - profiles
      x-codegen-request-body-name: createOrganizationAlertsProfile
  /organizations/{organizationId}/alerts/profiles/{alertConfigId}:
    delete:
      description: Removes an organization-wide alert config
      operationId: deleteOrganizationAlertsProfile
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: Alert config ID
        in: path
        name: alertConfigId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Successful operation
      summary: Removes an organization-wide alert config
      tags:
      - organizations
      - configure
      - alerts
      - profiles
    put:
      description: Update an organization-wide alert config
      operationId: updateOrganizationAlertsProfile
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: Alert config ID
        in: path
        name: alertConfigId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_181'
        content:
          application/json:
            schema:
              example:
                enabled: true
              properties:
                enabled:
                  description: Is the alert config enabled
                  type: boolean
                type:
                  description: The alert type
                  enum:
                  - appOutage
                  - voipJitter
                  - voipMos
                  - voipPacketLoss
                  - wanLatency
                  - wanPacketLoss
                  - wanStatus
                  - wanUtilization
                  type: string
                alertCondition:
                  $ref: '#/components/schemas/_organizations__organizationId__alerts_profiles_alertCondition'
                recipients:
                  $ref: '#/components/schemas/_organizations__organizationId__alerts_profiles_recipients'
                networkTags:
                  description: Networks with these tags will be monitored for the
                    alert
                  items:
                    type: string
                  type: array
                description:
                  description: User supplied description of the alert
                  type: string
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                id: "1284392014819"
                type: wanUtilization
                enabled: true
                alertCondition:
                  duration: 60
                  window: 600
                  bit_rate_bps: 10000
                  interface: wan1
                recipients:
                  emails:
                  - admin@example.org
                  httpServerIds:
                  - aHR0cHM6Ly93d3cuZXhhbXBsZS5jb20vcGF0aA==
                networkTags:
                - tag1
                - tag2
                description: WAN 1 high utilization
              schema:
                type: object
          description: Successful operation
      summary: Update an organization-wide alert config
      tags:
      - organizations
      - configure
      - alerts
      - profiles
      x-codegen-request-body-name: updateOrganizationAlertsProfile
  /organizations/{organizationId}/apiRequests:
    get:
      description: List the API requests made by an organization
      operationId: getOrganizationApiRequests
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: The beginning of the timespan for the data. The maximum lookback
          period is 31 days from today.
        in: query
        name: t0
        schema:
          type: string
      - description: The end of the timespan for the data. t1 can be a maximum of
          31 days after t0.
        in: query
        name: t1
        schema:
          type: string
      - description: The timespan for which the information will be fetched. If specifying
          timespan, do not specify parameters t0 and t1. The value must be in seconds
          and be less than or equal to 31 days. The default is 31 days.
        in: query
        name: timespan
        schema:
          format: float
          type: number
      - description: The number of entries per page returned. Acceptable range is
          3 - 1000. Default is 50.
        in: query
        name: perPage
        schema:
          type: integer
      - description: A token used by the server to indicate the start of the page.
          Often this is a timestamp or an ID but it is not limited to those. This
          parameter should not be defined by client applications. The link for the
          first, last, prev, or next page in the HTTP Link header should define it.
        in: query
        name: startingAfter
        schema:
          type: string
      - description: A token used by the server to indicate the end of the page. Often
          this is a timestamp or an ID but it is not limited to those. This parameter
          should not be defined by client applications. The link for the first, last,
          prev, or next page in the HTTP Link header should define it.
        in: query
        name: endingBefore
        schema:
          type: string
      - description: Filter the results by the ID of the admin who made the API requests
        in: query
        name: adminId
        schema:
          type: string
      - description: Filter the results by the path of the API requests
        in: query
        name: path
        schema:
          type: string
      - description: Filter the results by the method of the API requests (must be
          'GET', 'PUT', 'POST' or 'DELETE')
        in: query
        name: method
        schema:
          enum:
          - DELETE
          - GET
          - POST
          - PUT
          type: string
      - description: Filter the results by the response code of the API requests
        in: query
        name: responseCode
        schema:
          type: integer
      - description: Filter the results by the IP address of the originating API request
        in: query
        name: sourceIp
        schema:
          type: string
      - description: Filter the results by the user agent string of the API request
        in: query
        name: userAgent
        schema:
          type: string
      - description: Filter the results by the API version of the API request
        in: query
        name: version
        schema:
          enum:
          - 0
          - 1
          type: integer
      - description: Filter the results by one or more operation IDs for the API request
        explode: false
        in: query
        name: operationIds
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
              - adminId: "212406"
                method: GET
                host: server.example.com
                path: /api/v1/organizations/12345/apiRequests
                queryString: timespan=604800
                userAgent: PostmanRuntime/7.6.0
                ts: 2018-02-11T00:00:00.090210Z
                responseCode: 200
                sourceIp: 123.123.123.1
                version: 1
                operationId: getOrganizationApiRequests
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_92'
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative
                links used for subsequent paginated requests.
              schema:
                type: string
      summary: List the API requests made by an organization
      tags:
      - organizations
      - monitor
      - apiRequests
  /organizations/{organizationId}/apiRequests/overview:
    get:
      description: Return an aggregated overview of API requests data
      operationId: getOrganizationApiRequestsOverview
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: The beginning of the timespan for the data. The maximum lookback
          period is 31 days from today.
        in: query
        name: t0
        schema:
          type: string
      - description: The end of the timespan for the data. t1 can be a maximum of
          31 days after t0.
        in: query
        name: t1
        schema:
          type: string
      - description: The timespan for which the information will be fetched. If specifying
          timespan, do not specify parameters t0 and t1. The value must be in seconds
          and be less than or equal to 31 days. The default is 31 days.
        in: query
        name: timespan
        schema:
          format: float
          type: number
      responses:
        "200":
          content:
            application/json:
              example:
                responseCodeCounts:
                  "200": 50000
                  "201": 4000
                  "204": 1000
                  "400": 3500
                  "404": 1500
                  "429": 10000
              schema:
                type: object
          description: Successful operation
      summary: Return an aggregated overview of API requests data
      tags:
      - organizations
      - monitor
      - apiRequests
      - overview
  /organizations/{organizationId}/apiRequests/overview/responseCodes/byInterval:
    get:
      description: Tracks organizations' API requests by response code across a given
        time period
      operationId: getOrganizationApiRequestsOverviewResponseCodesByInterval
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: The beginning of the timespan for the data. The maximum lookback
          period is 31 days from today.
        in: query
        name: t0
        schema:
          type: string
      - description: The end of the timespan for the data. t1 can be a maximum of
          31 days after t0.
        in: query
        name: t1
        schema:
          type: string
      - description: The timespan for which the information will be fetched. If specifying
          timespan, do not specify parameters t0 and t1. The value must be in seconds
          and be less than or equal to 31 days. The default is 31 days. If interval
          is provided, the timespan will be autocalculated.
        in: query
        name: timespan
        schema:
          format: float
          type: number
      - description: 'The time interval in seconds for returned data. The valid intervals
          are: 120, 3600, 14400, 21600. The default is 21600. Interval is calculated
          if time params are provided.'
        in: query
        name: interval
        schema:
          type: integer
      - description: 'Filter by API version of the endpoint. Allowable values are:
          [0, 1]'
        in: query
        name: version
        schema:
          enum:
          - 0
          - 1
          type: integer
      - description: Filter by operation ID of the endpoint
        explode: false
        in: query
        name: operationIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Filter by source IP that made the API request
        explode: false
        in: query
        name: sourceIps
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Filter by admin ID of user that made the API request
        explode: false
        in: query
        name: adminIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Filter by user agent string for API request. This will filter
          by a complete or partial match.
        in: query
        name: userAgent
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - startTs: 2018-02-11T00:00:00Z
                endTs: 2018-05-12T00:00:00Z
                counts:
                - code: 200
                  count: 198938
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_93'
                type: array
          description: Successful operation
      summary: Tracks organizations' API requests by response code across a given
        time period
      tags:
      - organizations
      - monitor
      - apiRequests
      - overview
      - responseCodes
      - byInterval
  /organizations/{organizationId}/appliance/security/events:
    get:
      description: List the security events for an organization
      operationId: getOrganizationApplianceSecurityEvents
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: The beginning of the timespan for the data. Data is gathered
          after the specified t0 value. The maximum lookback period is 365 days from
          today.
        in: query
        name: t0
        schema:
          type: string
      - description: The end of the timespan for the data. t1 can be a maximum of
          365 days after t0.
        in: query
        name: t1
        schema:
          type: string
      - description: The timespan for which the information will be fetched. If specifying
          timespan, do not specify parameters t0 and t1. The value must be in seconds
          and be less than or equal to 365 days. The default is 31 days.
        in: query
        name: timespan
        schema:
          format: float
          type: number
      - description: The number of entries per page returned. Acceptable range is
          3 - 1000. Default is 100.
        in: query
        name: perPage
        schema:
          type: integer
      - description: A token used by the server to indicate the start of the page.
          Often this is a timestamp or an ID but it is not limited to those. This
          parameter should not be defined by client applications. The link for the
          first, last, prev, or next page in the HTTP Link header should define it.
        in: query
        name: startingAfter
        schema:
          type: string
      - description: A token used by the server to indicate the end of the page. Often
          this is a timestamp or an ID but it is not limited to those. This parameter
          should not be defined by client applications. The link for the first, last,
          prev, or next page in the HTTP Link header should define it.
        in: query
        name: endingBefore
        schema:
          type: string
      - description: Sorted order of security events based on event detection time.
          Order options are 'ascending' or 'descending'. Default is ascending order.
        in: query
        name: sortOrder
        schema:
          enum:
          - ascending
          - descending
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - ts: 2020-03-20T16:00:10.144989Z
                eventType: File Scanned
                clientName: COMPUTER-M-V78J
                clientMac: 10:dd:b1:eb:88:f8
                clientIp: 192.168.128.2
                srcIp: 192.168.128.2
                destIp: 119.192.233.48
                protocol: http
                uri: http://www.favorite-icons.com/program/FavoriteIconsUninstall.exe
                canonicalName: PUA.Win.Dropper.Kraddare::1201
                destinationPort: 80
                fileHash: 3ec1b9a95fe62aa25fc959643a0f227b76d253094681934daaf628d3574b3463
                fileType: MS_EXE
                fileSizeBytes: 193688
                disposition: Malicious
                action: Blocked
              - ts: 2018-02-11T00:00:00.090210Z
                eventType: IDS Alert
                deviceMac: 00:18:0a:01:02:03
                clientMac: A1:B2:C3:D4:E5:F6
                srcIp: 1.2.3.4:34195
                destIp: 10.20.30.40:80
                protocol: tcp/ip
                priority: "2"
                classification: "4"
                blocked: true
                message: SERVER-WEBAPP JBoss JMX console access attempt
                signature: 1:21516:9
                sigSource: ""
                ruleId: meraki:intrusion/snort/GID/1/SID/26267
              - ts: 2018-02-11T00:00:00.090210Z
                eventType: IDS Alert
                deviceMac: 00:18:0a:01:02:03
                clientMac: A1:B2:C3:D4:E5:F6
                srcIp: 1.2.3.4:56023
                destIp: 10.20.30.40:80
                protocol: tcp/ip
                priority: "1"
                classification: "33"
                blocked: true
                message: POLICY-OTHER Adobe ColdFusion admin interface access attempt
                signature: 1:25975:2
                sigSource: ""
                ruleId: meraki:intrusion/snort/GID/1/SID/26267
              schema:
                items:
                  properties: {}
                  type: object
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative
                links used for subsequent paginated requests.
              schema:
                type: string
      summary: List the security events for an organization
      tags:
      - appliance
      - monitor
      - security
      - events
  /organizations/{organizationId}/appliance/security/intrusion:
    get:
      description: Returns all supported intrusion settings for an organization
      operationId: getOrganizationApplianceSecurityIntrusion
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                allowedRules:
                - ruleId: meraki:intrusion/snort/GID/01/SID/688
                  message: SQL sa login failed
                - ruleId: meraki:intrusion/snort/GID/01/SID/5805
                  message: MALWARE-OTHER Trackware myway speedbar runtime detection
                    - switch engines
              schema:
                type: object
          description: Successful operation
      summary: Returns all supported intrusion settings for an organization
      tags:
      - appliance
      - configure
      - security
      - intrusion
    put:
      description: Sets supported intrusion settings for an organization
      operationId: updateOrganizationApplianceSecurityIntrusion
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_182'
        content:
          application/json:
            schema:
              example:
                allowedRules:
                - ruleId: meraki:intrusion/snort/GID/01/SID/688
                  message: SQL sa login failed
                - ruleId: meraki:intrusion/snort/GID/01/SID/5805
                  message: MALWARE-OTHER Trackware myway speedbar runtime detection
                    - switch engines
              properties:
                allowedRules:
                  description: Sets a list of specific SNORT signatures to allow
                  items:
                    $ref: '#/components/schemas/_organizations__organizationId__appliance_security_intrusion_allowedRules'
                  type: array
              required:
              - allowedRules
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                allowedRules:
                - ruleId: meraki:intrusion/snort/GID/01/SID/688
                  message: SQL sa login failed
                - ruleId: meraki:intrusion/snort/GID/01/SID/5805
                  message: MALWARE-OTHER Trackware myway speedbar runtime detection
                    - switch engines
              schema:
                type: object
          description: Successful operation
      summary: Sets supported intrusion settings for an organization
      tags:
      - appliance
      - configure
      - security
      - intrusion
      x-codegen-request-body-name: updateOrganizationApplianceSecurityIntrusion
  /organizations/{organizationId}/appliance/uplink/statuses:
    get:
      description: List the uplink status of every Meraki MX and Z series appliances
        in the organization
      operationId: getOrganizationApplianceUplinkStatuses
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: The number of entries per page returned. Acceptable range is
          3 - 1000. Default is 1000.
        in: query
        name: perPage
        schema:
          type: integer
      - description: A token used by the server to indicate the start of the page.
          Often this is a timestamp or an ID but it is not limited to those. This
          parameter should not be defined by client applications. The link for the
          first, last, prev, or next page in the HTTP Link header should define it.
        in: query
        name: startingAfter
        schema:
          type: string
      - description: A token used by the server to indicate the end of the page. Often
          this is a timestamp or an ID but it is not limited to those. This parameter
          should not be defined by client applications. The link for the first, last,
          prev, or next page in the HTTP Link header should define it.
        in: query
        name: endingBefore
        schema:
          type: string
      - description: A list of network IDs. The returned devices will be filtered
          to only include these networks.
        explode: false
        in: query
        name: networkIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A list of serial numbers. The returned devices will be filtered
          to only include these serials.
        explode: false
        in: query
        name: serials
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A list of ICCIDs. The returned devices will be filtered to only
          include these ICCIDs.
        explode: false
        in: query
        name: iccids
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
              - networkId: N_24329156
                serial: Q234-ABCD-5678
                model: MX68C
                lastReportedAt: 2018-02-11T00:00:00Z
                highAvailability:
                  enabled: true
                  role: primary
                uplinks:
                - interface: wan1
                  status: active
                  ip: 1.2.3.4
                  gateway: 1.2.3.5
                  publicIp: 123.123.123.1
                  primaryDns: 8.8.8.8
                  secondaryDns: 8.8.4.4
                  ipAssignedBy: static
                - interface: cellular
                  status: ready
                  ip: 1.2.3.4
                  provider: at&t
                  publicIp: 123.123.123.1
                  model: integrated
                  signalStat:
                    rsrp: -120
                    rsrq: -13
                  connectionType: 4g
                  apn: internet
                  gateway: 100.100.100.100
                  dns1: 111.111.111.111
                  dns2: 222.222.222.222
                  signalType: 4G
                  iccid: "123456789"
              schema:
                items:
                  properties: {}
                  type: object
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative
                links used for subsequent paginated requests.
              schema:
                type: string
      summary: List the uplink status of every Meraki MX and Z series appliances in
        the organization
      tags:
      - appliance
      - monitor
      - uplinks
      - statuses
  /organizations/{organizationId}/appliance/vpn/stats:
    get:
      description: Show VPN history stat for networks in an organization
      operationId: getOrganizationApplianceVpnStats
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: The number of entries per page returned. Acceptable range is
          3 - 300. Default is 300.
        in: query
        name: perPage
        schema:
          type: integer
      - description: A token used by the server to indicate the start of the page.
          Often this is a timestamp or an ID but it is not limited to those. This
          parameter should not be defined by client applications. The link for the
          first, last, prev, or next page in the HTTP Link header should define it.
        in: query
        name: startingAfter
        schema:
          type: string
      - description: A token used by the server to indicate the end of the page. Often
          this is a timestamp or an ID but it is not limited to those. This parameter
          should not be defined by client applications. The link for the first, last,
          prev, or next page in the HTTP Link header should define it.
        in: query
        name: endingBefore
        schema:
          type: string
      - description: 'A list of Meraki network IDs to filter results to contain only
          specified networks. E.g.: networkIds[]=N_12345678&networkIds[]=L_3456'
        explode: false
        in: query
        name: networkIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: The beginning of the timespan for the data. The maximum lookback
          period is 31 days from today.
        in: query
        name: t0
        schema:
          type: string
      - description: The end of the timespan for the data. t1 can be a maximum of
          31 days after t0.
        in: query
        name: t1
        schema:
          type: string
      - description: The timespan for which the information will be fetched. If specifying
          timespan, do not specify parameters t0 and t1. The value must be in seconds
          and be less than or equal to 31 days. The default is 1 day.
        in: query
        name: timespan
        schema:
          format: float
          type: number
      responses:
        "200":
          content:
            application/json:
              example:
              - networkId: N_12345678
                networkName: San Francisco Office
                merakiVpnPeers:
                - networkId: L_23456789
                  networkName: New York Office
                  usageSummary:
                    receivedInKilobytes: 1234567
                    sentInKilobytes: 2345678
                  latencySummaries:
                  - senderUplink: wan1
                    receiverUplink: wan1
                    avgLatencyMs: 15
                    minLatencyMs: 10
                    maxLatencyMs: 30
                  - senderUplink: wan2
                    receiverUplink: wan1
                    avgLatencyMs: 15
                    minLatencyMs: 10
                    maxLatencyMs: 30
                  lossPercentageSummaries:
                  - senderUplink: wan1
                    receiverUplink: wan1
                    avgLossPercentage: 0
                    minLossPercentage: 0
                    maxLossPercentage: 0.1
                  - senderUplink: wan2
                    receiverUplink: wan1
                    avgLossPercentage: 0
                    minLossPercentage: 0
                    maxLossPercentage: 0.1
                  jitterSummaries:
                  - senderUplink: wan1
                    receiverUplink: wan1
                    avgJitter: 0.01
                    minJitter: 0
                    maxJitter: 0.25
                  - senderUplink: wan2
                    receiverUplink: wan1
                    avgJitter: 0.01
                    minJitter: 0
                    maxJitter: 0.25
                  mosSummaries:
                  - senderUplink: wan1
                    receiverUplink: wan1
                    avgMos: 4.1
                    minMos: 4.0
                    maxMos: 4.2
                  - senderUplink: wan2
                    receiverUplink: wan1
                    avgMos: 4.1
                    minMos: 4.0
                    maxMos: 4.2
              - networkId: L_23456789
                networkName: New York Office
                merakiVpnPeers:
                - networkId: N_12345678
                  networkName: San Francisco Office
                  usageSummary:
                    receivedInKilobytes: 2345678
                    sentInKilobytes: 1234567
                  latencySummaries:
                  - senderUplink: wan1
                    receiverUplink: wan1
                    avgLatencyMs: 15
                    minLatencyMs: 10
                    maxLatencyMs: 30
                  - senderUplink: wan1
                    receiverUplink: wan2
                    avgLatencyMs: 15
                    minLatencyMs: 10
                    maxLatencyMs: 30
                  lossPercentageSummaries:
                  - senderUplink: wan1
                    receiverUplink: wan1
                    avgLossPercentage: 0
                    minLossPercentage: 0
                    maxLossPercentage: 0.1
                  - senderUplink: wan1
                    receiverUplink: wan2
                    avgLossPercentage: 0
                    minLossPercentage: 0
                    maxLossPercentage: 0.1
                  jitterSummaries:
                  - senderUplink: wan1
                    receiverUplink: wan1
                    avgJitter: 0.01
                    minJitter: 0
                    maxJitter: 0.25
                  - senderUplink: wan1
                    receiverUplink: wan2
                    avgJitter: 0.01
                    minJitter: 0
                    maxJitter: 0.25
                  mosSummaries:
                  - senderUplink: wan1
                    receiverUplink: wan1
                    avgMos: 4.1
                    minMos: 4.0
                    maxMos: 4.2
                  - senderUplink: wan1
                    receiverUplink: wan2
                    avgMos: 4.1
                    minMos: 4.0
                    maxMos: 4.2
              schema:
                items:
                  properties: {}
                  type: object
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative
                links used for subsequent paginated requests.
              schema:
                type: string
      summary: Show VPN history stat for networks in an organization
      tags:
      - appliance
      - monitor
      - vpn
      - stats
  /organizations/{organizationId}/appliance/vpn/statuses:
    get:
      description: Show VPN status for networks in an organization
      operationId: getOrganizationApplianceVpnStatuses
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: The number of entries per page returned. Acceptable range is
          3 - 300. Default is 300.
        in: query
        name: perPage
        schema:
          type: integer
      - description: A token used by the server to indicate the start of the page.
          Often this is a timestamp or an ID but it is not limited to those. This
          parameter should not be defined by client applications. The link for the
          first, last, prev, or next page in the HTTP Link header should define it.
        in: query
        name: startingAfter
        schema:
          type: string
      - description: A token used by the server to indicate the end of the page. Often
          this is a timestamp or an ID but it is not limited to those. This parameter
          should not be defined by client applications. The link for the first, last,
          prev, or next page in the HTTP Link header should define it.
        in: query
        name: endingBefore
        schema:
          type: string
      - description: 'A list of Meraki network IDs to filter results to contain only
          specified networks. E.g.: networkIds[]=N_12345678&networkIds[]=L_3456'
        explode: false
        in: query
        name: networkIds
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
              - networkId: N_12345678
                networkName: San Francisco Office
                deviceSerial: Q234-ABCD-1234
                deviceStatus: online
                uplinks:
                - interface: wan1
                  publicIp: 1.2.3.4
                - interface: wan2
                  publicIp: 2.3.4.5
                vpnMode: hub
                exportedSubnets:
                - subnet: 192.168.0.0/24
                  name: sales-vlan
                - subnet: 172.16.0.0/24
                  name: engineering-vlan
                merakiVpnPeers:
                - networkId: L_1234
                  networkName: New York Office
                  reachability: reachable
                thirdPartyVpnPeers:
                - name: London Office
                  publicIp: 111.222.333.444
                  reachability: reachable
              - networkId: L_1234
                networkName: New York Office
                deviceSerial: Q234-EFGH-5678
                deviceStatus: online
                uplinks:
                - interface: wan1
                  publicIp: 3.4.5.6
                vpnMode: spoke
                exportedSubnets:
                - subnet: 192.168.1.0/24
                  name: sales-vlan
                - subnet: 172.16.1.0/24
                  name: engineering-vlan
                merakiVpnPeers:
                - networkId: N_12345678
                  networkName: San Francisco Office
                  reachability: reachable
                thirdPartyVpnPeers:
                - name: Tokyo Office
                  publicIp: 222.333.444.555
                  reachability: reachable
              schema:
                items:
                  properties: {}
                  type: object
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative
                links used for subsequent paginated requests.
              schema:
                type: string
      summary: Show VPN status for networks in an organization
      tags:
      - appliance
      - monitor
      - vpn
      - statuses
  /organizations/{organizationId}/appliance/vpn/thirdPartyVPNPeers:
    get:
      description: Return the third party VPN peers for an organization
      operationId: getOrganizationApplianceVpnThirdPartyVPNPeers
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                peers:
                - name: Peer Name
                  publicIp: 123.123.123.1
                  remoteId: miles@meraki.com
                  localId: myMXId@meraki.com
                  secret: secret
                  privateSubnets:
                  - 192.168.1.0/24
                  - 192.168.128.0/24
                  ipsecPolicies:
                    ikeCipherAlgo:
                    - tripledes
                    ikeAuthAlgo:
                    - sha1
                    ikePrfAlgo:
                    - prfsha1
                    ikeDiffieHellmanGroup:
                    - group2
                    ikeLifetime: 28800
                    childCipherAlgo:
                    - aes128
                    childAuthAlgo:
                    - sha1
                    childPfsGroup:
                    - disabled
                    childLifetime: 28800
                  ipsecPoliciesPreset: custom
                  ikeVersion: "1"
                  networkTags:
                  - all
              schema:
                $ref: '#/components/schemas/inline_response_200_94'
          description: Successful operation
      summary: Return the third party VPN peers for an organization
      tags:
      - appliance
      - configure
      - vpn
      - thirdPartyVPNPeers
    put:
      description: Update the third party VPN peers for an organization
      operationId: updateOrganizationApplianceVpnThirdPartyVPNPeers
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_183'
        content:
          application/json:
            schema:
              example:
                peers:
                - name: Peer Name
                  publicIp: 123.123.123.1
                  privateSubnets:
                  - 192.168.1.0/24
                  - 192.168.128.0/24
                  localId: myMXId@meraki.com
                  remoteId: miles@meraki.com
                  ipsecPolicies:
                    ikeCipherAlgo:
                    - tripledes
                    ikeAuthAlgo:
                    - sha1
                    ikePrfAlgo:
                    - prfsha1
                    ikeDiffieHellmanGroup:
                    - group2
                    ikeLifetime: 28800
                    childCipherAlgo:
                    - aes128
                    childAuthAlgo:
                    - sha1
                    childPfsGroup:
                    - disabled
                    childLifetime: 28800
                  ipsecPoliciesPreset: default
                  secret: Sample Password
                  ikeVersion: "2"
                  networkTags:
                  - none
              properties:
                peers:
                  description: The list of VPN peers
                  items:
                    $ref: '#/components/schemas/_organizations__organizationId__appliance_vpn_thirdPartyVPNPeers_peers'
                  type: array
              required:
              - peers
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                peers:
                - name: Peer Name
                  publicIp: 123.123.123.1
                  remoteId: miles@meraki.com
                  localId: myMXId@meraki.com
                  secret: secret
                  privateSubnets:
                  - 192.168.1.0/24
                  - 192.168.128.0/24
                  ipsecPolicies:
                    ikeCipherAlgo:
                    - tripledes
                    ikeAuthAlgo:
                    - sha1
                    ikePrfAlgo:
                    - prfsha1
                    ikeDiffieHellmanGroup:
                    - group2
                    ikeLifetime: 28800
                    childCipherAlgo:
                    - aes128
                    childAuthAlgo:
                    - sha1
                    childPfsGroup:
                    - disabled
                    childLifetime: 28800
                  ipsecPoliciesPreset: custom
                  ikeVersion: "1"
                  networkTags:
                  - all
              schema:
                $ref: '#/components/schemas/inline_response_200_94'
          description: Successful operation
      summary: Update the third party VPN peers for an organization
      tags:
      - appliance
      - configure
      - vpn
      - thirdPartyVPNPeers
      x-codegen-request-body-name: updateOrganizationApplianceVpnThirdPartyVPNPeers
  /organizations/{organizationId}/appliance/vpn/vpnFirewallRules:
    get:
      description: Return the firewall rules for an organization's site-to-site VPN
      operationId: getOrganizationApplianceVpnVpnFirewallRules
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                rules:
                - comment: Allow TCP traffic to subnet with HTTP servers.
                  policy: allow
                  protocol: tcp
                  destPort: "443"
                  destCidr: 192.168.1.0/24
                  srcPort: Any
                  srcCidr: Any
                  syslogEnabled: false
              schema:
                type: object
          description: Successful operation
      summary: Return the firewall rules for an organization's site-to-site VPN
      tags:
      - appliance
      - configure
      - vpn
      - vpnFirewallRules
    put:
      description: Update the firewall rules of an organization's site-to-site VPN
      operationId: updateOrganizationApplianceVpnVpnFirewallRules
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_184'
        content:
          application/json:
            schema:
              example:
                rules:
                - comment: Allow TCP traffic to subnet with HTTP servers.
                  policy: allow
                  protocol: tcp
                  srcPort: Any
                  srcCidr: Any
                  destPort: "443"
                  destCidr: 192.168.1.0/24
                  syslogEnabled: false
                syslogDefaultRule: false
              properties:
                rules:
                  description: An ordered array of the firewall rules (not including
                    the default rule)
                  items:
                    $ref: '#/components/schemas/_organizations__organizationId__appliance_vpn_vpnFirewallRules_rules'
                  type: array
                syslogDefaultRule:
                  description: Log the special default rule (boolean value - enable
                    only if you've configured a syslog server) (optional)
                  type: boolean
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                rules:
                - comment: Allow TCP traffic to subnet with HTTP servers.
                  policy: allow
                  protocol: tcp
                  srcPort: Any
                  srcCidr: Any
                  destPort: "443"
                  destCidr: 192.168.1.0/24
                  syslogEnabled: false
              schema:
                $ref: '#/components/schemas/inline_response_200_95'
          description: Successful operation
      summary: Update the firewall rules of an organization's site-to-site VPN
      tags:
      - appliance
      - configure
      - vpn
      - vpnFirewallRules
      x-codegen-request-body-name: updateOrganizationApplianceVpnVpnFirewallRules
  /organizations/{organizationId}/brandingPolicies:
    get:
      description: List the branding policies of an organization
      operationId: getOrganizationBrandingPolicies
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - name: My Branding Policy
                enabled: true
                adminSettings:
                  appliesTo: All admins of networks...
                  values:
                  - N_1234
                  - L_5678
                helpSettings:
                  helpTab: show
                  getHelpSubtab: default or inherit
                  communitySubtab: show
                  casesSubtab: hide
                  dataProtectionRequestsSubtab: default or inherit
                  getHelpSubtabKnowledgeBaseSearch: <h1>Some custom HTML content</h1>
                  universalSearchKnowledgeBaseSearch: hide
                  ciscoMerakiProductDocumentation: show
                  supportContactInfo: show
                  newFeaturesSubtab: show
                  firewallInfoSubtab: hide
                  apiDocsSubtab: default or inherit
                  hardwareReplacementsSubtab: hide
                  smForums: hide
                  helpWidget: hide
                customLogo:
                  enabled: true
                  image:
                    preview:
                      url: https://meraki-na.s3.amazonaws.com/org-assets/my-image.png
                      expiresAt: 2022-04-06T06:19:27-07:00
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_96'
                type: array
          description: Successful operation
      summary: List the branding policies of an organization
      tags:
      - organizations
      - configure
      - brandingPolicies
    post:
      description: Add a new branding policy to an organization
      operationId: createOrganizationBrandingPolicy
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_185'
        content:
          application/json:
            schema:
              example:
                name: My Branding Policy
                enabled: true
                adminSettings:
                  appliesTo: All admins of networks...
                  values:
                  - N_1234
                  - L_5678
                helpSettings:
                  helpTab: show
                  getHelpSubtab: default or inherit
                  communitySubtab: show
                  casesSubtab: hide
                  dataProtectionRequestsSubtab: default or inherit
                  getHelpSubtabKnowledgeBaseSearch: <h1>Some custom HTML content</h1>
                  universalSearchKnowledgeBaseSearch: hide
                  ciscoMerakiProductDocumentation: show
                  supportContactInfo: show
                  newFeaturesSubtab: show
                  firewallInfoSubtab: hide
                  apiDocsSubtab: default or inherit
                  hardwareReplacementsSubtab: hide
                  smForums: hide
                  helpWidget: hide
                customLogo:
                  enabled: true
                  image:
                    contents: Hyperg26C8F4h8CvcoUqpA==
                    format: jpg
              properties:
                name:
                  description: Name of the Dashboard branding policy.
                  type: string
                enabled:
                  description: Boolean indicating whether this policy is enabled.
                  type: boolean
                adminSettings:
                  $ref: '#/components/schemas/_organizations__organizationId__brandingPolicies_adminSettings'
                helpSettings:
                  $ref: '#/components/schemas/_organizations__organizationId__brandingPolicies_helpSettings_1'
                customLogo:
                  $ref: '#/components/schemas/_organizations__organizationId__brandingPolicies_customLogo_1'
              type: object
        required: false
      responses:
        "201":
          content:
            application/json:
              example:
                name: My Branding Policy
                enabled: true
                adminSettings:
                  appliesTo: All admins of networks...
                  values:
                  - N_1234
                  - L_5678
                helpSettings:
                  helpTab: show
                  getHelpSubtab: default or inherit
                  communitySubtab: show
                  casesSubtab: hide
                  dataProtectionRequestsSubtab: default or inherit
                  getHelpSubtabKnowledgeBaseSearch: <h1>Some custom HTML content</h1>
                  universalSearchKnowledgeBaseSearch: hide
                  ciscoMerakiProductDocumentation: show
                  supportContactInfo: show
                  newFeaturesSubtab: show
                  firewallInfoSubtab: hide
                  apiDocsSubtab: default or inherit
                  hardwareReplacementsSubtab: hide
                  smForums: hide
                  helpWidget: hide
                customLogo:
                  enabled: true
                  image:
                    preview:
                      url: https://meraki-na.s3.amazonaws.com/org-assets/my-image.png
                      expiresAt: 2022-04-06T06:19:27-07:00
              schema:
                $ref: '#/components/schemas/inline_response_201_6'
          description: Successful operation
      summary: Add a new branding policy to an organization
      tags:
      - organizations
      - configure
      - brandingPolicies
      x-codegen-request-body-name: createOrganizationBrandingPolicy
  /organizations/{organizationId}/brandingPolicies/priorities:
    get:
      description: Return the branding policy IDs of an organization in priority order.
        IDs are ordered in ascending order of priority (IDs later in the array have
        higher priority).
      operationId: getOrganizationBrandingPoliciesPriorities
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                brandingPolicyIds:
                - "123"
                - "456"
                - "789"
              schema:
                $ref: '#/components/schemas/inline_response_200_97'
          description: Successful operation
      summary: Return the branding policy IDs of an organization in priority order
      tags:
      - organizations
      - configure
      - brandingPolicies
      - priorities
    put:
      description: Update the priority ordering of an organization's branding policies.
      operationId: updateOrganizationBrandingPoliciesPriorities
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_186'
        content:
          application/json:
            schema:
              example:
                brandingPolicyIds:
                - "123"
                - "456"
                - "789"
              properties:
                brandingPolicyIds:
                  description: |2
                          An ordered list of branding policy IDs that determines the priority order of how to apply the policies
                  items:
                    type: string
                  type: array
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                brandingPolicyIds:
                - "123"
                - "456"
                - "789"
              schema:
                $ref: '#/components/schemas/inline_response_200_97'
          description: Successful operation
      summary: Update the priority ordering of an organization's branding policies.
      tags:
      - organizations
      - configure
      - brandingPolicies
      - priorities
      x-codegen-request-body-name: updateOrganizationBrandingPoliciesPriorities
  /organizations/{organizationId}/brandingPolicies/{brandingPolicyId}:
    delete:
      description: Delete a branding policy
      operationId: deleteOrganizationBrandingPolicy
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: Branding policy ID
        in: path
        name: brandingPolicyId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Successful operation
      summary: Delete a branding policy
      tags:
      - organizations
      - configure
      - brandingPolicies
    get:
      description: Return a branding policy
      operationId: getOrganizationBrandingPolicy
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: Branding policy ID
        in: path
        name: brandingPolicyId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                name: My Branding Policy
                enabled: true
                adminSettings:
                  appliesTo: All admins of networks...
                  values:
                  - N_1234
                  - L_5678
                helpSettings:
                  helpTab: show
                  getHelpSubtab: default or inherit
                  communitySubtab: show
                  casesSubtab: hide
                  dataProtectionRequestsSubtab: default or inherit
                  getHelpSubtabKnowledgeBaseSearch: <h1>Some custom HTML content</h1>
                  universalSearchKnowledgeBaseSearch: hide
                  ciscoMerakiProductDocumentation: show
                  supportContactInfo: show
                  newFeaturesSubtab: show
                  firewallInfoSubtab: hide
                  apiDocsSubtab: default or inherit
                  hardwareReplacementsSubtab: hide
                  smForums: hide
                  helpWidget: hide
                customLogo:
                  enabled: true
                  image:
                    preview:
                      url: https://meraki-na.s3.amazonaws.com/org-assets/my-image.png
                      expiresAt: 2022-04-06T06:19:27-07:00
              schema:
                $ref: '#/components/schemas/inline_response_200_96'
          description: Successful operation
      summary: Return a branding policy
      tags:
      - organizations
      - configure
      - brandingPolicies
    put:
      description: Update a branding policy
      operationId: updateOrganizationBrandingPolicy
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: Branding policy ID
        in: path
        name: brandingPolicyId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_187'
        content:
          application/json:
            schema:
              example:
                name: My Branding Policy
                enabled: true
                adminSettings:
                  appliesTo: All admins of networks...
                  values:
                  - N_1234
                  - L_5678
                helpSettings:
                  helpTab: show
                  getHelpSubtab: default or inherit
                  communitySubtab: show
                  casesSubtab: hide
                  dataProtectionRequestsSubtab: default or inherit
                  getHelpSubtabKnowledgeBaseSearch: <h1>Some custom HTML content</h1>
                  universalSearchKnowledgeBaseSearch: hide
                  ciscoMerakiProductDocumentation: show
                  supportContactInfo: show
                  newFeaturesSubtab: show
                  firewallInfoSubtab: hide
                  apiDocsSubtab: default or inherit
                  hardwareReplacementsSubtab: hide
                  smForums: hide
                  helpWidget: hide
                customLogo:
                  enabled: true
                  image:
                    contents: Hyperg26C8F4h8CvcoUqpA==
                    format: jpg
              properties:
                name:
                  description: Name of the Dashboard branding policy.
                  type: string
                enabled:
                  description: Boolean indicating whether this policy is enabled.
                  type: boolean
                adminSettings:
                  $ref: '#/components/schemas/_organizations__organizationId__brandingPolicies_adminSettings'
                helpSettings:
                  $ref: '#/components/schemas/_organizations__organizationId__brandingPolicies_helpSettings'
                customLogo:
                  $ref: '#/components/schemas/_organizations__organizationId__brandingPolicies_customLogo_1'
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                name: My Branding Policy
                enabled: true
                adminSettings:
                  appliesTo: All admins of networks...
                  values:
                  - N_1234
                  - L_5678
                helpSettings:
                  helpTab: show
                  getHelpSubtab: default or inherit
                  communitySubtab: show
                  casesSubtab: hide
                  dataProtectionRequestsSubtab: default or inherit
                  getHelpSubtabKnowledgeBaseSearch: <h1>Some custom HTML content</h1>
                  universalSearchKnowledgeBaseSearch: hide
                  ciscoMerakiProductDocumentation: show
                  supportContactInfo: show
                  newFeaturesSubtab: show
                  firewallInfoSubtab: hide
                  apiDocsSubtab: default or inherit
                  hardwareReplacementsSubtab: hide
                  smForums: hide
                  helpWidget: hide
                customLogo:
                  enabled: true
                  image:
                    preview:
                      url: https://meraki-na.s3.amazonaws.com/org-assets/my-image.png
                      expiresAt: 2022-04-06T06:19:27-07:00
              schema:
                $ref: '#/components/schemas/inline_response_200_96'
          description: Successful operation
      summary: Update a branding policy
      tags:
      - organizations
      - configure
      - brandingPolicies
      x-codegen-request-body-name: updateOrganizationBrandingPolicy
  /organizations/{organizationId}/camera/customAnalytics/artifacts:
    get:
      description: List Custom Analytics Artifacts
      operationId: getOrganizationCameraCustomAnalyticsArtifacts
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - artifactId: "1"
                organizationId: "2"
                name: example
                status:
                  type: pending
              schema:
                items:
                  properties: {}
                  type: object
                type: array
          description: Successful operation
      summary: List Custom Analytics Artifacts
      tags:
      - camera
      - configure
      - customAnalytics
      - artifacts
    post:
      description: Create custom analytics artifact. Returns an artifact upload URL
        with expiry time. Upload the artifact file with a put request to the returned
        upload URL before its expiry.
      operationId: createOrganizationCameraCustomAnalyticsArtifact
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_188'
        content:
          application/json:
            schema:
              example:
                name: example
              properties:
                name:
                  description: Unique name of the artifact
                  type: string
              type: object
        required: false
      responses:
        "201":
          content:
            application/json:
              example:
                artifactId: "1"
                organizationId: "2"
                name: example
                status:
                  type: pending
                uploadId: 00112233445566778899aabbccddeeff
                uploadUrl: https://meraki_custom_cv_upload_url
                uploadUrlExpiry: 2022-01-23T01:23:45.123456+00:00
              schema:
                type: object
          description: Successful operation
      summary: Create custom analytics artifact
      tags:
      - camera
      - configure
      - customAnalytics
      - artifacts
      x-codegen-request-body-name: createOrganizationCameraCustomAnalyticsArtifact
  /organizations/{organizationId}/camera/customAnalytics/artifacts/{artifactId}:
    delete:
      description: Delete Custom Analytics Artifact
      operationId: deleteOrganizationCameraCustomAnalyticsArtifact
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: Artifact ID
        in: path
        name: artifactId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Successful operation
      summary: Delete Custom Analytics Artifact
      tags:
      - camera
      - configure
      - customAnalytics
      - artifacts
    get:
      description: Get Custom Analytics Artifact
      operationId: getOrganizationCameraCustomAnalyticsArtifact
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: Artifact ID
        in: path
        name: artifactId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                artifactId: "1"
                organizationId: "2"
                name: example
                status:
                  type: pending
              schema:
                type: object
          description: Successful operation
      summary: Get Custom Analytics Artifact
      tags:
      - camera
      - configure
      - customAnalytics
      - artifacts
  /organizations/{organizationId}/camera/onboarding/statuses:
    get:
      description: Fetch onboarding status of cameras
      operationId: getOrganizationCameraOnboardingStatuses
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: A list of serial numbers. The returned cameras will be filtered
          to only include these serials.
        explode: false
        in: query
        name: serials
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A list of network IDs. The returned cameras will be filtered
          to only include these networks.
        explode: false
        in: query
        name: networkIds
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
              - networkId: N_12345
                serial: Q2AB-CDEF-GHIJ
                status: pending onboarding
                updatedAt: 2021/03/24 15:23:47.101068 -0700
              schema:
                items:
                  properties: {}
                  type: object
                type: array
          description: Successful operation
      summary: Fetch onboarding status of cameras
      tags:
      - camera
      - configure
      - onboarding
      - statuses
    put:
      description: Notify that credential handoff to camera has completed
      operationId: updateOrganizationCameraOnboardingStatuses
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_189'
        content:
          application/json:
            schema:
              example: {}
              properties:
                serial:
                  description: Serial of camera
                  type: string
                wirelessCredentialsSent:
                  description: Note whether credentials were sent successfully
                  type: boolean
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                success: true
              schema:
                type: object
          description: Successful operation
      summary: Notify that credential handoff to camera has completed
      tags:
      - camera
      - configure
      - onboarding
      - statuses
      x-codegen-request-body-name: updateOrganizationCameraOnboardingStatuses
  /organizations/{organizationId}/cellularGateway/uplink/statuses:
    get:
      description: List the uplink status of every Meraki MG cellular gateway in the
        organization
      operationId: getOrganizationCellularGatewayUplinkStatuses
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: The number of entries per page returned. Acceptable range is
          3 - 1000. Default is 1000.
        in: query
        name: perPage
        schema:
          type: integer
      - description: A token used by the server to indicate the start of the page.
          Often this is a timestamp or an ID but it is not limited to those. This
          parameter should not be defined by client applications. The link for the
          first, last, prev, or next page in the HTTP Link header should define it.
        in: query
        name: startingAfter
        schema:
          type: string
      - description: A token used by the server to indicate the end of the page. Often
          this is a timestamp or an ID but it is not limited to those. This parameter
          should not be defined by client applications. The link for the first, last,
          prev, or next page in the HTTP Link header should define it.
        in: query
        name: endingBefore
        schema:
          type: string
      - description: A list of network IDs. The returned devices will be filtered
          to only include these networks.
        explode: false
        in: query
        name: networkIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A list of serial numbers. The returned devices will be filtered
          to only include these serials.
        explode: false
        in: query
        name: serials
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A list of ICCIDs. The returned devices will be filtered to only
          include these ICCIDs.
        explode: false
        in: query
        name: iccids
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
              - networkId: N_24329156
                serial: Q234-ABCD-5678
                model: MG21
                lastReportedAt: 2018-02-11T00:00:00Z
                uplinks:
                - interface: cellular
                  status: ready
                  ip: 1.2.3.4
                  provider: at&t
                  publicIp: 123.123.123.1
                  model: integrated
                  signalStat:
                    rsrp: -120
                    rsrq: -13
                  connectionType: 4g
                  apn: internet
                  gateway: 100.100.100.100
                  dns1: 111.111.111.111
                  dns2: 222.222.222.222
                  signalType: 4G
                  iccid: "123456789"
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_98'
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative
                links used for subsequent paginated requests.
              schema:
                type: string
      summary: List the uplink status of every Meraki MG cellular gateway in the organization
      tags:
      - cellularGateway
      - monitor
      - uplink
      - statuses
  /organizations/{organizationId}/claim:
    post:
      description: Claim a list of devices, licenses, and/or orders into an organization.
        When claiming by order, all devices and licenses in the order will be claimed;
        licenses will be added to the organization and devices will be placed in the
        organization's inventory.
      operationId: claimIntoOrganization
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_190'
        content:
          application/json:
            schema:
              example:
                orders:
                - 4CXXXXXXX
                serials:
                - Q234-ABCD-5678
                licenses:
                - key: Z2XXXXXXXXXX
                  mode: addDevices
              properties:
                orders:
                  description: The numbers of the orders that should be claimed
                  items:
                    type: string
                  type: array
                serials:
                  description: The serials of the devices that should be claimed
                  items:
                    type: string
                  type: array
                licenses:
                  description: The licenses that should be claimed
                  items:
                    $ref: '#/components/schemas/_organizations__organizationId__claim_licenses'
                  type: array
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                orders:
                - 4CXXXXXXX
                serials:
                - Q234-ABCD-5678
                licenses:
                - key: Z2XXXXXXXXXX
                  mode: addDevices
              schema:
                type: object
          description: Successful operation
      summary: Claim a list of devices, licenses, and/or orders into an organization
      tags:
      - organizations
      - configure
      x-codegen-request-body-name: claimIntoOrganization
  /organizations/{organizationId}/clients/bandwidthUsageHistory:
    get:
      description: Return data usage (in megabits per second) over time for all clients
        in the given organization within a given time range.
      operationId: getOrganizationClientsBandwidthUsageHistory
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: The beginning of the timespan for the data.
        in: query
        name: t0
        schema:
          type: string
      - description: The end of the timespan for the data. t1 can be a maximum of
          31 days after t0.
        in: query
        name: t1
        schema:
          type: string
      - description: The timespan for which the information will be fetched. If specifying
          timespan, do not specify parameters t0 and t1. The value must be in seconds
          and be less than or equal to 31 days. The default is 1 day.
        in: query
        name: timespan
        schema:
          format: float
          type: number
      responses:
        "200":
          content:
            application/json:
              example:
              - ts: 2021-06-20T01:00:00.000Z
                total: 345
                upstream: 60
                downstream: 285
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_99'
                type: array
          description: Successful operation
      summary: Return data usage (in megabits per second) over time for all clients
        in the given organization within a given time range.
      tags:
      - organizations
      - monitor
      - clients
      - bandwidthUsageHistory
  /organizations/{organizationId}/clients/overview:
    get:
      description: Return summary information around client data usage (in mb) across
        the given organization.
      operationId: getOrganizationClientsOverview
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: The beginning of the timespan for the data.
        in: query
        name: t0
        schema:
          type: string
      - description: The end of the timespan for the data. t1 can be a maximum of
          31 days after t0.
        in: query
        name: t1
        schema:
          type: string
      - description: The timespan for which the information will be fetched. If specifying
          timespan, do not specify parameters t0 and t1. The value must be in seconds
          and be less than or equal to 31 days. The default is 1 day.
        in: query
        name: timespan
        schema:
          format: float
          type: number
      responses:
        "200":
          content:
            application/json:
              example:
                usage:
                  overall:
                    total: 18000.0
                    downstream: 10000.0
                    upstream: 8000.0
                  average: 1.37
                counts:
                  total: 20
              schema:
                $ref: '#/components/schemas/inline_response_200_100'
          description: Successful operation
      summary: Return summary information around client data usage (in mb) across
        the given organization.
      tags:
      - organizations
      - monitor
      - clients
      - overview
  /organizations/{organizationId}/clients/search:
    get:
      description: Return the client details in an organization
      operationId: getOrganizationClientsSearch
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: The MAC address of the client. Required.
        in: query
        name: mac
        required: true
        schema:
          type: string
      - description: The number of entries per page returned. Acceptable range is
          3 - 5. Default is 5.
        in: query
        name: perPage
        schema:
          type: integer
      - description: A token used by the server to indicate the start of the page.
          Often this is a timestamp or an ID but it is not limited to those. This
          parameter should not be defined by client applications. The link for the
          first, last, prev, or next page in the HTTP Link header should define it.
        in: query
        name: startingAfter
        schema:
          type: string
      - description: A token used by the server to indicate the end of the page. Often
          this is a timestamp or an ID but it is not limited to those. This parameter
          should not be defined by client applications. The link for the first, last,
          prev, or next page in the HTTP Link header should define it.
        in: query
        name: endingBefore
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                clientId: k74272e
                mac: 22:33:44:55:66:77
                manufacturer: Apple
                records:
                - network:
                    id: N_24329156
                    organizationId: "2930418"
                    name: Main Office
                    timeZone: America/Los_Angeles
                    tags:
                    - tag1
                    - tag2
                    productTypes:
                    - appliance
                    - switch
                    - wireless
                    enrollmentString: my-enrollment-string
                    notes: Additional description of the network
                    isBoundToConfigTemplate: false
                  description: Miles's phone
                  os: iOS
                  user: milesmeraki
                  ip: 1.2.3.4
                  ip6: 2001:db8:3c4d:15::1
                  firstSeen: 1518365681
                  lastSeen: 1526087474
                  vlan: "255"
                  wirelessCapabilities: 802.11ac - 2.4 and 5 GHz
                  smInstalled: true
                  ssid: My SSID
                  clientVpnConnections:
                  - remoteIp: 1.2.3.4
                    connectedAt: 1522613355
                    disconnectedAt: 1522613360
                  lldp:
                  - - System name
                    - Some system name
                  - - System description
                    - Some system description
                  - - Port ID
                    - "1"
                  - - Chassis ID
                    - 00:18:0a:00:00:00
                  - - Port description
                    - eth0
                  - - System capabilities
                    - Two-port MAC Relay
                  status: Online
              schema:
                type: object
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative
                links used for subsequent paginated requests.
              schema:
                type: string
      summary: Return the client details in an organization
      tags:
      - organizations
      - configure
      - clients
      - search
  /organizations/{organizationId}/clone:
    post:
      description: Create a new organization by cloning the addressed organization
      operationId: cloneOrganization
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_191'
        content:
          application/json:
            schema:
              example:
                name: My organization
              properties:
                name:
                  description: The name of the new organization
                  type: string
              required:
              - name
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                id: "2930418"
                name: My organization
                url: https://dashboard.meraki.com/o/VjjsAd/manage/organization/overview
                api:
                  enabled: true
                licensing:
                  model: co-term
                cloud:
                  region:
                    name: North America
                management:
                  details:
                  - name: MSP ID
                    value: "123456"
              schema:
                $ref: '#/components/schemas/inline_response_200_89'
          description: Successful operation
      summary: Create a new organization by cloning the addressed organization
      tags:
      - organizations
      - configure
      x-codegen-request-body-name: cloneOrganization
  /organizations/{organizationId}/configTemplates:
    get:
      description: List the configuration templates for this organization
      operationId: getOrganizationConfigTemplates
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - id: N_24329156
                name: My config template
                productTypes:
                - appliance
                - switch
                - wireless
                timeZone: America/Los_Angeles
              schema:
                items:
                  properties: {}
                  type: object
                type: array
          description: Successful operation
      summary: List the configuration templates for this organization
      tags:
      - organizations
      - configure
      - configTemplates
    post:
      description: Create a new configuration template
      operationId: createOrganizationConfigTemplate
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_192'
        content:
          application/json:
            schema:
              example:
                name: My config template
                timeZone: America/Los_Angeles
              properties:
                name:
                  description: The name of the configuration template
                  type: string
                timeZone:
                  description: The timezone of the configuration template. For a list
                    of allowed timezones, please see the 'TZ' column in the table
                    in <a target='_blank' href='https://en.wikipedia.org/wiki/List_of_tz_database_time_zones'>this
                    article</a>. Not applicable if copying from existing network or
                    template
                  type: string
                copyFromNetworkId:
                  description: The ID of the network or config template to copy configuration
                    from
                  type: string
              required:
              - name
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                id: N_24329156
                name: My config template
                productTypes:
                - appliance
                - switch
                - wireless
                timeZone: America/Los_Angeles
              schema:
                type: object
          description: Successful operation
      summary: Create a new configuration template
      tags:
      - organizations
      - configure
      - configTemplates
      x-codegen-request-body-name: createOrganizationConfigTemplate
  /organizations/{organizationId}/configTemplates/{configTemplateId}:
    delete:
      description: Remove a configuration template
      operationId: deleteOrganizationConfigTemplate
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: Config template ID
        in: path
        name: configTemplateId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Successful operation
      summary: Remove a configuration template
      tags:
      - organizations
      - configure
      - configTemplates
    get:
      description: Return a single configuration template
      operationId: getOrganizationConfigTemplate
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: Config template ID
        in: path
        name: configTemplateId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                id: N_24329156
                name: My config template
                productTypes:
                - appliance
                - switch
                - wireless
                timeZone: America/Los_Angeles
              schema:
                type: object
          description: Successful operation
      summary: Return a single configuration template
      tags:
      - organizations
      - configure
      - configTemplates
    put:
      description: Update a configuration template
      operationId: updateOrganizationConfigTemplate
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: Config template ID
        in: path
        name: configTemplateId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_193'
        content:
          application/json:
            schema:
              example:
                name: My config template
                timeZone: America/Los_Angeles
              properties:
                name:
                  description: The name of the configuration template
                  type: string
                timeZone:
                  description: The timezone of the configuration template. For a list
                    of allowed timezones, please see the 'TZ' column in the table
                    in <a target='_blank' href='https://en.wikipedia.org/wiki/List_of_tz_database_time_zones'>this
                    article.</a>
                  type: string
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                id: N_24329156
                name: My config template
                productTypes:
                - appliance
                - switch
                - wireless
                timeZone: America/Los_Angeles
              schema:
                type: object
          description: Successful operation
      summary: Update a configuration template
      tags:
      - organizations
      - configure
      - configTemplates
      x-codegen-request-body-name: updateOrganizationConfigTemplate
  /organizations/{organizationId}/configTemplates/{configTemplateId}/switch/profiles:
    get:
      description: List the switch profiles for your switch template configuration
      operationId: getOrganizationConfigTemplateSwitchProfiles
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: Config template ID
        in: path
        name: configTemplateId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                switchProfileId: "1234"
                name: A Simple Switch Profile
                model: MS450-24
              schema:
                $ref: '#/components/schemas/inline_response_200_101'
          description: Successful operation
      summary: List the switch profiles for your switch template configuration
      tags:
      - switch
      - configure
      - configTemplates
      - profiles
  /organizations/{organizationId}/configTemplates/{configTemplateId}/switch/profiles/{profileId}/ports:
    get:
      description: Return all the ports of a switch profile
      operationId: getOrganizationConfigTemplateSwitchProfilePorts
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: Config template ID
        in: path
        name: configTemplateId
        required: true
        schema:
          type: string
      - description: Profile ID
        in: path
        name: profileId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - portId: "1"
                name: My switch port
                tags:
                - tag1
                - tag2
                enabled: true
                poeEnabled: true
                type: access
                vlan: 10
                voiceVlan: 20
                allowedVlans: 1,3,5-10
                isolationEnabled: false
                rstpEnabled: true
                stpGuard: disabled
                linkNegotiation: Auto negotiate
                linkNegotiationCapabilities:
                - Auto negotiate
                - 1 Gigabit full duplex (auto)
                portScheduleId: "1234"
                udld: Alert only
                accessPolicyType: Sticky MAC allow list
                accessPolicyNumber: 2
                macAllowList:
                - 34:56:fe:ce:8e:b0
                - 34:56:fe:ce:8e:b1
                stickyMacAllowList:
                - 34:56:fe:ce:8e:b0
                - 34:56:fe:ce:8e:b1
                stickyMacAllowListLimit: 5
                stormControlEnabled: true
                flexibleStackingEnabled: true
                daiTrusted: false
                profile:
                  enabled: false
                  id: "1284392014819"
                  iname: iname
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_102'
                type: array
          description: Successful operation
      summary: Return all the ports of a switch profile
      tags:
      - switch
      - configure
      - configTemplates
      - profiles
      - ports
  /organizations/{organizationId}/configTemplates/{configTemplateId}/switch/profiles/{profileId}/ports/{portId}:
    get:
      description: Return a switch profile port
      operationId: getOrganizationConfigTemplateSwitchProfilePort
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: Config template ID
        in: path
        name: configTemplateId
        required: true
        schema:
          type: string
      - description: Profile ID
        in: path
        name: profileId
        required: true
        schema:
          type: string
      - description: Port ID
        in: path
        name: portId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                portId: "1"
                name: My switch port
                tags:
                - tag1
                - tag2
                enabled: true
                poeEnabled: true
                type: access
                vlan: 10
                voiceVlan: 20
                allowedVlans: 1,3,5-10
                isolationEnabled: false
                rstpEnabled: true
                stpGuard: disabled
                linkNegotiation: Auto negotiate
                linkNegotiationCapabilities:
                - Auto negotiate
                - 1 Gigabit full duplex (auto)
                portScheduleId: "1234"
                udld: Alert only
                accessPolicyType: Sticky MAC allow list
                accessPolicyNumber: 2
                macAllowList:
                - 34:56:fe:ce:8e:b0
                - 34:56:fe:ce:8e:b1
                stickyMacAllowList:
                - 34:56:fe:ce:8e:b0
                - 34:56:fe:ce:8e:b1
                stickyMacAllowListLimit: 5
                stormControlEnabled: true
                flexibleStackingEnabled: true
                daiTrusted: false
                profile:
                  enabled: false
                  id: "1284392014819"
                  iname: iname
              schema:
                $ref: '#/components/schemas/inline_response_200_102'
          description: Successful operation
      summary: Return a switch profile port
      tags:
      - switch
      - configure
      - configTemplates
      - profiles
      - ports
    put:
      description: Update a switch profile port
      operationId: updateOrganizationConfigTemplateSwitchProfilePort
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: Config template ID
        in: path
        name: configTemplateId
        required: true
        schema:
          type: string
      - description: Profile ID
        in: path
        name: profileId
        required: true
        schema:
          type: string
      - description: Port ID
        in: path
        name: portId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_194'
        content:
          application/json:
            schema:
              example:
                name: My switch port
                tags:
                - tag1
                - tag2
                enabled: true
                poeEnabled: true
                type: access
                vlan: 10
                voiceVlan: 20
                allowedVlans: 1,3,5-10
                isolationEnabled: false
                rstpEnabled: true
                stpGuard: disabled
                linkNegotiation: Auto negotiate
                portScheduleId: "1234"
                udld: Alert only
                accessPolicyType: Sticky MAC allow list
                accessPolicyNumber: 2
                macAllowList:
                - 34:56:fe:ce:8e:b0
                - 34:56:fe:ce:8e:b1
                stickyMacAllowList:
                - 34:56:fe:ce:8e:b0
                - 34:56:fe:ce:8e:b1
                stickyMacAllowListLimit: 5
                stormControlEnabled: true
                flexibleStackingEnabled: true
                daiTrusted: false
                profile:
                  enabled: false
                  id: "1284392014819"
                  iname: iname
              properties:
                name:
                  description: The name of the switch profile port.
                  type: string
                tags:
                  description: The list of tags of the switch profile port.
                  items:
                    type: string
                  type: array
                enabled:
                  description: The status of the switch profile port.
                  type: boolean
                poeEnabled:
                  description: The PoE status of the switch profile port.
                  type: boolean
                type:
                  description: The type of the switch profile port ('trunk' or 'access').
                  enum:
                  - access
                  - trunk
                  type: string
                vlan:
                  description: The VLAN of the switch profile port. A null value will
                    clear the value set for trunk ports.
                  type: integer
                voiceVlan:
                  description: The voice VLAN of the switch profile port. Only applicable
                    to access ports.
                  type: integer
                allowedVlans:
                  description: The VLANs allowed on the switch profile port. Only
                    applicable to trunk ports.
                  type: string
                isolationEnabled:
                  description: The isolation status of the switch profile port.
                  type: boolean
                rstpEnabled:
                  description: The rapid spanning tree protocol status.
                  type: boolean
                stpGuard:
                  description: The state of the STP guard ('disabled', 'root guard',
                    'bpdu guard' or 'loop guard').
                  enum:
                  - bpdu guard
                  - disabled
                  - loop guard
                  - root guard
                  type: string
                linkNegotiation:
                  description: The link speed for the switch profile port.
                  type: string
                portScheduleId:
                  description: The ID of the port schedule. A value of null will clear
                    the port schedule.
                  type: string
                udld:
                  description: The action to take when Unidirectional Link is detected
                    (Alert only, Enforce). Default configuration is Alert only.
                  enum:
                  - Alert only
                  - Enforce
                  type: string
                accessPolicyType:
                  description: The type of the access policy of the switch profile
                    port. Only applicable to access ports. Can be one of 'Open', 'Custom
                    access policy', 'MAC allow list' or 'Sticky MAC allow list'.
                  enum:
                  - Custom access policy
                  - MAC allow list
                  - Open
                  - Sticky MAC allow list
                  type: string
                accessPolicyNumber:
                  description: The number of a custom access policy to configure on
                    the switch profile port. Only applicable when 'accessPolicyType'
                    is 'Custom access policy'.
                  type: integer
                macAllowList:
                  description: Only devices with MAC addresses specified in this list
                    will have access to this port. Up to 20 MAC addresses can be defined.
                    Only applicable when 'accessPolicyType' is 'MAC allow list'.
                  items:
                    type: string
                  type: array
                stickyMacAllowList:
                  description: The initial list of MAC addresses for sticky Mac allow
                    list. Only applicable when 'accessPolicyType' is 'Sticky MAC allow
                    list'.
                  items:
                    type: string
                  type: array
                stickyMacAllowListLimit:
                  description: The maximum number of MAC addresses for sticky MAC
                    allow list. Only applicable when 'accessPolicyType' is 'Sticky
                    MAC allow list'.
                  type: integer
                stormControlEnabled:
                  description: The storm control status of the switch profile port.
                  type: boolean
                flexibleStackingEnabled:
                  description: For supported switches (e.g. MS420/MS425), whether
                    or not the port has flexible stacking enabled.
                  type: boolean
                daiTrusted:
                  description: If true, ARP packets for this port will be considered
                    trusted, and Dynamic ARP Inspection will allow the traffic.
                  type: boolean
                profile:
                  $ref: '#/components/schemas/_devices__serial__switch_ports_profile'
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                portId: "1"
                name: My switch port
                tags:
                - tag1
                - tag2
                enabled: true
                poeEnabled: true
                type: access
                vlan: 10
                voiceVlan: 20
                allowedVlans: 1,3,5-10
                isolationEnabled: false
                rstpEnabled: true
                stpGuard: disabled
                linkNegotiation: Auto negotiate
                linkNegotiationCapabilities:
                - Auto negotiate
                - 1 Gigabit full duplex (auto)
                portScheduleId: "1234"
                udld: Alert only
                accessPolicyType: Sticky MAC allow list
                accessPolicyNumber: 2
                macAllowList:
                - 34:56:fe:ce:8e:b0
                - 34:56:fe:ce:8e:b1
                stickyMacAllowList:
                - 34:56:fe:ce:8e:b0
                - 34:56:fe:ce:8e:b1
                stickyMacAllowListLimit: 5
                stormControlEnabled: true
                flexibleStackingEnabled: true
                daiTrusted: false
                profile:
                  enabled: false
                  id: "1284392014819"
                  iname: iname
              schema:
                $ref: '#/components/schemas/inline_response_200_102'
          description: Successful operation
      summary: Update a switch profile port
      tags:
      - switch
      - configure
      - configTemplates
      - profiles
      - ports
      x-codegen-request-body-name: updateOrganizationConfigTemplateSwitchProfilePort
  /organizations/{organizationId}/configurationChanges:
    get:
      description: View the Change Log for your organization
      operationId: getOrganizationConfigurationChanges
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: The beginning of the timespan for the data. The maximum lookback
          period is 365 days from today.
        in: query
        name: t0
        schema:
          type: string
      - description: The end of the timespan for the data. t1 can be a maximum of
          365 days after t0.
        in: query
        name: t1
        schema:
          type: string
      - description: The timespan for which the information will be fetched. If specifying
          timespan, do not specify parameters t0 and t1. The value must be in seconds
          and be less than or equal to 365 days. The default is 365 days.
        in: query
        name: timespan
        schema:
          format: float
          type: number
      - description: The number of entries per page returned. Acceptable range is
          3 - 5000. Default is 5000.
        in: query
        name: perPage
        schema:
          type: integer
      - description: A token used by the server to indicate the start of the page.
          Often this is a timestamp or an ID but it is not limited to those. This
          parameter should not be defined by client applications. The link for the
          first, last, prev, or next page in the HTTP Link header should define it.
        in: query
        name: startingAfter
        schema:
          type: string
      - description: A token used by the server to indicate the end of the page. Often
          this is a timestamp or an ID but it is not limited to those. This parameter
          should not be defined by client applications. The link for the first, last,
          prev, or next page in the HTTP Link header should define it.
        in: query
        name: endingBefore
        schema:
          type: string
      - description: Filters on the given network
        in: query
        name: networkId
        schema:
          type: string
      - description: Filters on the given Admin
        in: query
        name: adminId
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - ts: 2018-02-11T00:00:00.090210Z
                adminName: Miles Meraki
                adminEmail: miles@meraki.com
                adminId: "212406"
                page: via API
                label: PUT /api/v1/organizations/2930418
                oldValue: '{"id":"2930418","name":"My organization","url":"https://dashboard.meraki.com/o/VjjsAd/manage/organization/overview"}'
                newValue: '{"id":"2930418","name":"My organization changed","url":"https://dashboard.meraki.com/o/VjjsAd/manage/organization/overview"}'
              schema:
                items:
                  properties: {}
                  type: object
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative
                links used for subsequent paginated requests.
              schema:
                type: string
      summary: View the Change Log for your organization
      tags:
      - organizations
      - monitor
      - configurationChanges
  /organizations/{organizationId}/devices:
    get:
      description: List the devices in an organization
      operationId: getOrganizationDevices
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: The number of entries per page returned. Acceptable range is
          3 - 1000. Default is 1000.
        in: query
        name: perPage
        schema:
          type: integer
      - description: A token used by the server to indicate the start of the page.
          Often this is a timestamp or an ID but it is not limited to those. This
          parameter should not be defined by client applications. The link for the
          first, last, prev, or next page in the HTTP Link header should define it.
        in: query
        name: startingAfter
        schema:
          type: string
      - description: A token used by the server to indicate the end of the page. Often
          this is a timestamp or an ID but it is not limited to those. This parameter
          should not be defined by client applications. The link for the first, last,
          prev, or next page in the HTTP Link header should define it.
        in: query
        name: endingBefore
        schema:
          type: string
      - description: Filter results by whether or not the device's configuration has
          been updated after the given timestamp
        in: query
        name: configurationUpdatedAfter
        schema:
          type: string
      - description: Optional parameter to filter devices by network.
        explode: false
        in: query
        name: networkIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Optional parameter to filter devices by product type. Valid types
          are wireless, appliance, switch, systemsManager, camera, cellularGateway,
          and sensor.
        explode: false
        in: query
        name: productTypes
        schema:
          items:
            enum:
            - appliance
            - camera
            - cellularGateway
            - sensor
            - switch
            - systemsManager
            - wireless
            type: string
          type: array
        style: form
      - description: Optional parameter to filter devices by tags.
        explode: false
        in: query
        name: tags
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Optional parameter of value 'withAnyTags' or 'withAllTags' to
          indicate whether to return networks which contain ANY or ALL of the included
          tags. If no type is included, 'withAnyTags' will be selected.
        in: query
        name: tagsFilterType
        schema:
          enum:
          - withAllTags
          - withAnyTags
          type: string
      - description: Optional parameter to filter devices by name. All returned devices
          will have a name that contains the search term or is an exact match.
        in: query
        name: name
        schema:
          type: string
      - description: Optional parameter to filter devices by MAC address. All returned
          devices will have a MAC address that contains the search term or is an exact
          match.
        in: query
        name: mac
        schema:
          type: string
      - description: Optional parameter to filter devices by serial number. All returned
          devices will have a serial number that contains the search term or is an
          exact match.
        in: query
        name: serial
        schema:
          type: string
      - description: Optional parameter to filter devices by model. All returned devices
          will have a model that contains the search term or is an exact match.
        in: query
        name: model
        schema:
          type: string
      - description: Optional parameter to filter devices by one or more MAC addresses.
          All returned devices will have a MAC address that is an exact match.
        explode: false
        in: query
        name: macs
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Optional parameter to filter devices by one or more serial numbers.
          All returned devices will have a serial number that is an exact match.
        explode: false
        in: query
        name: serials
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Optional parameter to filter devices by the metrics that they
          provide. Only applies to sensor devices.
        explode: false
        in: query
        name: sensorMetrics
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Optional parameter to filter devices by the alert profiles that
          are bound to them. Only applies to sensor devices.
        explode: false
        in: query
        name: sensorAlertProfileIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Optional parameter to filter devices by one or more models. All
          returned devices will have a model that is an exact match.
        explode: false
        in: query
        name: models
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
              - name: My AP
                lat: 37.4180951010362
                lng: -122.098531723022
                address: 1600 Pennsylvania Ave
                notes: My AP's note
                tags:
                - recently-added
                networkId: N_24329156
                serial: Q234-ABCD-5678
                model: MR34
                mac: 00:11:22:33:44:55
                lanIp: 1.2.3.4
                firmware: wireless-25-14
                productType: wireless
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_103'
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative
                links used for subsequent paginated requests.
              schema:
                type: string
      summary: List the devices in an organization
      tags:
      - organizations
      - configure
      - devices
  /organizations/{organizationId}/devices/availabilities:
    get:
      description: List the availability information for devices in an organization.
        The data returned by this endpoint is updated every 5 minutes.
      operationId: getOrganizationDevicesAvailabilities
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: The number of entries per page returned. Acceptable range is
          3 - 1000. Default is 1000.
        in: query
        name: perPage
        schema:
          type: integer
      - description: A token used by the server to indicate the start of the page.
          Often this is a timestamp or an ID but it is not limited to those. This
          parameter should not be defined by client applications. The link for the
          first, last, prev, or next page in the HTTP Link header should define it.
        in: query
        name: startingAfter
        schema:
          type: string
      - description: A token used by the server to indicate the end of the page. Often
          this is a timestamp or an ID but it is not limited to those. This parameter
          should not be defined by client applications. The link for the first, last,
          prev, or next page in the HTTP Link header should define it.
        in: query
        name: endingBefore
        schema:
          type: string
      - description: Optional parameter to filter device availabilities by network
          ID. This filter uses multiple exact matches.
        explode: false
        in: query
        name: networkIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Optional parameter to filter device availabilities by device
          product types. This filter uses multiple exact matches.
        explode: false
        in: query
        name: productTypes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Optional parameter to filter device availabilities by device
          serial numbers. This filter uses multiple exact matches.
        explode: false
        in: query
        name: serials
        schema:
          items:
            type: string
          type: array
        style: form
      - description: An optional parameter to filter devices by tags. The filtering
          is case-sensitive. If tags are included, 'tagsFilterType' should also be
          included (see below). This filter uses multiple exact matches.
        explode: false
        in: query
        name: tags
        schema:
          items:
            type: string
          type: array
        style: form
      - description: An optional parameter of value 'withAnyTags' or 'withAllTags'
          to indicate whether to return devices which contain ANY or ALL of the included
          tags. If no type is included, 'withAnyTags' will be selected.
        in: query
        name: tagsFilterType
        schema:
          enum:
          - withAllTags
          - withAnyTags
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - mac: 00:11:22:33:44:55
                name: My AP
                network:
                  id: N_24329156
                productType: switch
                serial: Q234-ABCD-5678
                status: online
                tags:
                - tag1
                - tag2
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_104'
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative
                links used for subsequent paginated requests.
              schema:
                type: string
      summary: List the availability information for devices in an organization
      tags:
      - organizations
      - monitor
      - devices
      - availabilities
  /organizations/{organizationId}/devices/powerModules/statuses/byDevice:
    get:
      description: List the power status information for devices in an organization.
        The data returned by this endpoint is updated every 5 minutes.
      operationId: getOrganizationDevicesPowerModulesStatusesByDevice
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: The number of entries per page returned. Acceptable range is
          3 - 1000. Default is 1000.
        in: query
        name: perPage
        schema:
          type: integer
      - description: A token used by the server to indicate the start of the page.
          Often this is a timestamp or an ID but it is not limited to those. This
          parameter should not be defined by client applications. The link for the
          first, last, prev, or next page in the HTTP Link header should define it.
        in: query
        name: startingAfter
        schema:
          type: string
      - description: A token used by the server to indicate the end of the page. Often
          this is a timestamp or an ID but it is not limited to those. This parameter
          should not be defined by client applications. The link for the first, last,
          prev, or next page in the HTTP Link header should define it.
        in: query
        name: endingBefore
        schema:
          type: string
      - description: Optional parameter to filter device availabilities by network
          ID. This filter uses multiple exact matches.
        explode: false
        in: query
        name: networkIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Optional parameter to filter device availabilities by device
          product types. This filter uses multiple exact matches.
        explode: false
        in: query
        name: productTypes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Optional parameter to filter device availabilities by device
          serial numbers. This filter uses multiple exact matches.
        explode: false
        in: query
        name: serials
        schema:
          items:
            type: string
          type: array
        style: form
      - description: An optional parameter to filter devices by tags. The filtering
          is case-sensitive. If tags are included, 'tagsFilterType' should also be
          included (see below). This filter uses multiple exact matches.
        explode: false
        in: query
        name: tags
        schema:
          items:
            type: string
          type: array
        style: form
      - description: An optional parameter of value 'withAnyTags' or 'withAllTags'
          to indicate whether to return devices which contain ANY or ALL of the included
          tags. If no type is included, 'withAnyTags' will be selected.
        in: query
        name: tagsFilterType
        schema:
          enum:
          - withAllTags
          - withAnyTags
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - mac: 00:11:22:33:44:55
                name: My AP
                network:
                  id: N_24329156
                productType: switch
                serial: Q234-ABCD-5678
                tags:
                - tag1
                - tag2
                slots:
                - number: 1
                  serial: Q234-ABCD-5678
                  model: PWR-C5-125WAC
                  status: not connected
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_105'
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative
                links used for subsequent paginated requests.
              schema:
                type: string
      summary: List the power status information for devices in an organization
      tags:
      - organizations
      - monitor
      - devices
      - powerModules
      - statuses
      - byDevice
  /organizations/{organizationId}/devices/provisioning/statuses:
    get:
      description: List the provisioning statuses information for devices in an organization.
      operationId: getOrganizationDevicesProvisioningStatuses
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: The number of entries per page returned. Acceptable range is
          3 - 1000. Default is 1000.
        in: query
        name: perPage
        schema:
          type: integer
      - description: A token used by the server to indicate the start of the page.
          Often this is a timestamp or an ID but it is not limited to those. This
          parameter should not be defined by client applications. The link for the
          first, last, prev, or next page in the HTTP Link header should define it.
        in: query
        name: startingAfter
        schema:
          type: string
      - description: A token used by the server to indicate the end of the page. Often
          this is a timestamp or an ID but it is not limited to those. This parameter
          should not be defined by client applications. The link for the first, last,
          prev, or next page in the HTTP Link header should define it.
        in: query
        name: endingBefore
        schema:
          type: string
      - description: Optional parameter to filter device by network ID. This filter
          uses multiple exact matches.
        explode: false
        in: query
        name: networkIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Optional parameter to filter device by device product types.
          This filter uses multiple exact matches.
        explode: false
        in: query
        name: productTypes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Optional parameter to filter device by device serial numbers.
          This filter uses multiple exact matches.
        explode: false
        in: query
        name: serials
        schema:
          items:
            type: string
          type: array
        style: form
      - description: 'An optional parameter to filter devices by the provisioning
          status. Accepted statuses: unprovisioned, incomplete, complete.'
        in: query
        name: status
        schema:
          enum:
          - complete
          - incomplete
          - unprovisioned
          type: string
      - description: An optional parameter to filter devices by tags. The filtering
          is case-sensitive. If tags are included, 'tagsFilterType' should also be
          included (see below). This filter uses multiple exact matches.
        explode: false
        in: query
        name: tags
        schema:
          items:
            type: string
          type: array
        style: form
      - description: An optional parameter of value 'withAnyTags' or 'withAllTags'
          to indicate whether to return devices which contain ANY or ALL of the included
          tags. If no type is included, 'withAnyTags' will be selected.
        in: query
        name: tagsFilterType
        schema:
          enum:
          - withAllTags
          - withAnyTags
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - mac: 00:11:22:33:44:55
                name: My AP
                network:
                  id: N_24329156
                productType: switch
                serial: Q234-ABCD-5678
                status: complete
                tags:
                - tag1
                - tag2
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_106'
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative
                links used for subsequent paginated requests.
              schema:
                type: string
      summary: List the provisioning statuses information for devices in an organization.
      tags:
      - organizations
      - monitor
      - devices
      - provisioning
      - statuses
  /organizations/{organizationId}/devices/statuses:
    get:
      description: List the status of every Meraki device in the organization
      operationId: getOrganizationDevicesStatuses
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: The number of entries per page returned. Acceptable range is
          3 - 1000. Default is 1000.
        in: query
        name: perPage
        schema:
          type: integer
      - description: A token used by the server to indicate the start of the page.
          Often this is a timestamp or an ID but it is not limited to those. This
          parameter should not be defined by client applications. The link for the
          first, last, prev, or next page in the HTTP Link header should define it.
        in: query
        name: startingAfter
        schema:
          type: string
      - description: A token used by the server to indicate the end of the page. Often
          this is a timestamp or an ID but it is not limited to those. This parameter
          should not be defined by client applications. The link for the first, last,
          prev, or next page in the HTTP Link header should define it.
        in: query
        name: endingBefore
        schema:
          type: string
      - description: Optional parameter to filter devices by network ids.
        explode: false
        in: query
        name: networkIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Optional parameter to filter devices by serials.
        explode: false
        in: query
        name: serials
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Optional parameter to filter devices by statuses. Valid statuses
          are ["online", "alerting", "offline", "dormant"].
        explode: false
        in: query
        name: statuses
        schema:
          items:
            enum:
            - alerting
            - dormant
            - offline
            - online
            type: string
          type: array
        style: form
      - description: An optional parameter to filter device statuses by product type.
          Valid types are wireless, appliance, switch, systemsManager, camera, cellularGateway,
          and sensor.
        explode: false
        in: query
        name: productTypes
        schema:
          items:
            enum:
            - appliance
            - camera
            - cellularGateway
            - sensor
            - switch
            - systemsManager
            - wireless
            type: string
          type: array
        style: form
      - description: Optional parameter to filter devices by models.
        explode: false
        in: query
        name: models
        schema:
          items:
            type: string
          type: array
        style: form
      - description: An optional parameter to filter devices by tags. The filtering
          is case-sensitive. If tags are included, 'tagsFilterType' should also be
          included (see below).
        explode: false
        in: query
        name: tags
        schema:
          items:
            type: string
          type: array
        style: form
      - description: An optional parameter of value 'withAnyTags' or 'withAllTags'
          to indicate whether to return devices which contain ANY or ALL of the included
          tags. If no type is included, 'withAnyTags' will be selected.
        in: query
        name: tagsFilterType
        schema:
          enum:
          - withAllTags
          - withAnyTags
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                name: My AP
                serial: Q234-ABCD-5678
                mac: 00:11:22:33:44:55
                publicIp: 123.123.123.1
                networkId: N_24329156
                status: online
                lastReportedAt: 2018-02-11T00:00:00.090210Z
                lanIp: 1.2.3.4
                gateway: 1.2.3.5
                ipType: dhcp
                primaryDns: 8.8.8.8
                secondaryDns: 8.8.4.4
                productType: wireless
                components:
                  powerSupplies: []
                model: MR34
                tags:
                - tag1
                - tag2
              schema:
                $ref: '#/components/schemas/inline_response_200_107'
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative
                links used for subsequent paginated requests.
              schema:
                type: string
      summary: List the status of every Meraki device in the organization
      tags:
      - organizations
      - monitor
      - devices
      - statuses
  /organizations/{organizationId}/devices/statuses/overview:
    get:
      description: Return an overview of current device statuses
      operationId: getOrganizationDevicesStatusesOverview
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: An optional parameter to filter device statuses by product type.
          Valid types are wireless, appliance, switch, systemsManager, camera, cellularGateway,
          and sensor.
        explode: false
        in: query
        name: productTypes
        schema:
          items:
            enum:
            - appliance
            - camera
            - cellularGateway
            - sensor
            - switch
            - systemsManager
            - wireless
            type: string
          type: array
        style: form
      - description: An optional parameter to filter device statuses by network.
        explode: false
        in: query
        name: networkIds
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                counts:
                  byStatus:
                    online: 5
                    alerting: 4
                    offline: 2
                    dormant: 1
              schema:
                $ref: '#/components/schemas/inline_response_200_108'
          description: Successful operation
      summary: Return an overview of current device statuses
      tags:
      - organizations
      - monitor
      - devices
      - statuses
      - overview
  /organizations/{organizationId}/devices/uplinks/addresses/byDevice:
    get:
      description: List the current uplink addresses for devices in an organization.
      operationId: getOrganizationDevicesUplinksAddressesByDevice
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: The number of entries per page returned. Acceptable range is
          3 - 1000. Default is 1000.
        in: query
        name: perPage
        schema:
          type: integer
      - description: A token used by the server to indicate the start of the page.
          Often this is a timestamp or an ID but it is not limited to those. This
          parameter should not be defined by client applications. The link for the
          first, last, prev, or next page in the HTTP Link header should define it.
        in: query
        name: startingAfter
        schema:
          type: string
      - description: A token used by the server to indicate the end of the page. Often
          this is a timestamp or an ID but it is not limited to those. This parameter
          should not be defined by client applications. The link for the first, last,
          prev, or next page in the HTTP Link header should define it.
        in: query
        name: endingBefore
        schema:
          type: string
      - description: Optional parameter to filter device uplinks by network ID. This
          filter uses multiple exact matches.
        explode: false
        in: query
        name: networkIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Optional parameter to filter device uplinks by device product
          types. This filter uses multiple exact matches.
        explode: false
        in: query
        name: productTypes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Optional parameter to filter device availabilities by device
          serial numbers. This filter uses multiple exact matches.
        explode: false
        in: query
        name: serials
        schema:
          items:
            type: string
          type: array
        style: form
      - description: An optional parameter to filter devices by tags. The filtering
          is case-sensitive. If tags are included, 'tagsFilterType' should also be
          included (see below). This filter uses multiple exact matches.
        explode: false
        in: query
        name: tags
        schema:
          items:
            type: string
          type: array
        style: form
      - description: An optional parameter of value 'withAnyTags' or 'withAllTags'
          to indicate whether to return devices which contain ANY or ALL of the included
          tags. If no type is included, 'withAnyTags' will be selected.
        in: query
        name: tagsFilterType
        schema:
          enum:
          - withAllTags
          - withAnyTags
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - mac: 00:11:22:33:44:55
                name: My AP
                network:
                  id: N_24329156
                productType: switch
                serial: Q234-ABCD-5678
                tags:
                - tag1
                - tag2
                uplinks:
                - interface: wan1
                  addresses:
                  - protocol: ipv6
                    assignmentMode: static
                    address: 2001:db8:c15:c0:d0c::101:ca75
                    gateway: fe80:db8:c15:c0:d0c::10ca:1d02
                    public:
                      address: 2001:db8:c15:c0:d0c:15e:15e:bab1
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_109'
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative
                links used for subsequent paginated requests.
              schema:
                type: string
      summary: List the current uplink addresses for devices in an organization.
      tags:
      - organizations
      - monitor
      - devices
      - uplinks
      - addresses
      - byDevice
  /organizations/{organizationId}/devices/uplinksLossAndLatency:
    get:
      description: Return the uplink loss and latency for every MX in the organization
        from at latest 2 minutes ago
      operationId: getOrganizationDevicesUplinksLossAndLatency
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: The beginning of the timespan for the data. The maximum lookback
          period is 60 days from today.
        in: query
        name: t0
        schema:
          type: string
      - description: The end of the timespan for the data. t1 can be a maximum of
          5 minutes after t0. The latest possible time that t1 can be is 2 minutes
          into the past.
        in: query
        name: t1
        schema:
          type: string
      - description: The timespan for which the information will be fetched. If specifying
          timespan, do not specify parameters t0 and t1. The value must be in seconds
          and be less than or equal to 5 minutes. The default is 5 minutes.
        in: query
        name: timespan
        schema:
          format: float
          type: number
      - description: Optional filter for a specific WAN uplink. Valid uplinks are
          wan1, wan2, cellular. Default will return all uplinks.
        in: query
        name: uplink
        schema:
          enum:
          - cellular
          - wan1
          - wan2
          type: string
      - description: Optional filter for a specific destination IP. Default will return
          all destination IPs.
        in: query
        name: ip
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - networkId: N_24329156
                serial: Q234-ABCD-5678
                uplink: wan1
                ip: 1.2.3.4
                timeSeries:
                - ts: 2019-01-31T18:46:13Z
                  lossPercent: 5.3
                  latencyMs: 194.9
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_110'
                type: array
          description: Successful operation
      summary: Return the uplink loss and latency for every MX in the organization
        from at latest 2 minutes ago
      tags:
      - organizations
      - monitor
      - devices
      - uplinks
      - uplinksLossAndLatency
  /organizations/{organizationId}/earlyAccess/features:
    get:
      description: List the available early access features for organization
      operationId: getOrganizationEarlyAccessFeatures
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - shortName: has_new_feature
                name: New Feature Beta
                descriptions:
                  short: New Feature Beta
                  long: New Feature Beta long description. consectetur adipiscing
                    elit, sed do eiusmod tempor incididunt ut labore et dolore magna
                    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do
                    eiusmod tempor incididunt ut labore et dolore magna aliqua. Lorem
                    ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod
                    tempor incididunt ut labore et dolore magna aliqua.
                topic: Dashboard
                isOrgScopedOnly: true
                documentationLink: https://documentation.meraki.com/
                supportLink: https://community.meraki.com/
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_111'
                type: array
          description: Successful operation
      summary: List the available early access features for organization
      tags:
      - organizations
      - configure
      - earlyAccess
      - features
  /organizations/{organizationId}/earlyAccess/features/optIns:
    get:
      description: List the early access feature opt-ins for an organization
      operationId: getOrganizationEarlyAccessFeaturesOptIns
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - id: "1"
                shortName: has_new_feature
                limitScopeToNetworks:
                - id: L_1234
                  name: My Network
                createdAt: 2022-05-01T04:07:15Z
              schema:
                items:
                  properties: {}
                  type: object
                type: array
          description: Successful operation
      summary: List the early access feature opt-ins for an organization
      tags:
      - organizations
      - configure
      - earlyAccess
      - features
      - optIns
    post:
      description: Create a new early access feature opt-in for an organization
      operationId: createOrganizationEarlyAccessFeaturesOptIn
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_195'
        content:
          application/json:
            schema:
              example:
                shortName: has_magnetic_beta
                limitScopeToNetworks:
                - N_12345
              properties:
                shortName:
                  description: Short name of the early access feature
                  type: string
                limitScopeToNetworks:
                  description: A list of network IDs to apply the opt-in to
                  items:
                    type: string
                  type: array
              required:
              - shortName
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                id: "1"
                shortName: has_new_feature
                limitScopeToNetworks:
                - id: L_1234
                  name: My Network
                createdAt: 2022-05-01T04:07:15Z
              schema:
                type: object
          description: Successful operation
      summary: Create a new early access feature opt-in for an organization
      tags:
      - organizations
      - configure
      - earlyAccess
      - features
      - optIns
      x-codegen-request-body-name: createOrganizationEarlyAccessFeaturesOptIn
  /organizations/{organizationId}/earlyAccess/features/optIns/{optInId}:
    delete:
      description: Delete an early access feature opt-in
      operationId: deleteOrganizationEarlyAccessFeaturesOptIn
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: Opt in ID
        in: path
        name: optInId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Successful operation
      summary: Delete an early access feature opt-in
      tags:
      - organizations
      - configure
      - earlyAccess
      - features
      - optIns
    get:
      description: Show an early access feature opt-in for an organization
      operationId: getOrganizationEarlyAccessFeaturesOptIn
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: Opt in ID
        in: path
        name: optInId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                id: "1"
                shortName: has_new_feature
                limitScopeToNetworks:
                - id: L_1234
                  name: My Network
                createdAt: 2022-05-01T04:07:15Z
              schema:
                type: object
          description: Successful operation
      summary: Show an early access feature opt-in for an organization
      tags:
      - organizations
      - configure
      - earlyAccess
      - features
      - optIns
    put:
      description: Update an early access feature opt-in for an organization
      operationId: updateOrganizationEarlyAccessFeaturesOptIn
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: Opt in ID
        in: path
        name: optInId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_196'
        content:
          application/json:
            schema:
              example:
                limitScopeToNetworks:
                - N_12345
              properties:
                limitScopeToNetworks:
                  description: A list of network IDs to apply the opt-in to
                  items:
                    type: string
                  type: array
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                id: "1"
                shortName: has_new_feature
                limitScopeToNetworks:
                - id: L_1234
                  name: My Network
                createdAt: 2022-05-01T04:07:15Z
              schema:
                type: object
          description: Successful operation
      summary: Update an early access feature opt-in for an organization
      tags:
      - organizations
      - configure
      - earlyAccess
      - features
      - optIns
      x-codegen-request-body-name: updateOrganizationEarlyAccessFeaturesOptIn
  /organizations/{organizationId}/firmware/upgrades:
    get:
      description: Get firmware upgrade information for an organization
      operationId: getOrganizationFirmwareUpgrades
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: 'The status of an upgrade '
        explode: false
        in: query
        name: status
        schema:
          items:
            type: string
          type: array
        style: form
      - description: The product type in a given upgrade ID
        explode: false
        in: query
        name: productType
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
              - upgradeId: Event ID Number
                upgradeBatchId: Batch ID Number
                network:
                  id: L_1738
                  name: Minions
                status: Completed
                time: 2022-11-01T00:00:00Z
                completedAt: 2020-11-05 15:50:05 UTC
                productType: wireless
                toVersion:
                  id: "2888"
                  shortName: MR 11.2.1
                  releaseType: stable
                  releaseDate: 2022-03-17T17:22:52Z
                fromVersion:
                  id: "2887"
                  shortName: MR 11.2.1
                  releaseType: stable
                  releaseDate: 2022-03-17T17:22:52Z
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_112'
                type: array
          description: Successful operation
      summary: Get firmware upgrade information for an organization
      tags:
      - organizations
      - configure
      - firmware
      - upgrades
  /organizations/{organizationId}/firmware/upgrades/byDevice:
    get:
      description: Get firmware upgrade status for the filtered devices
      operationId: getOrganizationFirmwareUpgradesByDevice
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: The number of entries per page returned. Acceptable range is
          3 - 50. Default is 50.
        in: query
        name: perPage
        schema:
          type: integer
      - description: A token used by the server to indicate the start of the page.
          Often this is a timestamp or an ID but it is not limited to those. This
          parameter should not be defined by client applications. The link for the
          first, last, prev, or next page in the HTTP Link header should define it.
        in: query
        name: startingAfter
        schema:
          type: string
      - description: A token used by the server to indicate the end of the page. Often
          this is a timestamp or an ID but it is not limited to those. This parameter
          should not be defined by client applications. The link for the first, last,
          prev, or next page in the HTTP Link header should define it.
        in: query
        name: endingBefore
        schema:
          type: string
      - description: Optional parameter to filter by network
        explode: false
        in: query
        name: networkIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Optional parameter to filter by serial number.  All returned
          devices will have a serial number that is an exact match.
        explode: false
        in: query
        name: serials
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Optional parameter to filter by one or more MAC addresses belonging
          to devices. All devices returned belong to MAC addresses that are an exact
          match.
        explode: false
        in: query
        name: macs
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Optional parameter to filter by firmware upgrade ids.
        explode: false
        in: query
        name: firmwareUpgradeIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Optional parameter to filter by firmware upgrade batch ids.
        explode: false
        in: query
        name: firmwareUpgradeBatchIds
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
              - serial: Q234-ABCD-5678
                name: My AP
                deviceStatus: completed
                upgrade:
                  time: 2018-02-11T00:00:00.090210Z
                  fromVersion:
                    id: "1234"
                    shortName: MV 10.8.1
                    releaseType: stable
                    releaseDate: 2018-02-11T00:00:00.090210Z
                  toVersion:
                    id: "1234"
                    shortName: MV 11.2.1
                    releaseType: stable
                    releaseDate: 2018-02-11T00:00:00.090210Z
                  status: completed
                  id: "1234"
                  upgradeBatchId: "1234"
                  staged:
                    group:
                      id: "1234"
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_113'
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative
                links used for subsequent paginated requests.
              schema:
                type: string
      summary: Get firmware upgrade status for the filtered devices
      tags:
      - organizations
      - configure
      - firmware
      - upgrades
      - byDevice
  /organizations/{organizationId}/insight/applications:
    get:
      description: List all Insight tracked applications
      operationId: getOrganizationInsightApplications
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - applicationId: "19.12"
                name: Meraki HTTPS
                thresholds:
                  type: smart
                  byNetwork:
                  - networkId: N_12345678
                    goodput: 50000
                    responseDuration: 1000
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_114'
                type: array
          description: Successful operation
      summary: List all Insight tracked applications
      tags:
      - insight
      - configure
      - applications
  /organizations/{organizationId}/insight/monitoredMediaServers:
    get:
      description: List the monitored media servers for this organization. Only valid
        for organizations with Meraki Insight.
      operationId: getOrganizationInsightMonitoredMediaServers
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - id: "1284392014819"
                name: Sample VoIP Provider
                address: 123.123.123.1
                bestEffortMonitoringEnabled: true
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_115'
                type: array
          description: Successful operation
      summary: List the monitored media servers for this organization
      tags:
      - insight
      - configure
      - monitoredMediaServers
    post:
      description: Add a media server to be monitored for this organization. Only
        valid for organizations with Meraki Insight.
      operationId: createOrganizationInsightMonitoredMediaServer
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_197'
        content:
          application/json:
            schema:
              example:
                name: Sample VoIP Provider
                address: 123.123.123.1
                bestEffortMonitoringEnabled: true
              properties:
                name:
                  description: The name of the VoIP provider
                  type: string
                address:
                  description: The IP address (IPv4 only) or hostname of the media
                    server to monitor
                  type: string
                bestEffortMonitoringEnabled:
                  description: Indicates that if the media server doesn't respond
                    to ICMP pings, the nearest hop will be used in its stead.
                  type: boolean
              required:
              - address
              - name
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                id: "1284392014819"
                name: Sample VoIP Provider
                address: 123.123.123.1
                bestEffortMonitoringEnabled: true
              schema:
                type: object
          description: Successful operation
      summary: Add a media server to be monitored for this organization
      tags:
      - insight
      - configure
      - monitoredMediaServers
      x-codegen-request-body-name: createOrganizationInsightMonitoredMediaServer
  /organizations/{organizationId}/insight/monitoredMediaServers/{monitoredMediaServerId}:
    delete:
      description: Delete a monitored media server from this organization. Only valid
        for organizations with Meraki Insight.
      operationId: deleteOrganizationInsightMonitoredMediaServer
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: Monitored media server ID
        in: path
        name: monitoredMediaServerId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Successful operation
      summary: Delete a monitored media server from this organization
      tags:
      - insight
      - configure
      - monitoredMediaServers
    get:
      description: Return a monitored media server for this organization. Only valid
        for organizations with Meraki Insight.
      operationId: getOrganizationInsightMonitoredMediaServer
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: Monitored media server ID
        in: path
        name: monitoredMediaServerId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                id: "1284392014819"
                name: Sample VoIP Provider
                address: 123.123.123.1
                bestEffortMonitoringEnabled: true
              schema:
                type: object
          description: Successful operation
      summary: Return a monitored media server for this organization
      tags:
      - insight
      - configure
      - monitoredMediaServers
    put:
      description: Update a monitored media server for this organization. Only valid
        for organizations with Meraki Insight.
      operationId: updateOrganizationInsightMonitoredMediaServer
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: Monitored media server ID
        in: path
        name: monitoredMediaServerId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_198'
        content:
          application/json:
            schema:
              example:
                name: Sample VoIP Provider
                address: 123.123.123.1
                bestEffortMonitoringEnabled: true
              properties:
                name:
                  description: The name of the VoIP provider
                  type: string
                address:
                  description: The IP address (IPv4 only) or hostname of the media
                    server to monitor
                  type: string
                bestEffortMonitoringEnabled:
                  description: Indicates that if the media server doesn't respond
                    to ICMP pings, the nearest hop will be used in its stead.
                  type: boolean
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                id: "1284392014819"
                name: Sample VoIP Provider
                address: 123.123.123.1
                bestEffortMonitoringEnabled: true
              schema:
                type: object
          description: Successful operation
      summary: Update a monitored media server for this organization
      tags:
      - insight
      - configure
      - monitoredMediaServers
      x-codegen-request-body-name: updateOrganizationInsightMonitoredMediaServer
  /organizations/{organizationId}/inventory/claim:
    post:
      description: Claim a list of devices, licenses, and/or orders into an organization
        inventory. When claiming by order, all devices and licenses in the order will
        be claimed; licenses will be added to the organization and devices will be
        placed in the organization's inventory. Use /organizations/{organizationId}/inventory/release
        to release devices from an organization.
      operationId: claimIntoOrganizationInventory
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_199'
        content:
          application/json:
            schema:
              example:
                orders:
                - 4CXXXXXXX
                serials:
                - Q234-ABCD-5678
                licenses:
                - key: Z2XXXXXXXXXX
                  mode: addDevices
              properties:
                orders:
                  description: The numbers of the orders that should be claimed
                  items:
                    type: string
                  type: array
                serials:
                  description: The serials of the devices that should be claimed
                  items:
                    type: string
                  type: array
                licenses:
                  description: The licenses that should be claimed
                  items:
                    $ref: '#/components/schemas/_organizations__organizationId__inventory_claim_licenses'
                  type: array
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                orders:
                - 4CXXXXXXX
                serials:
                - Q234-ABCD-5678
                licenses:
                - key: Z2XXXXXXXXXX
                  mode: addDevices
              schema:
                type: object
          description: Successful operation
      summary: Claim a list of devices, licenses, and/or orders into an organization
        inventory
      tags:
      - organizations
      - configure
      - inventory
      x-codegen-request-body-name: claimIntoOrganizationInventory
  /organizations/{organizationId}/inventory/devices:
    get:
      description: Return the device inventory for an organization
      operationId: getOrganizationInventoryDevices
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: The number of entries per page returned. Acceptable range is
          3 - 1000. Default is 1000.
        in: query
        name: perPage
        schema:
          type: integer
      - description: A token used by the server to indicate the start of the page.
          Often this is a timestamp or an ID but it is not limited to those. This
          parameter should not be defined by client applications. The link for the
          first, last, prev, or next page in the HTTP Link header should define it.
        in: query
        name: startingAfter
        schema:
          type: string
      - description: A token used by the server to indicate the end of the page. Often
          this is a timestamp or an ID but it is not limited to those. This parameter
          should not be defined by client applications. The link for the first, last,
          prev, or next page in the HTTP Link header should define it.
        in: query
        name: endingBefore
        schema:
          type: string
      - description: Filter results by used or unused inventory. Accepted values are
          'used' or 'unused'.
        in: query
        name: usedState
        schema:
          enum:
          - unused
          - used
          type: string
      - description: Search for devices in inventory based on serial number, mac address,
          or model.
        in: query
        name: search
        schema:
          type: string
      - description: Search for devices in inventory based on mac addresses.
        explode: false
        in: query
        name: macs
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Search for devices in inventory based on network ids.
        explode: false
        in: query
        name: networkIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Search for devices in inventory based on serials.
        explode: false
        in: query
        name: serials
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Search for devices in inventory based on model.
        explode: false
        in: query
        name: models
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Search for devices in inventory based on order numbers.
        explode: false
        in: query
        name: orderNumbers
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Filter devices by tags. The filtering is case-sensitive. If tags
          are included, 'tagsFilterType' should also be included (see below).
        explode: false
        in: query
        name: tags
        schema:
          items:
            type: string
          type: array
        style: form
      - description: To use with 'tags' parameter, to filter devices which contain
          ANY or ALL given tags. Accepted values are 'withAnyTags' or 'withAllTags',
          default is 'withAnyTags'.
        in: query
        name: tagsFilterType
        schema:
          enum:
          - withAllTags
          - withAnyTags
          type: string
      - description: Filter devices by product type. Accepted values are appliance,
          camera, cellularGateway, sensor, switch, systemsManager, and wireless.
        explode: false
        in: query
        name: productTypes
        schema:
          items:
            enum:
            - appliance
            - camera
            - cellularGateway
            - sensor
            - switch
            - systemsManager
            - wireless
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
              - mac: 00:11:22:33:44:55
                serial: Q234-ABCD-5678
                name: My AP
                model: MR34
                networkId: N_24329156
                orderNumber: 4C1234567
                claimedAt: 2018-02-11T00:00:00.090210Z
                licenseExpirationDate: 2020-05-02T10:52:44.012345Z
                tags:
                - tag1
                - tag2
                productType: wireless
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_116'
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative
                links used for subsequent paginated requests.
              schema:
                type: string
      summary: Return the device inventory for an organization
      tags:
      - organizations
      - configure
      - inventory
      - devices
  /organizations/{organizationId}/inventory/devices/{serial}:
    get:
      description: Return a single device from the inventory of an organization
      operationId: getOrganizationInventoryDevice
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: Serial
        in: path
        name: serial
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                mac: 00:11:22:33:44:55
                serial: Q234-ABCD-5678
                name: My AP
                model: MR34
                networkId: N_24329156
                orderNumber: 4C1234567
                claimedAt: 2018-02-11T00:00:00.090210Z
                licenseExpirationDate: 2020-05-02T10:52:44.012345Z
                tags:
                - tag1
                - tag2
                productType: wireless
              schema:
                $ref: '#/components/schemas/inline_response_200_116'
          description: Successful operation
      summary: Return a single device from the inventory of an organization
      tags:
      - organizations
      - configure
      - inventory
      - devices
  /organizations/{organizationId}/inventory/onboarding/cloudMonitoring/exportEvents:
    post:
      description: Imports event logs related to the onboarding app into elastisearch
      operationId: createOrganizationInventoryOnboardingCloudMonitoringExportEvent
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_200'
        content:
          application/json:
            schema:
              example:
                logEvent: download
                timestamp: 1526087474
                targetOS: mac
                request: r=cb
              properties:
                logEvent:
                  description: The type of log event this is recording, e.g. download
                    or opening a banner
                  type: string
                timestamp:
                  description: A JavaScript UTC datetime stamp for when the even occurred
                  type: integer
                targetOS:
                  description: The name of the onboarding distro being downloaded
                  type: string
                request:
                  description: Used to describe if this event was the result of a
                    redirect. E.g. a query param if an info banner is being used
                  type: string
              required:
              - logEvent
              - timestamp
              type: object
        required: true
      responses:
        "202":
          content:
            application/json:
              example: {}
              schema:
                type: object
          description: Successful operation
      summary: Imports event logs related to the onboarding app into elastisearch
      tags:
      - organizations
      - configure
      - inventory
      - onboarding
      - cloudMonitoring
      - exportEvents
      x-codegen-request-body-name: createOrganizationInventoryOnboardingCloudMonitoringExportEvent
  /organizations/{organizationId}/inventory/onboarding/cloudMonitoring/imports:
    get:
      description: Check the status of a committed Import operation
      operationId: getOrganizationInventoryOnboardingCloudMonitoringImports
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: import ids from an imports
        explode: false
        in: query
        name: importIds
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
              - importId: "0000000000000000"
                device:
                  url: https://n1.meraki.com//n//manage/nodes/new_list/000000000000
                  created: true
                  status: SUCCESS
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_117'
                type: array
          description: Successful operation
      summary: Check the status of a committed Import operation
      tags:
      - organizations
      - configure
      - inventory
      - onboarding
      - cloudMonitoring
      - imports
    post:
      description: Commits the import operation to complete the onboarding of a device
        into Dashboard for monitoring.
      operationId: createOrganizationInventoryOnboardingCloudMonitoringImport
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_201'
        content:
          application/json:
            schema:
              example:
                devices:
                - deviceId: 161b2602-a713-4aac-b1eb-d9b55205353d
                  udi: PID:C9200L-24P-4G SN:JAE25220R2K
                  networkId: "1338481"
              properties:
                devices:
                  description: A set of device imports to commit
                  items:
                    $ref: '#/components/schemas/_organizations__organizationId__inventory_onboarding_cloudMonitoring_imports_devices'
                  type: array
              required:
              - devices
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
              - status: IMPORT JOB SUCCESS
                importId: "1234"
                message: Import Started
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_201_7'
                type: array
          description: Successful operation
      summary: Commits the import operation to complete the onboarding of a device
        into Dashboard for monitoring.
      tags:
      - organizations
      - configure
      - inventory
      - onboarding
      - cloudMonitoring
      - imports
      x-codegen-request-body-name: createOrganizationInventoryOnboardingCloudMonitoringImport
  /organizations/{organizationId}/inventory/onboarding/cloudMonitoring/networks:
    get:
      description: Returns list of networks eligible for adding cloud monitored device
      operationId: getOrganizationInventoryOnboardingCloudMonitoringNetworks
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: Device Type switch or wireless controller
        in: query
        name: deviceType
        required: true
        schema:
          enum:
          - switch
          - wireless_controller
          type: string
      - description: The number of entries per page returned. Acceptable range is
          3 - 100000. Default is 1000.
        in: query
        name: perPage
        schema:
          type: integer
      - description: A token used by the server to indicate the start of the page.
          Often this is a timestamp or an ID but it is not limited to those. This
          parameter should not be defined by client applications. The link for the
          first, last, prev, or next page in the HTTP Link header should define it.
        in: query
        name: startingAfter
        schema:
          type: string
      - description: A token used by the server to indicate the end of the page. Often
          this is a timestamp or an ID but it is not limited to those. This parameter
          should not be defined by client applications. The link for the first, last,
          prev, or next page in the HTTP Link header should define it.
        in: query
        name: endingBefore
        schema:
          type: string
      responses:
        "202":
          content:
            application/json:
              example:
              - id: N_24329156
                organizationId: "2930418"
                name: Main Office
                productTypes:
                - appliance
                - switch
                - wireless
                timeZone: America/Los_Angeles
                tags:
                - tag1
                - tag2
                enrollmentString: my-enrollment-string
                url: https://n1.meraki.com//n//manage/nodes/list
                notes: Additional description of the network
                isBoundToConfigTemplate: false
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_11'
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative
                links used for subsequent paginated requests.
              schema:
                type: string
      summary: Returns list of networks eligible for adding cloud monitored device
      tags:
      - organizations
      - configure
      - inventory
      - onboarding
      - cloudMonitoring
      - networks
  /organizations/{organizationId}/inventory/onboarding/cloudMonitoring/prepare:
    post:
      description: Initiates or updates an import session. An import ID will be generated
        and used when you are ready to commit the import.
      operationId: createOrganizationInventoryOnboardingCloudMonitoringPrepare
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_202'
        content:
          application/json:
            schema:
              example:
                devices:
                - sudi: "-----BEGIN CERTIFICATE-----\n        MIIDyTCCArGgAwIBAgIKBBNXOVCGU1YztjANBgkqhkiG9w0BAQsFADAnMQ4wDAYD\n\
                    \        VQQKEwVDaXNjbzEVMBMGA1UEAxMMQUNUMiBTVURJIENBMB4XDTIxMDUzMTEzNTUx\n\
                    \        NVoXDTI5MDUxNDIwMjU0MVowbTEpMCcGA1UEBRMgUElEOkM5MjAwTC0yNFAtNEcg\n\
                    \        U046SkFFMjUyMjBSMksxDjAMBgNVBAoTBUNpc2NvMRgwFgYDVQQLEw9BQ1QtMiBM\n\
                    \        aXRlIFNVREkxFjAUBgNVBAMTDUM5MjAwTC0yNFAtNEcwggEiMA0GCSqGSIb3DQEB\n\
                    \        AQUAA4IBDwAwggEKAoIBAQDaUPxW76gT5MdoEAt+UrDFiYA9RYh2iHicDViBEyow\n\
                    \        TR1TuP36bHh13X3vtGiDsCD88Ci2TZIqd/EDkkc7v9ipUUYVVH+YDrPt2Aukb1PH\n\
                    \        D6K0R+KhgEzRo5x54TlU6oWvjUpwNZUwwdhMWIQaUVkMyZBYNy0jGPLO8jwZhyBg\n\
                    \        1Fneybr9pwedGbLrAaz+gdEikB8B4a/fvPjVfL5Ngb4QRjFqWuE+X3nLc0kHedep\n\
                    \        6nfgpUNXMlStVm5nIXKP6OjmzfCHPYh9L2Ehs1TrSk1ser9Ofx0ZMVL/jBZR2EIj\n\
                    \        OZ8tH6KlX2/B2pbSPIO6kD5c4UA8Cf1SbDJCwJ/kI9ihAgMBAAGjgbAwga0wDgYD\n\
                    \        VR0PAQH/BAQDAgXgMAwGA1UdEwEB/wQCMAAwHwYDVR0jBBgwFoAUSNjx8cJw1Vu7\n\
                    \        fHMJk6+4uDAD+H8wTQYDVR0RBEYwRKBCBgkrBgEEAQkVAgOgNRMzQ2hpcElEPVVV\n\
                    \        VUNNaElGcUVFMklFUUVBQWNBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUE9MB0GA1Ud\n\
                    \        DgQWBBRdhMkFD/z5hokaQeLbaRsp4hkvbzANBgkqhkiG9w0BAQsFAAOCAQEAMtuh\n\
                    \        YpBz4xEZ7YdJsLpw67Q0TTJGnTBRpzAeY1urYDoDz8TSx556XG7z3IRzuED5KVSp\n\
                    \        OwmH/iZ+tDfYQ3W3ElWTW93871DkuW4WQIfbnoHg/F7bF0DKYVkD3rpZjyz3NhzH\n\
                    \        d7cjTdJXQ85bTAOXDuxKH3qewrXxxOGXgh3I6NUq0UwMTWh84lND7Jl+ZAQkYNS2\n\
                    \        iHanTZFQBk3ML0NUb7fKDYGRTZRqwQ/upIO4S6LV1cxH/6V0qbMy3sCSHZoMLrW3\n\
                    \        0m3M6yKpe5+VZzHZwmWdUf3Ot+zKjhveK5/YNsMIASdvtvymxUizq2Hr1hvR/kPc\n\
                    \        p1vuyWxipU8JfzOh/A==\n        -----END CERTIFICATE-----\n\
                    \        "
                  tunnel:
                    certificateName: DeviceSUDI
                    name: MERAKI
                    loopbackNumber: 1000
                    localInterface: 1
                  user:
                    username: Meraki
                  vty:
                    startLineNumber: 16
                    endLineNumber: 17
                    authentication:
                      group:
                        name: ""
                    authorization:
                      group:
                        name: MERAKI
                    accessList:
                      vtyIn:
                        name: MERAKI_IN
                      vtyOut:
                        name: MERAKI_OUT
                    rotaryNumber: 50
              properties:
                devices:
                  description: A set of devices to import (or update)
                  items:
                    $ref: '#/components/schemas/_organizations__organizationId__inventory_onboarding_cloudMonitoring_prepare_devices'
                  type: array
              required:
              - devices
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
              - message: Existing import found
                udi: PID:C9200L-24P-4G SN:JAE25220R2K
                deviceId: 161b2602-a713-4aac-b1eb-d9b55205353d
                status: SUCCESS
                configParams:
                  tunnel:
                    mode: "443"
                    port: "443"
                    host: secgw-int3.ciscocloudoffer.com
                    name: MERAKI-PRIMARY
                    rootCertificate:
                      content: ""
                      name: MERAKI_TLSGW_CA
                  cloudStaticIp: 1.2.3.4
                  user:
                    publicKey: ""
                    username: MERAKI_USER
                    secret:
                      hash: ""
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_201_8'
                type: array
          description: Successful operation
      summary: Initiates or updates an import session
      tags:
      - organizations
      - configure
      - inventory
      - onboarding
      - cloudMonitoring
      - prepare
      x-codegen-request-body-name: createOrganizationInventoryOnboardingCloudMonitoringPrepare
  /organizations/{organizationId}/inventory/release:
    post:
      description: Release a list of claimed devices from an organization.
      operationId: releaseFromOrganizationInventory
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_203'
        content:
          application/json:
            schema:
              example:
                serials:
                - Q234-ABCD-5678
              properties:
                serials:
                  description: Serials of the devices that should be released
                  items:
                    type: string
                  type: array
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                serials:
                - Q234-ABCD-5678
              schema:
                type: object
          description: Successful operation
      summary: Release a list of claimed devices from an organization.
      tags:
      - organizations
      - configure
      - inventory
      x-codegen-request-body-name: releaseFromOrganizationInventory
  /organizations/{organizationId}/licenses:
    get:
      description: List the licenses for an organization
      operationId: getOrganizationLicenses
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: The number of entries per page returned. Acceptable range is
          3 - 1000. Default is 1000.
        in: query
        name: perPage
        schema:
          type: integer
      - description: A token used by the server to indicate the start of the page.
          Often this is a timestamp or an ID but it is not limited to those. This
          parameter should not be defined by client applications. The link for the
          first, last, prev, or next page in the HTTP Link header should define it.
        in: query
        name: startingAfter
        schema:
          type: string
      - description: A token used by the server to indicate the end of the page. Often
          this is a timestamp or an ID but it is not limited to those. This parameter
          should not be defined by client applications. The link for the first, last,
          prev, or next page in the HTTP Link header should define it.
        in: query
        name: endingBefore
        schema:
          type: string
      - description: Filter the licenses to those assigned to a particular device.
          Returned in the same order that they are queued to the device.
        in: query
        name: deviceSerial
        schema:
          type: string
      - description: Filter the licenses to those assigned in a particular network
        in: query
        name: networkId
        schema:
          type: string
      - description: Filter the licenses to those in a particular state. Can be one
          of 'active', 'expired', 'expiring', 'recentlyQueued', 'unused' or 'unusedActive'
        in: query
        name: state
        schema:
          enum:
          - active
          - expired
          - expiring
          - recentlyQueued
          - unused
          - unusedActive
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - id: "1234"
                licenseType: MX64-ENT
                licenseKey: Z21234567890
                orderNumber: 4C1234567
                deviceSerial: Q234-ABCD-5678
                networkId: N_24329156
                state: active
                seatCount: 25
                totalDurationInDays: 425
                durationInDays: 365
                permanentlyQueuedLicenses:
                - id: "1234"
                  licenseType: MX64-ENT
                  licenseKey: Z21234567890
                  orderNumber: 4C1234567
                  durationInDays: 60
                claimDate: 2019-08-29T12:40:10Z
                activationDate: 2019-09-01T15:01:46Z
                expirationDate: 2020-10-30T15:01:46Z
                headLicenseId: "1234"
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_118'
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative
                links used for subsequent paginated requests.
              schema:
                type: string
      summary: List the licenses for an organization
      tags:
      - organizations
      - configure
      - licenses
  /organizations/{organizationId}/licenses/assignSeats:
    post:
      description: Assign SM seats to a network. This will increase the managed SM
        device limit of the network
      operationId: assignOrganizationLicensesSeats
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_204'
        content:
          application/json:
            schema:
              example:
                licenseId: "1234"
                networkId: N_24329156
                seatCount: 20
              properties:
                licenseId:
                  description: The ID of the SM license to assign seats from
                  type: string
                networkId:
                  description: The ID of the SM network to assign the seats to
                  type: string
                seatCount:
                  description: The number of seats to assign to the SM network. Must
                    be less than or equal to the total number of seats of the license
                  type: integer
              required:
              - licenseId
              - networkId
              - seatCount
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                resultingLicenses:
                - id: "1234"
                  licenseType: SME
                  licenseKey: Z21234567890
                  orderNumber: 4C1234567
                  deviceSerial: Q234-ABCD-5678
                  networkId: N_24329156
                  state: active
                  seatCount: 25
                  totalDurationInDays: 425
                  durationInDays: 365
                  permanentlyQueuedLicenses:
                  - id: "1234"
                    licenseType: SME
                    licenseKey: Z21234567890
                    orderNumber: 4C1234567
                    durationInDays: 60
                  claimDate: 2019-08-29T12:40:10Z
                  activationDate: 2019-09-01T15:01:46Z
                  expirationDate: 2020-10-30T15:01:46Z
                  headLicenseId: "1234"
              schema:
                $ref: '#/components/schemas/inline_response_200_119'
          description: Successful operation
      summary: Assign SM seats to a network
      tags:
      - organizations
      - configure
      - licenses
      x-codegen-request-body-name: assignOrganizationLicensesSeats
  /organizations/{organizationId}/licenses/move:
    post:
      description: Move licenses to another organization. This will also move any
        devices that the licenses are assigned to
      operationId: moveOrganizationLicenses
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_205'
        content:
          application/json:
            schema:
              example:
                destOrganizationId: "2930418"
                licenseIds:
                - "123"
                - "456"
              properties:
                destOrganizationId:
                  description: The ID of the organization to move the licenses to
                  type: string
                licenseIds:
                  description: A list of IDs of licenses to move to the new organization
                  items:
                    type: string
                  type: array
              required:
              - destOrganizationId
              - licenseIds
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                destOrganizationId: "2930418"
                licenseIds:
                - "123"
                - "456"
              schema:
                $ref: '#/components/schemas/inline_response_200_120'
          description: Successful operation
      summary: Move licenses to another organization
      tags:
      - organizations
      - configure
      - licenses
      x-codegen-request-body-name: moveOrganizationLicenses
  /organizations/{organizationId}/licenses/moveSeats:
    post:
      description: Move SM seats to another organization
      operationId: moveOrganizationLicensesSeats
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_206'
        content:
          application/json:
            schema:
              example:
                destOrganizationId: "2930418"
                licenseId: "1234"
                seatCount: 20
              properties:
                destOrganizationId:
                  description: The ID of the organization to move the SM seats to
                  type: string
                licenseId:
                  description: The ID of the SM license to move the seats from
                  type: string
                seatCount:
                  description: The number of seats to move to the new organization.
                    Must be less than or equal to the total number of seats of the
                    license
                  type: integer
              required:
              - destOrganizationId
              - licenseId
              - seatCount
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                destOrganizationId: "2930418"
                licenseId: "1234"
                seatCount: 20
              schema:
                $ref: '#/components/schemas/inline_response_200_121'
          description: Successful operation
      summary: Move SM seats to another organization
      tags:
      - organizations
      - configure
      - licenses
      x-codegen-request-body-name: moveOrganizationLicensesSeats
  /organizations/{organizationId}/licenses/overview:
    get:
      description: Return an overview of the license state for an organization
      operationId: getOrganizationLicensesOverview
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                status: OK
                expirationDate: Feb 8, 2020 UTC
                licensedDeviceCounts:
                  MS: 100
              schema:
                type: object
          description: Successful operation
      summary: Return an overview of the license state for an organization
      tags:
      - organizations
      - monitor
      - licenses
      - overview
  /organizations/{organizationId}/licenses/renewSeats:
    post:
      description: Renew SM seats of a license. This will extend the license expiration
        date of managed SM devices covered by this license
      operationId: renewOrganizationLicensesSeats
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_207'
        content:
          application/json:
            schema:
              example:
                licenseIdToRenew: "123"
                unusedLicenseId: "1234"
              properties:
                licenseIdToRenew:
                  description: The ID of the SM license to renew. This license must
                    already be assigned to an SM network
                  type: string
                unusedLicenseId:
                  description: The SM license to use to renew the seats on 'licenseIdToRenew'.
                    This license must have at least as many seats available as there
                    are seats on 'licenseIdToRenew'
                  type: string
              required:
              - licenseIdToRenew
              - unusedLicenseId
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                resultingLicenses:
                - id: "1234"
                  licenseType: SME
                  licenseKey: Z21234567890
                  orderNumber: 4C1234567
                  deviceSerial: Q234-ABCD-5678
                  networkId: N_24329156
                  state: active
                  seatCount: 25
                  totalDurationInDays: 425
                  durationInDays: 365
                  permanentlyQueuedLicenses:
                  - id: "1234"
                    licenseType: SME
                    licenseKey: Z21234567890
                    orderNumber: 4C1234567
                    durationInDays: 60
                  claimDate: 2019-08-29T12:40:10Z
                  activationDate: 2019-09-01T15:01:46Z
                  expirationDate: 2020-10-30T15:01:46Z
                  headLicenseId: "1234"
              schema:
                $ref: '#/components/schemas/inline_response_200_119'
          description: Successful operation
      summary: Renew SM seats of a license
      tags:
      - organizations
      - configure
      - licenses
      x-codegen-request-body-name: renewOrganizationLicensesSeats
  /organizations/{organizationId}/licenses/{licenseId}:
    get:
      description: Display a license
      operationId: getOrganizationLicense
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: License ID
        in: path
        name: licenseId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                id: "1234"
                licenseType: MX64-ENT
                licenseKey: Z21234567890
                orderNumber: 4C1234567
                deviceSerial: Q234-ABCD-5678
                networkId: N_24329156
                state: active
                seatCount: 25
                totalDurationInDays: 425
                durationInDays: 365
                permanentlyQueuedLicenses:
                - id: "1234"
                  licenseType: MX64-ENT
                  licenseKey: Z21234567890
                  orderNumber: 4C1234567
                  durationInDays: 60
                claimDate: 2019-08-29T12:40:10Z
                activationDate: 2019-09-01T15:01:46Z
                expirationDate: 2020-10-30T15:01:46Z
                headLicenseId: "1234"
              schema:
                $ref: '#/components/schemas/inline_response_200_118'
          description: Successful operation
      summary: Display a license
      tags:
      - organizations
      - configure
      - licenses
    put:
      description: Update a license
      operationId: updateOrganizationLicense
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: License ID
        in: path
        name: licenseId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_208'
        content:
          application/json:
            schema:
              example:
                deviceSerial: Q234-ABCD-5678
              properties:
                deviceSerial:
                  description: The serial number of the device to assign this license
                    to. Set this to  null to unassign the license. If a different
                    license is already active on the device, this parameter will control
                    queueing/dequeuing this license.
                  type: string
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                id: "1234"
                licenseType: MX64-ENT
                licenseKey: Z21234567890
                orderNumber: 4C1234567
                deviceSerial: Q234-ABCD-5678
                networkId: N_24329156
                state: active
                seatCount: 25
                totalDurationInDays: 425
                durationInDays: 365
                permanentlyQueuedLicenses:
                - id: "1234"
                  licenseType: MX64-ENT
                  licenseKey: Z21234567890
                  orderNumber: 4C1234567
                  durationInDays: 60
                claimDate: 2019-08-29T12:40:10Z
                activationDate: 2019-09-01T15:01:46Z
                expirationDate: 2020-10-30T15:01:46Z
                headLicenseId: "1234"
              schema:
                $ref: '#/components/schemas/inline_response_200_118'
          description: Successful operation
      summary: Update a license
      tags:
      - organizations
      - configure
      - licenses
      x-codegen-request-body-name: updateOrganizationLicense
  /organizations/{organizationId}/licensing/coterm/licenses:
    get:
      description: List the licenses in a coterm organization
      operationId: getOrganizationLicensingCotermLicenses
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: The number of entries per page returned. Acceptable range is
          3 - 1000. Default is 1000.
        in: query
        name: perPage
        schema:
          type: integer
      - description: A token used by the server to indicate the start of the page.
          Often this is a timestamp or an ID but it is not limited to those. This
          parameter should not be defined by client applications. The link for the
          first, last, prev, or next page in the HTTP Link header should define it.
        in: query
        name: startingAfter
        schema:
          type: string
      - description: A token used by the server to indicate the end of the page. Often
          this is a timestamp or an ID but it is not limited to those. This parameter
          should not be defined by client applications. The link for the first, last,
          prev, or next page in the HTTP Link header should define it.
        in: query
        name: endingBefore
        schema:
          type: string
      - description: Filter for licenses that are invalidated
        in: query
        name: invalidated
        schema:
          type: boolean
      - description: Filter for licenses that are expired
        in: query
        name: expired
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              example:
              - key: Z2AA-BBBB-CCCC
                organizationId: "123456"
                duration: 365
                mode: addDevices
                startedAt: 2022-05-02T10:52:00Z
                claimedAt: 2022-07-04T16:23:00Z
                invalidated: true
                invalidatedAt: 2022-07-04T16:23:00Z
                expired: false
                editions:
                - edition: Enterprise
                  productType: appliance
                counts:
                - model: MR Enterprise
                  count: 2
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_122'
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative
                links used for subsequent paginated requests.
              schema:
                type: string
      summary: List the licenses in a coterm organization
      tags:
      - licensing
      - configure
      - coterm
      - licenses
  /organizations/{organizationId}/licensing/coterm/licenses/move:
    post:
      description: Moves a license to a different organization (coterm only)
      operationId: moveOrganizationLicensingCotermLicenses
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_209'
        content:
          application/json:
            schema:
              example:
                destination:
                  organizationId: "123"
                  mode: addDevices
                licenses:
                - key: Z2AA-BBBB-CCCC
                  counts:
                  - model: MR Enterprise
                    count: 5
              properties:
                destination:
                  $ref: '#/components/schemas/_organizations__organizationId__licensing_coterm_licenses_move_destination'
                licenses:
                  description: The list of licenses to move
                  items:
                    $ref: '#/components/schemas/_organizations__organizationId__licensing_coterm_licenses_move_licenses'
                  type: array
              required:
              - destination
              - licenses
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                remainderLicenses:
                - key: Z2AA-BBBB-CCCC
                  organizationId: "123456"
                  duration: 365
                  mode: addDevices
                  startedAt: 2022-05-02T10:52:00Z
                  claimedAt: 2022-07-04T16:23:00Z
                  invalidated: true
                  invalidatedAt: 2022-07-04T16:23:00Z
                  expired: false
                  editions:
                  - edition: Enterprise
                    productType: appliance
                  counts:
                  - model: MR Enterprise
                    count: 2
                movedLicenses:
                - key: Z2AA-BBBB-CCCC
                  organizationId: "123456"
                  duration: 365
                  mode: addDevices
                  startedAt: 2022-05-02T10:52:00Z
                  claimedAt: 2022-07-04T16:23:00Z
                  invalidated: true
                  invalidatedAt: 2022-07-04T16:23:00Z
                  expired: false
                  editions:
                  - edition: Enterprise
                    productType: appliance
                  counts:
                  - model: MR Enterprise
                    count: 2
              schema:
                $ref: '#/components/schemas/inline_response_200_123'
          description: Successful operation
      summary: Moves a license to a different organization (coterm only)
      tags:
      - licensing
      - configure
      - coterm
      - licenses
      x-codegen-request-body-name: moveOrganizationLicensingCotermLicenses
  /organizations/{organizationId}/loginSecurity:
    get:
      description: Returns the login security settings for an organization.
      operationId: getOrganizationLoginSecurity
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                enforcePasswordExpiration: true
                passwordExpirationDays: 90
                enforceDifferentPasswords: true
                numDifferentPasswords: 3
                enforceStrongPasswords: true
                enforceAccountLockout: true
                accountLockoutAttempts: 3
                enforceIdleTimeout: true
                idleTimeoutMinutes: 30
                enforceTwoFactorAuth: true
                enforceLoginIpRanges: true
                loginIpRanges:
                - 192.195.83.1
                - 192.195.83.255
                apiAuthentication:
                  ipRestrictionsForKeys:
                    enabled: true
                    ranges:
                    - 192.195.83.1
                    - 192.168.33.33
              schema:
                $ref: '#/components/schemas/inline_response_200_124'
          description: Successful operation
      summary: Returns the login security settings for an organization.
      tags:
      - organizations
      - configure
      - loginSecurity
    put:
      description: Update the login security settings for an organization
      operationId: updateOrganizationLoginSecurity
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_210'
        content:
          application/json:
            schema:
              example:
                enforcePasswordExpiration: true
                passwordExpirationDays: 90
                enforceDifferentPasswords: true
                numDifferentPasswords: 3
                enforceStrongPasswords: true
                enforceAccountLockout: true
                accountLockoutAttempts: 3
                enforceIdleTimeout: true
                idleTimeoutMinutes: 30
                enforceTwoFactorAuth: true
                enforceLoginIpRanges: true
                loginIpRanges:
                - 192.195.83.1
                - 192.195.83.255
                apiAuthentication:
                  ipRestrictionsForKeys:
                    enabled: true
                    ranges:
                    - 192.195.83.1
                    - 192.168.33.33
              properties:
                enforcePasswordExpiration:
                  description: Boolean indicating whether users are forced to change
                    their password every X number of days.
                  type: boolean
                passwordExpirationDays:
                  description: Number of days after which users will be forced to
                    change their password.
                  type: integer
                enforceDifferentPasswords:
                  description: Boolean indicating whether users, when setting a new
                    password, are forced to choose a new password that is different
                    from any past passwords.
                  type: boolean
                numDifferentPasswords:
                  description: Number of recent passwords that new password must be
                    distinct from.
                  type: integer
                enforceStrongPasswords:
                  description: 'Boolean indicating whether users will be forced to
                    choose strong passwords for their accounts. Strong passwords are
                    at least 8 characters that contain 3 of the following: number,
                    uppercase letter, lowercase letter, and symbol'
                  type: boolean
                enforceAccountLockout:
                  description: Boolean indicating whether users' Dashboard accounts
                    will be locked out after a specified number of consecutive failed
                    login attempts.
                  type: boolean
                accountLockoutAttempts:
                  description: Number of consecutive failed login attempts after which
                    users' accounts will be locked.
                  type: integer
                enforceIdleTimeout:
                  description: Boolean indicating whether users will be logged out
                    after being idle for the specified number of minutes.
                  type: boolean
                idleTimeoutMinutes:
                  description: Number of minutes users can remain idle before being
                    logged out of their accounts.
                  type: integer
                enforceTwoFactorAuth:
                  description: Boolean indicating whether users in this organization
                    will be required to use an extra verification code when logging
                    in to Dashboard. This code will be sent to their mobile phone
                    via SMS, or can be generated by the authenticator application.
                  type: boolean
                enforceLoginIpRanges:
                  description: Boolean indicating whether organization will restrict
                    access to Dashboard (including the API) from certain IP addresses.
                  type: boolean
                loginIpRanges:
                  description: List of acceptable IP ranges. Entries can be single
                    IP addresses, IP address ranges, and CIDR subnets.
                  items:
                    type: string
                  type: array
                apiAuthentication:
                  $ref: '#/components/schemas/inline_response_200_124_apiAuthentication'
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                enforcePasswordExpiration: true
                passwordExpirationDays: 90
                enforceDifferentPasswords: true
                numDifferentPasswords: 3
                enforceStrongPasswords: true
                enforceAccountLockout: true
                accountLockoutAttempts: 3
                enforceIdleTimeout: true
                idleTimeoutMinutes: 30
                enforceTwoFactorAuth: true
                enforceLoginIpRanges: true
                loginIpRanges:
                - 192.195.83.1
                - 192.195.83.255
                apiAuthentication:
                  ipRestrictionsForKeys:
                    enabled: true
                    ranges:
                    - 192.195.83.1
                    - 192.168.33.33
              schema:
                $ref: '#/components/schemas/inline_response_200_124'
          description: Successful operation
      summary: Update the login security settings for an organization
      tags:
      - organizations
      - configure
      - loginSecurity
      x-codegen-request-body-name: updateOrganizationLoginSecurity
  /organizations/{organizationId}/networks:
    get:
      description: List the networks that the user has privileges on in an organization
      operationId: getOrganizationNetworks
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: An optional parameter that is the ID of a config template. Will
          return all networks bound to that template.
        in: query
        name: configTemplateId
        schema:
          type: string
      - description: An optional parameter to filter config template bound networks.
          If configTemplateId is set, this cannot be false.
        in: query
        name: isBoundToConfigTemplate
        schema:
          type: boolean
      - description: An optional parameter to filter networks by tags. The filtering
          is case-sensitive. If tags are included, 'tagsFilterType' should also be
          included (see below).
        explode: false
        in: query
        name: tags
        schema:
          items:
            type: string
          type: array
        style: form
      - description: An optional parameter of value 'withAnyTags' or 'withAllTags'
          to indicate whether to return networks which contain ANY or ALL of the included
          tags. If no type is included, 'withAnyTags' will be selected.
        in: query
        name: tagsFilterType
        schema:
          enum:
          - withAllTags
          - withAnyTags
          type: string
      - description: The number of entries per page returned. Acceptable range is
          3 - 100000. Default is 1000.
        in: query
        name: perPage
        schema:
          type: integer
      - description: A token used by the server to indicate the start of the page.
          Often this is a timestamp or an ID but it is not limited to those. This
          parameter should not be defined by client applications. The link for the
          first, last, prev, or next page in the HTTP Link header should define it.
        in: query
        name: startingAfter
        schema:
          type: string
      - description: A token used by the server to indicate the end of the page. Often
          this is a timestamp or an ID but it is not limited to those. This parameter
          should not be defined by client applications. The link for the first, last,
          prev, or next page in the HTTP Link header should define it.
        in: query
        name: endingBefore
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - id: N_24329156
                organizationId: "2930418"
                name: Main Office
                productTypes:
                - appliance
                - switch
                - wireless
                timeZone: America/Los_Angeles
                tags:
                - tag1
                - tag2
                enrollmentString: my-enrollment-string
                url: https://n1.meraki.com//n//manage/nodes/list
                notes: Additional description of the network
                isBoundToConfigTemplate: false
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_11'
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative
                links used for subsequent paginated requests.
              schema:
                type: string
      summary: List the networks that the user has privileges on in an organization
      tags:
      - organizations
      - configure
      - networks
    post:
      description: Create a network
      operationId: createOrganizationNetwork
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_211'
        content:
          application/json:
            schema:
              example:
                name: Main Office
                productTypes:
                - appliance
                - switch
                - wireless
                tags:
                - tag1
                - tag2
                timeZone: America/Los_Angeles
                copyFromNetworkId: N_24329156
                notes: Additional description of the network
              properties:
                name:
                  description: The name of the new network
                  type: string
                productTypes:
                  description: The product type(s) of the new network. If more than
                    one type is included, the network will be a combined network.
                  items:
                    enum:
                    - appliance
                    - camera
                    - cellularGateway
                    - sensor
                    - switch
                    - systemsManager
                    - wireless
                    type: string
                  type: array
                tags:
                  description: A list of tags to be applied to the network
                  items:
                    type: string
                  type: array
                timeZone:
                  description: The timezone of the network. For a list of allowed
                    timezones, please see the 'TZ' column in the table in <a target='_blank'
                    href='https://en.wikipedia.org/wiki/List_of_tz_database_time_zones'>this
                    article.</a>
                  type: string
                copyFromNetworkId:
                  description: The ID of the network to copy configuration from. Other
                    provided parameters will override the copied configuration, except
                    type which must match this network's type exactly.
                  type: string
                notes:
                  description: Add any notes or additional information about this
                    network here.
                  type: string
              required:
              - name
              - productTypes
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                id: N_24329156
                organizationId: "2930418"
                name: Main Office
                productTypes:
                - appliance
                - switch
                - wireless
                timeZone: America/Los_Angeles
                tags:
                - tag1
                - tag2
                enrollmentString: my-enrollment-string
                url: https://n1.meraki.com//n//manage/nodes/list
                notes: Additional description of the network
                isBoundToConfigTemplate: false
              schema:
                $ref: '#/components/schemas/inline_response_200_11'
          description: Successful operation
      summary: Create a network
      tags:
      - organizations
      - configure
      - networks
      x-codegen-request-body-name: createOrganizationNetwork
  /organizations/{organizationId}/networks/combine:
    post:
      description: Combine multiple networks into a single network
      operationId: combineOrganizationNetworks
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_212'
        content:
          application/json:
            schema:
              example:
                name: Long Island Office
                networkIds:
                - N_1234
                - N_5678
                enrollmentString: my-enrollment-string
              properties:
                name:
                  description: The name of the combined network
                  type: string
                networkIds:
                  description: A list of the network IDs that will be combined. If
                    an ID of a combined network is included in this list, the other
                    networks in the list will be grouped into that network
                  items:
                    type: string
                  type: array
                enrollmentString:
                  description: A unique identifier which can be used for device enrollment
                    or easy access through the Meraki SM Registration page or the
                    Self Service Portal. Please note that changing this field may
                    cause existing bookmarks to break. All networks that are part
                    of this combined network will have their enrollment string appended
                    by '-network_type'. If left empty, all exisitng enrollment strings
                    will be deleted.
                  type: string
              required:
              - name
              - networkIds
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                resultingNetwork:
                  id: N_24329156
                  organizationId: "2930418"
                  name: Main Office
                  productTypes:
                  - appliance
                  - switch
                  - wireless
                  timeZone: America/Los_Angeles
                  tags:
                  - tag1
                  - tag2
                  enrollmentString: my-enrollment-string
                  url: https://n1.meraki.com//n//manage/nodes/list
                  notes: Additional description of the network
                  isBoundToConfigTemplate: false
              schema:
                $ref: '#/components/schemas/inline_response_200_125'
          description: Successful operation
      summary: Combine multiple networks into a single network
      tags:
      - organizations
      - configure
      - networks
      x-codegen-request-body-name: combineOrganizationNetworks
  /organizations/{organizationId}/openapiSpec:
    get:
      description: Return the OpenAPI 2.0 Specification of the organization's API
        documentation in JSON
      operationId: getOrganizationOpenapiSpec
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                openapi: 3.0.1
                info:
                  version: v1
                  title: Meraki Dashboard API
                  description: This collection of API calls provides an easy way to
                    manage and monitor Cisco Meraki networks at scale
                paths:
                  /organizations:
                    get:
                      description: List the organizations that the user has privileges
                        on
                      operationId: getOrganizations
                      responses:
                        "200":
                          description: Successful operation
                          examples:
                            application/json:
                            - id: "2930418"
                              name: My organization
              schema:
                type: object
          description: Successful operation
      summary: Return the OpenAPI 2.0 Specification of the organization's API documentation
        in JSON
      tags:
      - organizations
      - monitor
      - openapiSpec
  /organizations/{organizationId}/policyObjects:
    get:
      description: Lists Policy Objects belonging to the organization.
      operationId: getOrganizationPolicyObjects
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: The number of entries per page returned. Acceptable range is
          10 - 5000. Default is 5000.
        in: query
        name: perPage
        schema:
          type: integer
      - description: A token used by the server to indicate the start of the page.
          Often this is a timestamp or an ID but it is not limited to those. This
          parameter should not be defined by client applications. The link for the
          first, last, prev, or next page in the HTTP Link header should define it.
        in: query
        name: startingAfter
        schema:
          type: string
      - description: A token used by the server to indicate the end of the page. Often
          this is a timestamp or an ID but it is not limited to those. This parameter
          should not be defined by client applications. The link for the first, last,
          prev, or next page in the HTTP Link header should define it.
        in: query
        name: endingBefore
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - id: "1234"
                name: Web Servers - Datacenter 10
                category: network
                type: cidr
                cidr: 10.0.0.0/24
                created_at: 2018-05-12T00:00:00Z
                updated_at: 2018-05-12T00:00:00Z
                groupIds: []
                networkIds: []
              schema:
                items:
                  properties: {}
                  type: object
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative
                links used for subsequent paginated requests.
              schema:
                type: string
      summary: Lists Policy Objects belonging to the organization.
      tags:
      - organizations
      - configure
      - policyObjects
    post:
      description: Creates a new Policy Object.
      operationId: createOrganizationPolicyObject
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_213'
        content:
          application/json:
            schema:
              example:
                name: Web Servers - Datacenter 10
                category: network
                type: cidr
                groupIds: []
              properties:
                name:
                  description: Name of a policy object, unique within the organization
                    (alphanumeric, space, dash, or underscore characters only)
                  type: string
                category:
                  description: 'Category of a policy object (one of: adaptivePolicy,
                    network)'
                  type: string
                type:
                  description: 'Type of a policy object (one of: adaptivePolicyIpv4Cidr,
                    cidr, fqdn, ipAndMask)'
                  type: string
                cidr:
                  description: CIDR Value of a policy object (e.g. 10.11.12.1/24")
                  type: string
                fqdn:
                  description: Fully qualified domain name of policy object (e.g.
                    "example.com")
                  type: string
                mask:
                  description: Mask of a policy object (e.g. "255.255.0.0")
                  type: string
                ip:
                  description: IP Address of a policy object (e.g. "1.2.3.4")
                  type: string
                groupIds:
                  description: The IDs of policy object groups the policy object belongs
                    to
                  items:
                    type: integer
                  type: array
              required:
              - category
              - name
              - type
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                id: "1234"
                name: Web Servers - Datacenter 10
                category: network
                type: cidr
                cidr: 10.0.0.0/24
                created_at: 2018-05-12T00:00:00Z
                updated_at: 2018-05-12T00:00:00Z
                groupIds: []
                networkIds: []
              schema:
                type: object
          description: Successful operation
      summary: Creates a new Policy Object.
      tags:
      - organizations
      - configure
      - policyObjects
      x-codegen-request-body-name: createOrganizationPolicyObject
  /organizations/{organizationId}/policyObjects/groups:
    get:
      description: Lists Policy Object Groups belonging to the organization.
      operationId: getOrganizationPolicyObjectsGroups
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: The number of entries per page returned. Acceptable range is
          10 - 1000. Default is 1000.
        in: query
        name: perPage
        schema:
          type: integer
      - description: A token used by the server to indicate the start of the page.
          Often this is a timestamp or an ID but it is not limited to those. This
          parameter should not be defined by client applications. The link for the
          first, last, prev, or next page in the HTTP Link header should define it.
        in: query
        name: startingAfter
        schema:
          type: string
      - description: A token used by the server to indicate the end of the page. Often
          this is a timestamp or an ID but it is not limited to those. This parameter
          should not be defined by client applications. The link for the first, last,
          prev, or next page in the HTTP Link header should define it.
        in: query
        name: endingBefore
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - id: "1234"
                name: Web Servers - Datacenter 10
                category: NetworkObjectGroup
                created_at: 2018-05-12T00:00:00Z
                updated_at: 2018-05-12T00:00:00Z
                objectIds: []
                networkIds: []
              schema:
                items:
                  properties: {}
                  type: object
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative
                links used for subsequent paginated requests.
              schema:
                type: string
      summary: Lists Policy Object Groups belonging to the organization.
      tags:
      - organizations
      - configure
      - policyObjects
      - groups
    post:
      description: Creates a new Policy Object Group.
      operationId: createOrganizationPolicyObjectsGroup
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_214'
        content:
          application/json:
            schema:
              example:
                name: Web Servers - Datacenter 10
                objectIds: []
              properties:
                name:
                  description: A name for the group of network addresses, unique within
                    the organization (alphanumeric, space, dash, or underscore characters
                    only)
                  type: string
                category:
                  description: 'Category of a policy object group (one of: NetworkObjectGroup,
                    GeoLocationGroup, PortObjectGroup, ApplicationGroup)'
                  type: string
                objectIds:
                  description: 'A list of Policy Object ID''s that this NetworkObjectGroup
                    should be associated to (note: these ID''s will replace the existing
                    associated Policy Objects)'
                  items:
                    type: integer
                  type: array
              required:
              - name
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                id: "1234"
                name: Web Servers - Datacenter 10
                category: NetworkObjectGroup
                created_at: 2018-05-12T00:00:00Z
                updated_at: 2018-05-12T00:00:00Z
                objectIds: []
                networkIds: []
              schema:
                type: object
          description: Successful operation
      summary: Creates a new Policy Object Group.
      tags:
      - organizations
      - configure
      - policyObjects
      - groups
      x-codegen-request-body-name: createOrganizationPolicyObjectsGroup
  /organizations/{organizationId}/policyObjects/groups/{policyObjectGroupId}:
    delete:
      description: Deletes a Policy Object Group.
      operationId: deleteOrganizationPolicyObjectsGroup
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: Policy object group ID
        in: path
        name: policyObjectGroupId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Successful operation
      summary: Deletes a Policy Object Group.
      tags:
      - organizations
      - configure
      - policyObjects
      - groups
    get:
      description: Shows details of a Policy Object Group.
      operationId: getOrganizationPolicyObjectsGroup
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: Policy object group ID
        in: path
        name: policyObjectGroupId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                id: "1234"
                name: Web Servers - Datacenter 10
                category: NetworkObjectGroup
                created_at: 2018-05-12T00:00:00Z
                updated_at: 2018-05-12T00:00:00Z
                objectIds: []
                networkIds: []
              schema:
                type: object
          description: Successful operation
      summary: Shows details of a Policy Object Group.
      tags:
      - organizations
      - configure
      - policyObjects
      - groups
    put:
      description: Updates a Policy Object Group.
      operationId: updateOrganizationPolicyObjectsGroup
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: Policy object group ID
        in: path
        name: policyObjectGroupId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_215'
        content:
          application/json:
            schema:
              example:
                name: Web Servers - Datacenter 10
                objectIds: []
              properties:
                name:
                  description: A name for the group of network addresses, unique within
                    the organization (alphanumeric, space, dash, or underscore characters
                    only)
                  type: string
                objectIds:
                  description: 'A list of Policy Object ID''s that this NetworkObjectGroup
                    should be associated to (note: these ID''s will replace the existing
                    associated Policy Objects)'
                  items:
                    type: integer
                  type: array
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                id: "1234"
                name: Web Servers - Datacenter 10
                category: NetworkObjectGroup
                created_at: 2018-05-12T00:00:00Z
                updated_at: 2018-05-12T00:00:00Z
                objectIds: []
                networkIds: []
              schema:
                type: object
          description: Successful operation
      summary: Updates a Policy Object Group.
      tags:
      - organizations
      - configure
      - policyObjects
      - groups
      x-codegen-request-body-name: updateOrganizationPolicyObjectsGroup
  /organizations/{organizationId}/policyObjects/{policyObjectId}:
    delete:
      description: Deletes a Policy Object.
      operationId: deleteOrganizationPolicyObject
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: Policy object ID
        in: path
        name: policyObjectId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Successful operation
      summary: Deletes a Policy Object.
      tags:
      - organizations
      - configure
      - policyObjects
    get:
      description: Shows details of a Policy Object.
      operationId: getOrganizationPolicyObject
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: Policy object ID
        in: path
        name: policyObjectId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                id: "1234"
                name: Web Servers - Datacenter 10
                category: network
                type: cidr
                cidr: 10.0.0.0/24
                created_at: 2018-05-12T00:00:00Z
                updated_at: 2018-05-12T00:00:00Z
                groupIds: []
                networkIds: []
              schema:
                type: object
          description: Successful operation
      summary: Shows details of a Policy Object.
      tags:
      - organizations
      - configure
      - policyObjects
    put:
      description: Updates a Policy Object.
      operationId: updateOrganizationPolicyObject
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: Policy object ID
        in: path
        name: policyObjectId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_216'
        content:
          application/json:
            schema:
              example:
                name: Web Servers - Datacenter 10
                type: cidr
                groupIds: []
              properties:
                name:
                  description: Name of a policy object, unique within the organization
                    (alphanumeric, space, dash, or underscore characters only)
                  type: string
                cidr:
                  description: CIDR Value of a policy object (e.g. 10.11.12.1/24")
                  type: string
                fqdn:
                  description: Fully qualified domain name of policy object (e.g.
                    "example.com")
                  type: string
                mask:
                  description: Mask of a policy object (e.g. "255.255.0.0")
                  type: string
                ip:
                  description: IP Address of a policy object (e.g. "1.2.3.4")
                  type: string
                groupIds:
                  description: The IDs of policy object groups the policy object belongs
                    to
                  items:
                    type: integer
                  type: array
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                id: "1234"
                name: Web Servers - Datacenter 10
                category: network
                type: cidr
                cidr: 10.0.0.0/24
                created_at: 2018-05-12T00:00:00Z
                updated_at: 2018-05-12T00:00:00Z
                groupIds: []
                networkIds: []
              schema:
                type: object
          description: Successful operation
      summary: Updates a Policy Object.
      tags:
      - organizations
      - configure
      - policyObjects
      x-codegen-request-body-name: updateOrganizationPolicyObject
  /organizations/{organizationId}/saml:
    get:
      description: Returns the SAML SSO enabled settings for an organization.
      operationId: getOrganizationSaml
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                enabled: true
              schema:
                $ref: '#/components/schemas/inline_response_200_126'
          description: Successful operation
      summary: Returns the SAML SSO enabled settings for an organization.
      tags:
      - organizations
      - configure
      - saml
    put:
      description: Updates the SAML SSO enabled settings for an organization.
      operationId: updateOrganizationSaml
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_217'
        content:
          application/json:
            schema:
              example:
                enabled: true
              properties:
                enabled:
                  description: Boolean for updating SAML SSO enabled settings.
                  type: boolean
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                enabled: true
              schema:
                $ref: '#/components/schemas/inline_response_200_126'
          description: Successful operation
      summary: Updates the SAML SSO enabled settings for an organization.
      tags:
      - organizations
      - configure
      - saml
      x-codegen-request-body-name: updateOrganizationSaml
  /organizations/{organizationId}/saml/idps:
    get:
      description: List the SAML IdPs in your organization.
      operationId: getOrganizationSamlIdps
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - idpId: "1284392014819"
                consumerUrl: https://n7.meraki.com/saml/login/XXX
                x509certSha1Fingerprint: 00:11:22:33:44:55:66:77:88:99:00:11:22:33:44:55:66:77:88:99
                sloLogoutUrl: https://somewhere.com
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_127'
                type: array
          description: Successful operation
      summary: List the SAML IdPs in your organization.
      tags:
      - organizations
      - configure
      - saml
      - idps
    post:
      description: Create a SAML IdP for your organization.
      operationId: createOrganizationSamlIdp
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_218'
        content:
          application/json:
            schema:
              example:
                x509certSha1Fingerprint: 00:11:22:33:44:55:66:77:88:99:00:11:22:33:44:55:66:77:88:99
                sloLogoutUrl: https://somewhere.com
              properties:
                x509certSha1Fingerprint:
                  description: Fingerprint (SHA1) of the SAML certificate provided
                    by your Identity Provider (IdP). This will be used for encryption
                    / validation.
                  type: string
                sloLogoutUrl:
                  description: Dashboard will redirect users to this URL when they
                    sign out.
                  type: string
              required:
              - x509certSha1Fingerprint
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
              - idpId: "1284392014819"
                consumerUrl: https://n7.meraki.com/saml/login/XXX
                x509certSha1Fingerprint: 00:11:22:33:44:55:66:77:88:99:00:11:22:33:44:55:66:77:88:99
                sloLogoutUrl: https://somewhere.com
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_127'
                type: array
          description: Successful operation
      summary: Create a SAML IdP for your organization.
      tags:
      - organizations
      - configure
      - saml
      - idps
      x-codegen-request-body-name: createOrganizationSamlIdp
  /organizations/{organizationId}/saml/idps/{idpId}:
    delete:
      description: Remove a SAML IdP in your organization.
      operationId: deleteOrganizationSamlIdp
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: Idp ID
        in: path
        name: idpId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Successful operation
      summary: Remove a SAML IdP in your organization.
      tags:
      - organizations
      - configure
      - saml
      - idps
    get:
      description: Get a SAML IdP from your organization.
      operationId: getOrganizationSamlIdp
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: Idp ID
        in: path
        name: idpId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                idpId: "1284392014819"
                consumerUrl: https://n7.meraki.com/saml/login/XXX
                x509certSha1Fingerprint: 00:11:22:33:44:55:66:77:88:99:00:11:22:33:44:55:66:77:88:99
                sloLogoutUrl: https://somewhere.com
              schema:
                $ref: '#/components/schemas/inline_response_200_127'
          description: Successful operation
      summary: Get a SAML IdP from your organization.
      tags:
      - organizations
      - configure
      - saml
      - idps
    put:
      description: Update a SAML IdP in your organization
      operationId: updateOrganizationSamlIdp
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: Idp ID
        in: path
        name: idpId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_219'
        content:
          application/json:
            schema:
              example:
                x509certSha1Fingerprint: 00:11:22:33:44:55:66:77:88:99:00:11:22:33:44:55:66:77:88:99
                sloLogoutUrl: https://somewhere.com
              properties:
                x509certSha1Fingerprint:
                  description: Fingerprint (SHA1) of the SAML certificate provided
                    by your Identity Provider (IdP). This will be used for encryption
                    / validation.
                  type: string
                sloLogoutUrl:
                  description: Dashboard will redirect users to this URL when they
                    sign out.
                  type: string
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
              - idpId: "1284392014819"
                consumerUrl: https://n7.meraki.com/saml/login/XXX
                x509certSha1Fingerprint: 00:11:22:33:44:55:66:77:88:99:00:11:22:33:44:55:66:77:88:99
                sloLogoutUrl: https://somewhere.com
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_127'
                type: array
          description: Successful operation
      summary: Update a SAML IdP in your organization
      tags:
      - organizations
      - configure
      - saml
      - idps
      x-codegen-request-body-name: updateOrganizationSamlIdp
  /organizations/{organizationId}/samlRoles:
    get:
      description: List the SAML roles for this organization
      operationId: getOrganizationSamlRoles
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - id: "1284392014819"
                role: myrole
                orgAccess: none
                networks:
                - id: N_24329156
                  access: full
                tags:
                - tag: west
                  access: read-only
              schema:
                items:
                  properties: {}
                  type: object
                type: array
          description: Successful operation
      summary: List the SAML roles for this organization
      tags:
      - organizations
      - configure
      - samlRoles
    post:
      description: Create a SAML role
      operationId: createOrganizationSamlRole
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_220'
        content:
          application/json:
            schema:
              example:
                role: myrole
                orgAccess: none
                networks:
                - id: N_24329156
                  access: full
                tags:
                - tag: west
                  access: read-only
              properties:
                role:
                  description: The role of the SAML administrator
                  type: string
                orgAccess:
                  description: The privilege of the SAML administrator on the organization.
                    Can be one of 'none', 'read-only', 'full' or 'enterprise'
                  enum:
                  - enterprise
                  - full
                  - none
                  - read-only
                  type: string
                tags:
                  description: The list of tags that the SAML administrator has privleges
                    on
                  items:
                    $ref: '#/components/schemas/_organizations__organizationId__samlRoles_tags'
                  type: array
                networks:
                  description: The list of networks that the SAML administrator has
                    privileges on
                  items:
                    $ref: '#/components/schemas/_organizations__organizationId__samlRoles_networks'
                  type: array
              required:
              - orgAccess
              - role
              type: object
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                id: "1284392014819"
                role: myrole
                orgAccess: none
                networks:
                - id: N_24329156
                  access: full
                tags:
                - tag: west
                  access: read-only
              schema:
                type: object
          description: Successful operation
      summary: Create a SAML role
      tags:
      - organizations
      - configure
      - samlRoles
      x-codegen-request-body-name: createOrganizationSamlRole
  /organizations/{organizationId}/samlRoles/{samlRoleId}:
    delete:
      description: Remove a SAML role
      operationId: deleteOrganizationSamlRole
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: Saml role ID
        in: path
        name: samlRoleId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Successful operation
      summary: Remove a SAML role
      tags:
      - organizations
      - configure
      - samlRoles
    get:
      description: Return a SAML role
      operationId: getOrganizationSamlRole
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: Saml role ID
        in: path
        name: samlRoleId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                id: "1284392014819"
                role: myrole
                orgAccess: none
                networks:
                - id: N_24329156
                  access: full
                tags:
                - tag: west
                  access: read-only
              schema:
                type: object
          description: Successful operation
      summary: Return a SAML role
      tags:
      - organizations
      - configure
      - samlRoles
    put:
      description: Update a SAML role
      operationId: updateOrganizationSamlRole
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: Saml role ID
        in: path
        name: samlRoleId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_221'
        content:
          application/json:
            schema:
              example:
                role: myrole
                orgAccess: none
                tags:
                - tag: west
                  access: read-only
                networks:
                - id: N_24329156
                  access: full
              properties:
                role:
                  description: The role of the SAML administrator
                  type: string
                orgAccess:
                  description: The privilege of the SAML administrator on the organization.
                    Can be one of 'none', 'read-only', 'full' or 'enterprise'
                  enum:
                  - enterprise
                  - full
                  - none
                  - read-only
                  type: string
                tags:
                  description: The list of tags that the SAML administrator has privleges
                    on
                  items:
                    $ref: '#/components/schemas/_organizations__organizationId__samlRoles_tags'
                  type: array
                networks:
                  description: The list of networks that the SAML administrator has
                    privileges on
                  items:
                    $ref: '#/components/schemas/_organizations__organizationId__samlRoles_networks'
                  type: array
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                id: "1284392014819"
                role: myrole
                orgAccess: none
                networks:
                - id: N_24329156
                  access: full
                tags:
                - tag: west
                  access: read-only
              schema:
                $ref: '#/components/schemas/inline_response_200_128'
          description: Successful operation
      summary: Update a SAML role
      tags:
      - organizations
      - configure
      - samlRoles
      x-codegen-request-body-name: updateOrganizationSamlRole
  /organizations/{organizationId}/sensor/readings/history:
    get:
      description: Return all reported readings from sensors in a given timespan,
        sorted by timestamp
      operationId: getOrganizationSensorReadingsHistory
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: The number of entries per page returned. Acceptable range is
          3 - 1000. Default is 1000.
        in: query
        name: perPage
        schema:
          type: integer
      - description: A token used by the server to indicate the start of the page.
          Often this is a timestamp or an ID but it is not limited to those. This
          parameter should not be defined by client applications. The link for the
          first, last, prev, or next page in the HTTP Link header should define it.
        in: query
        name: startingAfter
        schema:
          type: string
      - description: A token used by the server to indicate the end of the page. Often
          this is a timestamp or an ID but it is not limited to those. This parameter
          should not be defined by client applications. The link for the first, last,
          prev, or next page in the HTTP Link header should define it.
        in: query
        name: endingBefore
        schema:
          type: string
      - description: The beginning of the timespan for the data. The maximum lookback
          period is 365 days and 6 hours from today.
        in: query
        name: t0
        schema:
          type: string
      - description: The end of the timespan for the data. t1 can be a maximum of
          7 days after t0.
        in: query
        name: t1
        schema:
          type: string
      - description: The timespan for which the information will be fetched. If specifying
          timespan, do not specify parameters t0 and t1. The value must be in seconds
          and be less than or equal to 7 days. The default is 2 hours.
        in: query
        name: timespan
        schema:
          format: float
          type: number
      - description: Optional parameter to filter readings by network.
        explode: false
        in: query
        name: networkIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Optional parameter to filter readings by sensor.
        explode: false
        in: query
        name: serials
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Types of sensor readings to retrieve. If no metrics are supplied,
          all available types of readings will be retrieved. Allowed values are battery,
          button, door, humidity, indoorAirQuality, noise, pm25, temperature, tvoc,
          and water.
        explode: false
        in: query
        name: metrics
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
              - serial: Q234-ABCD-5678
                network:
                  id: N_24329156
                  name: Main Office
                ts: 2021-10-18T23:54:48Z
                metric: temperature
                battery:
                  percentage: 91
                button:
                  pressType: short
                door:
                  open: true
                humidity:
                  relativePercentage: 34
                indoorAirQuality:
                  score: 89
                noise:
                  ambient:
                    level: 45
                pm25:
                  concentration: 100
                temperature:
                  fahrenheit: 77.81
                  celsius: 25.45
                tvoc:
                  concentration: 100
                water:
                  present: true
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_129'
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative
                links used for subsequent paginated requests.
              schema:
                type: string
      summary: Return all reported readings from sensors in a given timespan, sorted
        by timestamp
      tags:
      - sensor
      - monitor
      - readings
      - history
  /organizations/{organizationId}/sensor/readings/latest:
    get:
      description: Return the latest available reading for each metric from each sensor,
        sorted by sensor serial
      operationId: getOrganizationSensorReadingsLatest
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: The number of entries per page returned. Acceptable range is
          3 - 100. Default is 100.
        in: query
        name: perPage
        schema:
          type: integer
      - description: A token used by the server to indicate the start of the page.
          Often this is a timestamp or an ID but it is not limited to those. This
          parameter should not be defined by client applications. The link for the
          first, last, prev, or next page in the HTTP Link header should define it.
        in: query
        name: startingAfter
        schema:
          type: string
      - description: A token used by the server to indicate the end of the page. Often
          this is a timestamp or an ID but it is not limited to those. This parameter
          should not be defined by client applications. The link for the first, last,
          prev, or next page in the HTTP Link header should define it.
        in: query
        name: endingBefore
        schema:
          type: string
      - description: Optional parameter to filter readings by network.
        explode: false
        in: query
        name: networkIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Optional parameter to filter readings by sensor.
        explode: false
        in: query
        name: serials
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Types of sensor readings to retrieve. If no metrics are supplied,
          all available types of readings will be retrieved. Allowed values are battery,
          button, door, humidity, indoorAirQuality, noise, pm25, temperature, tvoc,
          and water.
        explode: false
        in: query
        name: metrics
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
              - serial: Q234-ABCD-5678
                network:
                  id: N_24329156
                  name: Main Office
                readings:
                - ts: 2021-10-18T23:54:48Z
                  metric: temperature
                  battery:
                    percentage: 91
                  button:
                    pressType: short
                  door:
                    open: true
                  humidity:
                    relativePercentage: 34
                  indoorAirQuality:
                    score: 89
                  noise:
                    ambient:
                      level: 45
                  pm25:
                    concentration: 100
                  temperature:
                    fahrenheit: 77.81
                    celsius: 25.45
                  tvoc:
                    concentration: 100
                  water:
                    present: true
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_130'
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative
                links used for subsequent paginated requests.
              schema:
                type: string
      summary: Return the latest available reading for each metric from each sensor,
        sorted by sensor serial
      tags:
      - sensor
      - monitor
      - readings
      - latest
  /organizations/{organizationId}/sm/apnsCert:
    get:
      description: Get the organization's APNS certificate
      operationId: getOrganizationSmApnsCert
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                certificate: |2
                            -----BEGIN CERTIFICATE-----
                            MIIFdjCCBF6gAwIBAgIIM/hhf5ww8MwwDQYJKoZIhvcNAQELBQAwgYwxQDA+BgNV
                            BAMMN0FwcGxlIEFwcGxpY2F0aW9uIEludGVncmF0aW9uIDIgQ2VydGlmaWNhdGlv
                            biBBdXRob3JpdHkxJjAkBgNVBAsMHUFwcGxlIENlcnRpZmljYXRpb24gQXV0aG9y
                            aXR5MRMwEQYDVQQKDApBcHBsZSBJbmMuMQswCQYDVQQGEwJVUzAeFw0yMDAyMjYx
                            ODIzNDJaFw0yMTAyMjUxODIzNDJaMIGPMUwwSgYKCZImiZPyLGQBAQw8Y29tLmFw
                            cGxlLm1nbXQuRXh0ZXJuYWwuOTA3NDJhYmYtZDhhZC00MTc2LTllZmQtMGNiMzg1
                            MTM1MGM0MTIwMAYDVQQDDClBUFNQOjkwNzQyYWJmLWQ4YWQtNDE3Ni05ZWZkLTBj
                            YjM4NTEzNTBjNDELMAkGA1UEBhMCVVMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAw
                            ggEKAoIBAQDANdpo62hfxkP1IpMPXuO1+xKekUkY+iYae6cRaP886bodUaH1OwCj
                            Qd011u9Vng6m8I9rcLdIOS+IkFGKcTAHRYY3noqfEQUPyi5TN6yM1/mVYVoWZUnY
                            TrNWqDN/HfRagdYfZyQ7kAtOY2K8TF78HLLqQm7ez2+r4qibumoSli9+qCzKwDW/
                            hbx7JTeMlbYkhLTFgBkRxlp+usKymsLKm8D7kdbxtct4mx6p9z1FiNu4U1Hi/PgK
                            I/V3zHD4Ww7SzTICiLdCPeAmt042JvXAMQi0qhzrEdDiapmWwUC9xiiORN0BTIRA
                            T+DddTx8Xcly4wj9vQFdGUGLrJnzB3xZAgMBAAGjggHVMIIB0TAJBgNVHRMEAjAA
                            MB8GA1UdIwQYMBaAFPe+fCFgkds9G3vYOjKBad+ebH+bMIIBHAYDVR0gBIIBEzCC
                            AQ8wggELBgkqhkiG92NkBQEwgf0wgcMGCCsGAQUFBwICMIG2DIGzUmVsaWFuY2Ug
                            b24gdGhpcyBjZXJ0aWZpY2F0ZSBieSBhbnkgcGFydHkgYXNzdW1lcyBhY2NlcHRh
                            bmNlIG9mIHRoZSB0aGVuIGFwcGxpY2FibGUgc3RhbmRhcmQgdGVybXMgYW5kIGNv
                            bmRpdGlvbnMgb2YgdXNlLCBjZXJ0aWZpY2F0ZSBwb2xpY3kgYW5kIGNlcnRpZmlj
                            YXRpb24gcHJhY3RpY2Ugc3RhdGVtZW50cy4wNQYIKwYBBQUHAgEWKWh0dHA6Ly93
                            d3cuYXBwbGUuY29tL2NlcnRpZmljYXRlYXV0aG9yaXR5MBMGA1UdJQQMMAoGCCsG
                            AQUFBwMCMDAGA1UdHwQpMCcwJaAjoCGGH2h0dHA6Ly9jcmwuYXBwbGUuY29tL2Fh
                            aTJjYS5jcmwwHQYDVR0OBBYEFDj4Jizt9bQX7dn3ypIanvaNIy8fMAsGA1UdDwQE
                            AwIHgDAQBgoqhkiG92NkBgMCBAIFADANBgkqhkiG9w0BAQsFAAOCAQEARmLmy4Mh
                            80hTBHMj2whrC2LR0dIe2ngAUwYGSocyPZOzlGZYntUvpsNGwflbWSPNxFpVF15z
                            exEcLPKM4f9KGdM27s/m/x1Es2us9Vve+wS+N0C84zMC++FJBIxj3yAINXqSpYJv
                            bA5wccHlzP9F9Ks7sVNQB8y0mibYahtxVV959gC4522t5SRaEEsd82oTCtXE2Ljg
                            fQ1IAmWi4MuMSPwp26oDSwun8Wxyx+sfi/it9YWxD36Ga9mrfIjK1WIHyhge0HHr
                            olnvMfxgwI9E5gGV/4bQzPlmsHdz+/pLupWMkALaAxI9D7ajUG7iyyjJBCOpsr1s
                            FjDvo6WUkaqMHA==
                            -----END CERTIFICATE-----
              schema:
                $ref: '#/components/schemas/inline_response_200_131'
          description: Successful operation
      summary: Get the organization's APNS certificate
      tags:
      - sm
      - configure
      - apnsCert
  /organizations/{organizationId}/sm/vppAccounts:
    get:
      description: List the VPP accounts in the organization
      operationId: getOrganizationSmVppAccounts
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - id: "1284392014819"
                vppServiceToken: eyJleHBEYXRlIjoiMjAyMS0wMi0yNVQxNjo1NToyMy0wODAwIiwidG9rZW4iOiJBZFN4YWxyQmhFK0FhSWUrYTJDbDE1aDg1N0ZkUDkrL2c5c00xUWhlMG1WS0ZKWkdOL0hxRnQxeitSVERSTkNLNkxhMEExellML3JFa2tpOG1pbk8xRDlJWHhZQnBERy8wZllhTE44UlUrMDhYZkZsNlVwenkrRE8wQW41ZGgxWncwSmZiYmlXU21VVG94TFJmV1BCcVE9PSIsIm9yZ05hbWUiOiJNZXJha2kgTExDICsgRGV2ZWxvcGVyIn0=
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_132'
                type: array
          description: Successful operation
      summary: List the VPP accounts in the organization
      tags:
      - sm
      - configure
      - vppAccounts
  /organizations/{organizationId}/sm/vppAccounts/{vppAccountId}:
    get:
      description: Get a hash containing the unparsed token of the VPP account with
        the given ID
      operationId: getOrganizationSmVppAccount
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: Vpp account ID
        in: path
        name: vppAccountId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                id: "1284392014819"
                vppServiceToken: eyJleHBEYXRlIjoiMjAyMS0wMi0yNVQxNjo1NToyMy0wODAwIiwidG9rZW4iOiJBZFN4YWxyQmhFK0FhSWUrYTJDbDE1aDg1N0ZkUDkrL2c5c00xUWhlMG1WS0ZKWkdOL0hxRnQxeitSVERSTkNLNkxhMEExellML3JFa2tpOG1pbk8xRDlJWHhZQnBERy8wZllhTE44UlUrMDhYZkZsNlVwenkrRE8wQW41ZGgxWncwSmZiYmlXU21VVG94TFJmV1BCcVE9PSIsIm9yZ05hbWUiOiJNZXJha2kgTExDICsgRGV2ZWxvcGVyIn0=
              schema:
                $ref: '#/components/schemas/inline_response_200_132'
          description: Successful operation
      summary: Get a hash containing the unparsed token of the VPP account with the
        given ID
      tags:
      - sm
      - configure
      - vppAccounts
  /organizations/{organizationId}/snmp:
    get:
      description: Return the SNMP settings for an organization
      operationId: getOrganizationSnmp
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                v2cEnabled: false
                v3Enabled: true
                v3AuthMode: SHA
                v3PrivMode: AES128
                peerIps:
                - 123.123.123.1
                hostname: snmp.meraki.com
                port: 443
              schema:
                type: object
          description: Successful operation
      summary: Return the SNMP settings for an organization
      tags:
      - organizations
      - configure
      - snmp
    put:
      description: Update the SNMP settings for an organization
      operationId: updateOrganizationSnmp
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_222'
        content:
          application/json:
            schema:
              example:
                v2cEnabled: false
                v3Enabled: true
                v3AuthMode: SHA
                v3PrivMode: AES128
                peerIps:
                - 123.123.123.1
              properties:
                v2cEnabled:
                  description: Boolean indicating whether SNMP version 2c is enabled
                    for the organization.
                  type: boolean
                v3Enabled:
                  description: Boolean indicating whether SNMP version 3 is enabled
                    for the organization.
                  type: boolean
                v3AuthMode:
                  description: The SNMP version 3 authentication mode. Can be either
                    'MD5' or 'SHA'.
                  enum:
                  - MD5
                  - SHA
                  type: string
                v3AuthPass:
                  description: The SNMP version 3 authentication password. Must be
                    at least 8 characters if specified.
                  type: string
                v3PrivMode:
                  description: The SNMP version 3 privacy mode. Can be either 'DES'
                    or 'AES128'.
                  enum:
                  - AES128
                  - DES
                  type: string
                v3PrivPass:
                  description: The SNMP version 3 privacy password. Must be at least
                    8 characters if specified.
                  type: string
                peerIps:
                  description: The list of IPv4 addresses that are allowed to access
                    the SNMP server.
                  items:
                    type: string
                  type: array
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                v2cEnabled: false
                v3Enabled: true
                v3AuthMode: SHA
                v3PrivMode: AES128
                peerIps:
                - 123.123.123.1
                hostname: snmp.meraki.com
                port: 443
              schema:
                type: object
          description: Successful operation
      summary: Update the SNMP settings for an organization
      tags:
      - organizations
      - configure
      - snmp
      x-codegen-request-body-name: updateOrganizationSnmp
  /organizations/{organizationId}/summary/top/appliances/byUtilization:
    get:
      description: Return the top 10 appliances sorted by utilization over given time
        range.
      operationId: getOrganizationSummaryTopAppliancesByUtilization
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: The beginning of the timespan for the data.
        in: query
        name: t0
        schema:
          type: string
      - description: The end of the timespan for the data. t1 can be a maximum of
          31 days after t0.
        in: query
        name: t1
        schema:
          type: string
      - description: The timespan for which the information will be fetched. If specifying
          timespan, do not specify parameters t0 and t1. The value must be in seconds
          and be less than or equal to 31 days. The default is 1 day.
        in: query
        name: timespan
        schema:
          format: float
          type: number
      responses:
        "200":
          content:
            application/json:
              example:
              - network:
                  name: Main Office
                  id: N_24329156
                name: My appliance
                mac: 00:11:22:33:44:55
                serial: Q234-ABCD-5678
                model: MX
                utilization:
                  average:
                    percentage: 7.3
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_133'
                type: array
          description: Successful operation
      summary: Return the top 10 appliances sorted by utilization over given time
        range.
      tags:
      - organizations
      - monitor
      - summary
      - top
      - appliances
      - byUtilization
  /organizations/{organizationId}/summary/top/clients/byUsage:
    get:
      description: Return metrics for organization's top 10 clients by data usage
        (in mb) over given time range.
      operationId: getOrganizationSummaryTopClientsByUsage
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: The beginning of the timespan for the data.
        in: query
        name: t0
        schema:
          type: string
      - description: The end of the timespan for the data. t1 can be a maximum of
          31 days after t0.
        in: query
        name: t1
        schema:
          type: string
      - description: The timespan for which the information will be fetched. If specifying
          timespan, do not specify parameters t0 and t1. The value must be in seconds
          and be less than or equal to 31 days. The default is 1 day.
        in: query
        name: timespan
        schema:
          format: float
          type: number
      responses:
        "200":
          content:
            application/json:
              example:
              - name: Office Switch
                mac: 22:33:44:55:66:77
                id: k74272e
                network:
                  name: Main Office
                  id: N_24329156
                usage:
                  total: 18000.0
                  upstream: 8000.0
                  downstream: 10000.0
                  percentage: 80.2
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_134'
                type: array
          description: Successful operation
      summary: Return metrics for organization's top 10 clients by data usage (in
        mb) over given time range.
      tags:
      - organizations
      - monitor
      - summary
      - top
      - clients
      - byUsage
  /organizations/{organizationId}/summary/top/clients/manufacturers/byUsage:
    get:
      description: Return metrics for organization's top clients by data usage (in
        mb) over given time range, grouped by manufacturer.
      operationId: getOrganizationSummaryTopClientsManufacturersByUsage
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: The beginning of the timespan for the data.
        in: query
        name: t0
        schema:
          type: string
      - description: The end of the timespan for the data. t1 can be a maximum of
          31 days after t0.
        in: query
        name: t1
        schema:
          type: string
      - description: The timespan for which the information will be fetched. If specifying
          timespan, do not specify parameters t0 and t1. The value must be in seconds
          and be less than or equal to 31 days. The default is 1 day.
        in: query
        name: timespan
        schema:
          format: float
          type: number
      responses:
        "200":
          content:
            application/json:
              example:
              - name: Manufacturer Name
                clients:
                  counts:
                    total: 3
                usage:
                  total: 9000.0
                  upstream: 1000.0
                  downstream: 8000.0
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_135'
                type: array
          description: Successful operation
      summary: Return metrics for organization's top clients by data usage (in mb)
        over given time range, grouped by manufacturer.
      tags:
      - organizations
      - monitor
      - summary
      - top
      - clients
      - manufacturers
      - byUsage
  /organizations/{organizationId}/summary/top/devices/byUsage:
    get:
      description: Return metrics for organization's top 10 devices sorted by data
        usage over given time range. Default unit is megabytes.
      operationId: getOrganizationSummaryTopDevicesByUsage
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: The beginning of the timespan for the data.
        in: query
        name: t0
        schema:
          type: string
      - description: The end of the timespan for the data. t1 can be a maximum of
          31 days after t0.
        in: query
        name: t1
        schema:
          type: string
      - description: The timespan for which the information will be fetched. If specifying
          timespan, do not specify parameters t0 and t1. The value must be in seconds
          and be less than or equal to 31 days. The default is 1 day.
        in: query
        name: timespan
        schema:
          format: float
          type: number
      responses:
        "200":
          content:
            application/json:
              example:
              - name: My AP
                model: MR34
                serial: Q234-ABCD-5678
                mac: 00:11:22:33:44:55
                productType: switch
                network:
                  name: Main Office
                  id: N_24329156
                usage:
                  total: 18000.111
                  percentage: 80.223456789
                clients:
                  counts:
                    total: 4
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_136'
                type: array
          description: Successful operation
      summary: Return metrics for organization's top 10 devices sorted by data usage
        over given time range
      tags:
      - organizations
      - monitor
      - summary
      - top
      - devices
      - byUsage
  /organizations/{organizationId}/summary/top/devices/models/byUsage:
    get:
      description: Return metrics for organization's top 10 device models sorted by
        data usage over given time range. Default unit is megabytes.
      operationId: getOrganizationSummaryTopDevicesModelsByUsage
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: The beginning of the timespan for the data.
        in: query
        name: t0
        schema:
          type: string
      - description: The end of the timespan for the data. t1 can be a maximum of
          31 days after t0.
        in: query
        name: t1
        schema:
          type: string
      - description: The timespan for which the information will be fetched. If specifying
          timespan, do not specify parameters t0 and t1. The value must be in seconds
          and be less than or equal to 31 days. The default is 1 day.
        in: query
        name: timespan
        schema:
          format: float
          type: number
      responses:
        "200":
          content:
            application/json:
              example:
              - model: MR34
                count: 2
                usage:
                  total: 2000.0
                  average: 1000.0
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_137'
                type: array
          description: Successful operation
      summary: Return metrics for organization's top 10 device models sorted by data
        usage over given time range
      tags:
      - organizations
      - monitor
      - summary
      - top
      - devices
      - models
      - byUsage
  /organizations/{organizationId}/summary/top/ssids/byUsage:
    get:
      description: Return metrics for organization's top 10 ssids by data usage over
        given time range. Default unit is megabytes.
      operationId: getOrganizationSummaryTopSsidsByUsage
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: The beginning of the timespan for the data.
        in: query
        name: t0
        schema:
          type: string
      - description: The end of the timespan for the data. t1 can be a maximum of
          31 days after t0.
        in: query
        name: t1
        schema:
          type: string
      - description: The timespan for which the information will be fetched. If specifying
          timespan, do not specify parameters t0 and t1. The value must be in seconds
          and be less than or equal to 31 days. The default is 1 day.
        in: query
        name: timespan
        schema:
          format: float
          type: number
      responses:
        "200":
          content:
            application/json:
              example:
              - name: My SSID
                usage:
                  total: 18000.0
                  downstream: 10000.0
                  upstream: 8000.0
                  percentage: 80.223456789
                clients:
                  counts:
                    total: 4
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_138'
                type: array
          description: Successful operation
      summary: Return metrics for organization's top 10 ssids by data usage over given
        time range
      tags:
      - organizations
      - monitor
      - summary
      - top
      - ssids
      - byUsage
  /organizations/{organizationId}/summary/top/switches/byEnergyUsage:
    get:
      description: Return metrics for organization's top 10 switches by energy usage
        over given time range. Default unit is joules.
      operationId: getOrganizationSummaryTopSwitchesByEnergyUsage
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: The beginning of the timespan for the data.
        in: query
        name: t0
        schema:
          type: string
      - description: The end of the timespan for the data. t1 can be a maximum of
          31 days after t0.
        in: query
        name: t1
        schema:
          type: string
      - description: The timespan for which the information will be fetched. If specifying
          timespan, do not specify parameters t0 and t1. The value must be in seconds
          and be less than or equal to 31 days. The default is 1 day.
        in: query
        name: timespan
        schema:
          format: float
          type: number
      responses:
        "200":
          content:
            application/json:
              example:
              - network:
                  name: Main Office
                  id: N_24329156
                name: My switch
                mac: 00:11:22:33:44:55
                model: MS
                usage:
                  total: 800.021
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_139'
                type: array
          description: Successful operation
      summary: Return metrics for organization's top 10 switches by energy usage over
        given time range
      tags:
      - organizations
      - monitor
      - summary
      - top
      - switches
      - byEnergyUsage
  /organizations/{organizationId}/switch/devices/clone:
    post:
      description: 'Clone port-level and some switch-level configuration settings
        from a source switch to one or more target switches. Cloned settings include:
        Aggregation Groups, Power Settings, Multicast Settings, MTU Configuration,
        STP Bridge priority, Port Mirroring'
      operationId: cloneOrganizationSwitchDevices
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_223'
        content:
          application/json:
            schema:
              example:
                sourceSerial: Q234-ABCD-5678
                targetSerials:
                - Q234-ABCD-0001
                - Q234-ABCD-0002
                - Q234-ABCD-0003
              properties:
                sourceSerial:
                  description: Serial number of the source switch (must be on a network
                    not bound to a template)
                  type: string
                targetSerials:
                  description: Array of serial numbers of one or more target switches
                    (must be on a network not bound to a template)
                  items:
                    type: string
                  type: array
              required:
              - sourceSerial
              - targetSerials
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                sourceSerial: Q234-ABCD-5678
                targetSerials:
                - Q234-ABCD-0001
                - Q234-ABCD-0002
                - Q234-ABCD-0003
              schema:
                type: object
          description: Successful operation
      summary: Clone port-level and some switch-level configuration settings from
        a source switch to one or more target switches
      tags:
      - switch
      - configure
      - devices
      x-codegen-request-body-name: cloneOrganizationSwitchDevices
  /organizations/{organizationId}/switch/ports/bySwitch:
    get:
      description: List the switchports in an organization by switch
      operationId: getOrganizationSwitchPortsBySwitch
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: The number of entries per page returned. Acceptable range is
          3 - 50. Default is 50.
        in: query
        name: perPage
        schema:
          type: integer
      - description: A token used by the server to indicate the start of the page.
          Often this is a timestamp or an ID but it is not limited to those. This
          parameter should not be defined by client applications. The link for the
          first, last, prev, or next page in the HTTP Link header should define it.
        in: query
        name: startingAfter
        schema:
          type: string
      - description: A token used by the server to indicate the end of the page. Often
          this is a timestamp or an ID but it is not limited to those. This parameter
          should not be defined by client applications. The link for the first, last,
          prev, or next page in the HTTP Link header should define it.
        in: query
        name: endingBefore
        schema:
          type: string
      - description: Optional parameter to filter switchports by network.
        explode: false
        in: query
        name: networkIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Optional parameter to filter switchports belonging to the specified
          port profiles.
        explode: false
        in: query
        name: portProfileIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Optional parameter to filter switchports belonging to switches
          by name. All returned switches will have a name that contains the search
          term or is an exact match.
        in: query
        name: name
        schema:
          type: string
      - description: Optional parameter to filter switchports belonging to switches
          by MAC address. All returned switches will have a MAC address that contains
          the search term or is an exact match.
        in: query
        name: mac
        schema:
          type: string
      - description: Optional parameter to filter switchports by one or more MAC addresses
          belonging to devices. All switchports returned belong to MAC addresses of
          switches that are an exact match.
        explode: false
        in: query
        name: macs
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Optional parameter to filter switchports belonging to switches
          by serial number. All returned switches will have a serial number that contains
          the search term or is an exact match.
        in: query
        name: serial
        schema:
          type: string
      - description: Optional parameter to filter switchports belonging to switches
          with one or more serial numbers. All switchports returned belong to serial
          numbers of switches that are an exact match.
        explode: false
        in: query
        name: serials
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Optional parameter to filter results by switches where the configuration
          has been updated after the given timestamp.
        in: query
        name: configurationUpdatedAfter
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - name: Example Switch
                serial: Q555-5555-5555
                mac: 01:23:45:67
                network:
                  name: Example Network
                  id: N_12345
                model: MS120-8
                ports:
                - portId: "1"
                  name: My switch port
                  tags:
                  - tag1
                  - tag2
                  enabled: true
                  poeEnabled: true
                  type: access
                  vlan: 10
                  voiceVlan: 20
                  allowedVlans: 1,3,5-10
                  rstpEnabled: true
                  stpGuard: disabled
                  linkNegotiation: Auto negotiate
                  accessPolicyType: Sticky MAC allow list
                  stickyMacAllowList:
                  - 34:56:fe:ce:8e:b0
                  - 34:56:fe:ce:8e:b1
                  stickyMacAllowListLimit: 5
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_140'
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative
                links used for subsequent paginated requests.
              schema:
                type: string
      summary: List the switchports in an organization by switch
      tags:
      - switch
      - configure
      - ports
      - bySwitch
  /organizations/{organizationId}/uplinks/statuses:
    get:
      description: List the uplink status of every Meraki MX, MG and Z series devices
        in the organization
      operationId: getOrganizationUplinksStatuses
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: The number of entries per page returned. Acceptable range is
          3 - 1000. Default is 1000.
        in: query
        name: perPage
        schema:
          type: integer
      - description: A token used by the server to indicate the start of the page.
          Often this is a timestamp or an ID but it is not limited to those. This
          parameter should not be defined by client applications. The link for the
          first, last, prev, or next page in the HTTP Link header should define it.
        in: query
        name: startingAfter
        schema:
          type: string
      - description: A token used by the server to indicate the end of the page. Often
          this is a timestamp or an ID but it is not limited to those. This parameter
          should not be defined by client applications. The link for the first, last,
          prev, or next page in the HTTP Link header should define it.
        in: query
        name: endingBefore
        schema:
          type: string
      - description: A list of network IDs. The returned devices will be filtered
          to only include these networks.
        explode: false
        in: query
        name: networkIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A list of serial numbers. The returned devices will be filtered
          to only include these serials.
        explode: false
        in: query
        name: serials
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A list of ICCIDs. The returned devices will be filtered to only
          include these ICCIDs.
        explode: false
        in: query
        name: iccids
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
              - networkId: N_24329156
                serial: Q234-ABCD-5678
                model: MX68C
                lastReportedAt: 2018-02-11T00:00:00Z
                uplinks:
                - interface: wan1
                  status: active
                  ip: 1.2.3.4
                  gateway: 1.2.3.5
                  publicIp: 123.123.123.1
                  primaryDns: 8.8.8.8
                  secondaryDns: 8.8.4.4
                  ipAssignedBy: static
                  provider: at&t
                  signalStat:
                    rsrp: -120
                    rsrq: -13
                  connectionType: 4g
                  apn: internet
                  dns1: 111.111.111.111
                  dns2: 222.222.222.222
                  signalType: 4G
                  iccid: "123456789"
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_141'
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative
                links used for subsequent paginated requests.
              schema:
                type: string
      summary: List the uplink status of every Meraki MX, MG and Z series devices
        in the organization
      tags:
      - organizations
      - monitor
      - uplinks
      - statuses
  /organizations/{organizationId}/users/{userId}:
    delete:
      description: Delete a user and all of its authentication methods.
      operationId: deleteOrganizationUser
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: User ID
        in: path
        name: userId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Successful operation
      summary: Delete a user and all of its authentication methods.
      tags:
      - organizations
      - configure
      - users
  /organizations/{organizationId}/webhooks/alertTypes:
    get:
      description: Return a list of alert types to be used with managing webhook alerts
      operationId: getOrganizationWebhooksAlertTypes
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: Filter sample alerts to a specific product type
        in: query
        name: productType
        schema:
          enum:
          - appliance
          - camera
          - cellularGateway
          - health
          - platform
          - sensor
          - sm
          - switch
          - wireless
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - alertTypeId: stopped_reporting
                alertType: APs went down
                version: "0.1"
                sharedSecret: secret
                sentAt: 2020-07-11T00:03:12.331789Z
                alertId: "0000000000000000"
                alertLevel: warning
                occurredAt: 2018-02-11T00:00:00.123450Z
                alertData: {}
                organizationId: "2930418"
                organizationName: My organization
                organizationUrl: https://dashboard.meraki.com/o/VjjsAd/manage/organization/overview
                deviceSerial: Q234-ABCD-5678
                deviceMac: 00:11:22:33:44:55
                deviceName: My AP
                deviceUrl: https://n1.meraki.com//n//manage/nodes/new_list/000000000000
                deviceTags:
                - tag1
                - tag2
                deviceModel: MR34
                networkId: N_24329156
                networkName: Main Office
                networkUrl: https://n1.meraki.com//n//manage/nodes/list
                enrollmentString: my-enrollment-string
                notes: Additional description of the network
                productTypes:
                - appliance
                - switch
                - wireless
              schema:
                items:
                  properties: {}
                  type: object
                type: array
          description: Successful operation
      summary: Return a list of alert types to be used with managing webhook alerts
      tags:
      - organizations
      - monitor
      - webhooks
      - alertTypes
  /organizations/{organizationId}/webhooks/logs:
    get:
      description: Return the log of webhook POSTs sent
      operationId: getOrganizationWebhooksLogs
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: The beginning of the timespan for the data. The maximum lookback
          period is 90 days from today.
        in: query
        name: t0
        schema:
          type: string
      - description: The end of the timespan for the data. t1 can be a maximum of
          31 days after t0.
        in: query
        name: t1
        schema:
          type: string
      - description: The timespan for which the information will be fetched. If specifying
          timespan, do not specify parameters t0 and t1. The value must be in seconds
          and be less than or equal to 31 days. The default is 1 day.
        in: query
        name: timespan
        schema:
          format: float
          type: number
      - description: The number of entries per page returned. Acceptable range is
          3 - 1000. Default is 50.
        in: query
        name: perPage
        schema:
          type: integer
      - description: A token used by the server to indicate the start of the page.
          Often this is a timestamp or an ID but it is not limited to those. This
          parameter should not be defined by client applications. The link for the
          first, last, prev, or next page in the HTTP Link header should define it.
        in: query
        name: startingAfter
        schema:
          type: string
      - description: A token used by the server to indicate the end of the page. Often
          this is a timestamp or an ID but it is not limited to those. This parameter
          should not be defined by client applications. The link for the first, last,
          prev, or next page in the HTTP Link header should define it.
        in: query
        name: endingBefore
        schema:
          type: string
      - description: The URL the webhook was sent to
        in: query
        name: url
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - alertType: Settings changed
                loggedAt: 2019-01-01T13:37:28.423456Z
                networkId: N_24329156
                organizationId: "2930418"
                responseCode: 200
                responseDuration: 244
                sentAt: 2019-01-01T13:37:28.123456Z
                url: https://www.example.com/path
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_142'
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative
                links used for subsequent paginated requests.
              schema:
                type: string
      summary: Return the log of webhook POSTs sent
      tags:
      - organizations
      - monitor
      - webhooks
      - logs
  /organizations/{organizationId}/wireless/devices/ethernet/statuses:
    get:
      description: Endpoint to see power status for wireless devices
      operationId: getOrganizationWirelessDevicesEthernetStatuses
      parameters:
      - description: Organization ID
        in: path
        name: organizationId
        required: true
        schema:
          type: string
      - description: The number of entries per page returned. Acceptable range is
          3 - 1000. Default is 100.
        in: query
        name: perPage
        schema:
          type: integer
      - description: A token used by the server to indicate the start of the page.
          Often this is a timestamp or an ID but it is not limited to those. This
          parameter should not be defined by client applications. The link for the
          first, last, prev, or next page in the HTTP Link header should define it.
        in: query
        name: startingAfter
        schema:
          type: string
      - description: A token used by the server to indicate the end of the page. Often
          this is a timestamp or an ID but it is not limited to those. This parameter
          should not be defined by client applications. The link for the first, last,
          prev, or next page in the HTTP Link header should define it.
        in: query
        name: endingBefore
        schema:
          type: string
      - description: 'A list of Meraki network IDs to filter results to contain only
          specified networks. E.g.: networkIds[]=N_12345678&networkIds[]=L_3456'
        explode: false
        in: query
        name: networkIds
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
              - serial: Q234-ABCD-5678
                name: My appliance
                network:
                  id: N_24329156
                power:
                  mode: full
                  ac:
                    isConnected: false
                  poe:
                    isConnected: true
                ports:
                - name: Ethernet 0
                  poe:
                    standard: 802.3at
                  linkNegotiation:
                    duplex: full
                    speed: 5000
                aggregation:
                  enabled: true
                  speed: 10000
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_143'
                type: array
          description: Successful operation
          headers:
            Link:
              description: A comma-separated list of first, last, prev, and next relative
                links used for subsequent paginated requests.
              schema:
                type: string
      summary: Endpoint to see power status for wireless devices
      tags:
      - wireless
      - monitor
      - devices
      - ethernet
      - statuses
components:
  requestBodies:
    inline_object_138:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_138'
      required: false
    inline_object_139:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_139'
      required: false
    inline_object_50:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_50'
      required: false
    inline_object_136:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_136'
      required: true
    inline_object_137:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_137'
      required: false
    inline_object_52:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_52'
      required: false
    inline_object_134:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_134'
      required: false
    inline_object_51:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_51'
      required: true
    inline_object_135:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_135'
      required: false
    inline_object_54:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_54'
      required: false
    inline_object_132:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_132'
      required: true
    inline_object_53:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_53'
      required: false
    inline_object_133:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_133'
      required: true
    inline_object_56:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_56'
      required: true
    inline_object_130:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_130'
      required: true
    inline_object_55:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_55'
      required: false
    inline_object_131:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_131'
      required: true
    inline_object_58:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_58'
      required: false
    inline_object_57:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_57'
      required: false
    inline_object_59:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_59'
      required: true
    inline_object_129:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_129'
      required: false
    inline_object_127:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_127'
      required: true
    inline_object_128:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_128'
      required: false
    inline_object_125:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_125'
      required: false
    inline_object_126:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_126'
      required: true
    inline_object_41:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_41'
      required: true
    inline_object_123:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_123'
      required: true
    inline_object_40:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_40'
      required: false
    inline_object_124:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_124'
      required: false
    inline_object_43:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_43'
      required: false
    inline_object_121:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_121'
      required: false
    inline_object_42:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_42'
      required: false
    inline_object_122:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_122'
      required: true
    inline_object_45:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_45'
      required: false
    inline_object_44:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_44'
      required: true
    inline_object_120:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_120'
      required: true
    inline_object_47:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_47'
      required: false
    inline_object_46:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_46'
      required: false
    inline_object_49:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_49'
      required: false
    inline_object_48:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_48'
      required: true
    inline_object_39:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_39'
      required: false
    inline_object_158:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_158'
      required: false
    inline_object_159:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_159'
      required: false
    inline_object_30:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_30'
      required: false
    inline_object_156:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_156'
      required: false
    inline_object_157:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_157'
      required: false
    inline_object_32:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_32'
      required: false
    inline_object_154:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_154'
      required: false
    inline_object_31:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_31'
      required: true
    inline_object_155:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_155'
      required: false
    inline_object_34:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_34'
      required: false
    inline_object_152:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_152'
      required: false
    inline_object_33:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_33'
      required: false
    inline_object_153:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_153'
      required: false
    inline_object_36:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_36'
      required: true
    inline_object_150:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_150'
      required: false
    inline_object_35:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_35'
      required: false
    inline_object_151:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_151'
      required: true
    inline_object_38:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_38'
      required: true
    inline_object_37:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_37'
      required: true
    inline_object_29:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_29'
      required: false
    inline_object_28:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_28'
      required: false
    inline_object_149:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_149'
      required: false
    inline_object_147:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_147'
      required: true
    inline_object_148:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_148'
      required: false
    inline_object_145:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_145'
      required: true
    inline_object_146:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_146'
      required: false
    inline_object_21:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_21'
      required: true
    inline_object_143:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_143'
      required: true
    inline_object_20:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_20'
      required: false
    inline_object_144:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_144'
      required: false
    inline_object_23:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_23'
      required: true
    inline_object_141:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_141'
      required: false
    inline_object_22:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_22'
      required: false
    inline_object_142:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_142'
      required: false
    inline_object_25:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_25'
      required: false
    inline_object_24:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_24'
      required: false
    inline_object_140:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_140'
      required: true
    inline_object_27:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_27'
      required: false
    inline_object_26:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_26'
      required: false
    inline_object_18:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_18'
      required: false
    inline_object_17:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_17'
      required: false
    inline_object_19:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_19'
      required: false
    inline_object_90:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_90'
      required: false
    inline_object_217:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_217'
      required: false
    inline_object_218:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_218'
      required: true
    inline_object_92:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_92'
      required: false
    inline_object_215:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_215'
      required: false
    inline_object_91:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_91'
      required: true
    inline_object_216:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_216'
      required: false
    inline_object_94:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_94'
      required: false
    inline_object_213:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_213'
      required: true
    inline_object_93:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_93'
      required: false
    inline_object_214:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_214'
      required: true
    inline_object_96:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_96'
      required: false
    inline_object_211:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_211'
      required: true
    inline_object_95:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_95'
      required: true
    inline_object_212:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_212'
      required: true
    inline_object_98:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_98'
      required: false
    inline_object_97:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_97'
      required: true
    inline_object_210:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_210'
      required: false
    inline_object_99:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_99'
      required: true
    inline_object_208:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_208'
      required: false
    inline_object_209:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_209'
      required: true
    inline_object_206:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_206'
      required: true
    inline_object_207:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_207'
      required: true
    inline_object_81:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_81'
      required: true
    inline_object_204:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_204'
      required: true
    inline_object_80:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_80'
      required: true
    inline_object_205:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_205'
      required: true
    inline_object_83:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_83'
      required: true
    inline_object_202:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_202'
      required: true
    inline_object_82:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_82'
      required: true
    inline_object_203:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_203'
      required: false
    inline_object_85:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_85'
      required: true
    inline_object_200:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_200'
      required: true
    inline_object_84:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_84'
      required: false
    inline_object_201:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_201'
      required: true
    inline_object_87:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_87'
      required: true
    inline_object_86:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_86'
      required: false
    inline_object_89:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_89'
      required: true
    inline_object_88:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_88'
      required: false
    inline_object_118:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_118'
      required: false
    inline_object_119:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_119'
      required: false
    inline_object_70:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_70'
      required: false
    inline_object_116:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_116'
      required: true
    inline_object_117:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_117'
      required: false
    inline_object_72:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_72'
      required: true
    inline_object_114:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_114'
      required: true
    inline_object_71:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_71'
      required: true
    inline_object_115:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_115'
      required: false
    inline_object_74:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_74'
      required: true
    inline_object_112:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_112'
      required: false
    inline_object_73:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_73'
      required: true
    inline_object_113:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_113'
      required: false
    inline_object_76:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_76'
      required: true
    inline_object_110:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_110'
      required: true
    inline_object_75:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_75'
      required: true
    inline_object_111:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_111'
      required: false
    inline_object_78:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_78'
      required: true
    inline_object_77:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_77'
      required: false
    inline_object_79:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_79'
      required: true
    inline_object_109:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_109'
      required: true
    inline_object_107:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_107'
      required: false
    inline_object_108:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_108'
      required: false
    inline_object_105:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_105'
      required: false
    inline_object_106:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_106'
      required: false
    inline_object_61:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_61'
      required: true
    inline_object_103:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_103'
      required: true
    inline_object_60:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_60'
      required: true
    inline_object_104:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_104'
      required: true
    inline_object_63:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_63'
      required: true
    inline_object_101:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_101'
      required: true
    inline_object_222:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_222'
      required: false
    inline_object_62:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_62'
      required: true
    inline_object_102:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_102'
      required: false
    inline_object_223:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_223'
      required: true
    inline_object_65:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_65'
      required: true
    inline_object_220:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_220'
      required: true
    inline_object_64:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_64'
      required: false
    inline_object_100:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_100'
      required: false
    inline_object_221:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_221'
      required: false
    inline_object_67:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_67'
      required: false
    inline_object_66:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_66'
      required: false
    inline_object_69:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_69'
      required: false
    inline_object_68:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_68'
      required: false
    inline_object_219:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_219'
      required: false
    inline_object_1:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_1'
      required: true
    inline_object_9:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_9'
      required: false
    inline_object_8:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_8'
      required: true
    inline_object_7:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_7'
      required: false
    inline_object_6:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_6'
      required: false
    inline_object_5:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_5'
      required: false
    inline_object_4:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_4'
      required: false
    inline_object_3:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_3'
      required: false
    inline_object_2:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_2'
      required: false
    inline_object_178:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_178'
      required: true
    inline_object_179:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_179'
      required: false
    inline_object_10:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_10'
      required: false
    inline_object_176:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_176'
      required: false
    inline_object_177:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_177'
      required: false
    inline_object_12:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_12'
      required: true
    inline_object_174:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_174'
      required: false
    inline_object_11:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_11'
      required: false
    inline_object_175:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_175'
      required: true
    inline_object_14:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_14'
      required: false
    inline_object_172:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_172'
      required: false
    inline_object_13:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_13'
      required: false
    inline_object_173:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_173'
      required: true
    inline_object_16:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_16'
      required: true
    inline_object_170:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_170'
      required: false
    inline_object_15:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_15'
      required: false
    inline_object_171:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_171'
      required: true
    inline_object_169:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_169'
      required: true
    inline_object_167:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_167'
      required: true
    inline_object_168:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_168'
      required: false
    inline_object_165:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_165'
      required: false
    inline_object_166:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_166'
      required: false
    inline_object_163:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_163'
      required: false
    inline_object_164:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_164'
      required: false
    inline_object_161:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_161'
      required: true
    inline_object_162:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_162'
      required: false
    inline_object_160:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_160'
      required: false
    inline_object_198:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_198'
      required: false
    inline_object_199:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_199'
      required: false
    inline_object_196:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_196'
      required: false
    inline_object_197:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_197'
      required: true
    inline_object_194:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_194'
      required: false
    inline_object_195:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_195'
      required: true
    inline_object_192:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_192'
      required: true
    inline_object_193:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_193'
      required: false
    inline_object_190:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_190'
      required: false
    inline_object_191:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_191'
      required: true
    inline_object_189:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_189'
      required: false
    inline_object_187:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_187'
      required: false
    inline_object_188:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_188'
      required: false
    inline_object_185:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_185'
      required: false
    inline_object_186:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_186'
      required: false
    inline_object_183:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_183'
      required: true
    inline_object_184:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_184'
      required: false
    inline_object_181:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_181'
      required: false
    inline_object_182:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_182'
      required: true
    inline_object_180:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_180'
      required: true
    inline_object:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object'
      required: false
  schemas:
    _networks__networkId__camera_qualityRetentionProfiles_videoSettings_MV21_MV71:
      description: Quality and resolution for MV21/MV71 camera models.
      properties:
        quality:
          description: Quality of the camera. Can be one of 'Standard', 'Enhanced'
            or 'High'.
          enum:
          - Enhanced
          - High
          - Standard
          type: string
        resolution:
          description: Resolution of the camera. Can be one of '1280x720'.
          enum:
          - 1280x720
          type: string
      required:
      - quality
      - resolution
      type: object
    _organizations__organizationId__devices_uplinks_addresses_byDevice_public:
      description: Public interface information.
      example:
        address: address
      properties:
        address:
          description: The device uplink public IP address.
          type: string
      type: object
    _networks__networkId__wireless_rfProfiles_apBandSettings:
      description: Settings that will be enabled if selectionType is set to 'ap'.
      properties:
        bandOperationMode:
          description: Choice between 'dual', '2.4ghz' or '5ghz'. Defaults to dual.
          enum:
          - 2.4ghz
          - 5ghz
          - dual
          type: string
        bandSteeringEnabled:
          description: Steers client to most open band. Can be either true or false.
            Defaults to true.
          type: boolean
      type: object
    _networks__networkId__appliance_trafficShaping_rules_definitions:
      properties:
        type:
          description: The type of definition. Can be one of 'application', 'applicationCategory',
            'host', 'port', 'ipRange' or 'localNet'.
          enum:
          - application
          - applicationCategory
          - host
          - ipRange
          - localNet
          - port
          type: string
        value:
          description: |2
                If "type" is 'host', 'port', 'ipRange' or 'localNet', then "value" must be a string, matching either
                a hostname (e.g. "somesite.com"), a port (e.g. 8080), or an IP range ("192.1.0.0",
                "192.1.0.0/16", or "10.1.0.0/16:80"). 'localNet' also supports CIDR notation, excluding
                custom ports.
                 If "type" is 'application' or 'applicationCategory', then "value" must be an object
                with the structure { "id": "meraki:layer7/..." }, where "id" is the application category or
                application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories
                endpoint).
          type: string
      required:
      - type
      - value
      type: object
    _networks__networkId__sensor_alerts_profiles_threshold_indoorAirQuality:
      description: Indoor air quality score threshold. One of 'score' or 'quality'
        must be provided.
      example:
        score: 7
        quality: fair
      properties:
        score:
          description: Alerting threshold as indoor air quality score.
          type: integer
        quality:
          description: Alerting threshold as a qualitative indoor air quality level.
          enum:
          - fair
          - good
          - inadequate
          - poor
          type: string
      type: object
    _networks__networkId__switch_dhcpServerPolicy_alerts_email:
      description: Email alert settings for DHCP servers
      properties:
        enabled:
          description: When enabled, send an email if a new DHCP server is seen. Default
            value is false.
          type: boolean
      type: object
    _devices__serial__switch_routing_interfaces__interfaceId__dhcp_reservedIpRanges:
      properties:
        start:
          description: The starting IP address of the reserved IP range
          type: string
        end:
          description: The ending IP address of the reserved IP range
          type: string
        comment:
          description: The comment for the reserved IP range
          type: string
      required:
      - end
      - start
      type: object
    _networks__networkId__appliance_trafficShaping_uplinkSelection_trafficFilters_1:
      properties:
        type:
          description: 'Type of this traffic filter. Must be one of: ''applicationCategory'',
            ''application'' or ''custom'''
          enum:
          - application
          - applicationCategory
          - custom
          type: string
        value:
          $ref: '#/components/schemas/_networks__networkId__appliance_trafficShaping_uplinkSelection_value_1'
      required:
      - type
      - value
      type: object
    inline_response_200_2_results_replies:
      example:
        size: 9
        latency: 3.6160767
        sequenceId: 7
      properties:
        sequenceId:
          description: Sequence ID of the packet
          type: integer
        size:
          description: Size of the packet in bytes
          type: integer
        latency:
          description: Latency of the packet in milliseconds
          format: float
          type: number
      type: object
    inline_response_200_authentication:
      description: Authentication info
      example:
        mode: mode
        twoFactor:
          enabled: true
        saml:
          enabled: true
        api:
          key:
            created: true
      properties:
        mode:
          description: Authentication mode
          type: string
        api:
          $ref: '#/components/schemas/inline_response_200_authentication_api'
        twoFactor:
          $ref: '#/components/schemas/inline_response_200_authentication_twoFactor'
        saml:
          $ref: '#/components/schemas/inline_response_200_authentication_saml'
      type: object
    _networks__networkId__switch_settings_powerExceptions:
      properties:
        serial:
          description: Serial number of the switch
          type: string
        powerType:
          description: Per switch exception (combined, redundant, useNetworkSetting)
          enum:
          - combined
          - redundant
          - useNetworkSetting
          type: string
      required:
      - powerType
      - serial
      type: object
    _networks__networkId__alerts_history_device:
      description: info related to the device that caused the alert
      example:
        serial: serial
      properties:
        serial:
          description: device serial
          type: string
      type: object
    _networks__networkId__groupPolicies_firewallAndTrafficShaping_trafficShapingRules:
      properties:
        definitions:
          description: |2
                A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.
          items:
            $ref: '#/components/schemas/_networks__networkId__appliance_trafficShaping_rules_definitions'
          type: array
        perClientBandwidthLimits:
          $ref: '#/components/schemas/_networks__networkId__appliance_trafficShaping_rules_perClientBandwidthLimits'
        dscpTagValue:
          description: |2
                The DSCP tag applied by your rule. null means 'Do not change DSCP tag'.
                For a list of possible tag values, use the trafficShaping/dscpTaggingOptions endpoint.
          type: integer
        pcpTagValue:
          description: |2
                The PCP tag applied by your rule. Can be 0 (lowest priority) through 7 (highest priority).
                null means 'Do not set PCP tag'.
          type: integer
        priority:
          description: |2
                A string, indicating the priority level for packets bound to your rule.
                Can be 'low', 'normal' or 'high'.
          type: string
      required:
      - definitions
      type: object
    _organizations__organizationId__admins_tags:
      properties:
        tag:
          description: The name of the tag
          type: string
        access:
          description: The privilege of the dashboard administrator on the tag. Can
            be one of 'full', 'read-only', 'guest-ambassador' or 'monitor-only'
          enum:
          - full
          - guest-ambassador
          - monitor-only
          - read-only
          type: string
      required:
      - access
      - tag
      type: object
    _organizations__organizationId__adaptivePolicy_acls_rules_1:
      properties:
        policy:
          description: '''allow'' or ''deny'' traffic specified by this rule.'
          enum:
          - allow
          - deny
          type: string
        protocol:
          description: The type of protocol (must be 'tcp', 'udp', 'icmp' or 'any').
          enum:
          - any
          - icmp
          - tcp
          - udp
          type: string
        srcPort:
          description: 'Source port. Must be in the format of single port: ''1'',
            port list: ''1,2'' or port range: ''1-10'', and in the range of 1-65535,
            or ''any''. Default is ''any''.'
          type: string
        dstPort:
          description: 'Destination port. Must be in the format of single port: ''1'',
            port list: ''1,2'' or port range: ''1-10'', and in the range of 1-65535,
            or ''any''. Default is ''any''.'
          type: string
      required:
      - policy
      - protocol
      type: object
    inline_response_200_19_trafficFilters:
      example:
        type: custom
        value:
          protocol: any
          destination:
            port: port
            cidr: cidr
          source:
            vlan: 0
            port: port
            host: 6
            cidr: cidr
      properties:
        type:
          description: Traffic filter type. Must be "custom"
          enum:
          - custom
          type: string
        value:
          $ref: '#/components/schemas/inline_response_200_19_value'
      required:
      - type
      - value
      type: object
    _networks__networkId__health_alerts_scope_peers:
      example:
        url: url
        network:
          name: name
          id: id
      properties:
        url:
          description: URL to the peer
          type: string
        network:
          $ref: '#/components/schemas/_networks__networkId__health_alerts_scope_network'
      type: object
    _networks__networkId__switch_dscpToCosMappings_mappings:
      properties:
        dscp:
          description: The Differentiated Services Code Point (DSCP) tag in the IP
            header that will be mapped to a particular Class-of-Service (CoS) queue.
            Value can be in the range of 0 to 63 inclusive.
          type: integer
        cos:
          description: The actual layer-2 CoS queue the DSCP value is mapped to. These
            are not bits set on outgoing frames. Value can be in the range of 0 to
            5 inclusive.
          type: integer
        title:
          description: Label for the mapping (optional).
          type: string
      required:
      - cos
      - dscp
      type: object
    inline_response_200_19_vpnTrafficUplinkPreferences:
      example:
        preferredUplink: bestForVoIP
        trafficFilters:
        - type: application
          value:
            protocol: any
            destination:
              vlan: 5
              port: port
              fqdn: fqdn
              host: 2
              cidr: cidr
              network: network
            id: id
            source:
              vlan: 1
              port: port
              host: 5
              cidr: cidr
              network: network
        - type: application
          value:
            protocol: any
            destination:
              vlan: 5
              port: port
              fqdn: fqdn
              host: 2
              cidr: cidr
              network: network
            id: id
            source:
              vlan: 1
              port: port
              host: 5
              cidr: cidr
              network: network
        failOverCriterion: poorPerformance
        performanceClass:
          builtinPerformanceClassName: VoIP
          customPerformanceClassId: customPerformanceClassId
          type: builtin
      properties:
        trafficFilters:
          description: Traffic filters
          items:
            $ref: '#/components/schemas/inline_response_200_19_trafficFilters_1'
          type: array
        preferredUplink:
          description: 'Preferred uplink for uplink preference rule. Must be one of:
            ''wan1'', ''wan2'', ''bestForVoIP'', ''loadBalancing'' or ''defaultUplink'''
          enum:
          - bestForVoIP
          - defaultUplink
          - loadBalancing
          - wan1
          - wan2
          type: string
        failOverCriterion:
          description: 'Fail over criterion for uplink preference rule. Must be one
            of: ''poorPerformance'' or ''uplinkDown'''
          enum:
          - poorPerformance
          - uplinkDown
          type: string
        performanceClass:
          $ref: '#/components/schemas/inline_response_200_19_performanceClass'
      required:
      - preferredUplink
      - trafficFilters
      type: object
    _organizations__organizationId__summary_top_switches_byEnergyUsage_usage:
      description: Energy usage of the switch
      example:
        total: 0.8008282
      properties:
        total:
          description: Total energy usage of the switch
          format: float
          type: number
      type: object
    _organizations__organizationId__inventory_onboarding_cloudMonitoring_prepare_vty_authentication:
      description: VTY AAA authentication
      properties:
        group:
          $ref: '#/components/schemas/_organizations__organizationId__inventory_onboarding_cloudMonitoring_prepare_vty_authentication_group'
      type: object
    _networks__networkId__switch_dhcpServerPolicy_alerts:
      description: Alert settings for DHCP servers
      properties:
        email:
          $ref: '#/components/schemas/_networks__networkId__switch_dhcpServerPolicy_alerts_email'
      type: object
    _organizations__organizationId__switch_ports_bySwitch_network:
      description: Identifying information of the switch's network.
      example:
        name: name
        id: id
      properties:
        name:
          description: The name of the network.
          type: string
        id:
          description: The ID of the network.
          type: string
      type: object
    _devices__serial__camera_sense_audioDetection:
      description: The details of the audio detection config.
      properties:
        enabled:
          description: Boolean indicating if audio detection is enabled(true) or disabled(false)
            on the camera
          type: boolean
      type: object
    inline_response_200_2_results:
      description: Results of the ping request.
      example:
        loss:
          percentage: 1.4658129
        replies:
        - size: 9
          latency: 3.6160767
          sequenceId: 7
        - size: 9
          latency: 3.6160767
          sequenceId: 7
        latencies:
          average: 5.637377
          maximum: 2.302136
          minimum: 5.962134
        received: 6
        sent: 0
      properties:
        sent:
          description: Number of packets sent
          type: integer
        received:
          description: Number of packets received
          type: integer
        loss:
          $ref: '#/components/schemas/inline_response_200_2_results_loss'
        latencies:
          $ref: '#/components/schemas/inline_response_200_2_results_latencies'
        replies:
          description: Received packets
          items:
            $ref: '#/components/schemas/inline_response_200_2_results_replies'
          type: array
      type: object
    _organizations__organizationId__inventory_claim_licenses:
      properties:
        key:
          description: The key of the license
          type: string
        mode:
          description: 'Co-term licensing only: either ''renew'' or ''addDevices''.
            ''addDevices'' will increase the license limit, while ''renew'' will extend
            the amount of time until expiration. Defaults to ''addDevices''. All licenses
            must be claimed with the same mode, and at most one renewal can be claimed
            at a time. Does not apply to organizations using per-device licensing
            model.'
          enum:
          - addDevices
          - renew
          type: string
      required:
      - key
      type: object
    inline_response_200_91_counts:
      description: The current amount of various adaptive policy objects.
      example:
        customGroups: 6
        allowPolicies: 2
        denyPolicies: 5
        policyObjects: 7
        policies: 5
        groups: 0
        customAcls: 1
      properties:
        groups:
          description: Number of adaptive policy groups currently in the organization.
          type: integer
        customGroups:
          description: Number of user-created adaptive policy groups currently in
            the organization.
          type: integer
        customAcls:
          description: Number of user-created adaptive policy ACLs currently in the
            organization.
          type: integer
        policies:
          description: Number of adaptive policies currently in the organization.
          type: integer
        denyPolicies:
          description: Number of adaptive policies currently in the organization that
            deny all traffic.
          type: integer
        allowPolicies:
          description: Number of adaptive policies currently in the organization that
            allow all traffic.
          type: integer
        policyObjects:
          description: Number of policy objects (with the adaptive policy type) currently
            in the organization.
          type: integer
      type: object
    _networks__networkId__snmp_users:
      properties:
        username:
          description: The username for the SNMP user. Required.
          type: string
        passphrase:
          description: The passphrase for the SNMP user. Required.
          type: string
      required:
      - passphrase
      - username
      type: object
    _organizations__organizationId__firmware_upgrades_fromVersion:
      description: ID of the upgrade's starting version
      example:
        releaseDate: 2000-01-23T04:56:07.000+00:00
        releaseType: releaseType
        id: id
        shortName: shortName
      properties:
        id:
          description: Firmware version ID
          type: string
        shortName:
          description: Firmware version short name
          type: string
        releaseType:
          description: Release type of the firmware version
          type: string
        releaseDate:
          description: Release date of the firmware version
          format: date-time
          type: string
      type: object
    _networks__networkId__appliance_ssids__number__dhcpEnforcedDeauthentication:
      description: 'DHCP Enforced Deauthentication enables the disassociation of wireless
        clients in addition to Mandatory DHCP. This param is only valid on firmware
        versions >= MX 17.0 where the associated LAN has Mandatory DHCP Enabled '
      properties:
        enabled:
          description: Enable DCHP Enforced Deauthentication on the SSID.
          type: boolean
      type: object
    _networks__networkId__wireless_billing_plans:
      properties:
        id:
          description: The id of the pricing plan to update.
          type: string
        price:
          description: The price of the billing plan.
          format: float
          type: number
        bandwidthLimits:
          $ref: '#/components/schemas/_networks__networkId__wireless_billing_bandwidthLimits'
        timeLimit:
          description: The time limit of the pricing plan in minutes. Can be '1 hour',
            '1 day', '1 week', or '30 days'.
          enum:
          - 1 day
          - 1 hour
          - 1 week
          - 30 days
          type: string
      required:
      - bandwidthLimits
      - price
      - timeLimit
      type: object
    _networks__networkId__clients__clientId__splashAuthorizationStatus_ssids_0:
      description: Splash authorization for SSID 0
      properties:
        isAuthorized:
          description: New authorization status for the SSID (true, false).
          type: boolean
      type: object
    _networks__networkId__clients__clientId__splashAuthorizationStatus_ssids_1:
      description: Splash authorization for SSID 1
      properties:
        isAuthorized:
          description: New authorization status for the SSID (true, false).
          type: boolean
      type: object
    _networks__networkId__clients__clientId__splashAuthorizationStatus_ssids_2:
      description: Splash authorization for SSID 2
      properties:
        isAuthorized:
          description: New authorization status for the SSID (true, false).
          type: boolean
      type: object
    inline_response_200_18_bandwidthLimits:
      description: A hash uplink keys and their configured settings for the Appliance
      example:
        cellular:
          limitUp: 5
          limitDown: 2
        wan2:
          limitUp: 1
          limitDown: 5
        wan1:
          limitUp: 0
          limitDown: 6
      properties:
        wan1:
          $ref: '#/components/schemas/inline_response_200_18_bandwidthLimits_wan1'
        wan2:
          $ref: '#/components/schemas/inline_response_200_18_bandwidthLimits_wan2'
        cellular:
          $ref: '#/components/schemas/inline_response_200_18_bandwidthLimits_cellular'
      type: object
    _networks__networkId__clients__clientId__splashAuthorizationStatus_ssids_7:
      description: Splash authorization for SSID 7
      properties:
        isAuthorized:
          description: New authorization status for the SSID (true, false).
          type: boolean
      type: object
    _networks__networkId__clients__clientId__splashAuthorizationStatus_ssids_8:
      description: Splash authorization for SSID 8
      properties:
        isAuthorized:
          description: New authorization status for the SSID (true, false).
          type: boolean
      type: object
    _networks__networkId__switch_stacks__switchStackId__routing_interfaces_ipv6:
      description: The IPv6 settings of the interface.
      properties:
        assignmentMode:
          description: The IPv6 assignment mode for the interface. Can be either 'eui-64'
            or 'static'.
          type: string
        prefix:
          description: The IPv6 prefix of the interface. Required if IPv6 object is
            included.
          type: string
        address:
          description: The IPv6 address of the interface. Required if assignmentMode
            is 'static'. Must not be included if assignmentMode is 'eui-64'.
          type: string
        gateway:
          description: The IPv6 default gateway of the interface. Required if prefix
            is defined and this is the first interface with IPv6 configured for the
            stack.
          type: string
      type: object
    _networks__networkId__clients__clientId__splashAuthorizationStatus_ssids_9:
      description: Splash authorization for SSID 9
      properties:
        isAuthorized:
          description: New authorization status for the SSID (true, false).
          type: boolean
      type: object
    _networks__networkId__clients__clientId__splashAuthorizationStatus_ssids_3:
      description: Splash authorization for SSID 3
      properties:
        isAuthorized:
          description: New authorization status for the SSID (true, false).
          type: boolean
      type: object
    _networks__networkId__clients__clientId__splashAuthorizationStatus_ssids_4:
      description: Splash authorization for SSID 4
      properties:
        isAuthorized:
          description: New authorization status for the SSID (true, false).
          type: boolean
      type: object
    inline_response_200_41_namedVlans:
      description: A hash of Named VLANs options applied to the Network.
      example:
        enabled: true
      properties:
        enabled:
          description: Enables / disables Named VLANs on the Network.
          type: boolean
      required:
      - enabled
      type: object
    _networks__networkId__switch_dhcp_v4_servers_seen_lastPacket_ethernet:
      description: Additional ethernet attributes of the packet.
      example:
        type: type
      properties:
        type:
          description: Ethernet type of the packet.
          type: string
      type: object
    _networks__networkId__clients__clientId__splashAuthorizationStatus_ssids_5:
      description: Splash authorization for SSID 5
      properties:
        isAuthorized:
          description: New authorization status for the SSID (true, false).
          type: boolean
      type: object
    _networks__networkId__clients__clientId__splashAuthorizationStatus_ssids_6:
      description: Splash authorization for SSID 6
      properties:
        isAuthorized:
          description: New authorization status for the SSID (true, false).
          type: boolean
      type: object
    _networks__networkId__wireless_ssids__number__splash_settings_billing_freeAccess:
      description: Details associated with a free access plan with limits.
      properties:
        enabled:
          description: Whether or not free access is enabled.
          type: boolean
        durationInMinutes:
          description: How long a device can use a network for free.
          type: integer
      type: object
    _devices__serial__switch_routing_interfaces_ospfSettings:
      description: IPv4 OSPF Settings
      example:
        area: area
        cost: 6
        isPassiveEnabled: true
      properties:
        area:
          description: Area id
          type: string
        cost:
          description: OSPF Cost
          type: integer
        isPassiveEnabled:
          description: Disable sending Hello packets on this interface's IPv4 area
          type: boolean
      type: object
    _organizations__organizationId__licensing_coterm_licenses_editions:
      example:
        edition: edition
        productType: productType
      properties:
        edition:
          description: The name of the license edition
          type: string
        productType:
          description: The product type of the license edition
          type: string
      type: object
    _networks__networkId__alerts_history_destinations_push:
      description: push destinations for this alert
      example:
        sentAt: sentAt
      properties:
        sentAt:
          description: time when the alert was sent to the user(s) for this channel
          type: string
      type: object
    _networks__networkId__sensor_alerts_overview_byMetric_counts:
      description: Counts of sensor alerts over the timespan, by reading metric
      example:
        tvoc: 7
        door: 0
        pm25: 5
        noise:
          ambient: 5
        temperature: 2
        humidity: 6
        indoorAirQuality: 1
        water: 9
      properties:
        door:
          description: Number of sensor alerts that occurred due to an open door
          type: integer
        humidity:
          description: Number of sensor alerts that occurred due to humidity readings
          type: integer
        indoorAirQuality:
          description: Number of sensor alerts that occurred due to indoor air quality
            readings
          type: integer
        noise:
          $ref: '#/components/schemas/_networks__networkId__sensor_alerts_overview_byMetric_counts_noise'
        pm25:
          description: Number of sensor alerts that occurred due to PM2.5 readings
          type: integer
        temperature:
          description: Number of sensor alerts that occurred due to temperature readings
          type: integer
        tvoc:
          description: Number of sensor alerts that occurred due to TVOC readings
          type: integer
        water:
          description: Number of sensor alerts that occurred due to the presence of
            water
          type: integer
      type: object
    _networks__networkId__camera_qualityRetentionProfiles_videoSettings_MV22X_MV72X:
      description: Quality and resolution for MV22X/MV72X camera models.
      properties:
        quality:
          description: Quality of the camera. Can be one of 'Standard', 'Enhanced'
            or 'High'.
          enum:
          - Enhanced
          - High
          - Standard
          type: string
        resolution:
          description: Resolution of the camera. Can be one of '1280x720', '1920x1080'
            or '2688x1512'.
          enum:
          - 1280x720
          - 1920x1080
          - 2688x1512
          type: string
      required:
      - quality
      - resolution
      type: object
    _organizations__organizationId__appliance_security_intrusion_allowedRules:
      properties:
        ruleId:
          description: A rule identifier of the format meraki:intrusion/snort/GID/<gid>/SID/<sid>.
            gid and sid can be obtained from either https://www.snort.org/rule-docs
            or as ruleIds from the security events in /organization/[orgId]/securityEvents
          type: string
        message:
          description: Message is optional and is ignored on a PUT call. It is allowed
            in order for PUT to be compatible with GET
          type: string
      required:
      - ruleId
      type: object
    inline_response_200_1_interfaces:
      description: Interface settings.
      example:
        wan2:
          vlanTagging:
            vlanId: 0
            enabled: true
          pppoe:
            enabled: true
            authentication:
              enabled: true
              username: username
          svis:
            ipv4:
              address: address
              nameservers:
                addresses:
                - addresses
                - addresses
              assignmentMode: dynamic
              gateway: gateway
            ipv6:
              address: address
              nameservers:
                addresses:
                - addresses
                - addresses
              assignmentMode: dynamic
              gateway: gateway
          enabled: true
        wan1:
          vlanTagging:
            vlanId: 0
            enabled: true
          pppoe:
            enabled: true
            authentication:
              enabled: true
              username: username
          svis:
            ipv4:
              address: address
              nameservers:
                addresses:
                - addresses
                - addresses
              assignmentMode: dynamic
              gateway: gateway
            ipv6:
              address: address
              nameservers:
                addresses:
                - addresses
                - addresses
              assignmentMode: dynamic
              gateway: gateway
          enabled: true
      properties:
        wan1:
          $ref: '#/components/schemas/inline_response_200_1_interfaces_wan1'
        wan2:
          $ref: '#/components/schemas/inline_response_200_1_interfaces_wan2'
      type: object
    _devices__serial__switch_ports_profile:
      description: Profile attributes
      example:
        id: id
        enabled: true
        iname: iname
      properties:
        enabled:
          description: When enabled, override this port's configuration with a port
            profile.
          type: boolean
        id:
          description: When enabled, the ID of the port profile used to override the
            port's configuration.
          type: string
        iname:
          description: When enabled, the IName of the profile.
          type: string
      type: object
    _networks__networkId__wireless_ssids__number__activeDirectory_credentials:
      description: (Optional) The credentials of the user account to be used by the
        AP to bind to your Active Directory server. The Active Directory account should
        have permissions on all your Active Directory servers. Only valid if the splashPage
        is 'Password-protected with Active Directory'.
      properties:
        logonName:
          description: The logon name of the Active Directory account.
          type: string
        password:
          description: The password to the Active Directory user account.
          type: string
      type: object
    _networks__networkId__wireless_ssids__number__radiusServers:
      properties:
        host:
          description: IP address of your RADIUS server
          type: string
        port:
          description: UDP port the RADIUS server listens on for Access-requests
          type: integer
        secret:
          description: RADIUS client shared secret
          type: string
        radsecEnabled:
          description: Use RADSEC (TLS over TCP) to connect to this RADIUS server.
            Requires radiusProxyEnabled.
          type: boolean
        openRoamingCertificateId:
          description: The ID of the Openroaming Certificate attached to radius server.
          type: integer
        caCertificate:
          description: Certificate used for authorization for the RADSEC Server
          type: string
      required:
      - host
      type: object
    _organizations__organizationId__summary_top_ssids_byUsage_clients_counts:
      description: Counts of the clients
      example:
        total: 5
      properties:
        total:
          description: Total counts of the clients
          type: integer
      type: object
    _organizations__organizationId__summary_top_appliances_byUtilization_utilization:
      description: Utilization of the appliance
      example:
        average:
          percentage: 0.8008282
      properties:
        average:
          $ref: '#/components/schemas/_organizations__organizationId__summary_top_appliances_byUtilization_utilization_average'
      type: object
    _networks__networkId__groupPolicies_scheduling_sunday:
      description: The schedule object for Sunday.
      properties:
        active:
          description: Whether the schedule is active (true) or inactive (false) during
            the time specified between 'from' and 'to'. Defaults to true.
          type: boolean
        from:
          description: The time, from '00:00' to '24:00'. Must be less than the time
            specified in 'to'. Defaults to '00:00'. Only 30 minute increments are
            allowed.
          type: string
        to:
          description: The time, from '00:00' to '24:00'. Must be greater than the
            time specified in 'from'. Defaults to '24:00'. Only 30 minute increments
            are allowed.
          type: string
      type: object
    _networks__networkId__webhooks_httpServers__httpServerId__payloadTemplate:
      description: The payload template to use when posting data to the HTTP server.
      properties:
        payloadTemplateId:
          description: 'The ID of the payload template. Defaults to ''wpt_00001''
            for the Meraki template. For Meraki-included templates: for the Webex
            (included) template use ''wpt_00002''; for the Slack (included) template
            use ''wpt_00003''; for the Microsoft Teams (included) template use ''wpt_00004'';
            for the ServiceNow (included) template use ''wpt_00006'''
          type: string
      type: object
    _organizations__organizationId__brandingPolicies_customLogo_image:
      description: Properties of the image.
      example:
        preview:
          url: url
          expiresAt: 2000-01-23T04:56:07.000+00:00
      properties:
        preview:
          $ref: '#/components/schemas/_organizations__organizationId__brandingPolicies_customLogo_image_preview'
      type: object
    _networks__networkId__wireless_ssids__number__firewall_l7FirewallRules_rules:
      properties:
        policy:
          description: '''Deny'' traffic specified by this rule'
          enum:
          - deny
          type: string
        type:
          description: 'Type of the L7 firewall rule. One of: ''application'', ''applicationCategory'',
            ''host'', ''port'', ''ipRange'''
          enum:
          - application
          - applicationCategory
          - host
          - ipRange
          - port
          type: string
        value:
          description: The value of what needs to get blocked. Format of the value
            varies depending on type of the firewall rule selected.
          type: string
      type: object
    _organizations__organizationId__devices_uplinks_addresses_byDevice_uplinks:
      example:
        addresses:
        - protocol: ipv4
          address: address
          public:
            address: address
          assignmentMode: dynamic
          gateway: gateway
        - protocol: ipv4
          address: address
          public:
            address: address
          assignmentMode: dynamic
          gateway: gateway
        interface: cellular
      properties:
        interface:
          description: 'Interface for the device uplink. Available options are: cellular,
            man1, man2, wan1, wan2'
          enum:
          - cellular
          - man1
          - man2
          - wan1
          - wan2
          type: string
        addresses:
          description: Available addresses for the interface.
          items:
            $ref: '#/components/schemas/_organizations__organizationId__devices_uplinks_addresses_byDevice_addresses'
          type: array
      type: object
    _organizations_cloud_region:
      description: Region info
      example:
        name: name
      properties:
        name:
          description: Name of region
          type: string
      type: object
    inline_response_200_19_value:
      description: Value of traffic filter
      example:
        protocol: any
        destination:
          port: port
          cidr: cidr
        source:
          vlan: 0
          port: port
          host: 6
          cidr: cidr
      properties:
        protocol:
          description: 'Protocol of ''custom'' type traffic filter. Must be one of:
            ''tcp'', ''udp'', ''icmp6'' or ''any'''
          enum:
          - any
          - icmp6
          - tcp
          - udp
          type: string
        source:
          $ref: '#/components/schemas/inline_response_200_19_value_source'
        destination:
          $ref: '#/components/schemas/inline_response_200_19_value_destination'
      required:
      - destination
      - source
      type: object
    _networks__networkId__webhooks_payloadTemplates_headers:
      example:
        template: template
        name: name
      properties:
        name:
          description: The name of the header attribute
          type: string
        template:
          description: The value returned in the header attribute, in liquid template
          type: string
      type: object
    inline_response_200_19_value_1_destination:
      description: Destination of 'custom' type traffic filter
      example:
        vlan: 5
        port: port
        fqdn: fqdn
        host: 2
        cidr: cidr
        network: network
      properties:
        port:
          description: 'E.g.: "any", "0" (also means "any"), "8080", "1-1024"'
          type: string
        cidr:
          description: CIDR format address (e.g."192.168.10.1", which is the same
            as "192.168.10.1/32"), or "any". Cannot be used in combination with the
            "vlan" or "fqdn" property
          type: string
        network:
          description: 'Meraki network ID. Currently only available under a template
            network, and the value should be ID of either same template network, or
            another template network currently. E.g.: "L_12345678".'
          type: string
        vlan:
          description: VLAN ID of the configured VLAN in the Meraki network. Cannot
            be used in combination with the "cidr" or "fqdn" property and is currently
            only available under a template network.
          type: integer
        host:
          description: Host ID in the VLAN. Should not exceed the VLAN subnet capacity.
            Must be used along with the "vlan" property and is currently only available
            under a template network.
          type: integer
        fqdn:
          description: 'FQDN format address. Cannot be used in combination with the
            "cidr" or "fqdn" property and is currently only available in the "destination"
            object of the "vpnTrafficUplinkPreference" object. E.g.: "www.google.com"'
          type: string
      type: object
    _networks__networkId__wireless_ssids__number__dnsRewrite:
      description: DNS servers rewrite settings
      properties:
        enabled:
          description: Boolean indicating whether or not DNS server rewrite is enabled.
            If disabled, upstream DNS will be used
          type: boolean
        dnsCustomNameservers:
          description: User specified DNS servers (up to two servers)
          items:
            type: string
          type: array
      type: object
    _organizations__organizationId__cellularGateway_uplink_statuses_signalStat:
      description: Tower Signal Status
      example:
        rsrq: rsrq
        rsrp: rsrp
      properties:
        rsrp:
          description: Reference Signal Received Power
          type: string
        rsrq:
          description: Reference Signal Received Quality
          type: string
      type: object
    _networks__networkId__switch_accessPolicies_radiusAccountingServers:
      example:
        port: 2
        host: host
      properties:
        host:
          description: Public IP address of the RADIUS accounting server
          type: string
        port:
          description: UDP port that the RADIUS Accounting server listens on for access
            requests
          type: integer
      type: object
    _networks__networkId__sensor_alerts_profiles_conditions:
      example:
        duration: 9
        metric: metric
        threshold:
          tvoc:
            concentration: 5
            quality: fair
          door:
            open: true
          pm25:
            concentration: 5
            quality: fair
          temperature:
            celsius: 0.8008282
            fahrenheit: 6.0274563
            quality: fair
          noise:
            ambient:
              level: 2
              quality: fair
          humidity:
            relativePercentage: 1
            quality: fair
          indoorAirQuality:
            score: 7
            quality: fair
          water:
            present: true
        direction: above
      properties:
        metric:
          description: The type of sensor metric that will be monitored for changes.
            Available metrics are door, humidity, indoorAirQuality, noise, pm25, temperature,
            tvoc, and water.
          type: string
        threshold:
          $ref: '#/components/schemas/_networks__networkId__sensor_alerts_profiles_threshold'
        direction:
          description: If 'above', an alert will be sent when a sensor reads above
            the threshold. If 'below', an alert will be sent when a sensor reads below
            the threshold. Only applicable for temperature and humidity thresholds.
          enum:
          - above
          - below
          type: string
        duration:
          description: Length of time in seconds that the triggering state must persist
            before an alert is sent. Available options are 0 seconds, 1 minute, 2
            minutes, 3 minutes, 4 minutes, 5 minutes, 10 minutes, 15 minutes, 30 minutes,
            and 1 hour. Default is 0.
          type: integer
      required:
      - metric
      - threshold
      type: object
    _devices__serial__appliance_uplinks_settings_interfaces_wan1_pppoe:
      description: Configuration options for PPPoE.
      properties:
        enabled:
          description: Whether PPPoE is enabled.
          type: boolean
        authentication:
          $ref: '#/components/schemas/_devices__serial__appliance_uplinks_settings_interfaces_wan1_pppoe_authentication'
      type: object
    _organizations__organizationId__inventory_onboarding_cloudMonitoring_prepare_vty:
      description: VTY Related Parameters
      properties:
        startLineNumber:
          description: Starting line VTY number
          type: integer
        endLineNumber:
          description: Ending line VTY number
          type: integer
        authentication:
          $ref: '#/components/schemas/_organizations__organizationId__inventory_onboarding_cloudMonitoring_prepare_vty_authentication'
        authorization:
          $ref: '#/components/schemas/_organizations__organizationId__inventory_onboarding_cloudMonitoring_prepare_vty_authorization'
        accessList:
          $ref: '#/components/schemas/_organizations__organizationId__inventory_onboarding_cloudMonitoring_prepare_vty_accessList'
        rotaryNumber:
          description: SSH rotary number
          type: integer
      type: object
    _networks__networkId__floorPlans_topRightCorner:
      description: The longitude and latitude of the top right corner of your floor
        plan.
      properties:
        lat:
          description: Latitude
          format: float
          type: number
        lng:
          description: Longitude
          format: float
          type: number
      type: object
    _networks__networkId__wireless_ssids__number__vpn_splitTunnel:
      description: The VPN split tunnel settings for this SSID.
      properties:
        enabled:
          description: If true, VPN split tunnel is enabled.
          type: boolean
        rules:
          description: List of VPN split tunnel rules.
          items:
            $ref: '#/components/schemas/_networks__networkId__wireless_ssids__number__vpn_splitTunnel_rules'
          type: array
      type: object
    _organizations__organizationId__sensor_readings_history_pm25:
      description: Reading for the 'pm25' metric. This will only be present if the
        'metric' property equals 'pm25'.
      example:
        concentration: 5
      properties:
        concentration:
          description: PM2.5 reading in micrograms per cubic meter.
          type: integer
      type: object
    _devices__serial__appliance_uplinks_settings_interfaces:
      description: Interface settings.
      properties:
        wan1:
          $ref: '#/components/schemas/_devices__serial__appliance_uplinks_settings_interfaces_wan1'
        wan2:
          $ref: '#/components/schemas/_devices__serial__appliance_uplinks_settings_interfaces_wan2'
      type: object
    inline_response_200_18_bandwidthLimits_cellular:
      description: uplink cellular configured limits [optional]
      example:
        limitUp: 5
        limitDown: 2
      properties:
        limitUp:
          description: configured UP limit for the uplink (in Kbps).  Null indicated
            unlimited
          type: integer
        limitDown:
          description: configured DOWN limit for the uplink (in Kbps).  Null indicated
            unlimited
          type: integer
      type: object
    _networks__networkId__appliance_firewall_settings_spoofingProtection:
      description: Spoofing protection settings
      properties:
        ipSourceGuard:
          $ref: '#/components/schemas/_networks__networkId__appliance_firewall_settings_spoofingProtection_ipSourceGuard'
      type: object
    _networks__networkId__appliance_vpn_bgp_ttlSecurity:
      description: Settings for BGP TTL security to protect BGP peering sessions from
        forged IP attacks.
      properties:
        enabled:
          description: Boolean value to enable or disable BGP TTL security.
          type: boolean
      type: object
    _networks__networkId__appliance_prefixes_delegated_statics_origin_1:
      description: The origin of the prefix
      example:
        interfaces:
        - interfaces
        - interfaces
        type: independent
      properties:
        type:
          description: Type of the origin
          enum:
          - independent
          - internet
          type: string
        interfaces:
          description: Interfaces associated with the prefix
          items:
            type: string
          type: array
      type: object
    inline_response_200_16_mandatoryDhcp:
      description: Mandatory DHCP will enforce that clients connecting to this single
        LAN must use the IP address assigned by the DHCP server. Clients who use a
        static IP address won't be able to associate. Only available on firmware versions
        17.0 and above
      example:
        enabled: true
      properties:
        enabled:
          description: Enable Mandatory DHCP on single LAN.
          type: boolean
      type: object
    _networks__networkId__firmwareUpgrades_staged_events_group:
      description: The Staged Upgrade Group containing the name and ID
      properties:
        id:
          description: ID of the Staged Upgrade Group
          type: string
      required:
      - id
      type: object
    _networks__networkId__wireless_ssids__number__hotspot20_venue:
      description: Venue settings for this SSID
      properties:
        name:
          description: Venue name
          type: string
        type:
          description: Venue type ('Unspecified', 'Unspecified Assembly', 'Arena',
            'Stadium', 'Passenger Terminal', 'Amphitheater', 'Amusement Park', 'Place
            of Worship', 'Convention Center', 'Library', 'Museum', 'Restaurant', 'Theater',
            'Bar', 'Coffee Shop', 'Zoo or Aquarium', 'Emergency Coordination Center',
            'Unspecified Business', 'Doctor or Dentist office', 'Bank', 'Fire Station',
            'Police Station', 'Post Office', 'Professional Office', 'Research and
            Development Facility', 'Attorney Office', 'Unspecified Educational', 'School,
            Primary', 'School, Secondary', 'University or College', 'Unspecified Factory
            and Industrial', 'Factory', 'Unspecified Institutional', 'Hospital', 'Long-Term
            Care Facility', 'Alcohol and Drug Rehabilitation Center', 'Group Home',
            'Prison or Jail', 'Unspecified Mercantile', 'Retail Store', 'Grocery Market',
            'Automotive Service Station', 'Shopping Mall', 'Gas Station', 'Unspecified
            Residential', 'Private Residence', 'Hotel or Motel', 'Dormitory', 'Boarding
            House', 'Unspecified Storage', 'Unspecified Utility and Miscellaneous',
            'Unspecified Vehicular', 'Automobile or Truck', 'Airplane', 'Bus', 'Ferry',
            'Ship or Boat', 'Train', 'Motor Bike', 'Unspecified Outdoor', 'Muni-mesh
            Network', 'City Park', 'Rest Area', 'Traffic Control', 'Bus Stop', 'Kiosk')
          enum:
          - Airplane
          - Alcohol and Drug Rehabilitation Center
          - Amphitheater
          - Amusement Park
          - Arena
          - Attorney Office
          - Automobile or Truck
          - Automotive Service Station
          - Bank
          - Bar
          - Boarding House
          - Bus
          - Bus Stop
          - City Park
          - Coffee Shop
          - Convention Center
          - Doctor or Dentist office
          - Dormitory
          - Emergency Coordination Center
          - Factory
          - Ferry
          - Fire Station
          - Gas Station
          - Grocery Market
          - Group Home
          - Hospital
          - Hotel or Motel
          - Kiosk
          - Library
          - Long-Term Care Facility
          - Motor Bike
          - Muni-mesh Network
          - Museum
          - Passenger Terminal
          - Place of Worship
          - Police Station
          - Post Office
          - Prison or Jail
          - Private Residence
          - Professional Office
          - Research and Development Facility
          - Rest Area
          - Restaurant
          - Retail Store
          - School, Primary
          - School, Secondary
          - Ship or Boat
          - Shopping Mall
          - Stadium
          - Theater
          - Traffic Control
          - Train
          - University or College
          - Unspecified
          - Unspecified Assembly
          - Unspecified Business
          - Unspecified Educational
          - Unspecified Factory and Industrial
          - Unspecified Institutional
          - Unspecified Mercantile
          - Unspecified Outdoor
          - Unspecified Residential
          - Unspecified Storage
          - Unspecified Utility and Miscellaneous
          - Unspecified Vehicular
          - Zoo or Aquarium
          type: string
      type: object
    _organizations__organizationId__alerts_profiles_alertCondition:
      description: The conditions that determine if the alert triggers
      properties:
        duration:
          description: The total duration in seconds that the threshold should be
            crossed before alerting
          type: integer
        window:
          description: The look back period in seconds for sensing the alert
          type: integer
        bit_rate_bps:
          description: The threshold the metric must cross to be valid for alerting.
            Used only for WAN Utilization alerts.
          type: integer
        loss_ratio:
          description: The threshold the metric must cross to be valid for alerting.
            Used only for Packet Loss alerts.
          format: float
          type: number
        latency_ms:
          description: The threshold the metric must cross to be valid for alerting.
            Used only for WAN Latency alerts.
          type: integer
        jitter_ms:
          description: The threshold the metric must cross to be valid for alerting.
            Used only for VoIP Jitter alerts.
          type: integer
        mos:
          description: The threshold the metric must drop below to be valid for alerting.
            Used only for VoIP MOS alerts.
          format: float
          type: number
        interface:
          description: 'The uplink observed for the alert.  interface must be one
            of the following: wan1, wan2, cellular'
          enum:
          - cellular
          - wan1
          - wan2
          type: string
      type: object
    _networks__networkId__wireless_ssids__number__oauth:
      description: The OAuth settings of this SSID. Only valid if splashPage is 'Google
        OAuth'.
      properties:
        allowedDomains:
          description: (Optional) The list of domains allowed access to the network.
          items:
            type: string
          type: array
      type: object
    inline_response_200_25_eventData:
      description: An object containing more data related to the event.
      example:
        client_mac: client_mac
        rssi: rssi
        vap: vap
        channel: channel
        client_ip: client_ip
        aid: aid
        radio: radio
      properties:
        radio:
          description: The radio band number the client is trying to connect to.
          type: string
        vap:
          description: The virtual access point (VAP) number the client is connecting
            to.
          type: string
        client_mac:
          description: The client's MAC address
          type: string
        client_ip:
          description: The client's IP address
          type: string
        channel:
          description: The radio channel the client is connecting to.
          type: string
        rssi:
          description: The current received signal strength indication (RSSI) of the
            client connected to an AP.
          type: string
        aid:
          description: The association ID of the client.
          type: string
      type: object
    _networks__networkId__wireless_ssids__number__splash_settings_billing:
      description: Details associated with billing splash.
      properties:
        freeAccess:
          $ref: '#/components/schemas/_networks__networkId__wireless_ssids__number__splash_settings_billing_freeAccess'
        prepaidAccessFastLoginEnabled:
          description: Whether or not billing uses the fast login prepaid access option.
          type: boolean
        replyToEmailAddress:
          description: The email address that receives replies from clients.
          type: string
      type: object
    _organizations__organizationId__brandingPolicies_customLogo:
      description: Properties describing the custom logo attached to the branding
        policy.
      example:
        image:
          preview:
            url: url
            expiresAt: 2000-01-23T04:56:07.000+00:00
        enabled: true
      properties:
        enabled:
          description: Whether or not there is a custom logo enabled.
          type: boolean
        image:
          $ref: '#/components/schemas/_organizations__organizationId__brandingPolicies_customLogo_image'
      type: object
    _organizations__organizationId__inventory_onboarding_cloudMonitoring_prepare_vty_authentication_group:
      description: Group Details
      properties:
        name:
          description: Group Name
          type: string
      type: object
    _networks__networkId__wireless_ssids__number__splash_settings_splashLogo_image:
      description: Properties for setting a new image.
      properties:
        format:
          description: The format of the encoded contents. Supported formats are 'png',
            'gif', and jpg'.
          enum:
          - gif
          - jpg
          - png
          type: string
        contents:
          description: The file contents (a base 64 encoded string) of your new logo.
          format: byte
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
      type: object
    _devices__serial__switch_ports_statuses_lldp:
      description: The Link Layer Discovery Protocol (LLDP) information of the connected
        device.
      example:
        managementAddress: managementAddress
        chassisId: chassisId
        systemName: systemName
        portDescription: portDescription
        managementVlan: 5
        systemCapabilities: systemCapabilities
        systemDescription: systemDescription
        portId: portId
        portVlan: 2
      properties:
        systemName:
          description: The device's system name.
          type: string
        systemDescription:
          description: The device's system description.
          type: string
        chassisId:
          description: The device's chassis ID.
          type: string
        portId:
          description: Identifies the port from which the LLDP packet was sent
          type: string
        managementVlan:
          description: The device's management VLAN.
          type: integer
        portVlan:
          description: The port's VLAN.
          type: integer
        managementAddress:
          description: The device's management IP.
          type: string
        portDescription:
          description: Description of the port from which the LLDP packet was sent.
          type: string
        systemCapabilities:
          description: Identifies the device type, which indicates the functional
            capabilities of the device.
          type: string
      type: object
    _devices__serial__cellularGateway_lan_fixedIpAssignments:
      properties:
        name:
          description: A descriptive name of the assignment
          type: string
        ip:
          description: The IP address you want to assign to a specific server or device
          type: string
        mac:
          description: The MAC address of the server or device that hosts the internal
            resource that you wish to receive the specified IP address
          type: string
      required:
      - ip
      - mac
      type: object
    inline_response_200_19_failoverAndFailback:
      description: WAN failover and failback
      example:
        immediate:
          enabled: true
      properties:
        immediate:
          $ref: '#/components/schemas/inline_response_200_19_failoverAndFailback_immediate'
      type: object
    _networks__networkId__sensor_alerts_profiles_recipients:
      description: List of recipients that will recieve the alert.
      example:
        emails:
        - emails
        - emails
        smsNumbers:
        - smsNumbers
        - smsNumbers
        httpServerIds:
        - httpServerIds
        - httpServerIds
      properties:
        emails:
          description: A list of emails that will receive information about the alert.
          items:
            type: string
          type: array
        smsNumbers:
          description: A list of SMS numbers that will receive information about the
            alert.
          items:
            type: string
          type: array
        httpServerIds:
          description: A list of webhook endpoint IDs that will receive information
            about the alert.
          items:
            type: string
          type: array
      type: object
    _devices__serial__switch_ports_statuses_cdp:
      description: The Cisco Discovery Protocol (CDP) information of the connected
        device.
      example:
        managementAddress: managementAddress
        address: address
        capabilities: capabilities
        systemName: systemName
        vtpManagementDomain: vtpManagementDomain
        portId: portId
        deviceId: deviceId
        nativeVlan: 5
        version: version
        platform: platform
      properties:
        systemName:
          description: The system name.
          type: string
        platform:
          description: Identifies the hardware platform of the device.
          type: string
        deviceId:
          description: Identifies the device name.
          type: string
        portId:
          description: Identifies the port from which the CDP packet was sent.
          type: string
        nativeVlan:
          description: Indicates, per interface, the assumed VLAN for untagged packets
            on the interface.
          type: integer
        address:
          description: Contains network addresses of both receiving and sending devices.
          type: string
        managementAddress:
          description: The device's management IP.
          type: string
        version:
          description: Contains the device software release information.
          type: string
        vtpManagementDomain:
          description: Advertises the configured VLAN Trunking Protocl (VTP)-management-domain
            name of the system.
          type: string
        capabilities:
          description: Identifies the device type, which indicates the functional
            capabilities of the device.
          type: string
      type: object
    inline_response_200_41_localStatusPage:
      description: A hash of Local Status page(s)' authentication options applied
        to the Network.
      example:
        authentication:
          enabled: true
          username: username
      properties:
        authentication:
          $ref: '#/components/schemas/inline_response_200_41_localStatusPage_authentication'
      type: object
    inline_response_200_27_products_wireless_nextUpgrade:
      description: Details of the next firmware upgrade on the device
      example:
        time: 2000-01-23T04:56:07.000+00:00
        toVersion:
          releaseDate: 2000-01-23T04:56:07.000+00:00
          releaseType: releaseType
          id: id
          shortName: shortName
          firmware: firmware
      properties:
        time:
          description: Timestamp of the next scheduled firmware upgrade
          format: date-time
          type: string
        toVersion:
          $ref: '#/components/schemas/inline_response_200_27_products_wireless_nextUpgrade_toVersion'
      type: object
    inline_response_200_36_counts:
      description: Counts of currently alerting sensors, aggregated by alerting metric
      example:
        tvoc: 7
        door: 0
        pm25: 5
        noise:
          ambient: 5
        temperature: 2
        humidity: 6
        indoorAirQuality: 1
        water: 9
      properties:
        door:
          description: Number of sensors that are currently alerting due to an open
            door
          type: integer
        humidity:
          description: Number of sensors that are currently alerting due to humidity
            readings
          type: integer
        indoorAirQuality:
          description: Number of sensors that are currently alerting due to indoor
            air quality readings
          type: integer
        noise:
          $ref: '#/components/schemas/inline_response_200_36_counts_noise'
        pm25:
          description: Number of sensors that are currently alerting due to PM2.5
            readings
          type: integer
        temperature:
          description: Number of sensors that are currently alerting due to temperature
            readings
          type: integer
        tvoc:
          description: Number of sensors that are currently alerting due to TVOC readings
          type: integer
        water:
          description: Number of sensors that are currently alerting due to the presence
            of water
          type: integer
      type: object
    inline_response_200_95_rules:
      example:
        srcCidr: srcCidr
        protocol: protocol
        syslogEnabled: true
        destPort: destPort
        comment: comment
        srcPort: srcPort
        destCidr: destCidr
        policy: policy
      properties:
        comment:
          description: Description of the rule
          type: string
        policy:
          description: '''Deny'' traffic specified by this rule'
          type: string
        protocol:
          description: The type of protocol
          type: string
        srcPort:
          description: List of source ports
          type: string
        srcCidr:
          description: List of source IP addresses
          type: string
        destPort:
          description: List of destination ports
          type: string
        destCidr:
          description: List of destination IP addresses
          type: string
        syslogEnabled:
          description: Flag indicating whether the rule should be logged to syslog
          type: boolean
      type: object
    _networks__networkId__groupPolicies_contentFiltering_blockedUrlPatterns:
      description: Settings for blocked URL patterns
      properties:
        settings:
          description: How URL patterns are applied. Can be 'network default', 'append'
            or 'override'.
          enum:
          - append
          - network default
          - override
          type: string
        patterns:
          description: A list of URL patterns that are blocked
          items:
            type: string
          type: array
      type: object
    _networks__networkId__appliance_singleLan_ipv6_prefixAssignments:
      properties:
        autonomous:
          description: Auto assign a /64 prefix from the origin to the VLAN
          type: boolean
        staticPrefix:
          description: Manual configuration of a /64 prefix on the VLAN
          type: string
        staticApplianceIp6:
          description: Manual configuration of the IPv6 Appliance IP
          type: string
        origin:
          $ref: '#/components/schemas/_networks__networkId__appliance_singleLan_ipv6_origin'
      type: object
    _organizations__organizationId__devices_uplinks_addresses_byDevice_addresses:
      example:
        protocol: ipv4
        address: address
        public:
          address: address
        assignmentMode: dynamic
        gateway: gateway
      properties:
        protocol:
          description: 'Type of address for the device uplink. Available options are:
            ipv4, ipv6.'
          enum:
          - ipv4
          - ipv6
          type: string
        assignmentMode:
          description: 'Indicates how the device uplink address is assigned. Available
            options are: static, dynamic.'
          enum:
          - dynamic
          - static
          type: string
        address:
          description: Device uplink address.
          type: string
        gateway:
          description: Device uplink gateway address.
          type: string
        public:
          $ref: '#/components/schemas/_organizations__organizationId__devices_uplinks_addresses_byDevice_public'
      type: object
    _networks__networkId__wireless_ssids__number__ldap_credentials:
      description: (Optional) The credentials of the user account to be used by the
        AP to bind to your LDAP server. The LDAP account should have permissions on
        all your LDAP servers.
      properties:
        distinguishedName:
          description: 'The distinguished name of the LDAP user account (example:
            cn=user,dc=meraki,dc=com).'
          type: string
        password:
          description: The password of the LDAP user account.
          type: string
      type: object
    inline_response_201_1_request:
      description: Ping request parameters
      example:
        serial: serial
        count: 0
        target: target
      properties:
        serial:
          description: Device serial number
          type: string
        target:
          description: IP address or FQDN to ping
          type: string
        count:
          description: Number of pings to send
          type: integer
      type: object
    _networks__networkId__groupPolicies_scheduling_friday:
      description: The schedule object for Friday.
      properties:
        active:
          description: Whether the schedule is active (true) or inactive (false) during
            the time specified between 'from' and 'to'. Defaults to true.
          type: boolean
        from:
          description: The time, from '00:00' to '24:00'. Must be less than the time
            specified in 'to'. Defaults to '00:00'. Only 30 minute increments are
            allowed.
          type: string
        to:
          description: The time, from '00:00' to '24:00'. Must be greater than the
            time specified in 'from'. Defaults to '24:00'. Only 30 minute increments
            are allowed.
          type: string
      type: object
    inline_response_200_87_splashImage:
      description: The image used in the splash page.
      example:
        extension: extension
        md5: md5
      properties:
        md5:
          description: The MD5 value of the image file.
          type: string
        extension:
          description: The extension of the image file.
          type: string
      type: object
    _networks__networkId__wireless_ssids__number__splash_settings_splashImage:
      description: The image used in the splash page.
      properties:
        md5:
          description: The MD5 value of the image file. Setting this to null will
            remove the image from the splash page.
          type: string
        extension:
          description: The extension of the image file.
          type: string
        image:
          $ref: '#/components/schemas/_networks__networkId__wireless_ssids__number__splash_settings_splashImage_image'
      type: object
    inline_response_200_2_results_loss:
      description: Lost packets
      example:
        percentage: 1.4658129
      properties:
        percentage:
          description: Percentage of packets lost
          format: float
          type: number
      type: object
    _devices__serial__camera_wirelessProfiles_ids:
      description: The ids of the wireless profile to assign to the given camera
      properties:
        primary:
          description: The id of the primary wireless profile
          type: string
        secondary:
          description: The id of the secondary wireless profile
          type: string
        backup:
          description: The id of the backup wireless profile
          type: string
      type: object
    _organizations_licensing:
      description: Licensing related settings
      example:
        model: co-term
      properties:
        model:
          description: Organization licensing model. Can be 'co-term', 'per-device',
            or 'subscription'.
          enum:
          - co-term
          - per-device
          - subscription
          type: string
      type: object
    inline_response_200_1_interfaces_wan1:
      description: WAN 1 settings.
      example:
        vlanTagging:
          vlanId: 0
          enabled: true
        pppoe:
          enabled: true
          authentication:
            enabled: true
            username: username
        svis:
          ipv4:
            address: address
            nameservers:
              addresses:
              - addresses
              - addresses
            assignmentMode: dynamic
            gateway: gateway
          ipv6:
            address: address
            nameservers:
              addresses:
              - addresses
              - addresses
            assignmentMode: dynamic
            gateway: gateway
        enabled: true
      properties:
        enabled:
          description: Enable or disable the interface.
          type: boolean
        vlanTagging:
          $ref: '#/components/schemas/inline_response_200_1_interfaces_wan1_vlanTagging'
        svis:
          $ref: '#/components/schemas/inline_response_200_1_interfaces_wan1_svis'
        pppoe:
          $ref: '#/components/schemas/inline_response_200_1_interfaces_wan1_pppoe'
      type: object
    _devices__serial__switch_routing_interfaces_ospfSettings_1:
      description: The OSPF routing settings of the interface.
      properties:
        area:
          description: The OSPF area to which this interface should belong. Can be
            either 'disabled' or the identifier of an           existing OSPF area.
            Defaults to 'disabled'.
          type: string
        cost:
          description: The path cost for this interface. Defaults to 1, but can be
            increased up to 65535           to give lower priority.
          type: integer
        isPassiveEnabled:
          description: When enabled, OSPF will not run on the interface, but the subnet
            will still be advertised.
          type: boolean
      type: object
    _networks__networkId__switch_dhcpServerPolicy_arpInspection:
      description: Dynamic ARP Inspection settings
      properties:
        enabled:
          description: Enable or disable Dynamic ARP Inspection on the network. Default
            value is false.
          type: boolean
      type: object
    _devices__serial__switch_routing_interfaces__interfaceId__dhcp_fixedIpAssignments:
      properties:
        name:
          description: The name of the client which has fixed IP address
          type: string
        mac:
          description: The MAC address of the client which has fixed IP address
          type: string
        ip:
          description: The IP address of the client which has fixed IP address assigned
            to it
          type: string
      required:
      - ip
      - mac
      - name
      type: object
    _networks__networkId__appliance_trafficShaping_uplinkSelection_vpnTrafficUplinkPreferences:
      properties:
        trafficFilters:
          description: Array of traffic filters for this uplink preference rule
          items:
            $ref: '#/components/schemas/_networks__networkId__appliance_trafficShaping_uplinkSelection_trafficFilters_1'
          type: array
        preferredUplink:
          description: 'Preferred uplink for this uplink preference rule. Must be
            one of: ''wan1'', ''wan2'', ''bestForVoIP'', ''loadBalancing'' or ''defaultUplink'''
          enum:
          - bestForVoIP
          - defaultUplink
          - loadBalancing
          - wan1
          - wan2
          type: string
        failOverCriterion:
          description: 'Fail over criterion for this uplink preference rule. Must
            be one of: ''poorPerformance'' or ''uplinkDown'''
          enum:
          - poorPerformance
          - uplinkDown
          type: string
        performanceClass:
          $ref: '#/components/schemas/_networks__networkId__appliance_trafficShaping_uplinkSelection_performanceClass'
      required:
      - preferredUplink
      - trafficFilters
      type: object
    _networks__networkId__switch_routing_ospf_areas:
      properties:
        areaId:
          description: OSPF area ID
          type: string
        areaName:
          description: Name of the OSPF area
          type: string
        areaType:
          description: 'Area types in OSPF. Must be one of: ["normal", "stub", "nssa"]'
          enum:
          - normal
          - nssa
          - stub
          type: string
      required:
      - areaId
      - areaName
      - areaType
      type: object
    _networks__networkId__appliance_vpn_bgp_ipv6:
      description: Information regarding IPv6 address of the neighbor, Required if
        `ip` is not present.
      properties:
        address:
          description: The IPv6 address of the neighbor.
          type: string
      required:
      - address
      type: object
    _networks__networkId__switch_accessPolicies_radiusAccountingServers_1:
      properties:
        host:
          description: Public IP address of the RADIUS accounting server
          type: string
        port:
          description: UDP port that the RADIUS Accounting server listens on for access
            requests
          type: integer
        secret:
          description: RADIUS client shared secret
          type: string
      required:
      - host
      - port
      - secret
      type: object
    _organizations__organizationId__inventory_onboarding_cloudMonitoring_prepare_configParams_tunnel:
      description: Configuration options used to connect to the device
      example:
        mode: mode
        rootCertificate:
          name: name
          content: content
        port: port
        host: host
        name: name
      properties:
        mode:
          description: ""
          type: string
        port:
          description: The port used for the ssh tunnel.
          type: string
        host:
          description: SSH tunnel URL used to connect to the device
          type: string
        name:
          description: The name of the tunnel we are attempting to connect to
          type: string
        rootCertificate:
          $ref: '#/components/schemas/_organizations__organizationId__inventory_onboarding_cloudMonitoring_prepare_configParams_tunnel_rootCertificate'
      type: object
    _networks__networkId__switch_dhcp_v4_servers_seen_lastPacket_destination:
      description: Destination of the packet.
      example:
        ipv4:
          address: address
        port: 1
        mac: mac
      properties:
        mac:
          description: Destination mac address of the packet.
          type: string
        ipv4:
          $ref: '#/components/schemas/_networks__networkId__switch_dhcp_v4_servers_seen_lastPacket_destination_ipv4'
        port:
          description: Destination port of the packet.
          type: integer
      type: object
    inline_response_200_128_networks:
      example:
        access: access
        id: id
      properties:
        id:
          description: The network ID
          type: string
        access:
          description: The privilege of the SAML administrator on the network
          type: string
      type: object
    _networks__networkId__health_alerts_scope_applications:
      example:
        name: name
        url: url
      properties:
        url:
          description: URL to the application
          type: string
        name:
          description: Name of the application
          type: string
      type: object
    _organizations__organizationId__wireless_devices_ethernet_statuses_power_ac:
      description: AC power details object
      example:
        isConnected: true
      properties:
        isConnected:
          description: AC power connected
          type: boolean
      type: object
    _organizations__organizationId__wireless_devices_ethernet_statuses_linkNegotiation:
      description: Link negotiation details object for the port
      example:
        duplex: duplex
        speed: 0
      properties:
        duplex:
          description: The duplex mode of the port. Can be 'full' or 'half'
          type: string
        speed:
          description: The speed of the port
          type: integer
      type: object
    _networks__networkId__sensor_alerts_profiles_schedule:
      description: The sensor schedule to use with the alert profile.
      example:
        name: name
        id: id
      properties:
        id:
          description: ID of the sensor schedule to use with the alert profile. If
            not defined, the alert profile will be active at all times.
          type: string
        name:
          description: Name of the sensor schedule to use with the alert profile.
          type: string
      type: object
    inline_response_200_87_billing_freeAccess:
      description: Details associated with a free access plan with limits
      example:
        durationInMinutes: 5
        enabled: true
      properties:
        enabled:
          description: Whether or not free access is enabled.
          type: boolean
        durationInMinutes:
          description: How long a device can use a network for free.
          type: integer
      type: object
    _networks__networkId__groupPolicies_bonjourForwarding_rules:
      properties:
        description:
          description: A description for your Bonjour forwarding rule. Optional.
          type: string
        vlanId:
          description: The ID of the service VLAN. Required.
          type: string
        services:
          description: A list of Bonjour services. At least one service must be specified.
            Available services are 'All Services', 'AirPlay', 'AFP', 'BitTorrent',
            'FTP', 'iChat', 'iTunes', 'Printers', 'Samba', 'Scanners' and 'SSH'
          items:
            enum:
            - AFP
            - AirPlay
            - All Services
            - BitTorrent
            - FTP
            - Printers
            - SSH
            - Samba
            - Scanners
            - iChat
            - iTunes
            type: string
          type: array
      required:
      - services
      - vlanId
      type: object
    _networks__networkId__switch_stacks__switchStackId__routing_interfaces__interfaceId__ospfSettings:
      description: The OSPF routing settings of the interface.
      properties:
        area:
          description: The OSPF area to which this interface should belong. Can be
            either 'disabled' or the identifier of an existing OSPF area.
          type: string
        cost:
          description: The path cost for this interface. Defaults to 1, but can be
            increased up to 65535 to give lower priority.
          type: integer
        isPassiveEnabled:
          description: When enabled, OSPF will not run on the interface, but the subnet
            will still be advertised.
          type: boolean
      type: object
    inline_response_200_1_interfaces_wan2:
      description: WAN 2 settings.
      example:
        vlanTagging:
          vlanId: 0
          enabled: true
        pppoe:
          enabled: true
          authentication:
            enabled: true
            username: username
        svis:
          ipv4:
            address: address
            nameservers:
              addresses:
              - addresses
              - addresses
            assignmentMode: dynamic
            gateway: gateway
          ipv6:
            address: address
            nameservers:
              addresses:
              - addresses
              - addresses
            assignmentMode: dynamic
            gateway: gateway
        enabled: true
      properties:
        enabled:
          description: Enable or disable the interface.
          type: boolean
        vlanTagging:
          $ref: '#/components/schemas/inline_response_200_1_interfaces_wan1_vlanTagging'
        svis:
          $ref: '#/components/schemas/inline_response_200_1_interfaces_wan1_svis'
        pppoe:
          $ref: '#/components/schemas/inline_response_200_1_interfaces_wan1_pppoe'
      type: object
    inline_response_200_85_eapolKey:
      description: EAPOL Key settings.
      example:
        retries: 5
        timeoutInMs: 2
      properties:
        retries:
          description: Maximum number of EAPOL key retries.
          type: integer
        timeoutInMs:
          description: EAPOL Key timeout in milliseconds.
          type: integer
      type: object
    inline_response_200_100_counts:
      description: Client count information
      example:
        total: 5
      properties:
        total:
          description: Total number of clients with data usage in organization
          type: integer
      type: object
    _organizations__organizationId__wireless_devices_ethernet_statuses_power_poe:
      description: PoE power details object
      example:
        isConnected: true
      properties:
        isConnected:
          description: PoE power connected
          type: boolean
      type: object
    _networks__networkId__appliance_vpn_bgp_authentication:
      description: Authentication settings between BGP peers.
      properties:
        password:
          description: Password to configure MD5 authentication between BGP peers.
          type: string
      type: object
    _networks__networkId__firmwareUpgrades_staged_groups_assignedDevices_1_devices:
      properties:
        serial:
          description: Serial of the device
          type: string
        name:
          description: Name of the device
          type: string
      required:
      - serial
      type: object
    _networks__networkId__floorPlans__floorPlanId__center:
      description: The longitude and latitude of the center of your floor plan. If
        you want to change the geolocation data of your floor plan, either the 'center'
        or two adjacent corners (e.g. 'topLeftCorner' and 'bottomLeftCorner') must
        be specified. If 'center' is specified, the floor plan is placed over that
        point with no rotation. If two adjacent corners are specified, the floor plan
        is rotated to line up with the two specified points. The aspect ratio of the
        floor plan's image is preserved regardless of which corners/center are specified.
        (This means if that more than two corners are specified, only two corners
        may be used to preserve the floor plan's aspect ratio.). No two points can
        have the same latitude, longitude pair.
      properties:
        lat:
          description: Latitude
          format: float
          type: number
        lng:
          description: Longitude
          format: float
          type: number
      type: object
    inline_response_200_28_toVersion:
      description: Version to downgrade to (if the network has firmware flexibility)
      example:
        releaseDate: 2000-01-23T04:56:07.000+00:00
        releaseType: releaseType
        id: id
        shortName: shortName
        firmware: firmware
      properties:
        id:
          description: Firmware version identifier
          type: string
        firmware:
          description: Name of the firmware version
          type: string
        shortName:
          description: Firmware version short name
          type: string
        releaseType:
          description: Release type of the firmware version
          type: string
        releaseDate:
          description: Release date of the firmware version
          format: date-time
          type: string
      type: object
    inline_response_200_36_counts_noise:
      description: Object containing the number of sensors that are currently alerting
        due to noise readings
      example:
        ambient: 5
      properties:
        ambient:
          description: Number of sensors that are currently alerting due to ambient
            noise readings
          type: integer
      type: object
    _networks__networkId__firmwareUpgrades_staged_groups_assignedDevices_1_switchStacks:
      properties:
        id:
          description: ID of the Switch Stack
          type: string
        name:
          description: Name of the Switch Stack
          type: string
      required:
      - id
      type: object
    _networks__networkId__groupPolicies_firewallAndTrafficShaping_l7FirewallRules:
      properties:
        policy:
          description: The policy applied to matching traffic. Must be 'deny'.
          enum:
          - deny
          type: string
        type:
          description: Type of the L7 Rule. Must be 'application', 'applicationCategory',
            'host', 'port' or 'ipRange'
          enum:
          - application
          - applicationCategory
          - host
          - ipRange
          - port
          type: string
        value:
          description: The 'value' of what you want to block. If 'type' is 'host',
            'port' or 'ipRange', 'value' must be a string matching either a hostname
            (e.g. somewhere.com), a port (e.g. 8080), or an IP range (e.g. 192.1.0.0/16).
            If 'type' is 'application' or 'applicationCategory', then 'value' must
            be an object with an ID for the application.
          type: string
      type: object
    _networks__networkId__appliance_trafficShaping_uplinkSelection_value_source:
      description: Source of this custom type traffic filter
      properties:
        port:
          description: 'E.g.: "any", "0" (also means "any"), "8080", "1-1024"'
          type: string
        cidr:
          description: 'CIDR format address, or "any". E.g.: "192.168.10.0/24",  "192.168.10.1"
            (same as "192.168.10.1/32"), "0.0.0.0/0" (same as "any")'
          type: string
        vlan:
          description: VLAN ID of the configured VLAN in the Meraki network. Currently
            only available under a template network.
          type: integer
        host:
          description: Host ID in the VLAN, should be used along with 'vlan', and
            not exceed the vlan subnet capacity. Currently only available under a
            template network.
          type: integer
      type: object
    _networks__networkId__firmwareUpgrades_products:
      description: Contains information about the network to update
      properties:
        wireless:
          $ref: '#/components/schemas/_networks__networkId__firmwareUpgrades_products_wireless'
        appliance:
          $ref: '#/components/schemas/_networks__networkId__firmwareUpgrades_products_wireless'
        switch:
          $ref: '#/components/schemas/_networks__networkId__firmwareUpgrades_products_wireless'
        camera:
          $ref: '#/components/schemas/_networks__networkId__firmwareUpgrades_products_wireless'
        cellularGateway:
          $ref: '#/components/schemas/_networks__networkId__firmwareUpgrades_products_wireless'
        sensor:
          $ref: '#/components/schemas/_networks__networkId__firmwareUpgrades_products_wireless'
      type: object
    _networks__networkId__switch_dhcp_v4_servers_seen_lastPacket_udp:
      description: UDP attributes of the packet.
      example:
        length: 4
        checksum: checksum
      properties:
        length:
          description: UDP length of the packet.
          type: integer
        checksum:
          description: UDP checksum of the packet.
          type: string
      type: object
    _networks__networkId__appliance_ssids_radiusServers:
      example:
        port: 1
        host: host
      properties:
        host:
          description: The IP address of your RADIUS server.
          type: string
        port:
          description: The UDP port your RADIUS servers listens on for Access-requests.
          type: integer
      type: object
    _networks__networkId__appliance_trafficShaping_uplinkSelection_value_destination:
      description: Destination of this custom type traffic filter
      properties:
        port:
          description: 'E.g.: "any", "0" (also means "any"), "8080", "1-1024"'
          type: string
        cidr:
          description: 'CIDR format address, or "any". E.g.: "192.168.10.0/24",  "192.168.10.1"
            (same as "192.168.10.1/32"), "0.0.0.0/0" (same as "any")'
          type: string
      type: object
    _organizations__organizationId__cellularGateway_uplink_statuses_uplinks:
      example:
        dns2: dns2
        ip: ip
        dns1: dns1
        signalStat:
          rsrq: rsrq
          rsrp: rsrp
        publicIp: publicIp
        interface: interface
        connectionType: connectionType
        iccid: iccid
        provider: provider
        signalType: signalType
        model: model
        apn: apn
        gateway: gateway
        status: status
      properties:
        interface:
          description: Uplink interface
          type: string
        status:
          description: Uplink status
          type: string
        ip:
          description: Uplink IP
          type: string
        provider:
          description: Network Provider
          type: string
        publicIp:
          description: Public IP
          type: string
        model:
          description: Uplink model
          type: string
        signalStat:
          $ref: '#/components/schemas/_organizations__organizationId__cellularGateway_uplink_statuses_signalStat'
        connectionType:
          description: Connection Type
          type: string
        apn:
          description: Access Point Name
          type: string
        gateway:
          description: Gateway IP
          type: string
        dns1:
          description: Primary DNS IP
          type: string
        dns2:
          description: Secondary DNS IP
          type: string
        signalType:
          description: Signal Type
          type: string
        iccid:
          description: Integrated Circuit Card Identification Number
          type: string
      type: object
    inline_response_200_10_connectionStats:
      description: The connection stats of the device
      example:
        auth: 6
        success: 5
        dns: 5
        assoc: 0
        dhcp: 1
      properties:
        assoc:
          description: The number of failed association attempts
          type: integer
        auth:
          description: The number of failed authentication attempts
          type: integer
        dhcp:
          description: The number of failed DHCP attempts
          type: integer
        dns:
          description: The number of failed DNS attempts
          type: integer
        success:
          description: The number of successful connection attempts
          type: integer
      type: object
    _networks__networkId__switch_accessControlLists_rules:
      properties:
        comment:
          description: Description of the rule (optional).
          type: string
        policy:
          description: '''allow'' or ''deny'' traffic specified by this rule.'
          enum:
          - allow
          - deny
          type: string
        ipVersion:
          description: IP address version (must be 'any', 'ipv4' or 'ipv6'). Applicable
            only if network supports IPv6. Default value is 'ipv4'.
          enum:
          - any
          - ipv4
          - ipv6
          type: string
        protocol:
          description: The type of protocol (must be 'tcp', 'udp', or 'any').
          enum:
          - any
          - tcp
          - udp
          type: string
        srcCidr:
          description: Source IP address (in IP or CIDR notation) or 'any'.
          type: string
        srcPort:
          description: Source port. Must be in the range  of 1-65535 or 'any'. Default
            is 'any'.
          type: string
        dstCidr:
          description: Destination IP address (in IP or CIDR notation) or 'any'.
          type: string
        dstPort:
          description: Destination port. Must be in the range of 1-65535 or 'any'.
            Default is 'any'.
          type: string
        vlan:
          description: Incoming traffic VLAN. Must be in the range of 1-4095 or 'any'.
            Default is 'any'.
          type: string
      required:
      - dstCidr
      - policy
      - protocol
      - srcCidr
      type: object
    inline_response_201_8:
      example:
        configParams:
          cloudStaticIp: cloudStaticIp
          user:
            publicKey: publicKey
            secret:
              hash: hash
            username: username
          tunnel:
            mode: mode
            rootCertificate:
              name: name
              content: content
            port: port
            host: host
            name: name
        udi: udi
        message: message
        deviceId: deviceId
        status: status
      properties:
        message:
          description: Message related to whether or not the device was found and
            can be imported.
          type: string
        udi:
          description: Device UDI certificate
          type: string
        deviceId:
          description: Import ID from the Import operation
          type: string
        status:
          description: The import status of the device
          type: string
        configParams:
          $ref: '#/components/schemas/_organizations__organizationId__inventory_onboarding_cloudMonitoring_prepare_configParams'
      type: object
    _networks__networkId__camera_qualityRetentionProfiles_videoSettings_MV93X:
      description: Quality and resolution for MV93X camera models.
      properties:
        quality:
          description: Quality of the camera. Can be one of 'Standard', 'Enhanced'
            or 'High'.
          enum:
          - Enhanced
          - High
          - Standard
          type: string
        resolution:
          description: Resolution of the camera. Can be one of '1080x1080', '2112x2112'
            or '2880x2880'.
          enum:
          - 1080x1080
          - 2112x2112
          - 2880x2880
          type: string
      required:
      - quality
      - resolution
      type: object
    _networks__networkId__switch_portSchedules_portSchedule:
      description: |2
            The schedule for switch port scheduling. Schedules are applied to days of the week.
            When it's empty, default schedule with all days of a week are configured.
            Any unspecified day in the schedule is added as a default schedule configuration of the day.
      properties:
        monday:
          $ref: '#/components/schemas/_networks__networkId__groupPolicies_scheduling_monday'
        tuesday:
          $ref: '#/components/schemas/_networks__networkId__groupPolicies_scheduling_tuesday'
        wednesday:
          $ref: '#/components/schemas/_networks__networkId__groupPolicies_scheduling_wednesday'
        thursday:
          $ref: '#/components/schemas/_networks__networkId__groupPolicies_scheduling_thursday'
        friday:
          $ref: '#/components/schemas/_networks__networkId__groupPolicies_scheduling_friday'
        saturday:
          $ref: '#/components/schemas/_networks__networkId__groupPolicies_scheduling_saturday'
        sunday:
          $ref: '#/components/schemas/_networks__networkId__groupPolicies_scheduling_sunday'
      type: object
    inline_response_201_4:
      example:
        clientBalancingEnabled: true
        minBitrateType: minBitrateType
        apBandSettings:
          bandSteeringEnabled: true
          bandOperationMode: bandOperationMode
        transmission:
          enabled: true
        fiveGhzSettings:
          validAutoChannels:
          - 3
          - 3
          rxsop: 2
          minBitrate: 9
          channelWidth: channelWidth
          maxPower: 2
          minPower: 7
        name: name
        networkId: networkId
        id: id
        bandSelectionType: bandSelectionType
        twoFourGhzSettings:
          validAutoChannels:
          - 5
          - 5
          rxsop: 5
          minBitrate: 1.4658129
          axEnabled: true
          maxPower: 0
          minPower: 6
        perSsidSettings:
          "11":
            minBitrate: 9
            name: name
            bandSteeringEnabled: true
            bandOperationMode: 2.4ghz
          "12":
            minBitrate: 6
            name: name
            bandSteeringEnabled: true
            bandOperationMode: 2.4ghz
          "13":
            minBitrate: 8
            name: name
            bandSteeringEnabled: true
            bandOperationMode: 2.4ghz
          "14":
            minBitrate: 9
            name: name
            bandSteeringEnabled: true
            bandOperationMode: 2.4ghz
          "0":
            minBitrate: 4
            name: name
            bandSteeringEnabled: true
            bandOperationMode: 2.4ghz
          "1":
            minBitrate: 7
            name: name
            bandSteeringEnabled: true
            bandOperationMode: 2.4ghz
          "2":
            minBitrate: 1
            name: name
            bandSteeringEnabled: true
            bandOperationMode: 2.4ghz
          "3":
            minBitrate: 1
            name: name
            bandSteeringEnabled: true
            bandOperationMode: 2.4ghz
          "4":
            minBitrate: 1
            name: name
            bandSteeringEnabled: true
            bandOperationMode: 2.4ghz
          "5":
            minBitrate: 6
            name: name
            bandSteeringEnabled: true
            bandOperationMode: 2.4ghz
          "6":
            minBitrate: 7
            name: name
            bandSteeringEnabled: true
            bandOperationMode: 2.4ghz
          "7":
            minBitrate: 1
            name: name
            bandSteeringEnabled: true
            bandOperationMode: 2.4ghz
          "8":
            minBitrate: 4
            name: name
            bandSteeringEnabled: true
            bandOperationMode: 2.4ghz
          "9":
            minBitrate: 5
            name: name
            bandSteeringEnabled: true
            bandOperationMode: 2.4ghz
          "10":
            minBitrate: 9
            name: name
            bandSteeringEnabled: true
            bandOperationMode: 2.4ghz
      properties:
        id:
          description: The name of the new profile. Must be unique.
          type: string
        networkId:
          description: The network ID of the RF Profile
          type: string
        name:
          description: The name of the new profile. Must be unique. This param is
            required on creation.
          type: string
        clientBalancingEnabled:
          description: Steers client to best available access point. Can be either
            true or false. Defaults to true.
          type: boolean
        minBitrateType:
          description: Minimum bitrate can be set to either 'band' or 'ssid'. Defaults
            to band.
          type: string
        bandSelectionType:
          description: Band selection can be set to either 'ssid' or 'ap'. This param
            is required on creation.
          type: string
        apBandSettings:
          $ref: '#/components/schemas/inline_response_201_4_apBandSettings'
        twoFourGhzSettings:
          $ref: '#/components/schemas/_networks__networkId__wireless_rfProfiles_twoFourGhzSettings'
        fiveGhzSettings:
          $ref: '#/components/schemas/_networks__networkId__wireless_rfProfiles_fiveGhzSettings'
        transmission:
          $ref: '#/components/schemas/_networks__networkId__wireless_rfProfiles_transmission'
        perSsidSettings:
          $ref: '#/components/schemas/inline_response_201_4_perSsidSettings'
      type: object
    _networks__networkId__wireless_ssids__number__dot11r:
      description: The current setting for 802.11r
      properties:
        enabled:
          description: Whether 802.11r is enabled or not.
          type: boolean
        adaptive:
          description: (Optional) Whether 802.11r is adaptive or not.
          type: boolean
      type: object
    inline_response_201_5:
      example:
        organizationId: organizationId
        synchronous: true
        id: id
        confirmed: true
        actions:
        - resource: resource
          operation: operation
        - resource: resource
          operation: operation
        status:
          createdResources:
          - id: id
            uri: uri
          - id: id
            uri: uri
          completed: true
          failed: true
          errors:
          - errors
          - errors
      properties:
        id:
          description: ID of the action batch. Can be used to check the status of
            the action batch at /organizations/{organizationId}/actionBatches/{actionBatchId}
          type: string
        organizationId:
          description: ID of the organization this action batch belongs to
          type: string
        confirmed:
          description: Flag describing whether the action should be previewed before
            executing or not
          type: boolean
        synchronous:
          description: Flag describing whether actions should run synchronously or
            asynchronously
          type: boolean
        status:
          $ref: '#/components/schemas/inline_response_201_5_status'
        actions:
          description: A set of changes made as part of this action (<a href='https://developer.cisco.com/meraki/api/#/rest/guides/action-batches/'>more
            details</a>)
          items:
            $ref: '#/components/schemas/inline_response_201_5_actions'
          type: array
      required:
      - actions
      type: object
    inline_response_201_6:
      example:
        name: name
        customLogo:
          image:
            preview:
              url: url
              expiresAt: 2000-01-23T04:56:07.000+00:00
          enabled: true
        helpSettings:
          firewallInfoSubtab: default or inherit
          getHelpSubtabKnowledgeBaseSearch: getHelpSubtabKnowledgeBaseSearch
          universalSearchKnowledgeBaseSearch: default or inherit
          hardwareReplacementsSubtab: default or inherit
          newFeaturesSubtab: default or inherit
          communitySubtab: default or inherit
          supportContactInfo: supportContactInfo
          apiDocsSubtab: default or inherit
          helpTab: default or inherit
          ciscoMerakiProductDocumentation: ciscoMerakiProductDocumentation
          dataProtectionRequestsSubtab: default or inherit
          getHelpSubtab: default or inherit
          casesSubtab: default or inherit
          smForums: default or inherit
          helpWidget: default or inherit
        adminSettings:
          values:
          - values
          - values
          appliesTo: All SAML admins
        enabled: true
      properties:
        name:
          description: Name of the Dashboard branding policy.
          type: string
        enabled:
          description: Boolean indicating whether this policy is enabled.
          type: boolean
        adminSettings:
          $ref: '#/components/schemas/_organizations__organizationId__brandingPolicies_adminSettings'
        helpSettings:
          $ref: '#/components/schemas/_organizations__organizationId__brandingPolicies_helpSettings_1'
        customLogo:
          $ref: '#/components/schemas/_organizations__organizationId__brandingPolicies_customLogo'
      type: object
    inline_response_201_7:
      example:
        importId: importId
        message: message
        status: status
      properties:
        status:
          description: Cloud monitor import status
          type: string
        importId:
          description: Unique id associated with the import of the device
          type: string
        message:
          description: Response method
          type: string
      type: object
    inline_response_200_94_ipsecPolicies:
      description: Custom IPSec policies for the VPN peer. If not included and a preset
        has not been chosen, the default preset for IPSec policies will be used.
      example:
        ikeAuthAlgo:
        - md5
        - md5
        ikeDiffieHellmanGroup:
        - ikeDiffieHellmanGroup
        - ikeDiffieHellmanGroup
        childLifetime: 6
        childCipherAlgo:
        - aes128
        - aes128
        ikeLifetime: 0
        ikeCipherAlgo:
        - aes128
        - aes128
        ikePrfAlgo:
        - default
        - default
        childAuthAlgo:
        - md5
        - md5
        childPfsGroup:
        - childPfsGroup
        - childPfsGroup
      properties:
        ikeCipherAlgo:
          description: 'This is the cipher algorithm to be used in Phase 1. The value
            should be an array with one of the following algorithms: ''aes256'', ''aes192'',
            ''aes128'', ''tripledes'', ''des'''
          items:
            enum:
            - aes128
            - aes192
            - aes256
            - des
            - tripledes
            type: string
          type: array
        ikeAuthAlgo:
          description: 'This is the authentication algorithm to be used in Phase 1.
            The value should be an array with one of the following algorithms: ''sha256'',
            ''sha1'', ''md5'''
          items:
            enum:
            - md5
            - sha1
            - sha256
            type: string
          type: array
        ikePrfAlgo:
          description: '[optional] This is the pseudo-random function to be used in
            IKE_SA. The value should be an array with one of the following algorithms:
            ''prfsha256'', ''prfsha1'', ''prfmd5'', ''default''. The ''default'' option
            can be used to default to the Authentication algorithm.'
          items:
            enum:
            - default
            - prfmd5
            - prfsha1
            - prfsha256
            type: string
          type: array
        ikeDiffieHellmanGroup:
          description: 'This is the Diffie-Hellman group to be used in Phase 1. The
            value should be an array with one of the following algorithms: ''group14'',
            ''group5'', ''group2'', ''group1'''
          items:
            type: string
          type: array
        ikeLifetime:
          description: The lifetime of the Phase 1 SA in seconds.
          type: integer
        childCipherAlgo:
          description: 'This is the cipher algorithms to be used in Phase 2. The value
            should be an array with one or more of the following algorithms: ''aes256'',
            ''aes192'', ''aes128'', ''tripledes'', ''des'', ''null'''
          items:
            enum:
            - aes128
            - aes192
            - aes256
            - des
            - "null"
            - tripledes
            type: string
          type: array
        childAuthAlgo:
          description: 'This is the authentication algorithms to be used in Phase
            2. The value should be an array with one of the following algorithms:
            ''sha256'', ''sha1'', ''md5'''
          items:
            enum:
            - md5
            - sha1
            - sha256
            type: string
          type: array
        childPfsGroup:
          description: 'This is the Diffie-Hellman group to be used for Perfect Forward
            Secrecy in Phase 2. The value should be an array with one of the following
            values: ''disabled'',''group14'', ''group5'', ''group2'', ''group1'''
          items:
            type: string
          type: array
        childLifetime:
          description: The lifetime of the Phase 2 SA in seconds.
          type: integer
      type: object
    _networks__networkId__appliance_trafficShaping_globalBandwidthLimits:
      description: Global per-client bandwidth limit
      properties:
        limitUp:
          description: The upload bandwidth limit in Kbps. (0 represents no limit.)
          type: integer
        limitDown:
          description: The download bandwidth limit in Kbps. (0 represents no limit.)
          type: integer
      type: object
    _devices__serial__switch_routing_interfaces_ospfV3:
      description: IPv6 OSPF Settings
      example:
        area: area
        cost: 1
        isPassiveEnabled: true
      properties:
        area:
          description: Area id
          type: string
        cost:
          description: OSPF Cost
          type: integer
        isPassiveEnabled:
          description: Disable sending Hello packets on this interface's IPv6 area
          type: boolean
      type: object
    _devices__serial__cellularGateway_portForwardingRules_rules:
      properties:
        name:
          description: A descriptive name for the rule
          type: string
        lanIp:
          description: The IP address of the server or device that hosts the internal
            resource that you wish to make available on the WAN
          type: string
        publicPort:
          description: A port or port ranges that will be forwarded to the host on
            the LAN
          type: string
        localPort:
          description: A port or port ranges that will receive the forwarded traffic
            from the WAN
          type: string
        allowedIps:
          description: An array of ranges of WAN IP addresses that are allowed to
            make inbound connections on the specified ports or port ranges.
          items:
            type: string
          type: array
        protocol:
          description: TCP or UDP
          type: string
        access:
          description: '`any` or `restricted`. Specify the right to make inbound connections
            on the specified ports or port ranges. If `restricted`, a list of allowed
            IPs is mandatory.'
          type: string
      required:
      - access
      - lanIp
      - localPort
      - protocol
      - publicPort
      type: object
    inline_response_201_1:
      example:
        request:
          serial: serial
          count: 0
          target: target
        pingId: pingId
        url: url
        status: status
      properties:
        pingId:
          description: Id to check the status of your ping request.
          type: string
        url:
          description: GET this url to check the status of your ping request.
          type: string
        request:
          $ref: '#/components/schemas/inline_response_201_1_request'
        status:
          description: Status of the ping request.
          type: string
      type: object
    _networks__networkId__wireless_ssids__number__dot11w:
      description: The current setting for Protected Management Frames (802.11w).
      properties:
        enabled:
          description: Whether 802.11w is enabled or not.
          type: boolean
        required:
          description: (Optional) Whether 802.11w is required or not.
          type: boolean
      type: object
    inline_response_201_2:
      example:
        mandatoryDhcp:
          enabled: true
        subnet: subnet
        ipv6:
          prefixAssignments:
          - staticPrefix: staticPrefix
            origin:
              interfaces:
              - interfaces
              - interfaces
              type: independent
            autonomous: true
            staticApplianceIp6: staticApplianceIp6
          - staticPrefix: staticPrefix
            origin:
              interfaces:
              - interfaces
              - interfaces
              type: independent
            autonomous: true
            staticApplianceIp6: staticApplianceIp6
          enabled: true
        name: name
        templateVlanType: same
        cidr: cidr
        id: id
        interfaceId: interfaceId
        applianceIp: applianceIp
        groupPolicyId: groupPolicyId
        mask: 0
      properties:
        id:
          description: The VLAN ID of the VLAN
          type: string
        interfaceId:
          description: The interface ID of the VLAN
          type: string
        name:
          description: The name of the VLAN
          type: string
        subnet:
          description: The subnet of the VLAN
          type: string
        applianceIp:
          description: The local IP of the appliance on the VLAN
          type: string
        groupPolicyId:
          description: The id of the desired group policy to apply to the VLAN
          type: string
        templateVlanType:
          default: same
          description: Type of subnetting of the VLAN. Applicable only for template
            network.
          enum:
          - same
          - unique
          type: string
        cidr:
          description: CIDR of the pool of subnets. Applicable only for template network.
            Each network bound to the template will automatically pick a subnet from
            this pool to build its own VLAN.
          type: string
        mask:
          description: Mask used for the subnet of all bound to the template networks.
            Applicable only for template network.
          type: integer
        mandatoryDhcp:
          $ref: '#/components/schemas/_networks__networkId__appliance_vlans_mandatoryDhcp'
        ipv6:
          $ref: '#/components/schemas/_networks__networkId__appliance_vlans_ipv6'
      type: object
    inline_response_201_3:
      example:
        id: id
        url: url
        status: abandoned
      properties:
        id:
          description: Webhook delivery identifier
          type: string
        url:
          description: URL where the webhook was delivered
          type: string
        status:
          description: Current status of the webhook delivery
          enum:
          - abandoned
          - delivered
          - enqueued
          - processing
          - retrying
          type: string
      type: object
    _devices__serial__switch_ports_statuses_trafficInKbps:
      description: A breakdown of the average speed of data that has passed through
        this port during the timespan.
      example:
        total: 3.6160767
        recv: 4.145608
        sent: 2.027123
      properties:
        total:
          description: The average speed of the data sent and received (in kilobits-per-second).
          format: float
          type: number
        sent:
          description: The average speed of the data sent (in kilobits-per-second).
          format: float
          type: number
        recv:
          description: The average speed of the data received (in kilobits-per-second).
          format: float
          type: number
      type: object
    inline_response_200_85_identity:
      description: EAP settings for identity requests.
      example:
        retries: 1
        timeout: 5
      properties:
        retries:
          description: Maximum number of EAP retries.
          type: integer
        timeout:
          description: EAP timeout in seconds.
          type: integer
      type: object
    inline_response_200_33:
      example:
        lanGoodput: 6
        recv: 3
        responseDuration: 7
        wanLatencyMs: 1.4658129
        lanLossPercent: 2.302136
        endTs: 2000-01-23T04:56:07.000+00:00
        wanLossPercent: 5.637377
        startTs: 2000-01-23T04:56:07.000+00:00
        numClients: 2
        wanGoodput: 0
        sent: 9
        lanLatencyMs: 5.962134
      properties:
        startTs:
          description: The start time of the query range
          format: date-time
          type: string
        endTs:
          description: The end time of the query range
          format: date-time
          type: string
        wanGoodput:
          description: WAN goodput (Number of useful information bits delivered over
            a WAN per unit of time)
          type: integer
        lanGoodput:
          description: LAN goodput (Number of useful information bits delivered over
            a LAN per unit of time)
          type: integer
        wanLatencyMs:
          description: WAN latency in milliseconds
          format: float
          type: number
        lanLatencyMs:
          description: LAN latency in milliseconds
          format: float
          type: number
        wanLossPercent:
          description: WAN loss percentage
          format: float
          type: number
        lanLossPercent:
          description: LAN loss percentage
          format: float
          type: number
        responseDuration:
          description: Duration of the response, in milliseconds
          type: integer
        sent:
          description: Sent kilobytes-per-second
          type: integer
        recv:
          description: Received kilobytes-per-second
          type: integer
        numClients:
          description: Number of clients
          type: integer
      type: object
    inline_response_200_32:
      example:
        severity: error
        scope:
          devices:
          - clients:
            - mac: mac
            - mac: mac
            serial: serial
            name: name
            url: url
            productType: productType
            mac: mac
            lldp:
              portId: portId
          - clients:
            - mac: mac
            - mac: mac
            serial: serial
            name: name
            url: url
            productType: productType
            mac: mac
            lldp:
              portId: portId
          peers:
          - url: url
            network:
              name: name
              id: id
          - url: url
            network:
              name: name
              id: id
          applications:
          - name: name
            url: url
          - name: name
            url: url
        id: id
        category: category
        type: type
      properties:
        id:
          description: Alert identifier. Value can be empty
          type: string
        category:
          description: Category of the alert
          type: string
        type:
          description: Alert type
          type: string
        severity:
          description: Severity of the alert
          enum:
          - error
          - info
          - warning
          type: string
        scope:
          $ref: '#/components/schemas/_networks__networkId__health_alerts_scope'
      type: object
    inline_response_200_35:
      example:
        clientId: clientId
        name: name
        assigned:
        - name: name
          type: type
          groupPolicyId: groupPolicyId
          ssid:
          - ssidNumber: 0
          - ssidNumber: 0
        - name: name
          type: type
          groupPolicyId: groupPolicyId
          ssid:
          - ssidNumber: 0
          - ssidNumber: 0
      properties:
        name:
          description: Name of client
          type: string
        clientId:
          description: ID of client
          type: string
        assigned:
          description: Assigned policies
          items:
            $ref: '#/components/schemas/_networks__networkId__policies_byClient_assigned'
          type: array
      type: object
    inline_response_200_34:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        accountType: accountType
        name: name
        authorizations:
        - ssidNumber: 0
          authorizedByName: authorizedByName
          authorizedZone: authorizedZone
          authorizedByEmail: authorizedByEmail
          expiresAt: 2000-01-23T04:56:07.000+00:00
        - ssidNumber: 0
          authorizedByName: authorizedByName
          authorizedZone: authorizedZone
          authorizedByEmail: authorizedByEmail
          expiresAt: 2000-01-23T04:56:07.000+00:00
        id: id
        isAdmin: true
        email: email
      properties:
        id:
          description: Meraki auth user id
          type: string
        email:
          description: Email address of the user
          type: string
        name:
          description: Name of the user
          type: string
        createdAt:
          description: Creation time of the user
          format: date-time
          type: string
        accountType:
          description: Authorization type for user.
          type: string
        isAdmin:
          description: Whether or not the user is a Dashboard administrator
          type: boolean
        authorizations:
          description: User authorization info
          items:
            $ref: '#/components/schemas/_networks__networkId__merakiAuthUsers_authorizations'
          type: array
      type: object
    inline_response_200_31:
      example:
        group:
          name: name
          description: description
          id: id
      properties:
        group:
          $ref: '#/components/schemas/_networks__networkId__firmwareUpgrades_staged_stages_group'
      type: object
    inline_response_200_30:
      example:
        isDefault: true
        groupId: groupId
        name: name
        description: description
        assignedDevices:
          switchStacks:
          - name: name
            id: id
          - name: name
            id: id
          devices:
          - serial: serial
            name: name
          - serial: serial
            name: name
      properties:
        groupId:
          description: Id of staged upgrade group
          type: string
        name:
          description: Name of the Staged Upgrade Group
          type: string
        description:
          description: Description of the Staged Upgrade Group
          type: string
        isDefault:
          description: Boolean indicating the default Group. Any device that does
            not have a group explicitly assigned will upgrade with this group
          type: boolean
        assignedDevices:
          $ref: '#/components/schemas/_networks__networkId__firmwareUpgrades_staged_groups_assignedDevices'
      type: object
    inline_response_200_37:
      example:
        counts:
          tvoc: 7
          door: 0
          pm25: 5
          noise:
            ambient: 5
          temperature: 2
          humidity: 6
          indoorAirQuality: 1
          water: 9
        endTs: 2000-01-23T04:56:07.000+00:00
        startTs: 2000-01-23T04:56:07.000+00:00
      properties:
        startTs:
          description: Start of the timespan over which sensor alerts are counted
          format: date-time
          type: string
        endTs:
          description: End of the timespan over which sensor alerts are counted
          format: date-time
          type: string
        counts:
          $ref: '#/components/schemas/_networks__networkId__sensor_alerts_overview_byMetric_counts'
      type: object
    _networks__networkId__appliance_vlans_ipv6_prefixAssignments:
      example:
        staticPrefix: staticPrefix
        origin:
          interfaces:
          - interfaces
          - interfaces
          type: independent
        autonomous: true
        staticApplianceIp6: staticApplianceIp6
      properties:
        autonomous:
          description: Auto assign a /64 prefix from the origin to the VLAN
          type: boolean
        staticPrefix:
          description: Manual configuration of a /64 prefix on the VLAN
          type: string
        staticApplianceIp6:
          description: Manual configuration of the IPv6 Appliance IP
          type: string
        origin:
          $ref: '#/components/schemas/_networks__networkId__appliance_prefixes_delegated_statics_origin_1'
      type: object
    inline_response_200_36:
      example:
        supportedMetrics:
        - door
        - door
        counts:
          tvoc: 7
          door: 0
          pm25: 5
          noise:
            ambient: 5
          temperature: 2
          humidity: 6
          indoorAirQuality: 1
          water: 9
      properties:
        supportedMetrics:
          description: List of metrics that are supported for alerts, based on available
            sensor devices in the network
          items:
            enum:
            - door
            - humidity
            - indoorAirQuality
            - noise
            - pm25
            - temperature
            - tvoc
            - water
            type: string
          type: array
        counts:
          $ref: '#/components/schemas/inline_response_200_36_counts'
      type: object
    _networks__networkId__wireless_ssids__number__radiusAccountingServers:
      properties:
        host:
          description: IP address to which the APs will send RADIUS accounting messages
          type: string
        port:
          description: Port on the RADIUS server that is listening for accounting
            messages
          type: integer
        secret:
          description: Shared key used to authenticate messages between the APs and
            RADIUS server
          type: string
        radsecEnabled:
          description: Use RADSEC (TLS over TCP) to connect to this RADIUS accounting
            server. Requires radiusProxyEnabled.
          type: boolean
        caCertificate:
          description: Certificate used for authorization for the RADSEC Server
          type: string
      required:
      - host
      type: object
    inline_response_200_39:
      example:
        mqttBrokerId: mqttBrokerId
        enabled: true
      properties:
        mqttBrokerId:
          description: ID of the MQTT Broker.
          type: string
        enabled:
          description: Specifies whether the broker is enabled for sensor data. Currently,
            only a single broker may be enabled for sensor data.
          type: boolean
      type: object
    inline_response_200_38:
      example:
        schedule:
          name: name
          id: id
        serials:
        - serials
        - serials
        profileId: profileId
        recipients:
          emails:
          - emails
          - emails
          smsNumbers:
          - smsNumbers
          - smsNumbers
          httpServerIds:
          - httpServerIds
          - httpServerIds
        name: name
        conditions:
        - duration: 9
          metric: metric
          threshold:
            tvoc:
              concentration: 5
              quality: fair
            door:
              open: true
            pm25:
              concentration: 5
              quality: fair
            temperature:
              celsius: 0.8008282
              fahrenheit: 6.0274563
              quality: fair
            noise:
              ambient:
                level: 2
                quality: fair
            humidity:
              relativePercentage: 1
              quality: fair
            indoorAirQuality:
              score: 7
              quality: fair
            water:
              present: true
          direction: above
        - duration: 9
          metric: metric
          threshold:
            tvoc:
              concentration: 5
              quality: fair
            door:
              open: true
            pm25:
              concentration: 5
              quality: fair
            temperature:
              celsius: 0.8008282
              fahrenheit: 6.0274563
              quality: fair
            noise:
              ambient:
                level: 2
                quality: fair
            humidity:
              relativePercentage: 1
              quality: fair
            indoorAirQuality:
              score: 7
              quality: fair
            water:
              present: true
          direction: above
      properties:
        profileId:
          description: ID of the sensor alert profile.
          type: string
        name:
          description: Name of the sensor alert profile.
          type: string
        schedule:
          $ref: '#/components/schemas/_networks__networkId__sensor_alerts_profiles_schedule'
        conditions:
          description: List of conditions that will cause the profile to send an alert.
          items:
            $ref: '#/components/schemas/_networks__networkId__sensor_alerts_profiles_conditions'
          type: array
        recipients:
          $ref: '#/components/schemas/_networks__networkId__sensor_alerts_profiles_recipients'
        serials:
          description: List of device serials assigned to this sensor alert profile.
          items:
            type: string
          type: array
      required:
      - conditions
      type: object
    _networks__networkId__wireless_ssids__number__vpn_concentrator:
      description: The VPN concentrator settings for this SSID.
      properties:
        networkId:
          description: The NAT ID of the concentrator that should be set.
          type: string
        vlanId:
          description: The VLAN that should be tagged for the concentrator.
          type: integer
      type: object
    _organizations_management:
      description: Information about the organization's management system
      example:
        details:
        - name: name
          value: value
        - name: name
          value: value
      properties:
        details:
          description: Details related to organization management, possibly empty
          items:
            $ref: '#/components/schemas/_organizations_management_details'
          type: array
      type: object
    _networks__networkId__webhooks_payloadTemplates_sharing:
      description: Information on which entities have access to the template
      example:
        byNetwork:
          adminsCanModify: true
      properties:
        byNetwork:
          $ref: '#/components/schemas/_networks__networkId__webhooks_payloadTemplates_sharing_byNetwork'
      type: object
    _networks__networkId__sensor_alerts_profiles_threshold_temperature:
      description: Temperature threshold. One of 'celsius', 'fahrenheit', or 'quality'
        must be provided.
      example:
        celsius: 0.8008282
        fahrenheit: 6.0274563
        quality: fair
      properties:
        celsius:
          description: Alerting threshold in degrees Celsius.
          format: float
          type: number
        fahrenheit:
          description: Alerting threshold in degrees Fahrenheit.
          format: float
          type: number
        quality:
          description: Alerting threshold as a qualitative temperature level.
          enum:
          - fair
          - good
          - inadequate
          - poor
          type: string
      type: object
    _networks__networkId__wireless_ssids__number__schedules_rangesInSeconds:
      properties:
        start:
          description: Seconds since Sunday at midnight when the outage range starts.
          type: integer
        end:
          description: Seconds since Sunday at midnight when that outage range ends.
          type: integer
      required:
      - end
      - start
      type: object
    _networks__networkId__camera_qualityRetentionProfiles_videoSettings_MV63:
      description: Quality and resolution for MV63 camera models.
      properties:
        quality:
          description: Quality of the camera. Can be one of 'Standard', 'Enhanced'
            or 'High'.
          enum:
          - Enhanced
          - High
          - Standard
          type: string
        resolution:
          description: Resolution of the camera. Can be one of '1920x1080' or '2688x1512'.
          enum:
          - 1920x1080
          - 2688x1512
          type: string
      required:
      - quality
      - resolution
      type: object
    _networks__networkId__camera_wirelessProfiles_identity:
      description: The identity of the wireless profile. Required for creating wireless
        profiles in 8021x-radius auth mode.
      properties:
        username:
          description: The username of the identity.
          type: string
        password:
          description: The password of the identity.
          type: string
      type: object
    inline_response_200_22:
      example:
        dnsNameservers: custom
        dhcpLeaseTime: 1 day
        dnsCustomNameservers:
        - dnsCustomNameservers
        - dnsCustomNameservers
      properties:
        dhcpLeaseTime:
          description: DHCP Lease time for all MG in the network.
          enum:
          - 1 day
          - 1 hour
          - 1 week
          - 12 hours
          - 30 minutes
          - 4 hours
          type: string
        dnsNameservers:
          description: DNS name servers mode for all MG in the network.
          enum:
          - custom
          - google_dns
          - opendns
          - upstream_dns
          type: string
        dnsCustomNameservers:
          description: List of fixed IPs representing the the DNS Name servers when
            the mode is 'custom'.
          items:
            type: string
          type: array
      type: object
    inline_response_200_21:
      example:
        mode: mode
        subnets:
        - localSubnet: localSubnet
          useVpn: true
        - localSubnet: localSubnet
          useVpn: true
        hubs:
        - hubId: hubId
          useDefaultRoute: true
        - hubId: hubId
          useDefaultRoute: true
      properties:
        mode:
          description: The site-to-site VPN mode.
          type: string
        hubs:
          description: The list of VPN hubs, in order of preference.
          items:
            $ref: '#/components/schemas/inline_response_200_21_hubs'
          type: array
        subnets:
          description: The list of subnets and their VPN presence.
          items:
            $ref: '#/components/schemas/inline_response_200_21_subnets'
          type: array
      type: object
    inline_response_200_24:
      example:
        os: os
        wirelessCapabilities: wirelessCapabilities
        clientVpnConnections:
        - remoteIp: remoteIp
          connectedAt: 1
          disconnectedAt: 5
        - remoteIp: remoteIp
          connectedAt: 1
          disconnectedAt: 5
        firstSeen: 0
        ip: ip
        recentDeviceMac: recentDeviceMac
        description: description
        switchport: switchport
        ssid: ssid
        mac: mac
        ip6: ip6
        smInstalled: true
        cdp:
        - - cdp
          - cdp
        - - cdp
          - cdp
        manufacturer: manufacturer
        lastSeen: 6
        vlan: vlan
        id: id
        user: user
        lldp:
        - - lldp
          - lldp
        - - lldp
          - lldp
        status: Offline
      properties:
        id:
          description: The ID of the client
          type: string
        mac:
          description: The MAC address of the client
          type: string
        ip:
          description: The IP address of the client
          type: string
        ip6:
          description: The IPv6 address of the client
          type: string
        description:
          description: Short description of the client
          type: string
        firstSeen:
          description: Timestamp client was first seen in the network
          type: integer
        lastSeen:
          description: Timestamp client was last seen in the network
          type: integer
        manufacturer:
          description: Manufacturer of the client
          type: string
        os:
          description: The operating system of the client
          type: string
        user:
          description: The username of the user of the client
          type: string
        vlan:
          description: The name of the VLAN that the client is connected to
          type: string
        ssid:
          description: The name of the SSID that the client is connected to
          type: string
        switchport:
          description: The switch port that the client is connected to
          type: string
        wirelessCapabilities:
          description: Wireless capabilities of the client
          type: string
        smInstalled:
          description: Status of SM for the client
          type: boolean
        recentDeviceMac:
          description: The MAC address of the node that the device was last connected
            to
          type: string
        clientVpnConnections:
          description: VPN connections associated with the client
          items:
            $ref: '#/components/schemas/inline_response_200_24_clientVpnConnections'
          type: array
        lldp:
          description: The link layer discover protocol settings for the client
          items:
            items:
              type: string
            type: array
          type: array
        cdp:
          description: The Cisco discover protocol settings for the client
          items:
            items:
              type: string
            type: array
          type: array
        status:
          description: The connection status of the client
          enum:
          - Offline
          - Online
          type: string
      type: object
    inline_response_200_23:
      example:
        notes: notes
        usage:
          recv: 5.962134
          sent: 1.4658129
        recentDeviceMac: recentDeviceMac
        description: description
        ssid: ssid
        mac: mac
        manufacturer: manufacturer
        adaptivePolicyGroup: adaptivePolicyGroup
        groupPolicy8021x: groupPolicy8021x
        vlan: vlan
        id: id
        deviceTypePrediction: deviceTypePrediction
        ip6Local: ip6Local
        recentDeviceSerial: recentDeviceSerial
        os: os
        wirelessCapabilities: wirelessCapabilities
        firstSeen: 0
        ip: ip
        recentDeviceConnection: Wired
        switchport: switchport
        recentDeviceName: recentDeviceName
        ip6: ip6
        smInstalled: true
        lastSeen: 6
        namedVlan: namedVlan
        user: user
        status: Offline
      properties:
        id:
          description: The ID of the client
          type: string
        mac:
          description: The MAC address of the client
          type: string
        ip:
          description: The IP address of the client
          type: string
        ip6:
          description: The IPv6 address of the client
          type: string
        description:
          description: Short description of the client
          type: string
        firstSeen:
          description: Timestamp client was first seen in the network
          type: integer
        lastSeen:
          description: Timestamp client was last seen in the network
          type: integer
        manufacturer:
          description: Manufacturer of the client
          type: string
        os:
          description: The operating system of the client
          type: string
        user:
          description: The username of the user of the client
          type: string
        vlan:
          description: The name of the VLAN that the client is connected to
          type: string
        ssid:
          description: The name of the SSID that the client is connected to
          type: string
        switchport:
          description: The switch port that the client is connected to
          type: string
        wirelessCapabilities:
          description: Wireless capabilities of the client
          type: string
        smInstalled:
          description: Status of SM for the client
          type: boolean
        recentDeviceMac:
          description: The MAC address of the node that the device was last connected
            to
          type: string
        status:
          description: The connection status of the client
          enum:
          - Offline
          - Online
          type: string
        usage:
          $ref: '#/components/schemas/inline_response_200_23_usage'
        namedVlan:
          description: Named VLAN of the client
          type: string
        adaptivePolicyGroup:
          description: The adaptive policy group of the client
          type: string
        deviceTypePrediction:
          description: Prediction of the client's device type
          type: string
        recentDeviceSerial:
          description: The serial of the node the device was last connected to
          type: string
        recentDeviceName:
          description: The name of the node the device was last connected to
          type: string
        recentDeviceConnection:
          description: Client's most recent connection type
          enum:
          - Wired
          - Wireless
          type: string
        notes:
          description: Notes on the client
          type: string
        ip6Local:
          description: Local IPv6 address of the client
          type: string
        groupPolicy8021x:
          description: 802.1x group policy of the client
          type: string
      type: object
    inline_response_200_20:
      example:
        dnsNameservers: dnsNameservers
        mandatoryDhcp:
          enabled: true
        subnet: subnet
        dhcpHandling: Do not respond to DHCP requests
        dhcpOptions:
        - code: code
          type: hex
          value: value
        - code: code
          type: hex
          value: value
        dhcpBootOptionsEnabled: true
        dhcpBootNextServer: dhcpBootNextServer
        fixedIpAssignments: '{}'
        dhcpLeaseTime: 1 day
        vpnNatSubnet: vpnNatSubnet
        dhcpRelayServerIps:
        - dhcpRelayServerIps
        - dhcpRelayServerIps
        ipv6:
          prefixAssignments:
          - staticPrefix: staticPrefix
            origin:
              interfaces:
              - interfaces
              - interfaces
              type: independent
            autonomous: true
            staticApplianceIp6: staticApplianceIp6
          - staticPrefix: staticPrefix
            origin:
              interfaces:
              - interfaces
              - interfaces
              type: independent
            autonomous: true
            staticApplianceIp6: staticApplianceIp6
          enabled: true
        name: name
        templateVlanType: same
        cidr: cidr
        id: id
        interfaceId: interfaceId
        applianceIp: applianceIp
        groupPolicyId: groupPolicyId
        dhcpBootFilename: dhcpBootFilename
        reservedIpRanges:
        - start: start
          end: end
          comment: comment
        - start: start
          end: end
          comment: comment
        mask: 0
      properties:
        id:
          description: The VLAN ID of the VLAN
          type: string
        interfaceId:
          description: The interface ID of the VLAN
          type: string
        name:
          description: The name of the VLAN
          type: string
        subnet:
          description: The subnet of the VLAN
          type: string
        applianceIp:
          description: The local IP of the appliance on the VLAN
          type: string
        groupPolicyId:
          description: The id of the desired group policy to apply to the VLAN
          type: string
        templateVlanType:
          default: same
          description: Type of subnetting of the VLAN. Applicable only for template
            network.
          enum:
          - same
          - unique
          type: string
        cidr:
          description: CIDR of the pool of subnets. Applicable only for template network.
            Each network bound to the template will automatically pick a subnet from
            this pool to build its own VLAN.
          type: string
        mask:
          description: Mask used for the subnet of all bound to the template networks.
            Applicable only for template network.
          type: integer
        dhcpRelayServerIps:
          description: The IPs of the DHCP servers that DHCP requests should be relayed
            to
          items:
            type: string
          type: array
        dhcpHandling:
          description: 'The appliance''s handling of DHCP requests on this VLAN. One
            of: ''Run a DHCP server'', ''Relay DHCP to another server'' or ''Do not
            respond to DHCP requests'''
          enum:
          - Do not respond to DHCP requests
          - Relay DHCP to another server
          - Run a DHCP server
          type: string
        dhcpLeaseTime:
          description: 'The term of DHCP leases if the appliance is running a DHCP
            server on this VLAN. One of: ''30 minutes'', ''1 hour'', ''4 hours'',
            ''12 hours'', ''1 day'' or ''1 week'''
          enum:
          - 1 day
          - 1 hour
          - 1 week
          - 12 hours
          - 30 minutes
          - 4 hours
          type: string
        dhcpBootOptionsEnabled:
          description: Use DHCP boot options specified in other properties
          type: boolean
        dhcpBootNextServer:
          description: DHCP boot option to direct boot clients to the server to load
            the boot file from
          type: string
        dhcpBootFilename:
          description: DHCP boot option for boot filename
          type: string
        fixedIpAssignments:
          description: The DHCP fixed IP assignments on the VLAN. This should be an
            object that contains mappings from MAC addresses to objects that themselves
            each contain "ip" and "name" string fields. See the sample request/response
            for more details.
          properties: {}
          type: object
        reservedIpRanges:
          description: The DHCP reserved IP ranges on the VLAN
          items:
            $ref: '#/components/schemas/_networks__networkId__appliance_vlans_reservedIpRanges'
          type: array
        dnsNameservers:
          description: The DNS nameservers used for DHCP responses, either "upstream_dns",
            "google_dns", "opendns", or a newline seperated string of IP addresses
            or domain names
          type: string
        dhcpOptions:
          description: The list of DHCP options that will be included in DHCP responses.
            Each object in the list should have "code", "type", and "value" properties.
          items:
            $ref: '#/components/schemas/_networks__networkId__appliance_vlans_dhcpOptions'
          type: array
        vpnNatSubnet:
          description: The translated VPN subnet if VPN and VPN subnet translation
            are enabled on the VLAN
          type: string
        mandatoryDhcp:
          $ref: '#/components/schemas/_networks__networkId__appliance_vlans_mandatoryDhcp'
        ipv6:
          $ref: '#/components/schemas/_networks__networkId__appliance_vlans_ipv6'
      type: object
    inline_response_200_29:
      example:
        reasons:
        - comment: comment
          category: broke old features
        - comment: comment
          category: broke old features
        stages:
        - milestones:
            completedAt: 2000-01-23T04:56:07.000+00:00
            canceledAt: 2000-01-23T04:56:07.000+00:00
            scheduledFor: 2000-01-23T04:56:07.000+00:00
            startedAt: 2000-01-23T04:56:07.000+00:00
          group:
            name: name
            description: description
            id: id
          status: status
        - milestones:
            completedAt: 2000-01-23T04:56:07.000+00:00
            canceledAt: 2000-01-23T04:56:07.000+00:00
            scheduledFor: 2000-01-23T04:56:07.000+00:00
            startedAt: 2000-01-23T04:56:07.000+00:00
          group:
            name: name
            description: description
            id: id
          status: status
        products:
          switch:
            nextUpgrade:
              toVersion:
                id: id
                shortName: shortName
      properties:
        products:
          $ref: '#/components/schemas/inline_response_200_29_products'
        stages:
          description: The ordered stages in the network
          items:
            $ref: '#/components/schemas/inline_response_200_29_stages'
          type: array
        reasons:
          description: Reasons for the rollback
          items:
            $ref: '#/components/schemas/inline_response_200_28_reasons'
          type: array
      type: object
    _networks__networkId__switch_linkAggregations_switchPorts:
      properties:
        serial:
          description: Serial number of the switch.
          type: string
        portId:
          description: 'Port identifier of switch port. For modules, the identifier
            is "SlotNumber_ModuleType_PortNumber" (Ex: "1_8X10G_1"), otherwise it
            is just the port number (Ex: "8").'
          type: string
      required:
      - portId
      - serial
      type: object
    inline_response_200_26:
      example:
        description: description
        category: category
        type: type
      properties:
        category:
          description: Event category
          type: string
        type:
          description: Event type
          type: string
        description:
          description: Description of the event
          type: string
      type: object
    inline_response_200_25:
      example:
        pageEndAt: pageEndAt
        pageStartAt: pageStartAt
        message: message
        events:
        - ssidNumber: 0
          deviceSerial: deviceSerial
          occurredAt: occurredAt
          clientId: clientId
          eventData:
            client_mac: client_mac
            rssi: rssi
            vap: vap
            channel: channel
            client_ip: client_ip
            aid: aid
            radio: radio
          clientDescription: clientDescription
          clientMac: clientMac
          description: description
          networkId: networkId
          type: type
          category: category
          deviceName: deviceName
        - ssidNumber: 0
          deviceSerial: deviceSerial
          occurredAt: occurredAt
          clientId: clientId
          eventData:
            client_mac: client_mac
            rssi: rssi
            vap: vap
            channel: channel
            client_ip: client_ip
            aid: aid
            radio: radio
          clientDescription: clientDescription
          clientMac: clientMac
          description: description
          networkId: networkId
          type: type
          category: category
          deviceName: deviceName
      properties:
        message:
          description: A message regarding the events sent. Usually 'null' unless
            there are no events
          type: string
        pageStartAt:
          description: An UTC ISO8601 string of the earliest occured at time of the
            listed events of the page.
          type: string
        pageEndAt:
          description: An UTC ISO8601 string of the latest occured at time of the
            listed events of the page.
          type: string
        events:
          description: An array of events that took place in the network.
          items:
            $ref: '#/components/schemas/inline_response_200_25_events'
          type: array
      type: object
    _networks__networkId__appliance_singleLan_ipv6:
      description: IPv6 configuration on the VLAN
      properties:
        enabled:
          description: Enable IPv6 on VLAN.
          type: boolean
        prefixAssignments:
          description: Prefix assignments on the VLAN
          items:
            $ref: '#/components/schemas/_networks__networkId__appliance_singleLan_ipv6_prefixAssignments'
          type: array
      type: object
    inline_response_200_28:
      example:
        upgradeBatchId: upgradeBatchId
        product: appliance
        reasons:
        - comment: comment
          category: broke old features
        - comment: comment
          category: broke old features
        time: 2000-01-23T04:56:07.000+00:00
        status: canceled
        toVersion:
          releaseDate: 2000-01-23T04:56:07.000+00:00
          releaseType: releaseType
          id: id
          shortName: shortName
          firmware: firmware
      properties:
        product:
          description: Product type to rollback (if the network is a combined network)
          enum:
          - appliance
          - camera
          - cellularGateway
          - switch
          - wireless
          type: string
        status:
          description: Status of the rollback
          enum:
          - canceled
          - completed
          - in_progress
          - pending
          type: string
        upgradeBatchId:
          description: Batch ID of the firmware rollback
          type: string
        time:
          description: Scheduled time for the rollback
          format: date-time
          type: string
        toVersion:
          $ref: '#/components/schemas/inline_response_200_28_toVersion'
        reasons:
          description: Reasons for the rollback
          items:
            $ref: '#/components/schemas/inline_response_200_28_reasons'
          type: array
      type: object
    _networks__networkId__health_alerts_scope_lldp:
      description: Lldp information
      example:
        portId: portId
      properties:
        portId:
          description: Port Id
          type: string
      type: object
    inline_response_200_27:
      example:
        upgradeWindow:
          dayOfWeek: fri
          hourOfDay: 0:00
        timezone: timezone
        products:
          appliance:
            lastUpgrade:
              fromVersion:
                releaseDate: 2000-01-23T04:56:07.000+00:00
                releaseType: releaseType
                id: id
                shortName: shortName
                firmware: firmware
              time: 2000-01-23T04:56:07.000+00:00
              toVersion:
                releaseDate: 2000-01-23T04:56:07.000+00:00
                releaseType: releaseType
                id: id
                shortName: shortName
                firmware: firmware
            participateInNextBetaRelease: true
            nextUpgrade:
              time: 2000-01-23T04:56:07.000+00:00
              toVersion:
                releaseDate: 2000-01-23T04:56:07.000+00:00
                releaseType: releaseType
                id: id
                shortName: shortName
                firmware: firmware
            currentVersion:
              releaseDate: 2000-01-23T04:56:07.000+00:00
              releaseType: releaseType
              id: id
              shortName: shortName
              firmware: firmware
            availableVersions:
            - releaseDate: 2000-01-23T04:56:07.000+00:00
              releaseType: releaseType
              id: id
              shortName: shortName
              firmware: firmware
            - releaseDate: 2000-01-23T04:56:07.000+00:00
              releaseType: releaseType
              id: id
              shortName: shortName
              firmware: firmware
          cellularGateway:
            lastUpgrade:
              fromVersion:
                releaseDate: 2000-01-23T04:56:07.000+00:00
                releaseType: releaseType
                id: id
                shortName: shortName
                firmware: firmware
              time: 2000-01-23T04:56:07.000+00:00
              toVersion:
                releaseDate: 2000-01-23T04:56:07.000+00:00
                releaseType: releaseType
                id: id
                shortName: shortName
                firmware: firmware
            participateInNextBetaRelease: true
            nextUpgrade:
              time: 2000-01-23T04:56:07.000+00:00
              toVersion:
                releaseDate: 2000-01-23T04:56:07.000+00:00
                releaseType: releaseType
                id: id
                shortName: shortName
                firmware: firmware
            currentVersion:
              releaseDate: 2000-01-23T04:56:07.000+00:00
              releaseType: releaseType
              id: id
              shortName: shortName
              firmware: firmware
            availableVersions:
            - releaseDate: 2000-01-23T04:56:07.000+00:00
              releaseType: releaseType
              id: id
              shortName: shortName
              firmware: firmware
            - releaseDate: 2000-01-23T04:56:07.000+00:00
              releaseType: releaseType
              id: id
              shortName: shortName
              firmware: firmware
          wireless:
            lastUpgrade:
              fromVersion:
                releaseDate: 2000-01-23T04:56:07.000+00:00
                releaseType: releaseType
                id: id
                shortName: shortName
                firmware: firmware
              time: 2000-01-23T04:56:07.000+00:00
              toVersion:
                releaseDate: 2000-01-23T04:56:07.000+00:00
                releaseType: releaseType
                id: id
                shortName: shortName
                firmware: firmware
            participateInNextBetaRelease: true
            nextUpgrade:
              time: 2000-01-23T04:56:07.000+00:00
              toVersion:
                releaseDate: 2000-01-23T04:56:07.000+00:00
                releaseType: releaseType
                id: id
                shortName: shortName
                firmware: firmware
            currentVersion:
              releaseDate: 2000-01-23T04:56:07.000+00:00
              releaseType: releaseType
              id: id
              shortName: shortName
              firmware: firmware
            availableVersions:
            - releaseDate: 2000-01-23T04:56:07.000+00:00
              releaseType: releaseType
              id: id
              shortName: shortName
              firmware: firmware
            - releaseDate: 2000-01-23T04:56:07.000+00:00
              releaseType: releaseType
              id: id
              shortName: shortName
              firmware: firmware
          sensor:
            lastUpgrade:
              fromVersion:
                releaseDate: 2000-01-23T04:56:07.000+00:00
                releaseType: releaseType
                id: id
                shortName: shortName
                firmware: firmware
              time: 2000-01-23T04:56:07.000+00:00
              toVersion:
                releaseDate: 2000-01-23T04:56:07.000+00:00
                releaseType: releaseType
                id: id
                shortName: shortName
                firmware: firmware
            participateInNextBetaRelease: true
            nextUpgrade:
              time: 2000-01-23T04:56:07.000+00:00
              toVersion:
                releaseDate: 2000-01-23T04:56:07.000+00:00
                releaseType: releaseType
                id: id
                shortName: shortName
                firmware: firmware
            currentVersion:
              releaseDate: 2000-01-23T04:56:07.000+00:00
              releaseType: releaseType
              id: id
              shortName: shortName
              firmware: firmware
            availableVersions:
            - releaseDate: 2000-01-23T04:56:07.000+00:00
              releaseType: releaseType
              id: id
              shortName: shortName
              firmware: firmware
            - releaseDate: 2000-01-23T04:56:07.000+00:00
              releaseType: releaseType
              id: id
              shortName: shortName
              firmware: firmware
          camera:
            lastUpgrade:
              fromVersion:
                releaseDate: 2000-01-23T04:56:07.000+00:00
                releaseType: releaseType
                id: id
                shortName: shortName
                firmware: firmware
              time: 2000-01-23T04:56:07.000+00:00
              toVersion:
                releaseDate: 2000-01-23T04:56:07.000+00:00
                releaseType: releaseType
                id: id
                shortName: shortName
                firmware: firmware
            participateInNextBetaRelease: true
            nextUpgrade:
              time: 2000-01-23T04:56:07.000+00:00
              toVersion:
                releaseDate: 2000-01-23T04:56:07.000+00:00
                releaseType: releaseType
                id: id
                shortName: shortName
                firmware: firmware
            currentVersion:
              releaseDate: 2000-01-23T04:56:07.000+00:00
              releaseType: releaseType
              id: id
              shortName: shortName
              firmware: firmware
            availableVersions:
            - releaseDate: 2000-01-23T04:56:07.000+00:00
              releaseType: releaseType
              id: id
              shortName: shortName
              firmware: firmware
            - releaseDate: 2000-01-23T04:56:07.000+00:00
              releaseType: releaseType
              id: id
              shortName: shortName
              firmware: firmware
          switch:
            lastUpgrade:
              fromVersion:
                releaseDate: 2000-01-23T04:56:07.000+00:00
                releaseType: releaseType
                id: id
                shortName: shortName
                firmware: firmware
              time: 2000-01-23T04:56:07.000+00:00
              toVersion:
                releaseDate: 2000-01-23T04:56:07.000+00:00
                releaseType: releaseType
                id: id
                shortName: shortName
                firmware: firmware
            participateInNextBetaRelease: true
            nextUpgrade:
              time: 2000-01-23T04:56:07.000+00:00
              toVersion:
                releaseDate: 2000-01-23T04:56:07.000+00:00
                releaseType: releaseType
                id: id
                shortName: shortName
                firmware: firmware
            currentVersion:
              releaseDate: 2000-01-23T04:56:07.000+00:00
              releaseType: releaseType
              id: id
              shortName: shortName
              firmware: firmware
            availableVersions:
            - releaseDate: 2000-01-23T04:56:07.000+00:00
              releaseType: releaseType
              id: id
              shortName: shortName
              firmware: firmware
            - releaseDate: 2000-01-23T04:56:07.000+00:00
              releaseType: releaseType
              id: id
              shortName: shortName
              firmware: firmware
      properties:
        upgradeWindow:
          $ref: '#/components/schemas/inline_response_200_27_upgradeWindow'
        timezone:
          description: The timezone for the network
          type: string
        products:
          $ref: '#/components/schemas/inline_response_200_27_products'
      type: object
    inline_response_200_authentication_api:
      description: API authentication
      example:
        key:
          created: true
      properties:
        key:
          $ref: '#/components/schemas/inline_response_200_authentication_api_key'
      type: object
    _networks__networkId__wireless_ssids__number__splash_settings_sentryEnrollment_systemsManagerNetwork:
      description: Systems Manager network targeted for sentry enrollment.
      properties:
        id:
          description: The network ID of the Systems Manager network.
          type: string
      required:
      - id
      type: object
    _networks__networkId__appliance_singleLan_ipv6_origin:
      description: The origin of the prefix
      properties:
        type:
          description: Type of the origin
          enum:
          - independent
          - internet
          type: string
        interfaces:
          description: Interfaces associated with the prefix
          items:
            type: string
          type: array
      required:
      - type
      type: object
    _networks__networkId__appliance_firewall_cellularFirewallRules_rules:
      properties:
        comment:
          description: Description of the rule (optional)
          type: string
        policy:
          description: '''allow'' or ''deny'' traffic specified by this rule'
          enum:
          - allow
          - deny
          type: string
        protocol:
          description: The type of protocol (must be 'tcp', 'udp', 'icmp', 'icmp6'
            or 'any')
          enum:
          - any
          - icmp
          - icmp6
          - tcp
          - udp
          type: string
        srcPort:
          description: Comma-separated list of source port(s) (integer in the range
            1-65535), or 'any'
          type: string
        srcCidr:
          description: 'Comma-separated list of source IP address(es) (in IP or CIDR
            notation), or ''any'' (note: FQDN not supported for source addresses)'
          type: string
        destPort:
          description: Comma-separated list of destination port(s) (integer in the
            range 1-65535), or 'any'
          type: string
        destCidr:
          description: Comma-separated list of destination IP address(es) (in IP or
            CIDR notation), fully-qualified domain names (FQDN) or 'any'
          type: string
        syslogEnabled:
          description: Log this rule to syslog (true or false, boolean value) - only
            applicable if a syslog has been configured (optional)
          type: boolean
      required:
      - destCidr
      - policy
      - protocol
      - srcCidr
      type: object
    inline_response_200_55:
      example:
        memFree: 6
        networkSent: 2
        swapUsed: 9
        networkReceived: 7
        cpuPercentUsed: 0.8008282
        diskUsage:
          c:
            used: 3
            space: 2
        memWired: 1
        memActive: 5
        memInactive: 5
        ts: ts
      properties:
        cpuPercentUsed:
          description: The percentage of CPU used as a decimal format.
          format: float
          type: number
        memFree:
          description: Memory that is not yet in use by the system.
          type: integer
        memWired:
          description: Memory used for core OS functions on the device.
          type: integer
        memActive:
          description: The active RAM on the device.
          type: integer
        memInactive:
          description: The inactive RAM on the device.
          type: integer
        networkSent:
          description: Network bandwith transmitted.
          type: integer
        networkReceived:
          description: Network bandwith received.
          type: integer
        swapUsed:
          description: The amount of space being used on the startup disk to swap
            unused files to and from RAM.
          type: integer
        diskUsage:
          $ref: '#/components/schemas/_networks__networkId__sm_devices__deviceId__performanceHistory_diskUsage'
        ts:
          description: The time at which the performance was measured.
          type: string
      type: object
    _networks__networkId__appliance_vlans_reservedIpRanges:
      example:
        start: start
        end: end
        comment: comment
      properties:
        start:
          description: The first IP in the reserved range
          type: string
        end:
          description: The last IP in the reserved range
          type: string
        comment:
          description: A text comment for the reserved range
          type: string
      type: object
    inline_response_200_54:
      example:
        subnet: subnet
        dhcpServer: dhcpServer
        ip: ip
        name: name
        id: id
        dnsServer: dnsServer
        gateway: gateway
        mac: mac
      properties:
        dhcpServer:
          description: The IP address of the DCHP Server.
          type: string
        dnsServer:
          description: The IP address of the DNS Server.
          type: string
        gateway:
          description: The IP address of the Gateway.
          type: string
        id:
          description: The Meraki Id of the network adapter record.
          type: string
        ip:
          description: The IP address of the network adapter.
          type: string
        mac:
          description: The MAC associated with the network adapter.
          type: string
        name:
          description: The name of the newtwork adapter.
          type: string
        subnet:
          description: The subnet for the network adapter.
          type: string
      type: object
    inline_response_200_57:
      example:
        redemptionCode: 1
        identifier: identifier
        shortVersion: shortVersion
        installedAt: installedAt
        toUninstall: true
        toInstall: true
        deviceId: deviceId
        version: version
        isManaged: true
        createdAt: createdAt
        licenseKey: licenseKey
        path: path
        dynamicSize: 6
        bundleSize: 0
        uninstalledAt: uninstalledAt
        vendor: vendor
        appId: appId
        name: name
        id: id
        iosRedemptionCode: true
        itunesId: itunesId
        status: status
        updatedAt: updatedAt
      properties:
        appId:
          description: The Meraki managed application Id for this record on a particular
            device.
          type: string
        bundleSize:
          description: The size of the software bundle.
          type: integer
        createdAt:
          description: When the Meraki record for the software was created.
          type: string
        deviceId:
          description: The Meraki managed device Id.
          type: string
        dynamicSize:
          description: The size of the data stored in the application.
          type: integer
        id:
          description: The Meraki software Id.
          type: string
        identifier:
          description: Software bundle identifier.
          type: string
        installedAt:
          description: When the Software was installed on the device.
          type: string
        toInstall:
          description: A boolean indicating this software record should be installed
            on the associated device.
          type: boolean
        iosRedemptionCode:
          description: A boolean indicating whether or not an iOS redemption code
            was used.
          type: boolean
        isManaged:
          description: A boolean indicating whether or not the software is managed
            by Meraki.
          type: boolean
        itunesId:
          description: The itunes numerical identifier.
          type: string
        licenseKey:
          description: The license key associated with this software installation.
          type: string
        name:
          description: The name of the software.
          type: string
        path:
          description: The path on the device where the software record is located.
          type: string
        redemptionCode:
          description: The redemption code used for this software.
          type: integer
        shortVersion:
          description: Short version notation for the software.
          type: string
        status:
          description: The management status of the software.
          type: string
        toUninstall:
          description: A boolean indicating this software record should be uninstalled
            on the associated device.
          type: boolean
        uninstalledAt:
          description: When the record was uninstalled from the device.
          type: string
        updatedAt:
          description: When the record was last updated by Meraki.
          type: string
        vendor:
          description: The vendor of the software.
          type: string
        version:
          description: Full version notation for the software.
          type: string
      type: object
    inline_response_200_56:
      example:
        fireWallName: fireWallName
        isDiskEncrypted: true
        isAutoLoginDisabled: true
        id: id
        antiVirusName: antiVirusName
        isFireWallEnabled: true
        isRooted: true
        hasAntiVirus: true
        hasFireWallInstalled: true
        runningProcs: runningProcs
      properties:
        isRooted:
          description: Boolean indicating if the device is rooted.
          type: boolean
        hasAntiVirus:
          description: Boolean indicating if the device has Antivirus.
          type: boolean
        antiVirusName:
          description: The name of the Antivirus.
          type: string
        isFireWallEnabled:
          description: Boolean indicating if the device has a Firewall enabled.
          type: boolean
        hasFireWallInstalled:
          description: Boolean indicating if the device has a Firewall installed.
          type: boolean
        fireWallName:
          description: The name of the Firewall.
          type: string
        isDiskEncrypted:
          description: Boolean indicating if the device has disk encryption.
          type: boolean
        isAutoLoginDisabled:
          description: Boolean indicating if the device has auto login disabled.
          type: boolean
        id:
          description: The Meraki identifier for the security center record.
          type: string
        runningProcs:
          description: A comma seperated list of procs running on the device.
          type: string
      type: object
    inline_response_200_51:
      example:
        networkDevice: networkDevice
        networkDriver: networkDriver
        subnet: subnet
        wifiBssid: wifiBssid
        dhcpServer: dhcpServer
        wifiSsid: wifiSsid
        ip: ip
        publicIP: publicIP
        wifiAuth: wifiAuth
        wifiNoise: wifiNoise
        measuredAt: measuredAt
        wifiRssi: wifiRssi
        wifiChannel: wifiChannel
        dnsServer: dnsServer
        user: user
        networkMTU: networkMTU
        gateway: gateway
        ts: ts
      properties:
        measuredAt:
          description: The time the data was measured at.
          type: string
        user:
          description: The user during connection.
          type: string
        networkDevice:
          description: The network device for the device used for connection.
          type: string
        networkDriver:
          description: The network driver for the device.
          type: string
        wifiChannel:
          description: Channel through which the connection is routing.
          type: string
        wifiAuth:
          description: The type of authentication used by the SSID.
          type: string
        wifiBssid:
          description: The MAC of the access point the device is connected to.
          type: string
        wifiSsid:
          description: The name of the network the device is connected to.
          type: string
        wifiRssi:
          description: The Received Signal Strength Indicator for the device.
          type: string
        wifiNoise:
          description: The wireless signal power level received by the device.
          type: string
        dhcpServer:
          description: The IP address of the DCHP Server.
          type: string
        ip:
          description: The IP of the device during connection.
          type: string
        networkMTU:
          description: The network max transmission unit.
          type: string
        subnet:
          description: The subnet of the device connection.
          type: string
        gateway:
          description: The gateway IP the device was connected to.
          type: string
        publicIP:
          description: The public IP address of the device.
          type: string
        dnsServer:
          description: The DNS Server during the connection.
          type: string
        ts:
          description: The time the connection was logged.
          type: string
      type: object
    inline_response_200_50:
      example:
        lastSeenAt: lastSeenAt
        firstSeenAt: firstSeenAt
      properties:
        firstSeenAt:
          description: When the device was first seen as connected to the internet
            in each connection.
          type: string
        lastSeenAt:
          description: When the device was last seen as connected to the internet
            in each connection.
          type: string
      type: object
    inline_response_200_29_products:
      description: The network devices to be updated
      example:
        switch:
          nextUpgrade:
            toVersion:
              id: id
              shortName: shortName
      properties:
        switch:
          $ref: '#/components/schemas/inline_response_200_29_products_switch'
      type: object
    inline_response_200_53:
      example:
        isEncrypted: true
        name: name
        profileIdentifier: profileIdentifier
        id: id
        profileData: profileData
        deviceId: deviceId
        version: version
        isManaged: true
      properties:
        deviceId:
          description: The Meraki managed device Id.
          type: string
        id:
          description: The numerical Meraki Id of the profile.
          type: string
        isEncrypted:
          description: A boolean indicating if the profile is encrypted.
          type: boolean
        isManaged:
          description: Whether or not the profile is managed by Meraki.
          type: boolean
        profileData:
          description: A string containing a JSON object with the profile data.
          type: string
        profileIdentifier:
          description: The identifier of the profile.
          type: string
        name:
          description: The name of the profile.
          type: string
        version:
          description: The verison of the profile.
          type: string
      type: object
    inline_response_200_52:
      example:
        name: name
        action: action
        details: details
        dashboardUser: dashboardUser
        ts: ts
      properties:
        action:
          description: The type of command sent to the device.
          type: string
        name:
          description: The name of the device to which the command is sent.
          type: string
        details:
          description: A JSON string object containing command details.
          type: string
        dashboardUser:
          description: The Meraki dashboard user who initiated the command.
          type: string
        ts:
          description: The time the command was sent to the device.
          type: string
      type: object
    _organizations__organizationId__devices_availabilities_network:
      description: Network info.
      example:
        id: id
      properties:
        id:
          description: ID for the network containing the device.
          type: string
      type: object
    inline_response_200_59:
      example:
        scope: scope
        name: name
        description: description
        id: id
        tags:
        - tags
        - tags
      properties:
        id:
          description: ID of a profile.
          type: string
        name:
          description: Name of a profile.
          type: string
        description:
          description: Description of a profile.
          type: string
        scope:
          description: Scope of a profile.
          type: string
        tags:
          description: Tags of a profile.
          items:
            type: string
          type: array
      type: object
    inline_response_200_58:
      example:
        createdAt: createdAt
        xml: xml
        id: id
      properties:
        createdAt:
          description: When the Meraki record for the wlanList was created.
          type: string
        id:
          description: The Meraki managed Id of the wlanList record.
          type: string
        xml:
          description: An XML string containing the WLAN List for the device.
          type: string
      type: object
    inline_response_200_60:
      example:
        ssidName: ssidName
        scope: scope
        name: name
        timeboundType: dynamic
        id: id
        accessStartAt: 2000-01-23T04:56:07.000+00:00
        tags:
        - tags
        - tags
        accessEndAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          description: device ID
          type: string
        ssidName:
          description: SSID name
          type: string
        name:
          description: device name
          type: string
        scope:
          description: scope
          type: string
        tags:
          description: device tags
          items:
            type: string
          type: array
        timeboundType:
          description: type of access period, either a static range or a dynamic period
          enum:
          - dynamic
          - static
          type: string
        accessStartAt:
          description: time that access starts
          format: date-time
          type: string
        accessEndAt:
          description: time that access ends
          format: date-time
          type: string
      type: object
    _organizations__organizationId__devices_powerModules_statuses_byDevice_network:
      description: Network info.
      example:
        id: id
      properties:
        id:
          description: ID for the network that the device is associated with.
          type: string
      type: object
    inline_response_200_27_upgradeWindow:
      description: Upgrade window for devices in network
      example:
        dayOfWeek: fri
        hourOfDay: 0:00
      properties:
        dayOfWeek:
          description: Day of the week
          enum:
          - fri
          - friday
          - mon
          - monday
          - sat
          - saturday
          - sun
          - sunday
          - thu
          - thursday
          - tue
          - tuesday
          - wed
          - wednesday
          type: string
        hourOfDay:
          description: Hour of the day
          enum:
          - 0:00
          - 10:00
          - 11:00
          - 12:00
          - 13:00
          - 14:00
          - 15:00
          - 16:00
          - 17:00
          - 18:00
          - 19:00
          - 1:00
          - 20:00
          - 21:00
          - 22:00
          - 23:00
          - 2:00
          - 3:00
          - 4:00
          - 5:00
          - 6:00
          - 7:00
          - 8:00
          - 9:00
          type: string
      type: object
    _organizations__organizationId__wireless_devices_ethernet_statuses_network:
      description: Network details object
      example:
        id: id
      properties:
        id:
          description: The network ID the AP is associated to
          type: string
      type: object
    _organizations__organizationId__summary_top_ssids_byUsage_usage:
      description: Date usage of the SSID, in megabytes
      example:
        total: 0.8008282
        upstream: 1.4658129
        percentage: 5.962134
        downstream: 6.0274563
      properties:
        total:
          description: Total usage of the SSID
          format: float
          type: number
        downstream:
          description: Downstream usage of the SSID
          format: float
          type: number
        upstream:
          description: Upstream usage of the SSID
          format: float
          type: number
        percentage:
          description: Percentage usage of the SSID
          format: float
          type: number
      type: object
    inline_response_200_44:
      example:
        notes: notes
        serial: serial
        name: name
        wifiMac: wifiMac
        id: id
      properties:
        id:
          description: The Meraki Id of the device record.
          type: string
        name:
          description: The name of the device.
          type: string
        wifiMac:
          description: The MAC of the device.
          type: string
        serial:
          description: The device serial.
          type: string
        notes:
          description: Notes associated with the device.
          type: string
      type: object
    inline_response_200_43:
      example:
        ids:
        - ids
        - ids
      properties:
        ids:
          description: The Meraki Ids of the set of devices.
          items:
            type: string
          type: array
      type: object
    inline_response_200_46:
      example:
        ids:
        - ids
        - ids
        newNetwork: newNetwork
      properties:
        ids:
          description: The Meraki Ids of the set of devices.
          items:
            type: string
          type: array
        newNetwork:
          description: The network to which the devices was moved.
          type: string
      type: object
    inline_response_200_45:
      example:
        serial: serial
        wifiMac: wifiMac
        id: id
        tags:
        - tags
        - tags
      properties:
        id:
          description: The Meraki Id of the device record.
          type: string
        tags:
          description: An array of tags associated with the device.
          items:
            type: string
          type: array
        wifiMac:
          description: The MAC of the device.
          type: string
        serial:
          description: The device serial.
          type: string
      type: object
    inline_response_200_40:
      example:
        relationships:
          livestream:
            relatedDevices:
            - serial: serial
              productType: camera
            - serial: serial
              productType: camera
        device:
          serial: serial
          name: name
          productType: camera
      properties:
        device:
          $ref: '#/components/schemas/_networks__networkId__sensor_relationships_device'
        relationships:
          $ref: '#/components/schemas/_networks__networkId__sensor_relationships_relationships'
      type: object
    inline_response_200_42:
      example:
        serialNumber: serialNumber
        notes: notes
        systemModel: systemModel
        serial: serial
        ip: ip
        name: name
        wifiMac: wifiMac
        id: id
        osName: osName
        ssid: ssid
        uuid: uuid
        tags:
        - tags
        - tags
      properties:
        id:
          description: The Meraki Id of the device record.
          type: string
        name:
          description: The name of the device.
          type: string
        tags:
          description: An array of tags associated with the device.
          items:
            type: string
          type: array
        ssid:
          description: The name of the SSID the device was last connected to.
          type: string
        wifiMac:
          description: The MAC of the device.
          type: string
        osName:
          description: The name of the device OS.
          type: string
        systemModel:
          description: The device model.
          type: string
        uuid:
          description: The UUID of the device.
          type: string
        serialNumber:
          description: The device serial number.
          type: string
        serial:
          description: The device serial.
          type: string
        ip:
          description: The IP address of the device.
          type: string
        notes:
          description: Notes associated with the device.
          type: string
      type: object
    inline_response_200_41:
      example:
        securePort:
          enabled: true
        clientPrivacy:
          expireDataOlderThan: 0
          expireDataBefore: 2000-01-23T04:56:07.000+00:00
        remoteStatusPageEnabled: true
        namedVlans:
          enabled: true
        localStatusPage:
          authentication:
            enabled: true
            username: username
        fips:
          enabled: true
        localStatusPageEnabled: true
      properties:
        localStatusPageEnabled:
          description: Enables / disables the local device status pages (<a target='_blank'
            href='http://my.meraki.com/'>my.meraki.com, </a><a target='_blank' href='http://ap.meraki.com/'>ap.meraki.com,
            </a><a target='_blank' href='http://switch.meraki.com/'>switch.meraki.com,
            </a><a target='_blank' href='http://wired.meraki.com/'>wired.meraki.com</a>).
            Optional (defaults to false)
          type: boolean
        remoteStatusPageEnabled:
          description: Enables / disables access to the device status page (<a target='_blank'>http://[device's
            LAN IP])</a>. Optional. Can only be set if localStatusPageEnabled is set
            to true
          type: boolean
        localStatusPage:
          $ref: '#/components/schemas/inline_response_200_41_localStatusPage'
        securePort:
          $ref: '#/components/schemas/inline_response_200_41_securePort'
        fips:
          $ref: '#/components/schemas/inline_response_200_41_fips'
        namedVlans:
          $ref: '#/components/schemas/inline_response_200_41_namedVlans'
        clientPrivacy:
          $ref: '#/components/schemas/inline_response_200_41_clientPrivacy'
      type: object
    inline_response_200_48:
      example:
        received: 0.8008282
        sent: 6.0274563
        ts: ts
      properties:
        received:
          description: The amount of cellular data received by the device.
          format: float
          type: number
        sent:
          description: The amount of cellular sent received by the device.
          format: float
          type: number
        ts:
          description: When the cellular usage data was collected.
          type: string
      type: object
    inline_response_200_47:
      example:
        id: id
      properties:
        id:
          description: The Meraki Id of the devices.
          type: string
      type: object
    inline_response_200_49:
      example:
        notValidBefore: notValidBefore
        subject: subject
        notValidAfter: notValidAfter
        name: name
        certPem: certPem
        id: id
        deviceId: deviceId
        issuer: issuer
      properties:
        name:
          description: The name of the certificate.
          type: string
        notValidAfter:
          description: The date after which the certificate is no longer valid.
          type: string
        notValidBefore:
          description: The date before which the certificate is not valid.
          type: string
        certPem:
          description: The PEM of the certificate.
          type: string
        deviceId:
          description: The Meraki managed device Id.
          type: string
        issuer:
          description: The certificate issuer.
          type: string
        subject:
          description: The subject of the certificate.
          type: string
        id:
          description: The Meraki Id of the certificate record.
          type: string
      type: object
    _networks__networkId__camera_qualityRetentionProfiles_videoSettings_MV93:
      description: Quality and resolution for MV93 camera models.
      properties:
        quality:
          description: Quality of the camera. Can be one of 'Standard', 'Enhanced'
            or 'High'.
          enum:
          - Enhanced
          - High
          - Standard
          type: string
        resolution:
          description: Resolution of the camera. Can be one of '1080x1080' or '2112x2112'.
          enum:
          - 1080x1080
          - 2112x2112
          type: string
      required:
      - quality
      - resolution
      type: object
    _networks__networkId__merakiAuthUsers__merakiAuthUserId__authorizations:
      properties:
        ssidNumber:
          description: SSID for which the user is being authorized
          type: integer
        expiresAt:
          default: Never
          description: Date for authorization to expire. Default is for authorization
            to not expire.
          type: string
      required:
      - ssidNumber
      type: object
    inline_response_200_70_powerExceptions:
      example:
        serial: serial
        powerType: combined
      properties:
        serial:
          description: Serial number of the switch
          type: string
        powerType:
          description: Per switch exception (combined, redundant, useNetworkSetting)
          enum:
          - combined
          - redundant
          - useNetworkSetting
          type: string
      type: object
    inline_response_200_77:
      example:
        endTs: 2000-01-23T04:56:07.000+00:00
        startTs: 2000-01-23T04:56:07.000+00:00
        utilization80211: 6.0274563
        utilizationNon80211: 1.4658129
        utilizationTotal: 0.8008282
      properties:
        startTs:
          description: The start time of the query range
          format: date-time
          type: string
        endTs:
          description: The end time of the query range
          format: date-time
          type: string
        utilizationTotal:
          description: Total channel utilization
          format: float
          type: number
        utilization80211:
          description: Average wifi utilization
          format: float
          type: number
        utilizationNon80211:
          description: Average signal interference
          format: float
          type: number
      type: object
    inline_object_217:
      example:
        enabled: true
      properties:
        enabled:
          description: Boolean for updating SAML SSO enabled settings.
          type: boolean
      type: object
    inline_response_200_76:
      example:
        major: 0
        minor: 6
        majorMinorAssignmentMode: majorMinorAssignmentMode
        scanningEnabled: true
        uuid: uuid
        eslEnabled: true
        advertisingEnabled: true
      properties:
        scanningEnabled:
          description: Whether APs will scan for Bluetooth enabled clients.
          type: boolean
        advertisingEnabled:
          description: Whether APs will advertise beacons.
          type: boolean
        uuid:
          description: The UUID to be used in the beacon identifier.
          type: string
        majorMinorAssignmentMode:
          description: The way major and minor number should be assigned to nodes
            in the network. ('Unique', 'Non-unique')
          type: string
        major:
          description: The major number to be used in the beacon identifier. Only
            valid in 'Non-unique' mode.
          type: integer
        minor:
          description: The minor number to be used in the beacon identifier. Only
            valid in 'Non-unique' mode.
          type: integer
        eslEnabled:
          description: Whether ESL is enabled on this network.
          type: boolean
      type: object
    inline_object_218:
      example:
        x509certSha1Fingerprint: 00:11:22:33:44:55:66:77:88:99:00:11:22:33:44:55:66:77:88:99
        sloLogoutUrl: https://somewhere.com
      properties:
        x509certSha1Fingerprint:
          description: Fingerprint (SHA1) of the SAML certificate provided by your
            Identity Provider (IdP). This will be used for encryption / validation.
          type: string
        sloLogoutUrl:
          description: Dashboard will redirect users to this URL when they sign out.
          type: string
      required:
      - x509certSha1Fingerprint
      type: object
    inline_response_200_79:
      example:
        auth: 6
        success: 5
        dns: 5
        assoc: 0
        dhcp: 1
      properties:
        assoc:
          description: The number of failed association attempts
          type: integer
        auth:
          description: The number of failed authentication attempts
          type: integer
        dhcp:
          description: The number of failed DHCP attempts
          type: integer
        dns:
          description: The number of failed DNS attempts
          type: integer
        success:
          description: The number of successful connection attempts
          type: integer
      type: object
    inline_object_215:
      example:
        name: Web Servers - Datacenter 10
        objectIds: []
      properties:
        name:
          description: A name for the group of network addresses, unique within the
            organization (alphanumeric, space, dash, or underscore characters only)
          type: string
        objectIds:
          description: 'A list of Policy Object ID''s that this NetworkObjectGroup
            should be associated to (note: these ID''s will replace the existing associated
            Policy Objects)'
          items:
            type: integer
          type: array
      type: object
    inline_response_200_78:
      example:
        endTs: 2000-01-23T04:56:07.000+00:00
        startTs: 2000-01-23T04:56:07.000+00:00
        clientCount: 0
      properties:
        startTs:
          description: The start time of the query range
          format: date-time
          type: string
        endTs:
          description: The end time of the query range
          format: date-time
          type: string
        clientCount:
          description: Number of connected clients
          type: integer
      type: object
    inline_object_216:
      example:
        name: Web Servers - Datacenter 10
        type: cidr
        groupIds: []
      properties:
        name:
          description: Name of a policy object, unique within the organization (alphanumeric,
            space, dash, or underscore characters only)
          type: string
        cidr:
          description: CIDR Value of a policy object (e.g. 10.11.12.1/24")
          type: string
        fqdn:
          description: Fully qualified domain name of policy object (e.g. "example.com")
          type: string
        mask:
          description: Mask of a policy object (e.g. "255.255.0.0")
          type: string
        ip:
          description: IP Address of a policy object (e.g. "1.2.3.4")
          type: string
        groupIds:
          description: The IDs of policy object groups the policy object belongs to
          items:
            type: integer
          type: array
      type: object
    _networks__networkId__appliance_settings_dynamicDns:
      description: Dynamic DNS settings for a network
      properties:
        prefix:
          description: Dynamic DNS url prefix. DDNS must be enabled to update
          type: string
        enabled:
          description: Dynamic DNS enabled
          type: boolean
      type: object
    _networks__networkId__switch_dhcpServerPolicy_arpInspection_trustedServers_ipv4:
      description: IPv4 attributes of the trusted server.
      example:
        address: address
      properties:
        address:
          description: IPv4 address of the trusted server.
          type: string
      type: object
    inline_response_200_73:
      example:
        servers:
        - port: 0
          roles:
          - roles
          - roles
          host: host
        - port: 0
          roles:
          - roles
          - roles
          host: host
      properties:
        servers:
          description: List of the syslog servers for this network
          items:
            $ref: '#/components/schemas/inline_response_200_73_servers'
          type: array
      type: object
    inline_object_213:
      example:
        name: Web Servers - Datacenter 10
        category: network
        type: cidr
        groupIds: []
      properties:
        name:
          description: Name of a policy object, unique within the organization (alphanumeric,
            space, dash, or underscore characters only)
          type: string
        category:
          description: 'Category of a policy object (one of: adaptivePolicy, network)'
          type: string
        type:
          description: 'Type of a policy object (one of: adaptivePolicyIpv4Cidr, cidr,
            fqdn, ipAndMask)'
          type: string
        cidr:
          description: CIDR Value of a policy object (e.g. 10.11.12.1/24")
          type: string
        fqdn:
          description: Fully qualified domain name of policy object (e.g. "example.com")
          type: string
        mask:
          description: Mask of a policy object (e.g. "255.255.0.0")
          type: string
        ip:
          description: IP Address of a policy object (e.g. "1.2.3.4")
          type: string
        groupIds:
          description: The IDs of policy object groups the policy object belongs to
          items:
            type: integer
          type: array
      required:
      - category
      - name
      - type
      type: object
    inline_response_200_72:
      example:
        multicastThreshold: 6
        unknownUnicastThreshold: 1
        broadcastThreshold: 0
      properties:
        broadcastThreshold:
          description: Broadcast threshold.
          type: integer
        multicastThreshold:
          description: Multicast threshold.
          type: integer
        unknownUnicastThreshold:
          description: Unknown Unicast threshold.
          type: integer
      type: object
    inline_object_214:
      example:
        name: Web Servers - Datacenter 10
        objectIds: []
      properties:
        name:
          description: A name for the group of network addresses, unique within the
            organization (alphanumeric, space, dash, or underscore characters only)
          type: string
        category:
          description: 'Category of a policy object group (one of: NetworkObjectGroup,
            GeoLocationGroup, PortObjectGroup, ApplicationGroup)'
          type: string
        objectIds:
          description: 'A list of Policy Object ID''s that this NetworkObjectGroup
            should be associated to (note: these ID''s will replace the existing associated
            Policy Objects)'
          items:
            type: integer
          type: array
      required:
      - name
      type: object
    inline_response_200_75:
      example:
        headers:
        - template: template
          name: name
        - template: template
          name: name
        name: name
        type: type
        body: body
        sharing:
          byNetwork:
            adminsCanModify: true
        payloadTemplateId: payloadTemplateId
      properties:
        payloadTemplateId:
          description: Webhook payload template Id
          type: string
        type:
          description: The type of the payload template
          type: string
        name:
          description: The name of the payload template
          type: string
        headers:
          description: The payload template headers, will be rendered as a key-value
            pair in the webhook.
          items:
            $ref: '#/components/schemas/_networks__networkId__webhooks_payloadTemplates_headers'
          type: array
        body:
          description: The body of the payload template, in liquid template
          type: string
        sharing:
          $ref: '#/components/schemas/_networks__networkId__webhooks_payloadTemplates_sharing'
      type: object
    inline_object_211:
      example:
        name: Main Office
        productTypes:
        - appliance
        - switch
        - wireless
        tags:
        - tag1
        - tag2
        timeZone: America/Los_Angeles
        copyFromNetworkId: N_24329156
        notes: Additional description of the network
      properties:
        name:
          description: The name of the new network
          type: string
        productTypes:
          description: The product type(s) of the new network. If more than one type
            is included, the network will be a combined network.
          items:
            enum:
            - appliance
            - camera
            - cellularGateway
            - sensor
            - switch
            - systemsManager
            - wireless
            type: string
          type: array
        tags:
          description: A list of tags to be applied to the network
          items:
            type: string
          type: array
        timeZone:
          description: The timezone of the network. For a list of allowed timezones,
            please see the 'TZ' column in the table in <a target='_blank' href='https://en.wikipedia.org/wiki/List_of_tz_database_time_zones'>this
            article.</a>
          type: string
        copyFromNetworkId:
          description: The ID of the network to copy configuration from. Other provided
            parameters will override the copied configuration, except type which must
            match this network's type exactly.
          type: string
        notes:
          description: Add any notes or additional information about this network
            here.
          type: string
      required:
      - name
      - productTypes
      type: object
    inline_response_200_74:
      example:
        name: name
        networkId: networkId
        id: id
        payloadTemplate:
          name: name
          payloadTemplateId: payloadTemplateId
        url: url
      properties:
        id:
          description: A Base64 encoded ID.
          format: byte
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
        name:
          description: A name for easy reference to the HTTP server
          type: string
        url:
          description: The URL of the HTTP server.
          type: string
        networkId:
          description: A Meraki network ID.
          type: string
        payloadTemplate:
          $ref: '#/components/schemas/_networks__networkId__webhooks_httpServers_payloadTemplate'
      type: object
    inline_object_212:
      example:
        name: Long Island Office
        networkIds:
        - N_1234
        - N_5678
        enrollmentString: my-enrollment-string
      properties:
        name:
          description: The name of the combined network
          type: string
        networkIds:
          description: A list of the network IDs that will be combined. If an ID of
            a combined network is included in this list, the other networks in the
            list will be grouped into that network
          items:
            type: string
          type: array
        enrollmentString:
          description: A unique identifier which can be used for device enrollment
            or easy access through the Meraki SM Registration page or the Self Service
            Portal. Please note that changing this field may cause existing bookmarks
            to break. All networks that are part of this combined network will have
            their enrollment string appended by '-network_type'. If left empty, all
            exisitng enrollment strings will be deleted.
          type: string
      required:
      - name
      - networkIds
      type: object
    _organizations__organizationId__wireless_devices_ethernet_statuses_poe:
      description: PoE details object for the port
      example:
        standard: standard
      properties:
        standard:
          description: The PoE Standard for the port. Can be '802.3at', '802.3af',
            '802.3bt', or null
          type: string
      type: object
    inline_object_210:
      example:
        enforcePasswordExpiration: true
        passwordExpirationDays: 90
        enforceDifferentPasswords: true
        numDifferentPasswords: 3
        enforceStrongPasswords: true
        enforceAccountLockout: true
        accountLockoutAttempts: 3
        enforceIdleTimeout: true
        idleTimeoutMinutes: 30
        enforceTwoFactorAuth: true
        enforceLoginIpRanges: true
        loginIpRanges:
        - 192.195.83.1
        - 192.195.83.255
        apiAuthentication:
          ipRestrictionsForKeys:
            enabled: true
            ranges:
            - 192.195.83.1
            - 192.168.33.33
      properties:
        enforcePasswordExpiration:
          description: Boolean indicating whether users are forced to change their
            password every X number of days.
          type: boolean
        passwordExpirationDays:
          description: Number of days after which users will be forced to change their
            password.
          type: integer
        enforceDifferentPasswords:
          description: Boolean indicating whether users, when setting a new password,
            are forced to choose a new password that is different from any past passwords.
          type: boolean
        numDifferentPasswords:
          description: Number of recent passwords that new password must be distinct
            from.
          type: integer
        enforceStrongPasswords:
          description: 'Boolean indicating whether users will be forced to choose
            strong passwords for their accounts. Strong passwords are at least 8 characters
            that contain 3 of the following: number, uppercase letter, lowercase letter,
            and symbol'
          type: boolean
        enforceAccountLockout:
          description: Boolean indicating whether users' Dashboard accounts will be
            locked out after a specified number of consecutive failed login attempts.
          type: boolean
        accountLockoutAttempts:
          description: Number of consecutive failed login attempts after which users'
            accounts will be locked.
          type: integer
        enforceIdleTimeout:
          description: Boolean indicating whether users will be logged out after being
            idle for the specified number of minutes.
          type: boolean
        idleTimeoutMinutes:
          description: Number of minutes users can remain idle before being logged
            out of their accounts.
          type: integer
        enforceTwoFactorAuth:
          description: Boolean indicating whether users in this organization will
            be required to use an extra verification code when logging in to Dashboard.
            This code will be sent to their mobile phone via SMS, or can be generated
            by the authenticator application.
          type: boolean
        enforceLoginIpRanges:
          description: Boolean indicating whether organization will restrict access
            to Dashboard (including the API) from certain IP addresses.
          type: boolean
        loginIpRanges:
          description: List of acceptable IP ranges. Entries can be single IP addresses,
            IP address ranges, and CIDR subnets.
          items:
            type: string
          type: array
        apiAuthentication:
          $ref: '#/components/schemas/inline_response_200_124_apiAuthentication'
      type: object
    _networks__networkId__firmwareUpgrades_staged_stages_group:
      description: The Staged Upgrade Group
      example:
        name: name
        description: description
        id: id
      properties:
        id:
          description: Id of the Staged Upgrade Group
          type: string
        name:
          description: Name of the Staged Upgrade Group
          type: string
        description:
          description: Description of the Staged Upgrade Group
          type: string
      type: object
    _networks__networkId__camera_qualityRetentionProfiles_videoSettings_MV12_MV22_MV72:
      description: Quality and resolution for MV12/MV22/MV72 camera models.
      properties:
        quality:
          description: Quality of the camera. Can be one of 'Standard', 'Enhanced'
            or 'High'.
          enum:
          - Enhanced
          - High
          - Standard
          type: string
        resolution:
          description: Resolution of the camera. Can be one of '1280x720' or '1920x1080'.
          enum:
          - 1280x720
          - 1920x1080
          type: string
      required:
      - quality
      - resolution
      type: object
    inline_response_200_80:
      example:
        downloadKbps: 6
        uploadKbps: 1
        endTs: 2000-01-23T04:56:07.000+00:00
        startTs: 2000-01-23T04:56:07.000+00:00
        averageKbps: 0
      properties:
        startTs:
          description: The start time of the query range
          format: date-time
          type: string
        endTs:
          description: The end time of the query range
          format: date-time
          type: string
        averageKbps:
          description: Average data rate in kilobytes-per-second
          type: integer
        downloadKbps:
          description: Download rate in kilobytes-per-second
          type: integer
        uploadKbps:
          description: Upload rate in kilobytes-per-second
          type: integer
      type: object
    _networks__networkId__sensor_alerts_profiles_threshold:
      description: Threshold for sensor readings that will cause an alert to be sent.
        This object should contain a single property key matching the condition's
        'metric' value.
      example:
        tvoc:
          concentration: 5
          quality: fair
        door:
          open: true
        pm25:
          concentration: 5
          quality: fair
        temperature:
          celsius: 0.8008282
          fahrenheit: 6.0274563
          quality: fair
        noise:
          ambient:
            level: 2
            quality: fair
        humidity:
          relativePercentage: 1
          quality: fair
        indoorAirQuality:
          score: 7
          quality: fair
        water:
          present: true
      properties:
        temperature:
          $ref: '#/components/schemas/_networks__networkId__sensor_alerts_profiles_threshold_temperature'
        humidity:
          $ref: '#/components/schemas/_networks__networkId__sensor_alerts_profiles_threshold_humidity'
        water:
          $ref: '#/components/schemas/_networks__networkId__sensor_alerts_profiles_threshold_water'
        door:
          $ref: '#/components/schemas/_networks__networkId__sensor_alerts_profiles_threshold_door'
        tvoc:
          $ref: '#/components/schemas/_networks__networkId__sensor_alerts_profiles_threshold_tvoc'
        pm25:
          $ref: '#/components/schemas/_networks__networkId__sensor_alerts_profiles_threshold_pm25'
        noise:
          $ref: '#/components/schemas/_networks__networkId__sensor_alerts_profiles_threshold_noise'
        indoorAirQuality:
          $ref: '#/components/schemas/_networks__networkId__sensor_alerts_profiles_threshold_indoorAirQuality'
      type: object
    inline_response_200_82:
      example:
        avgLatencyMs: 0
        endTs: 2000-01-23T04:56:07.000+00:00
        startTs: 2000-01-23T04:56:07.000+00:00
      properties:
        startTs:
          description: The start time of the query range
          format: date-time
          type: string
        endTs:
          description: The end time of the query range
          format: date-time
          type: string
        avgLatencyMs:
          description: Average latency in milliseconds
          type: integer
      type: object
    _networks__networkId__groupPolicies_scheduling_monday:
      description: The schedule object for Monday.
      properties:
        active:
          description: Whether the schedule is active (true) or inactive (false) during
            the time specified between 'from' and 'to'. Defaults to true.
          type: boolean
        from:
          description: The time, from '00:00' to '24:00'. Must be less than the time
            specified in 'to'. Defaults to '00:00'. Only 30 minute increments are
            allowed.
          type: string
        to:
          description: The time, from '00:00' to '24:00'. Must be greater than the
            time specified in 'from'. Defaults to '24:00'. Only 30 minute increments
            are allowed.
          type: string
      type: object
    inline_response_200_81:
      example:
        ssidNumber: 0
        vlan: 6
        clientMac: clientMac
        serial: serial
        type: type
        failureStep: failureStep
        ts: 2000-01-23T04:56:07.000+00:00
      properties:
        ssidNumber:
          description: SSID Number
          type: integer
        vlan:
          description: LAN
          type: integer
        clientMac:
          description: Client Mac
          type: string
        serial:
          description: Serial Number
          type: string
        failureStep:
          description: 'The failed onboarding step. One of: assoc, auth, dhcp, dns.'
          type: string
        type:
          description: The failure type in the onboarding step
          type: string
        ts:
          description: The timestamp when the client mac failed
          format: date-time
          type: string
      type: object
    _networks__networkId__floorPlans_topLeftCorner:
      description: The longitude and latitude of the top left corner of your floor
        plan.
      properties:
        lat:
          description: Latitude
          format: float
          type: number
        lng:
          description: Longitude
          format: float
          type: number
      type: object
    inline_object_208:
      example:
        deviceSerial: Q234-ABCD-5678
      properties:
        deviceSerial:
          description: The serial number of the device to assign this license to.
            Set this to  null to unassign the license. If a different license is already
            active on the device, this parameter will control queueing/dequeuing this
            license.
          type: string
      type: object
    inline_object_209:
      example:
        destination:
          organizationId: "123"
          mode: addDevices
        licenses:
        - key: Z2AA-BBBB-CCCC
          counts:
          - model: MR Enterprise
            count: 5
      properties:
        destination:
          $ref: '#/components/schemas/_organizations__organizationId__licensing_coterm_licenses_move_destination'
        licenses:
          description: The list of licenses to move
          items:
            $ref: '#/components/schemas/_organizations__organizationId__licensing_coterm_licenses_move_licenses'
          type: array
      required:
      - destination
      - licenses
      type: object
    inline_response_200_66:
      example:
        lastSeenAt: 2000-01-23T04:56:07.000+00:00
        isAllowed: true
        isConfigured: true
        lastAck:
          ipv4:
            address: address
          ts: 2000-01-23T04:56:07.000+00:00
        clientId: clientId
        lastPacket:
          udp:
            length: 4
            checksum: checksum
          ethernet:
            type: type
          ip:
            protocol: 7
            dscp:
              ecn: 2
              tag: 3
            headerLength: 2
            length: 5
            id: id
            version: 5
            ttl: 9
          destination:
            ipv4:
              address: address
            port: 1
            mac: mac
          source:
            ipv4:
              address: address
            port: 6
            mac: mac
          type: type
          fields:
            chaddr: chaddr
            op: 7
            flags: flags
            giaddr: giaddr
            yiaddr: yiaddr
            htype: 1
            xid: xid
            ciaddr: ciaddr
            magicCookie: magicCookie
            siaddr: siaddr
            sname: sname
            secs: 6
            options:
            - name: name
              value: value
            - name: name
              value: value
            hops: 1
            hlen: 1
        vlan: 0
        ipv4:
          subnet: subnet
          address: address
          gateway: gateway
        type: device
        device:
          serial: serial
          name: name
          interface:
            name: name
            url: url
          url: url
        mac: mac
        seenBy:
        - serial: serial
          name: name
          url: url
        - serial: serial
          name: name
          url: url
      properties:
        mac:
          description: Mac address of the server.
          type: string
        vlan:
          description: Vlan id of the server.
          type: integer
        clientId:
          description: Client id of the server if available.
          type: string
        isAllowed:
          description: Whether the server is allowed or blocked. Always true for configured
            servers.
          type: boolean
        lastSeenAt:
          description: Last time the server was seen.
          format: date-time
          type: string
        seenBy:
          description: Devices that saw the server.
          items:
            $ref: '#/components/schemas/_networks__networkId__switch_dhcp_v4_servers_seen_seenBy'
          type: array
        type:
          description: server type. Can be a 'device', 'stack', or 'discovered' (i.e
            client).
          enum:
          - device
          - discovered
          - stack
          type: string
        device:
          $ref: '#/components/schemas/_networks__networkId__switch_dhcp_v4_servers_seen_device'
        ipv4:
          $ref: '#/components/schemas/_networks__networkId__switch_dhcp_v4_servers_seen_ipv4'
        isConfigured:
          description: Whether the server is configured.
          type: boolean
        lastAck:
          $ref: '#/components/schemas/_networks__networkId__switch_dhcp_v4_servers_seen_lastAck'
        lastPacket:
          $ref: '#/components/schemas/_networks__networkId__switch_dhcp_v4_servers_seen_lastPacket'
      type: object
    inline_object_206:
      example:
        destOrganizationId: "2930418"
        licenseId: "1234"
        seatCount: 20
      properties:
        destOrganizationId:
          description: The ID of the organization to move the SM seats to
          type: string
        licenseId:
          description: The ID of the SM license to move the seats from
          type: string
        seatCount:
          description: The number of seats to move to the new organization. Must be
            less than or equal to the total number of seats of the license
          type: integer
      required:
      - destOrganizationId
      - licenseId
      - seatCount
      type: object
    inline_response_200_65:
      example:
        radiusCoaSupportEnabled: true
        guestPortBouncing: true
        radiusAccountingEnabled: true
        radiusAccountingServers:
        - port: 2
          host: host
        - port: 2
          host: host
        dot1x:
          controlDirection: both
        radiusGroupAttribute: radiusGroupAttribute
        voiceVlanClients: true
        radiusTestingEnabled: true
        urlRedirectWalledGardenRanges:
        - urlRedirectWalledGardenRanges
        - urlRedirectWalledGardenRanges
        name: name
        increaseAccessSpeed: true
        guestVlanId: 7
        radiusServers:
        - port: 0
          host: host
        - port: 0
          host: host
        hostMode: Multi-Auth
        radius:
          criticalAuth:
            dataVlanId: 6
            suspendPortBounce: true
            voiceVlanId: 1
          failedAuthVlanId: 5
          reAuthenticationInterval: 5
        accessPolicyType: 802.1x
        urlRedirectWalledGardenEnabled: true
      properties:
        name:
          description: Name of the access policy
          type: string
        radiusServers:
          description: List of RADIUS servers to require connecting devices to authenticate
            against before granting network access
          items:
            $ref: '#/components/schemas/_networks__networkId__switch_accessPolicies_radiusServers'
          type: array
        radius:
          $ref: '#/components/schemas/_networks__networkId__switch_accessPolicies_radius'
        guestPortBouncing:
          description: If enabled, Meraki devices will periodically send access-request
            messages to these RADIUS servers
          type: boolean
        radiusTestingEnabled:
          description: If enabled, Meraki devices will periodically send access-request
            messages to these RADIUS servers
          type: boolean
        radiusCoaSupportEnabled:
          description: Change of authentication for RADIUS re-authentication and disconnection
          type: boolean
        radiusAccountingEnabled:
          description: Enable to send start, interim-update and stop messages to a
            configured RADIUS accounting server for tracking connected clients
          type: boolean
        radiusAccountingServers:
          description: List of RADIUS accounting servers to require connecting devices
            to authenticate against before granting network access
          items:
            $ref: '#/components/schemas/_networks__networkId__switch_accessPolicies_radiusAccountingServers'
          type: array
        radiusGroupAttribute:
          description: Acceptable values are `""` for None, or `"11"` for Group Policies
            ACL
          type: string
        hostMode:
          description: Choose the Host Mode for the access policy.
          enum:
          - Multi-Auth
          - Multi-Domain
          - Multi-Host
          - Single-Host
          type: string
        accessPolicyType:
          description: Access Type of the policy. Automatically 'Hybrid authentication'
            when hostMode is 'Multi-Domain'.
          enum:
          - 802.1x
          - Hybrid authentication
          - MAC authentication bypass
          type: string
        increaseAccessSpeed:
          description: Enabling this option will make switches execute 802.1X and
            MAC-bypass authentication simultaneously so that clients authenticate
            faster. Only required when accessPolicyType is 'Hybrid Authentication.
          type: boolean
        guestVlanId:
          description: ID for the guest VLAN allow unauthorized devices access to
            limited network resources
          type: integer
        dot1x:
          $ref: '#/components/schemas/_networks__networkId__switch_accessPolicies_dot1x'
        voiceVlanClients:
          description: CDP/LLDP capable voice clients will be able to use this VLAN.
            Automatically true when hostMode is 'Multi-Domain'.
          type: boolean
        urlRedirectWalledGardenEnabled:
          description: Enable to restrict access for clients to a response_objectific
            set of IP addresses or hostnames prior to authentication
          type: boolean
        urlRedirectWalledGardenRanges:
          description: IP address ranges, in CIDR notation, to restrict access for
            clients to a specific set of IP addresses or hostnames prior to authentication
          items:
            type: string
          type: array
      type: object
    inline_object_207:
      example:
        licenseIdToRenew: "123"
        unusedLicenseId: "1234"
      properties:
        licenseIdToRenew:
          description: The ID of the SM license to renew. This license must already
            be assigned to an SM network
          type: string
        unusedLicenseId:
          description: The SM license to use to renew the seats on 'licenseIdToRenew'.
            This license must have at least as many seats available as there are seats
            on 'licenseIdToRenew'
          type: string
      required:
      - licenseIdToRenew
      - unusedLicenseId
      type: object
    inline_response_200_68:
      example:
        hasTrustedPort: true
        serial: serial
        name: name
        url: url
        supportsInspection: true
      properties:
        serial:
          description: Switch serial.
          type: string
        name:
          description: Switch name.
          type: string
        url:
          description: Url link to switch.
          type: string
        supportsInspection:
          description: Whether this switch supports Dynamic ARP Inspection.
          type: boolean
        hasTrustedPort:
          description: Whether this switch has a trusted DAI port. Always false if
            supportsInspection is false.
          type: boolean
      type: object
    inline_object_204:
      example:
        licenseId: "1234"
        networkId: N_24329156
        seatCount: 20
      properties:
        licenseId:
          description: The ID of the SM license to assign seats from
          type: string
        networkId:
          description: The ID of the SM network to assign the seats to
          type: string
        seatCount:
          description: The number of seats to assign to the SM network. Must be less
            than or equal to the total number of seats of the license
          type: integer
      required:
      - licenseId
      - networkId
      - seatCount
      type: object
    inline_response_200_67:
      example:
        vlan: 0
        ipv4:
          address: address
        trustedServerId: trustedServerId
        mac: mac
      properties:
        trustedServerId:
          description: ID of the trusted server.
          type: string
        mac:
          description: Mac address of the trusted server.
          type: string
        vlan:
          description: Vlan ID of the trusted server.
          type: integer
        ipv4:
          $ref: '#/components/schemas/_networks__networkId__switch_dhcpServerPolicy_arpInspection_trustedServers_ipv4'
      type: object
    inline_object_205:
      example:
        destOrganizationId: "2930418"
        licenseIds:
        - "123"
        - "456"
      properties:
        destOrganizationId:
          description: The ID of the organization to move the licenses to
          type: string
        licenseIds:
          description: A list of IDs of licenses to move to the new organization
          items:
            type: string
          type: array
      required:
      - destOrganizationId
      - licenseIds
      type: object
    inline_response_200_62:
      example:
        azureAdGroups:
        - azureAdGroups
        - azureAdGroups
        isExternal: true
        displayName: displayName
        fullName: fullName
        hasPassword: true
        samlGroups:
        - samlGroups
        - samlGroups
        tags: tags
        asmGroups:
        - asmGroups
        - asmGroups
        adGroups:
        - adGroups
        - adGroups
        id: id
        hasIdentityCertificate: true
        email: email
        username: username
        userThumbnail: userThumbnail
      properties:
        id:
          description: The Meraki managed Id of the user record.
          type: string
        email:
          description: User email.
          type: string
        fullName:
          description: User full name.
          type: string
        username:
          description: The users username.
          type: string
        hasPassword:
          description: A boolean denoting if the user has a password associated with
            the record.
          type: boolean
        tags:
          description: The set of tags the user is scoped to.
          type: string
        adGroups:
          description: Active Directory Groups the user belongs to.
          items:
            type: string
          type: array
        azureAdGroups:
          description: Azure Active Directory Groups the user belongs to.
          items:
            type: string
          type: array
        samlGroups:
          description: SAML Groups the user belongs to.
          items:
            type: string
          type: array
        asmGroups:
          description: Apple School Manager Groups the user belongs to.
          items:
            type: string
          type: array
        isExternal:
          description: Whether the user was created using an external integration,
            or via the Meraki Dashboard.
          type: boolean
        displayName:
          description: The user display name.
          type: string
        hasIdentityCertificate:
          description: A boolean indicating if the user has an associated identity
            certificate..
          type: boolean
        userThumbnail:
          description: The url where the users thumbnail is hosted.
          type: string
      type: object
    _organizations__organizationId__brandingPolicies_customLogo_image_preview:
      description: Preview of the image
      example:
        url: url
        expiresAt: 2000-01-23T04:56:07.000+00:00
      properties:
        url:
          description: Url of the preview image
          type: string
        expiresAt:
          description: Timestamp of the preview image
          format: date-time
          type: string
      type: object
    inline_object_202:
      example:
        devices:
        - sudi: "-----BEGIN CERTIFICATE-----\n        MIIDyTCCArGgAwIBAgIKBBNXOVCGU1YztjANBgkqhkiG9w0BAQsFADAnMQ4wDAYD\n\
            \        VQQKEwVDaXNjbzEVMBMGA1UEAxMMQUNUMiBTVURJIENBMB4XDTIxMDUzMTEzNTUx\n\
            \        NVoXDTI5MDUxNDIwMjU0MVowbTEpMCcGA1UEBRMgUElEOkM5MjAwTC0yNFAtNEcg\n\
            \        U046SkFFMjUyMjBSMksxDjAMBgNVBAoTBUNpc2NvMRgwFgYDVQQLEw9BQ1QtMiBM\n\
            \        aXRlIFNVREkxFjAUBgNVBAMTDUM5MjAwTC0yNFAtNEcwggEiMA0GCSqGSIb3DQEB\n\
            \        AQUAA4IBDwAwggEKAoIBAQDaUPxW76gT5MdoEAt+UrDFiYA9RYh2iHicDViBEyow\n\
            \        TR1TuP36bHh13X3vtGiDsCD88Ci2TZIqd/EDkkc7v9ipUUYVVH+YDrPt2Aukb1PH\n\
            \        D6K0R+KhgEzRo5x54TlU6oWvjUpwNZUwwdhMWIQaUVkMyZBYNy0jGPLO8jwZhyBg\n\
            \        1Fneybr9pwedGbLrAaz+gdEikB8B4a/fvPjVfL5Ngb4QRjFqWuE+X3nLc0kHedep\n\
            \        6nfgpUNXMlStVm5nIXKP6OjmzfCHPYh9L2Ehs1TrSk1ser9Ofx0ZMVL/jBZR2EIj\n\
            \        OZ8tH6KlX2/B2pbSPIO6kD5c4UA8Cf1SbDJCwJ/kI9ihAgMBAAGjgbAwga0wDgYD\n\
            \        VR0PAQH/BAQDAgXgMAwGA1UdEwEB/wQCMAAwHwYDVR0jBBgwFoAUSNjx8cJw1Vu7\n\
            \        fHMJk6+4uDAD+H8wTQYDVR0RBEYwRKBCBgkrBgEEAQkVAgOgNRMzQ2hpcElEPVVV\n\
            \        VUNNaElGcUVFMklFUUVBQWNBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUE9MB0GA1Ud\n\
            \        DgQWBBRdhMkFD/z5hokaQeLbaRsp4hkvbzANBgkqhkiG9w0BAQsFAAOCAQEAMtuh\n\
            \        YpBz4xEZ7YdJsLpw67Q0TTJGnTBRpzAeY1urYDoDz8TSx556XG7z3IRzuED5KVSp\n\
            \        OwmH/iZ+tDfYQ3W3ElWTW93871DkuW4WQIfbnoHg/F7bF0DKYVkD3rpZjyz3NhzH\n\
            \        d7cjTdJXQ85bTAOXDuxKH3qewrXxxOGXgh3I6NUq0UwMTWh84lND7Jl+ZAQkYNS2\n\
            \        iHanTZFQBk3ML0NUb7fKDYGRTZRqwQ/upIO4S6LV1cxH/6V0qbMy3sCSHZoMLrW3\n\
            \        0m3M6yKpe5+VZzHZwmWdUf3Ot+zKjhveK5/YNsMIASdvtvymxUizq2Hr1hvR/kPc\n\
            \        p1vuyWxipU8JfzOh/A==\n        -----END CERTIFICATE-----\n   \
            \     "
          tunnel:
            certificateName: DeviceSUDI
            name: MERAKI
            loopbackNumber: 1000
            localInterface: 1
          user:
            username: Meraki
          vty:
            startLineNumber: 16
            endLineNumber: 17
            authentication:
              group:
                name: ""
            authorization:
              group:
                name: MERAKI
            accessList:
              vtyIn:
                name: MERAKI_IN
              vtyOut:
                name: MERAKI_OUT
            rotaryNumber: 50
      properties:
        devices:
          description: A set of devices to import (or update)
          items:
            $ref: '#/components/schemas/_organizations__organizationId__inventory_onboarding_cloudMonitoring_prepare_devices'
          type: array
      required:
      - devices
      type: object
    inline_response_200_61:
      example:
        trustedAccessConnections:
        - trustedAccessConfigId: trustedAccessConfigId
          scepCompletedAt: 2000-01-23T04:56:07.000+00:00
          downloadedAt: downloadedAt
          lastConnectedAt: 2000-01-23T04:56:07.000+00:00
        - trustedAccessConfigId: trustedAccessConfigId
          scepCompletedAt: 2000-01-23T04:56:07.000+00:00
          downloadedAt: downloadedAt
          lastConnectedAt: 2000-01-23T04:56:07.000+00:00
        name: name
        systemType: systemType
        id: id
        mac: mac
        email: email
        username: username
        tags:
        - tags
        - tags
      properties:
        id:
          description: device ID
          type: string
        name:
          description: device name
          type: string
        systemType:
          description: system type
          type: string
        mac:
          description: mac address
          type: string
        username:
          description: username
          type: string
        email:
          description: user email
          type: string
        tags:
          description: device tags
          items:
            type: string
          type: array
        trustedAccessConnections:
          description: Array of trusted access configs
          items:
            $ref: '#/components/schemas/_networks__networkId__sm_userAccessDevices_trustedAccessConnections'
          type: array
      type: object
    inline_object_203:
      example:
        serials:
        - Q234-ABCD-5678
      properties:
        serials:
          description: Serials of the devices that should be released
          items:
            type: string
          type: array
      type: object
    inline_response_200_64:
      example:
        rules:
        - srcCidr: srcCidr
          protocol: any
          ipVersion: any
          dstPort: dstPort
          vlan: vlan
          dstCidr: dstCidr
          comment: comment
          srcPort: srcPort
          policy: allow
        - srcCidr: srcCidr
          protocol: any
          ipVersion: any
          dstPort: dstPort
          vlan: vlan
          dstCidr: dstCidr
          comment: comment
          srcPort: srcPort
          policy: allow
      properties:
        rules:
          description: An ordered array of the access control list rules
          items:
            $ref: '#/components/schemas/inline_response_200_64_rules'
          type: array
      type: object
    inline_response_200_87_billing:
      description: Details associated with billing splash
      example:
        replyToEmailAddress: replyToEmailAddress
        freeAccess:
          durationInMinutes: 5
          enabled: true
        prepaidAccessFastLoginEnabled: true
      properties:
        freeAccess:
          $ref: '#/components/schemas/inline_response_200_87_billing_freeAccess'
        prepaidAccessFastLoginEnabled:
          description: Whether or not billing uses the fast login prepaid access option.
          type: boolean
        replyToEmailAddress:
          description: The email address that reeceives replies from clients
          type: string
      type: object
    inline_object_200:
      example:
        logEvent: download
        timestamp: 1526087474
        targetOS: mac
        request: r=cb
      properties:
        logEvent:
          description: The type of log event this is recording, e.g. download or opening
            a banner
          type: string
        timestamp:
          description: A JavaScript UTC datetime stamp for when the even occurred
          type: integer
        targetOS:
          description: The name of the onboarding distro being downloaded
          type: string
        request:
          description: Used to describe if this event was the result of a redirect.
            E.g. a query param if an info banner is being used
          type: string
      required:
      - logEvent
      - timestamp
      type: object
    inline_response_200_63:
      example:
        resultingNetworks:
        - organizationId: organizationId
          isBoundToConfigTemplate: true
          notes: notes
          name: name
          timeZone: timeZone
          productTypes:
          - productTypes
          - productTypes
          id: id
          enrollmentString: enrollmentString
          url: url
          tags:
          - tags
          - tags
        - organizationId: organizationId
          isBoundToConfigTemplate: true
          notes: notes
          name: name
          timeZone: timeZone
          productTypes:
          - productTypes
          - productTypes
          id: id
          enrollmentString: enrollmentString
          url: url
          tags:
          - tags
          - tags
      properties:
        resultingNetworks:
          description: Networks after the split
          items:
            $ref: '#/components/schemas/inline_response_200_11'
          type: array
      type: object
    inline_object_201:
      example:
        devices:
        - deviceId: 161b2602-a713-4aac-b1eb-d9b55205353d
          udi: PID:C9200L-24P-4G SN:JAE25220R2K
          networkId: "1338481"
      properties:
        devices:
          description: A set of device imports to commit
          items:
            $ref: '#/components/schemas/_organizations__organizationId__inventory_onboarding_cloudMonitoring_imports_devices'
          type: array
      required:
      - devices
      type: object
    _networks__networkId__webhooks_payloadTemplates_headers_1:
      properties:
        name:
          description: The name of the header template
          type: string
        template:
          description: The liquid template for the headers
          type: string
      type: object
    inline_response_200_69:
      example:
        defaultMtuSize: 0
        overrides:
        - switchProfiles:
          - switchProfiles
          - switchProfiles
          switches:
          - switches
          - switches
          mtuSize: 6
        - switchProfiles:
          - switchProfiles
          - switchProfiles
          switches:
          - switches
          - switches
          mtuSize: 6
      properties:
        defaultMtuSize:
          description: MTU size for the entire network. Default value is 9578.
          type: integer
        overrides:
          description: |-
            Override MTU size for individual switches or switch profiles.
                  An empty array will clear overrides.
          items:
            $ref: '#/components/schemas/inline_response_200_69_overrides'
          type: array
      type: object
    _networks__networkId__appliance_firewall_oneToOneNatRules_allowedInbound:
      properties:
        protocol:
          description: 'Either of the following: ''tcp'', ''udp'', ''icmp-ping'' or
            ''any'''
          enum:
          - any
          - icmp-ping
          - tcp
          - udp
          type: string
        destinationPorts:
          description: An array of ports or port ranges that will be forwarded to
            the host on the LAN
          items:
            type: string
          type: array
        allowedIps:
          description: An array of ranges of WAN IP addresses that are allowed to
            make inbound connections on the specified ports or port ranges, or 'any'
          items:
            type: string
          type: array
      type: object
    _networks__networkId__clients_provision_policiesBySecurityAppliance:
      description: An object, describing what the policy-connection association is
        for the security appliance. (Only relevant if the security appliance is actually
        within the network)
      properties:
        devicePolicy:
          description: The policy to apply to the specified client. Can be 'Allowed',
            'Blocked' or 'Normal'. Required.
          enum:
          - Allowed
          - Blocked
          - Normal
          type: string
      type: object
    _networks__networkId__firmwareUpgrades_staged_groups_assignedDevices_switchStacks:
      example:
        name: name
        id: id
      properties:
        id:
          description: ID of the Switch Stack
          type: string
        name:
          description: Name of the Switch Stack
          type: string
      type: object
    _networks__networkId__wireless_ssids__number__firewall_l3FirewallRules_rules:
      properties:
        comment:
          description: Description of the rule (optional)
          type: string
        policy:
          description: '''allow'' or ''deny'' traffic specified by this rule'
          enum:
          - allow
          - deny
          type: string
        protocol:
          description: The type of protocol (must be 'tcp', 'udp', 'icmp', 'icmp6'
            or 'any')
          enum:
          - any
          - icmp
          - icmp6
          - tcp
          - udp
          type: string
        destPort:
          description: Comma-separated list of destination port(s) (integer in the
            range 1-65535), or 'any'
          type: string
        destCidr:
          description: Comma-separated list of destination IP address(es) (in IP or
            CIDR notation), fully-qualified domain names (FQDN) or 'any'
          type: string
      required:
      - destCidr
      - policy
      - protocol
      type: object
    inline_response_200_71:
      example:
        serials:
        - serials
        - serials
        name: name
        id: id
      properties:
        id:
          description: Switch stacks id
          type: string
        name:
          description: Switch stacks name
          type: string
        serials:
          description: Serials of the switches in the switch stack
          items:
            type: string
          type: array
      type: object
    _networks__networkId__firmwareUpgrades_staged_events_products_switch_nextUpgrade:
      description: The next upgrade version for the switch network
      properties:
        toVersion:
          $ref: '#/components/schemas/_networks__networkId__firmwareUpgrades_staged_events_products_switch_nextUpgrade_toVersion'
      type: object
    inline_response_200_70:
      example:
        powerExceptions:
        - serial: serial
          powerType: combined
        - serial: serial
          powerType: combined
        vlan: 0
        useCombinedPower: true
      properties:
        vlan:
          description: Management VLAN
          type: integer
        useCombinedPower:
          description: The use Combined Power as the default behavior of secondary
            power supplies on supported devices.
          type: boolean
        powerExceptions:
          description: Exceptions on a per switch basis to "useCombinedPower"
          items:
            $ref: '#/components/schemas/inline_response_200_70_powerExceptions'
          type: array
      type: object
    inline_response_200_18_bandwidthLimits_wan1:
      description: uplink wan1 configured limits [optional]
      example:
        limitUp: 0
        limitDown: 6
      properties:
        limitUp:
          description: configured UP limit for the uplink (in Kbps).  Null indicated
            unlimited
          type: integer
        limitDown:
          description: configured DOWN limit for the uplink (in Kbps).  Null indicated
            unlimited
          type: integer
      type: object
    _networks__networkId__camera_qualityRetentionProfiles_videoSettings_MV32:
      description: Quality and resolution for MV32 camera models.
      properties:
        quality:
          description: Quality of the camera. Can be one of 'Standard', 'Enhanced'
            or 'High'.
          enum:
          - Enhanced
          - High
          - Standard
          type: string
        resolution:
          description: Resolution of the camera. Can be one of '1080x1080' or '2058x2058'.
          enum:
          - 1080x1080
          - 2058x2058
          type: string
      required:
      - quality
      - resolution
      type: object
    inline_response_200_18_bandwidthLimits_wan2:
      description: uplink wan2 configured limits [optional]
      example:
        limitUp: 1
        limitDown: 5
      properties:
        limitUp:
          description: configured UP limit for the uplink (in Kbps).  Null indicated
            unlimited
          type: integer
        limitDown:
          description: configured DOWN limit for the uplink (in Kbps).  Null indicated
            unlimited
          type: integer
      type: object
    _networks__networkId__camera_qualityRetentionProfiles_videoSettings_MV33:
      description: Quality and resolution for MV33 camera models.
      properties:
        quality:
          description: Quality of the camera. Can be one of 'Standard', 'Enhanced'
            or 'High'.
          enum:
          - Enhanced
          - High
          - Standard
          type: string
        resolution:
          description: Resolution of the camera. Can be one of '1080x1080' or '2112x2112'.
          enum:
          - 1080x1080
          - 2112x2112
          type: string
      required:
      - quality
      - resolution
      type: object
    _networks__networkId__sm_devices__deviceId__performanceHistory_diskUsage_c:
      description: An object containing current disk usage details.
      example:
        used: 3
        space: 2
      properties:
        used:
          description: The used disk space.
          type: integer
        space:
          description: The available disk space.
          type: integer
      type: object
    inline_response_200_99:
      example:
        total: 0
        upstream: 6
        downstream: 1
        ts: 2000-01-23T04:56:07.000+00:00
      properties:
        ts:
          description: Timestamp for the bandwidth usage snapshot.
          format: date-time
          type: string
        total:
          description: Total bandwidth usage, in mbps.
          type: integer
        upstream:
          description: Uploaded data, in mbps.
          type: integer
        downstream:
          description: Downloaded data, in mbps.
          type: integer
      type: object
    inline_response_200_98:
      example:
        lastReportedAt: 2000-01-23T04:56:07.000+00:00
        serial: serial
        uplinks:
        - dns2: dns2
          ip: ip
          dns1: dns1
          signalStat:
            rsrq: rsrq
            rsrp: rsrp
          publicIp: publicIp
          interface: interface
          connectionType: connectionType
          iccid: iccid
          provider: provider
          signalType: signalType
          model: model
          apn: apn
          gateway: gateway
          status: status
        - dns2: dns2
          ip: ip
          dns1: dns1
          signalStat:
            rsrq: rsrq
            rsrp: rsrp
          publicIp: publicIp
          interface: interface
          connectionType: connectionType
          iccid: iccid
          provider: provider
          signalType: signalType
          model: model
          apn: apn
          gateway: gateway
          status: status
        networkId: networkId
        model: model
      properties:
        networkId:
          description: Network Id
          type: string
        serial:
          description: Serial number of the device
          type: string
        model:
          description: Device model
          type: string
        lastReportedAt:
          description: Last reported time for the device
          format: date-time
          type: string
        uplinks:
          description: Uplinks info
          items:
            $ref: '#/components/schemas/_organizations__organizationId__cellularGateway_uplink_statuses_uplinks'
          type: array
      type: object
    inline_response_200_95:
      example:
        rules:
        - srcCidr: srcCidr
          protocol: protocol
          syslogEnabled: true
          destPort: destPort
          comment: comment
          srcPort: srcPort
          destCidr: destCidr
          policy: policy
        - srcCidr: srcCidr
          protocol: protocol
          syslogEnabled: true
          destPort: destPort
          comment: comment
          srcPort: srcPort
          destCidr: destCidr
          policy: policy
      properties:
        rules:
          description: List of firewall rules
          items:
            $ref: '#/components/schemas/inline_response_200_95_rules'
          type: array
      type: object
    inline_response_200_94:
      example:
        peers:
        - networkTags:
          - networkTags
          - networkTags
          ipsecPoliciesPreset: ipsecPoliciesPreset
          name: name
          publicIp: publicIp
          privateSubnets:
          - privateSubnets
          - privateSubnets
          secret: secret
          ikeVersion: "1"
          ipsecPolicies:
            ikeAuthAlgo:
            - md5
            - md5
            ikeDiffieHellmanGroup:
            - ikeDiffieHellmanGroup
            - ikeDiffieHellmanGroup
            childLifetime: 6
            childCipherAlgo:
            - aes128
            - aes128
            ikeLifetime: 0
            ikeCipherAlgo:
            - aes128
            - aes128
            ikePrfAlgo:
            - default
            - default
            childAuthAlgo:
            - md5
            - md5
            childPfsGroup:
            - childPfsGroup
            - childPfsGroup
          localId: localId
          remoteId: remoteId
        - networkTags:
          - networkTags
          - networkTags
          ipsecPoliciesPreset: ipsecPoliciesPreset
          name: name
          publicIp: publicIp
          privateSubnets:
          - privateSubnets
          - privateSubnets
          secret: secret
          ikeVersion: "1"
          ipsecPolicies:
            ikeAuthAlgo:
            - md5
            - md5
            ikeDiffieHellmanGroup:
            - ikeDiffieHellmanGroup
            - ikeDiffieHellmanGroup
            childLifetime: 6
            childCipherAlgo:
            - aes128
            - aes128
            ikeLifetime: 0
            ikeCipherAlgo:
            - aes128
            - aes128
            ikePrfAlgo:
            - default
            - default
            childAuthAlgo:
            - md5
            - md5
            childPfsGroup:
            - childPfsGroup
            - childPfsGroup
          localId: localId
          remoteId: remoteId
      properties:
        peers:
          description: The list of VPN peers
          items:
            $ref: '#/components/schemas/inline_response_200_94_peers'
          type: array
      type: object
    inline_response_200_25_events:
      example:
        ssidNumber: 0
        deviceSerial: deviceSerial
        occurredAt: occurredAt
        clientId: clientId
        eventData:
          client_mac: client_mac
          rssi: rssi
          vap: vap
          channel: channel
          client_ip: client_ip
          aid: aid
          radio: radio
        clientDescription: clientDescription
        clientMac: clientMac
        description: description
        networkId: networkId
        type: type
        category: category
        deviceName: deviceName
      properties:
        occurredAt:
          description: An UTC ISO8601 string of the time the event occurred at.
          type: string
        networkId:
          description: The ID of the network.
          type: string
        type:
          description: The type of event being listed.
          type: string
        description:
          description: A description of the event the happened.
          type: string
        category:
          description: The category that the event type belongs to
          type: string
        clientId:
          description: A string identifying the client. This could be a client's MAC
            or IP address
          type: string
        clientDescription:
          description: A description of the client. This is usually the client's device
            name.
          type: string
        clientMac:
          description: The client's MAC address.
          type: string
        deviceSerial:
          description: The serial number of the device. Only shown if the device is
            an access point.
          type: string
        deviceName:
          description: The name of the device. Only shown if the device is an access
            point.
          type: string
        ssidNumber:
          description: The SSID number of the device.
          type: integer
        eventData:
          $ref: '#/components/schemas/inline_response_200_25_eventData'
      type: object
    inline_response_200_97:
      example:
        brandingPolicyIds:
        - brandingPolicyIds
        - brandingPolicyIds
      properties:
        brandingPolicyIds:
          description: |2
                  An ordered list of branding policy IDs that determines the priority order of how to apply the policies
          items:
            type: string
          type: array
      type: object
    inline_response_200_96:
      example:
        name: name
        customLogo:
          image:
            preview:
              url: url
              expiresAt: 2000-01-23T04:56:07.000+00:00
          enabled: true
        helpSettings:
          firewallInfoSubtab: default or inherit
          getHelpSubtabKnowledgeBaseSearch: getHelpSubtabKnowledgeBaseSearch
          universalSearchKnowledgeBaseSearch: default or inherit
          hardwareReplacementsSubtab: default or inherit
          newFeaturesSubtab: default or inherit
          communitySubtab: default or inherit
          supportContactInfo: supportContactInfo
          apiDocsSubtab: default or inherit
          helpTab: default or inherit
          ciscoMerakiProductDocumentation: ciscoMerakiProductDocumentation
          dataProtectionRequestsSubtab: default or inherit
          getHelpSubtab: default or inherit
          casesSubtab: default or inherit
          smForums: default or inherit
          helpWidget: default or inherit
        adminSettings:
          values:
          - values
          - values
          appliesTo: All SAML admins
        enabled: true
      properties:
        name:
          description: Name of the Dashboard branding policy.
          type: string
        enabled:
          description: Boolean indicating whether this policy is enabled.
          type: boolean
        adminSettings:
          $ref: '#/components/schemas/_organizations__organizationId__brandingPolicies_adminSettings'
        helpSettings:
          $ref: '#/components/schemas/_organizations__organizationId__brandingPolicies_helpSettings'
        customLogo:
          $ref: '#/components/schemas/_organizations__organizationId__brandingPolicies_customLogo'
      type: object
    _networks__networkId__appliance_trafficShaping_rules_perClientBandwidthLimits:
      description: |2
            An object describing the bandwidth settings for your rule.
      properties:
        settings:
          description: How bandwidth limits are applied by your rule. Can be one of
            'network default', 'ignore' or 'custom'.
          type: string
        bandwidthLimits:
          $ref: '#/components/schemas/_networks__networkId__appliance_trafficShaping_rules_perClientBandwidthLimits_bandwidthLimits'
      type: object
    _organizations__organizationId__summary_top_appliances_byUtilization_utilization_average:
      description: Average utilization of the appliance
      example:
        percentage: 0.8008282
      properties:
        percentage:
          description: Average percentage utilization of the appliance
          format: float
          type: number
      type: object
    inline_response_200_29_products_switch:
      description: The Switch network to be updated
      example:
        nextUpgrade:
          toVersion:
            id: id
            shortName: shortName
      properties:
        nextUpgrade:
          $ref: '#/components/schemas/inline_response_200_29_products_switch_nextUpgrade'
      type: object
    inline_response_200_64_rules:
      example:
        srcCidr: srcCidr
        protocol: any
        ipVersion: any
        dstPort: dstPort
        vlan: vlan
        dstCidr: dstCidr
        comment: comment
        srcPort: srcPort
        policy: allow
      properties:
        comment:
          description: Description of the rule (optional)
          type: string
        policy:
          description: '''allow'' or ''deny'' traffic specified by this rule'
          enum:
          - allow
          - deny
          type: string
        ipVersion:
          description: IP address version
          enum:
          - any
          - ipv4
          - ipv6
          type: string
        protocol:
          description: The type of protocol
          enum:
          - any
          - tcp
          - udp
          type: string
        srcCidr:
          description: Source IP address (in IP or CIDR notation)
          type: string
        srcPort:
          description: Source port
          type: string
        dstCidr:
          description: Destination IP address (in IP or CIDR notation)
          type: string
        dstPort:
          description: Destination port
          type: string
        vlan:
          description: ncoming traffic VLAN
          type: string
      type: object
    _organizations__organizationId__sensor_readings_history_network:
      description: Network to which the sensor belongs.
      example:
        name: name
        id: id
      properties:
        id:
          description: ID of the network.
          type: string
        name:
          description: Name of the network.
          type: string
      type: object
    _networks__networkId__webhooks_payloadTemplates_sharing_byNetwork:
      description: Information on network access to the template
      example:
        adminsCanModify: true
      properties:
        adminsCanModify:
          description: Indicates whether network admins may modify this template
          type: boolean
      type: object
    _devices__serial__switch_routing_interfaces_ipv6:
      description: IPv6 addressing
      example:
        address: address
        assignmentMode: assignmentMode
        prefix: prefix
        gateway: gateway
      properties:
        assignmentMode:
          description: Assignment mode
          type: string
        address:
          description: IPv6 address
          type: string
        prefix:
          description: IPv6 subnet
          type: string
        gateway:
          description: IPv6 gateway
          type: string
      type: object
    _networks__networkId__appliance_vlans_dhcpOptions:
      example:
        code: code
        type: hex
        value: value
      properties:
        code:
          description: The code for the DHCP option. This should be an integer between
            2 and 254.
          type: string
        type:
          description: 'The type for the DHCP option. One of: ''text'', ''ip'', ''hex''
            or ''integer'''
          enum:
          - hex
          - integer
          - ip
          - text
          type: string
        value:
          description: The value for the DHCP option
          type: string
      required:
      - code
      - type
      - value
      type: object
    _organizations__organizationId__claim_licenses:
      properties:
        key:
          description: The key of the license
          type: string
        mode:
          description: Either 'renew' or 'addDevices'. 'addDevices' will increase
            the license limit, while 'renew' will extend the amount of time until
            expiration. Defaults to 'addDevices'. All licenses must be claimed with
            the same mode, and at most one renewal can be claimed at a time. This
            parameter is legacy and does not apply to organizations with per-device
            licensing enabled.
          enum:
          - addDevices
          - renew
          type: string
      required:
      - key
      type: object
    inline_response_200_88:
      example:
        sentKbps: 6
        endTs: 2000-01-23T04:56:07.000+00:00
        startTs: 2000-01-23T04:56:07.000+00:00
        totalKbps: 0
        receivedKbps: 1
      properties:
        startTs:
          description: The start time of the query range
          format: date-time
          type: string
        endTs:
          description: The end time of the query range
          format: date-time
          type: string
        totalKbps:
          description: Total usage in kilobytes-per-second
          type: integer
        sentKbps:
          description: Sent kilobytes-per-second
          type: integer
        receivedKbps:
          description: Received kilobytes-per-second
          type: integer
      type: object
    inline_response_200_87:
      example:
        ssidNumber: 0
        redirectUrl: redirectUrl
        guestSponsorship:
          durationInMinutes: 1
          guestCanRequestTimeframe: true
        splashUrl: splashUrl
        useRedirectUrl: true
        useSplashUrl: true
        welcomeMessage: welcomeMessage
        selfRegistration:
          authorizationType: admin
          enabled: true
        billing:
          replyToEmailAddress: replyToEmailAddress
          freeAccess:
            durationInMinutes: 5
            enabled: true
          prepaidAccessFastLoginEnabled: true
        splashPage: splashPage
        blockAllTrafficBeforeSignOn: true
        splashLogo:
          extension: extension
          md5: md5
        sentryEnrollment:
          strength: click-through
          enforcedSystems:
          - enforcedSystems
          - enforcedSystems
          systemsManagerNetwork:
            id: id
        splashTimeout: 6
        allowSimultaneousLogins: true
        splashPrepaidFront:
          extension: extension
          md5: md5
        controllerDisconnectionBehavior: controllerDisconnectionBehavior
        splashImage:
          extension: extension
          md5: md5
      properties:
        ssidNumber:
          description: SSID number
          type: integer
        splashPage:
          description: The type of splash page for this SSID
          type: string
        useSplashUrl:
          description: Boolean indicating whether the users will be redirected to
            the custom splash url
          type: boolean
        splashUrl:
          description: The custom splash URL of the click-through splash page.
          type: string
        splashTimeout:
          description: Splash timeout in minutes.
          type: integer
        redirectUrl:
          description: The custom redirect URL where the users will go after the splash
            page.
          type: string
        useRedirectUrl:
          description: The Boolean indicating whether the the user will be redirected
            to the custom redirect URL after the splash page.
          type: boolean
        welcomeMessage:
          description: The welcome message for the users on the splash page.
          type: string
        splashLogo:
          $ref: '#/components/schemas/inline_response_200_87_splashLogo'
        splashImage:
          $ref: '#/components/schemas/inline_response_200_87_splashImage'
        splashPrepaidFront:
          $ref: '#/components/schemas/inline_response_200_87_splashPrepaidFront'
        guestSponsorship:
          $ref: '#/components/schemas/inline_response_200_87_guestSponsorship'
        blockAllTrafficBeforeSignOn:
          description: How restricted allowing traffic should be. If true, all traffic
            types are blocked until the splash page is acknowledged. If false, all
            non-HTTP traffic is allowed before the splash page is acknowledged.
          type: boolean
        controllerDisconnectionBehavior:
          description: How login attempts should be handled when the controller is
            unreachable.
          type: string
        allowSimultaneousLogins:
          description: Whether or not to allow simultaneous logins from different
            devices.
          type: boolean
        billing:
          $ref: '#/components/schemas/inline_response_200_87_billing'
        sentryEnrollment:
          $ref: '#/components/schemas/inline_response_200_87_sentryEnrollment'
        selfRegistration:
          $ref: '#/components/schemas/inline_response_200_87_selfRegistration'
      type: object
    _organizations__organizationId__adaptivePolicy_policies_acls:
      properties:
        id:
          description: The ID of the adaptive policy ACL
          type: string
        name:
          description: The name of the adaptive policy ACL
          type: string
      type: object
    inline_response_200_89:
      example:
        cloud:
          region:
            name: name
        management:
          details:
          - name: name
            value: value
          - name: name
            value: value
        name: name
        id: id
        api:
          enabled: true
        url: url
        licensing:
          model: co-term
      properties:
        id:
          description: Organization ID
          type: string
        name:
          description: Organization name
          type: string
        url:
          description: Organization URL
          type: string
        api:
          $ref: '#/components/schemas/_organizations_api'
        licensing:
          $ref: '#/components/schemas/_organizations_licensing'
        cloud:
          $ref: '#/components/schemas/_organizations_cloud'
        management:
          $ref: '#/components/schemas/_organizations_management'
      type: object
    _organizations__organizationId__wireless_devices_ethernet_statuses_aggregation:
      description: Aggregation details object
      example:
        enabled: true
        speed: 6
      properties:
        enabled:
          description: Link Aggregation enabled flag
          type: boolean
        speed:
          description: Link Aggregation speed
          type: integer
      type: object
    inline_response_200_84:
      example:
        rssi: 6
        snr: 0
        endTs: 2000-01-23T04:56:07.000+00:00
        startTs: 2000-01-23T04:56:07.000+00:00
      properties:
        startTs:
          description: The start time of the query range
          format: date-time
          type: string
        endTs:
          description: The end time of the query range
          format: date-time
          type: string
        snr:
          description: Signal to noise ratio
          type: integer
        rssi:
          description: Received signal strength indicator
          type: integer
      type: object
    inline_response_200_83:
      example:
        ipv6BridgeEnabled: true
        meshingEnabled: true
        namedVlans:
          poolDhcpMonitoring:
            duration: 0
            enabled: true
        locationAnalyticsEnabled: true
        upgradeStrategy: minimizeClientDowntime
        ledLightsOn: true
      properties:
        meshingEnabled:
          description: Toggle for enabling or disabling meshing in a network
          type: boolean
        ipv6BridgeEnabled:
          description: 'Toggle for enabling or disabling IPv6 bridging in a network
            (Note: if enabled, SSIDs must also be configured to use bridge mode)'
          type: boolean
        locationAnalyticsEnabled:
          description: Toggle for enabling or disabling location analytics for your
            network
          type: boolean
        upgradeStrategy:
          description: The upgrade strategy to apply to the network. Must be one of
            'minimizeUpgradeTime' or 'minimizeClientDowntime'. Requires firmware version
            MR 26.8 or higher'
          enum:
          - minimizeClientDowntime
          - minimizeUpgradeTime
          type: string
        ledLightsOn:
          description: Toggle for enabling or disabling LED lights on all APs in the
            network (making them run dark)
          type: boolean
        namedVlans:
          $ref: '#/components/schemas/inline_response_200_83_namedVlans'
      type: object
    inline_response_200_86:
      example:
        name: name
        passphrase: passphrase
        id: id
        groupPolicyId: groupPolicyId
        wifiPersonalNetworkId: wifiPersonalNetworkId
        email: email
        expiresAt: 2000-01-23T04:56:07.000+00:00
      properties:
        name:
          description: The name of the Identity PSK
          type: string
        id:
          description: The unique identifier of the Identity PSK
          type: string
        groupPolicyId:
          description: The group policy to be applied to clients
          type: string
        passphrase:
          description: The passphrase for client authentication
          type: string
        wifiPersonalNetworkId:
          description: The WiFi Personal Network unique identifier
          type: string
        email:
          description: The email associated with the System's Manager User
          type: string
        expiresAt:
          description: Timestamp for when the Identity PSK expires, or 'null' to never
            expire
          format: date-time
          type: string
      type: object
    inline_object_222:
      example:
        v2cEnabled: false
        v3Enabled: true
        v3AuthMode: SHA
        v3PrivMode: AES128
        peerIps:
        - 123.123.123.1
      properties:
        v2cEnabled:
          description: Boolean indicating whether SNMP version 2c is enabled for the
            organization.
          type: boolean
        v3Enabled:
          description: Boolean indicating whether SNMP version 3 is enabled for the
            organization.
          type: boolean
        v3AuthMode:
          description: The SNMP version 3 authentication mode. Can be either 'MD5'
            or 'SHA'.
          enum:
          - MD5
          - SHA
          type: string
        v3AuthPass:
          description: The SNMP version 3 authentication password. Must be at least
            8 characters if specified.
          type: string
        v3PrivMode:
          description: The SNMP version 3 privacy mode. Can be either 'DES' or 'AES128'.
          enum:
          - AES128
          - DES
          type: string
        v3PrivPass:
          description: The SNMP version 3 privacy password. Must be at least 8 characters
            if specified.
          type: string
        peerIps:
          description: The list of IPv4 addresses that are allowed to access the SNMP
            server.
          items:
            type: string
          type: array
      type: object
    _networks__networkId__wireless_ssids__number__deviceTypeGroupPolicies_deviceTypePolicies:
      properties:
        deviceType:
          description: The device type. Can be one of 'Android', 'BlackBerry', 'Chrome
            OS', 'iPad', 'iPhone', 'iPod', 'Mac OS X', 'Windows', 'Windows Phone',
            'B&N Nook' or 'Other OS'
          enum:
          - Android
          - B&N Nook
          - BlackBerry
          - Chrome OS
          - Mac OS X
          - Other OS
          - Windows
          - Windows Phone
          - iPad
          - iPhone
          - iPod
          type: string
        devicePolicy:
          description: The device policy. Can be one of 'Allowed', 'Blocked' or 'Group
            policy'
          enum:
          - Allowed
          - Blocked
          - Group policy
          type: string
        groupPolicyId:
          description: ID of the group policy object.
          type: integer
      required:
      - devicePolicy
      - deviceType
      type: object
    inline_response_200_85:
      example:
        maxRetries: 6
        identity:
          retries: 1
          timeout: 5
        timeout: 0
        eapolKey:
          retries: 5
          timeoutInMs: 2
      properties:
        timeout:
          description: General EAP timeout in seconds.
          type: integer
        maxRetries:
          description: Maximum number of general EAP retries.
          type: integer
        identity:
          $ref: '#/components/schemas/inline_response_200_85_identity'
        eapolKey:
          $ref: '#/components/schemas/inline_response_200_85_eapolKey'
      type: object
    inline_object_223:
      example:
        sourceSerial: Q234-ABCD-5678
        targetSerials:
        - Q234-ABCD-0001
        - Q234-ABCD-0002
        - Q234-ABCD-0003
      properties:
        sourceSerial:
          description: Serial number of the source switch (must be on a network not
            bound to a template)
          type: string
        targetSerials:
          description: Array of serial numbers of one or more target switches (must
            be on a network not bound to a template)
          items:
            type: string
          type: array
      required:
      - sourceSerial
      - targetSerials
      type: object
    _networks__networkId__groupPolicies_bandwidth_bandwidthLimits:
      description: The bandwidth limits object, specifying upload and download speed
        for clients bound to the group policy. These are only enforced if 'settings'
        is set to 'custom'.
      properties:
        limitUp:
          description: The maximum upload limit (integer, in Kbps). null indicates
            no limit
          type: integer
        limitDown:
          description: The maximum download limit (integer, in Kbps). null indicates
            no limit
          type: integer
      type: object
    inline_object_220:
      example:
        role: myrole
        orgAccess: none
        networks:
        - id: N_24329156
          access: full
        tags:
        - tag: west
          access: read-only
      properties:
        role:
          description: The role of the SAML administrator
          type: string
        orgAccess:
          description: The privilege of the SAML administrator on the organization.
            Can be one of 'none', 'read-only', 'full' or 'enterprise'
          enum:
          - enterprise
          - full
          - none
          - read-only
          type: string
        tags:
          description: The list of tags that the SAML administrator has privleges
            on
          items:
            $ref: '#/components/schemas/_organizations__organizationId__samlRoles_tags'
          type: array
        networks:
          description: The list of networks that the SAML administrator has privileges
            on
          items:
            $ref: '#/components/schemas/_organizations__organizationId__samlRoles_networks'
          type: array
      required:
      - orgAccess
      - role
      type: object
    inline_object_221:
      example:
        role: myrole
        orgAccess: none
        tags:
        - tag: west
          access: read-only
        networks:
        - id: N_24329156
          access: full
      properties:
        role:
          description: The role of the SAML administrator
          type: string
        orgAccess:
          description: The privilege of the SAML administrator on the organization.
            Can be one of 'none', 'read-only', 'full' or 'enterprise'
          enum:
          - enterprise
          - full
          - none
          - read-only
          type: string
        tags:
          description: The list of tags that the SAML administrator has privleges
            on
          items:
            $ref: '#/components/schemas/_organizations__organizationId__samlRoles_tags'
          type: array
        networks:
          description: The list of networks that the SAML administrator has privileges
            on
          items:
            $ref: '#/components/schemas/_organizations__organizationId__samlRoles_networks'
          type: array
      type: object
    _networks__networkId__switch_dhcp_v4_servers_seen_lastPacket_fields:
      description: DHCP-specific fields of the packet.
      example:
        chaddr: chaddr
        op: 7
        flags: flags
        giaddr: giaddr
        yiaddr: yiaddr
        htype: 1
        xid: xid
        ciaddr: ciaddr
        magicCookie: magicCookie
        siaddr: siaddr
        sname: sname
        secs: 6
        options:
        - name: name
          value: value
        - name: name
          value: value
        hops: 1
        hlen: 1
      properties:
        op:
          description: Operation code of the packet.
          type: integer
        htype:
          description: Hardware type code of the packet.
          type: integer
        hlen:
          description: Hardware length of the packet.
          type: integer
        hops:
          description: Number of hops the packet took.
          type: integer
        xid:
          description: Transaction id of the packet.
          type: string
        secs:
          description: Number of seconds since receiving the packet.
          type: integer
        flags:
          description: Packet flags.
          type: string
        ciaddr:
          description: Client IP address of the packet.
          type: string
        yiaddr:
          description: Assigned IP address of the packet.
          type: string
        siaddr:
          description: Server IP address of the packet.
          type: string
        giaddr:
          description: Gateway IP address of the packet.
          type: string
        chaddr:
          description: Client hardware address of the packet.
          type: string
        sname:
          description: Server identifier address of the packet.
          type: string
        magicCookie:
          description: Magic cookie of the packet.
          type: string
        options:
          description: Additional DHCP options of the packet.
          items:
            $ref: '#/components/schemas/_networks__networkId__switch_dhcp_v4_servers_seen_lastPacket_fields_options'
          type: array
      type: object
    _networks__networkId__appliance_singleLan_mandatoryDhcp:
      description: Mandatory DHCP will enforce that clients connecting to this LAN
        must use the IP address assigned by the DHCP server. Clients who use a static
        IP address won't be able to associate. Only available on firmware versions
        17.0 and above
      properties:
        enabled:
          description: Enable Mandatory DHCP on LAN.
          type: boolean
      type: object
    inline_response_200_27_products_wireless_lastUpgrade_fromVersion:
      description: Details of the version the device upgraded from
      example:
        releaseDate: 2000-01-23T04:56:07.000+00:00
        releaseType: releaseType
        id: id
        shortName: shortName
        firmware: firmware
      properties:
        id:
          description: Firmware version identifier
          type: string
        firmware:
          description: Name of the firmware version
          type: string
        shortName:
          description: Firmware version short name
          type: string
        releaseType:
          description: Release type of the firmware version
          type: string
        releaseDate:
          description: Release date of the firmware version
          format: date-time
          type: string
      type: object
    _networks__networkId__groupPolicies_scheduling_saturday:
      description: The schedule object for Saturday.
      properties:
        active:
          description: Whether the schedule is active (true) or inactive (false) during
            the time specified between 'from' and 'to'. Defaults to true.
          type: boolean
        from:
          description: The time, from '00:00' to '24:00'. Must be less than the time
            specified in 'to'. Defaults to '00:00'. Only 30 minute increments are
            allowed.
          type: string
        to:
          description: The time, from '00:00' to '24:00'. Must be greater than the
            time specified in 'from'. Defaults to '24:00'. Only 30 minute increments
            are allowed.
          type: string
      type: object
    inline_response_201_4_perSsidSettings_14:
      description: Settings for SSID 14
      example:
        minBitrate: 9
        name: name
        bandSteeringEnabled: true
        bandOperationMode: 2.4ghz
      properties:
        name:
          description: Name of SSID
          type: string
        minBitrate:
          description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2',
            '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
          type: integer
        bandOperationMode:
          description: Choice between 'dual', '2.4ghz' or '5ghz'.
          enum:
          - 2.4ghz
          - 5ghz
          - dual
          type: string
        bandSteeringEnabled:
          description: Steers client to most open band between 2.4 GHz and 5 GHz.
            Can be either true or false.
          type: boolean
      type: object
    inline_response_200_91:
      example:
        counts:
          customGroups: 6
          allowPolicies: 2
          denyPolicies: 5
          policyObjects: 7
          policies: 5
          groups: 0
          customAcls: 1
        limits:
          customGroups: 9
          rulesInAnAcl: 3
          policyObjects: 4
          aclsInAPolicy: 2
      properties:
        counts:
          $ref: '#/components/schemas/inline_response_200_91_counts'
        limits:
          $ref: '#/components/schemas/inline_response_200_91_limits'
      type: object
    inline_response_200_90:
      example:
        aclId: aclId
        createdAt: 2000-01-23T04:56:07.000+00:00
        ipVersion: ipVersion
        name: name
        description: description
        rules:
        - protocol: protocol
          dstPort: dstPort
          srcPort: srcPort
          policy: policy
        - protocol: protocol
          dstPort: dstPort
          srcPort: srcPort
          policy: policy
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        aclId:
          description: ID of the adaptive policy ACL
          type: string
        name:
          description: Name of the adaptive policy ACL
          type: string
        description:
          description: Description of the adaptive policy ACL
          type: string
        ipVersion:
          description: IP version of adpative policy ACL
          type: string
        rules:
          description: An ordered array of the adaptive policy ACL rules
          items:
            $ref: '#/components/schemas/_organizations__organizationId__adaptivePolicy_acls_rules'
          type: array
        createdAt:
          description: When the adaptive policy ACL was created
          format: date-time
          type: string
        updatedAt:
          description: When the adaptive policy ACL was last updated
          format: date-time
          type: string
      type: object
    inline_response_201_4_perSsidSettings_12:
      description: Settings for SSID 12
      example:
        minBitrate: 6
        name: name
        bandSteeringEnabled: true
        bandOperationMode: 2.4ghz
      properties:
        name:
          description: Name of SSID
          type: string
        minBitrate:
          description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2',
            '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
          type: integer
        bandOperationMode:
          description: Choice between 'dual', '2.4ghz' or '5ghz'.
          enum:
          - 2.4ghz
          - 5ghz
          - dual
          type: string
        bandSteeringEnabled:
          description: Steers client to most open band between 2.4 GHz and 5 GHz.
            Can be either true or false.
          type: boolean
      type: object
    inline_response_200_93:
      example:
        counts:
        - code: 0
          count: 6
        - code: 0
          count: 6
        endTs: 2000-01-23T04:56:07.000+00:00
        startTs: 2000-01-23T04:56:07.000+00:00
      properties:
        startTs:
          description: The start time of the access period
          format: date-time
          type: string
        endTs:
          description: The end time of the access period
          format: date-time
          type: string
        counts:
          description: list of response codes and a count of how many requests had
            that code in the given time period
          items:
            $ref: '#/components/schemas/_organizations__organizationId__apiRequests_overview_responseCodes_byInterval_counts'
          type: array
      type: object
    inline_response_201_4_perSsidSettings_13:
      description: Settings for SSID 13
      example:
        minBitrate: 8
        name: name
        bandSteeringEnabled: true
        bandOperationMode: 2.4ghz
      properties:
        name:
          description: Name of SSID
          type: string
        minBitrate:
          description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2',
            '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
          type: integer
        bandOperationMode:
          description: Choice between 'dual', '2.4ghz' or '5ghz'.
          enum:
          - 2.4ghz
          - 5ghz
          - dual
          type: string
        bandSteeringEnabled:
          description: Steers client to most open band between 2.4 GHz and 5 GHz.
            Can be either true or false.
          type: boolean
      type: object
    inline_response_200_92:
      example:
        path: path
        method: method
        sourceIp: sourceIp
        adminId: adminId
        host: host
        operationId: operationId
        userAgent: userAgent
        queryString: queryString
        version: 6
        ts: 2000-01-23T04:56:07.000+00:00
        responseCode: 0
      properties:
        adminId:
          description: Database ID for the admin user who made the API request.
          type: string
        method:
          description: HTTP method used in the API request.
          type: string
        host:
          description: The host which the API request was directed at.
          type: string
        path:
          description: The API request path.
          type: string
        queryString:
          description: The query string sent with the API request.
          type: string
        userAgent:
          description: The API request user agent.
          type: string
        ts:
          description: Timestamp, in iso8601 format, indicating when the API request
            was made.
          format: date-time
          type: string
        responseCode:
          description: API request response code.
          type: integer
        sourceIp:
          description: Public IP address from which the API request was made.
          type: string
        version:
          description: API version of the endpoint.
          type: integer
        operationId:
          description: Operation ID for the endpoint.
          type: string
      type: object
    _networks__networkId__camera_qualityRetentionProfiles_videoSettings_MV52:
      description: Quality and resolution for MV52 camera models.
      properties:
        quality:
          description: Quality of the camera. Can be one of 'Standard', 'Enhanced'
            or 'High'.
          enum:
          - Enhanced
          - High
          - Standard
          type: string
        resolution:
          description: Resolution of the camera. Can be one of '1280x720', '1920x1080',
            '2688x1512' or '3840x2160'.
          enum:
          - 1280x720
          - 1920x1080
          - 2688x1512
          - 3840x2160
          type: string
      required:
      - quality
      - resolution
      type: object
    _networks__networkId__switch_dhcp_v4_servers_seen_seenBy:
      example:
        serial: serial
        name: name
        url: url
      properties:
        serial:
          description: Device serial.
          type: string
        name:
          description: Device name.
          type: string
        url:
          description: Url link to device.
          type: string
      type: object
    _networks__networkId__wireless_rfProfiles_fiveGhzSettings:
      description: Settings related to 5Ghz band
      example:
        validAutoChannels:
        - 3
        - 3
        rxsop: 2
        minBitrate: 9
        channelWidth: channelWidth
        maxPower: 2
        minPower: 7
      properties:
        maxPower:
          description: Sets max power (dBm) of 5Ghz band. Can be integer between 2
            and 30. Defaults to 30.
          type: integer
        minPower:
          description: Sets min power (dBm) of 5Ghz band. Can be integer between 2
            and 30. Defaults to 8.
          type: integer
        minBitrate:
          description: Sets min bitrate (Mbps) of 5Ghz band. Can be one of '6', '9',
            '12', '18', '24', '36', '48' or '54'. Defaults to 12.
          type: integer
        validAutoChannels:
          description: Sets valid auto channels for 5Ghz band. Can be one of '36',
            '40', '44', '48', '52', '56', '60', '64', '100', '104', '108', '112',
            '116', '120', '124', '128', '132', '136', '140', '144', '149', '153',
            '157', '161' or '165'.Defaults to [36, 40, 44, 48, 52, 56, 60, 64, 100,
            104, 108, 112, 116, 120, 124, 128, 132, 136, 140, 144, 149, 153, 157,
            161, 165].
          items:
            type: integer
          type: array
        channelWidth:
          description: Sets channel width (MHz) for 5Ghz band. Can be one of 'auto',
            '20', '40' or '80'. Defaults to auto.
          type: string
        rxsop:
          description: The RX-SOP level controls the sensitivity of the radio. It
            is strongly recommended to use RX-SOP only after consulting a wireless
            expert. RX-SOP can be configured in the range of -65 to -95 (dBm). A value
            of null will reset this to the default.
          type: integer
      type: object
    inline_response_201_4_perSsidSettings_10:
      description: Settings for SSID 10
      example:
        minBitrate: 9
        name: name
        bandSteeringEnabled: true
        bandOperationMode: 2.4ghz
      properties:
        name:
          description: Name of SSID
          type: string
        minBitrate:
          description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2',
            '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
          type: integer
        bandOperationMode:
          description: Choice between 'dual', '2.4ghz' or '5ghz'.
          enum:
          - 2.4ghz
          - 5ghz
          - dual
          type: string
        bandSteeringEnabled:
          description: Steers client to most open band between 2.4 GHz and 5 GHz.
            Can be either true or false.
          type: boolean
      type: object
    inline_response_201_4_perSsidSettings_11:
      description: Settings for SSID 11
      example:
        minBitrate: 9
        name: name
        bandSteeringEnabled: true
        bandOperationMode: 2.4ghz
      properties:
        name:
          description: Name of SSID
          type: string
        minBitrate:
          description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2',
            '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
          type: integer
        bandOperationMode:
          description: Choice between 'dual', '2.4ghz' or '5ghz'.
          enum:
          - 2.4ghz
          - 5ghz
          - dual
          type: string
        bandSteeringEnabled:
          description: Steers client to most open band between 2.4 GHz and 5 GHz.
            Can be either true or false.
          type: boolean
      type: object
    _networks__networkId__sensor_alerts_overview_byMetric_counts_noise:
      description: Object containing the number of sensor alerts that occurred due
        to noise readings
      example:
        ambient: 5
      properties:
        ambient:
          description: Number of sensor alerts that occurred due to ambient noise
            readings
          type: integer
      type: object
    inline_object_219:
      example:
        x509certSha1Fingerprint: 00:11:22:33:44:55:66:77:88:99:00:11:22:33:44:55:66:77:88:99
        sloLogoutUrl: https://somewhere.com
      properties:
        x509certSha1Fingerprint:
          description: Fingerprint (SHA1) of the SAML certificate provided by your
            Identity Provider (IdP). This will be used for encryption / validation.
          type: string
        sloLogoutUrl:
          description: Dashboard will redirect users to this URL when they sign out.
          type: string
      type: object
    _networks__networkId__switch_dhcp_v4_servers_seen_lastPacket_source:
      description: Source of the packet.
      example:
        ipv4:
          address: address
        port: 6
        mac: mac
      properties:
        mac:
          description: Source mac address of the packet.
          type: string
        ipv4:
          $ref: '#/components/schemas/_networks__networkId__switch_dhcp_v4_servers_seen_lastPacket_source_ipv4'
        port:
          description: Source port of the packet.
          type: integer
      type: object
    _organizations__organizationId__summary_top_clients_byUsage_usage:
      description: Data usage information
      example:
        total: 0.8008282
        upstream: 6.0274563
        percentage: 5.962134
        downstream: 1.4658129
      properties:
        total:
          description: Total data usage by client
          format: float
          type: number
        upstream:
          description: Upstream data usage by client
          format: float
          type: number
        downstream:
          description: Downstream data usage by client
          format: float
          type: number
        percentage:
          description: Percentage of total data usage by client
          format: float
          type: number
      type: object
    inline_response_200_87_splashLogo:
      description: The logo used in the splash page.
      example:
        extension: extension
        md5: md5
      properties:
        md5:
          description: The MD5 value of the logo file.
          type: string
        extension:
          description: The extension of the logo file.
          type: string
      type: object
    _networks__networkId__wireless_rfProfiles__rfProfileId__fiveGhzSettings:
      description: Settings related to 5Ghz band
      properties:
        maxPower:
          description: Sets max power (dBm) of 5Ghz band. Can be integer between 2
            and 30.
          type: integer
        minPower:
          description: Sets min power (dBm) of 5Ghz band. Can be integer between 2
            and 30.
          type: integer
        minBitrate:
          description: Sets min bitrate (Mbps) of 5Ghz band. Can be one of '6', '9',
            '12', '18', '24', '36', '48' or '54'.
          type: integer
        validAutoChannels:
          description: Sets valid auto channels for 5Ghz band. Can be one of '36',
            '40', '44', '48', '52', '56', '60', '64', '100', '104', '108', '112',
            '116', '120', '124', '128', '132', '136', '140', '144', '149', '153',
            '157', '161' or '165'.
          items:
            type: integer
          type: array
        channelWidth:
          description: Sets channel width (MHz) for 5Ghz band. Can be one of 'auto',
            '20', '40' or '80'.
          type: string
        rxsop:
          description: The RX-SOP level controls the sensitivity of the radio. It
            is strongly recommended to use RX-SOP only after consulting a wireless
            expert. RX-SOP can be configured in the range of -65 to -95 (dBm). A value
            of null will reset this to the default.
          type: integer
      type: object
    _organizations__organizationId__adaptivePolicy_groups_policyObjects:
      properties:
        id:
          description: The ID of the policy object
          type: string
        name:
          description: The name of the policy object
          type: string
      type: object
    inline_response_200_1_interfaces_wan1_pppoe:
      description: Configuration options for PPPoE.
      example:
        enabled: true
        authentication:
          enabled: true
          username: username
      properties:
        enabled:
          description: Whether PPPoE is enabled.
          type: boolean
        authentication:
          $ref: '#/components/schemas/inline_response_200_1_interfaces_wan1_pppoe_authentication'
      type: object
    _networks__networkId__appliance_trafficShaping_uplinkBandwidth_bandwidthLimits_wan2:
      description: The bandwidth settings for the 'wan2' uplink
      properties:
        limitUp:
          description: The maximum upload limit (integer, in Kbps). null indicates
            no limit
          type: integer
        limitDown:
          description: The maximum download limit (integer, in Kbps). null indicates
            no limit
          type: integer
      type: object
    _networks__networkId__appliance_vlans_ipv6:
      description: IPv6 configuration on the VLAN
      example:
        prefixAssignments:
        - staticPrefix: staticPrefix
          origin:
            interfaces:
            - interfaces
            - interfaces
            type: independent
          autonomous: true
          staticApplianceIp6: staticApplianceIp6
        - staticPrefix: staticPrefix
          origin:
            interfaces:
            - interfaces
            - interfaces
            type: independent
          autonomous: true
          staticApplianceIp6: staticApplianceIp6
        enabled: true
      properties:
        enabled:
          description: Enable IPv6 on VLAN
          type: boolean
        prefixAssignments:
          description: Prefix assignments on the VLAN
          items:
            $ref: '#/components/schemas/_networks__networkId__appliance_vlans_ipv6_prefixAssignments'
          type: array
      type: object
    _networks__networkId__appliance_trafficShaping_uplinkBandwidth_bandwidthLimits_wan1:
      description: The bandwidth settings for the 'wan1' uplink
      properties:
        limitUp:
          description: The maximum upload limit (integer, in Kbps). null indicates
            no limit
          type: integer
        limitDown:
          description: The maximum download limit (integer, in Kbps). null indicates
            no limit
          type: integer
      type: object
    _networks__networkId__switch_dhcp_v4_servers_seen_lastPacket_ip_dscp:
      description: DSCP attributes of the packet.
      example:
        ecn: 2
        tag: 3
      properties:
        tag:
          description: DSCP tag number of the packet.
          type: integer
        ecn:
          description: ECN number of the packet.
          type: integer
      type: object
    _networks__networkId__alerts_settings_alerts:
      properties:
        type:
          description: The type of alert
          type: string
        enabled:
          description: A boolean depicting if the alert is turned on or off
          type: boolean
        alertDestinations:
          $ref: '#/components/schemas/_networks__networkId__alerts_settings_alertDestinations'
        filters:
          description: A hash of specific configuration data for the alert. Only filters
            specific to the alert will be updated.
          properties: {}
          type: object
      required:
      - type
      type: object
    _devices__serial__sensor_relationships_livestream:
      description: A role defined between an MT sensor and an MV camera that adds
        the camera's livestream to the sensor's details page. Snapshots from the camera
        will also appear in alert notifications that the sensor triggers.
      example:
        relatedDevices:
        - serial: serial
          productType: camera
        - serial: serial
          productType: camera
      properties:
        relatedDevices:
          description: An array of the related devices for the role
          items:
            $ref: '#/components/schemas/_devices__serial__sensor_relationships_livestream_relatedDevices'
          type: array
      type: object
    _networks__networkId__clients__clientId__splashAuthorizationStatus_ssids_11:
      description: Splash authorization for SSID 11
      properties:
        isAuthorized:
          description: New authorization status for the SSID (true, false).
          type: boolean
      type: object
    _networks__networkId__clients__clientId__splashAuthorizationStatus_ssids_10:
      description: Splash authorization for SSID 10
      properties:
        isAuthorized:
          description: New authorization status for the SSID (true, false).
          type: boolean
      type: object
    _networks__networkId__clients__clientId__splashAuthorizationStatus_ssids_14:
      description: Splash authorization for SSID 14
      properties:
        isAuthorized:
          description: New authorization status for the SSID (true, false).
          type: boolean
      type: object
    _networks__networkId__groupPolicies_contentFiltering_allowedUrlPatterns:
      description: Settings for allowed URL patterns
      properties:
        settings:
          description: How URL patterns are applied. Can be 'network default', 'append'
            or 'override'.
          enum:
          - append
          - network default
          - override
          type: string
        patterns:
          description: A list of URL patterns that are allowed
          items:
            type: string
          type: array
      type: object
    _networks__networkId__clients__clientId__splashAuthorizationStatus_ssids_13:
      description: Splash authorization for SSID 13
      properties:
        isAuthorized:
          description: New authorization status for the SSID (true, false).
          type: boolean
      type: object
    _networks__networkId__clients__clientId__splashAuthorizationStatus_ssids_12:
      description: Splash authorization for SSID 12
      properties:
        isAuthorized:
          description: New authorization status for the SSID (true, false).
          type: boolean
      type: object
    _networks__networkId__wireless_ssids__number__activeDirectory_servers:
      properties:
        host:
          description: IP address of your Active Directory server.
          type: string
        port:
          description: (Optional) UDP port the Active Directory server listens on.
            By default, uses port 3268.
          type: integer
      required:
      - host
      type: object
    inline_response_200_128_tags:
      example:
        access: access
        tag: tag
      properties:
        tag:
          description: The name of the tag
          type: string
        access:
          description: The privilege of the SAML administrator on the tag
          type: string
      type: object
    _networks__networkId__wireless_alternateManagementInterface_accessPoints:
      properties:
        serial:
          description: Serial number of access point to be configured with alternate
            management IP
          type: string
        alternateManagementIp:
          description: Wireless alternate management interface device IP. Provide
            an empty string to remove alternate management IP assignment
          type: string
        subnetMask:
          description: Subnet mask must be in IP format
          type: string
        gateway:
          description: Gateway must be in IP format
          type: string
        dns1:
          description: Primary DNS must be in IP format
          type: string
        dns2:
          description: Optional secondary DNS must be in IP format
          type: string
      required:
      - alternateManagementIp
      - serial
      type: object
    _networks__networkId__appliance_vlans_mandatoryDhcp:
      description: Mandatory DHCP will enforce that clients connecting to this VLAN
        must use the IP address assigned by the DHCP server. Clients who use a static
        IP address won't be able to associate. Only available on firmware versions
        17.0 and above
      example:
        enabled: true
      properties:
        enabled:
          description: Enable Mandatory DHCP on VLAN.
          type: boolean
      type: object
    _networks__networkId__switch_dhcp_v4_servers_seen_ipv4:
      description: IPv4 attributes of the server.
      example:
        subnet: subnet
        address: address
        gateway: gateway
      properties:
        address:
          description: IPv4 address of the server.
          type: string
        subnet:
          description: Subnet of the server.
          type: string
        gateway:
          description: IPv4 gateway address of the server.
          type: string
      type: object
    _networks__networkId__wireless_rfProfiles_perSsidSettings_0:
      description: Settings for SSID 0
      properties:
        minBitrate:
          description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2',
            '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
          format: float
          type: number
        bandOperationMode:
          description: Choice between 'dual', '2.4ghz' or '5ghz'.
          enum:
          - 2.4ghz
          - 5ghz
          - dual
          type: string
        bandSteeringEnabled:
          description: Steers client to most open band between 2.4 GHz and 5 GHz.
            Can be either true or false.
          type: boolean
      type: object
    _networks__networkId__wireless_rfProfiles_perSsidSettings_3:
      description: Settings for SSID 3
      properties:
        minBitrate:
          description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2',
            '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
          format: float
          type: number
        bandOperationMode:
          description: Choice between 'dual', '2.4ghz' or '5ghz'.
          enum:
          - 2.4ghz
          - 5ghz
          - dual
          type: string
        bandSteeringEnabled:
          description: Steers client to most open band between 2.4 GHz and 5 GHz.
            Can be either true or false.
          type: boolean
      type: object
    _networks__networkId__wireless_rfProfiles_perSsidSettings_4:
      description: Settings for SSID 4
      properties:
        minBitrate:
          description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2',
            '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
          format: float
          type: number
        bandOperationMode:
          description: Choice between 'dual', '2.4ghz' or '5ghz'.
          enum:
          - 2.4ghz
          - 5ghz
          - dual
          type: string
        bandSteeringEnabled:
          description: Steers client to most open band between 2.4 GHz and 5 GHz.
            Can be either true or false.
          type: boolean
      type: object
    _organizations__organizationId__inventory_onboarding_cloudMonitoring_prepare_vty_authorization:
      description: VTY AAA authorization
      properties:
        group:
          $ref: '#/components/schemas/_organizations__organizationId__inventory_onboarding_cloudMonitoring_prepare_vty_authentication_group'
      type: object
    _networks__networkId__wireless_rfProfiles_perSsidSettings_1:
      description: Settings for SSID 1
      properties:
        minBitrate:
          description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2',
            '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
          format: float
          type: number
        bandOperationMode:
          description: Choice between 'dual', '2.4ghz' or '5ghz'.
          enum:
          - 2.4ghz
          - 5ghz
          - dual
          type: string
        bandSteeringEnabled:
          description: Steers client to most open band between 2.4 GHz and 5 GHz.
            Can be either true or false.
          type: boolean
      type: object
    _networks__networkId__wireless_rfProfiles_perSsidSettings_2:
      description: Settings for SSID 2
      properties:
        minBitrate:
          description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2',
            '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
          format: float
          type: number
        bandOperationMode:
          description: Choice between 'dual', '2.4ghz' or '5ghz'.
          enum:
          - 2.4ghz
          - 5ghz
          - dual
          type: string
        bandSteeringEnabled:
          description: Steers client to most open band between 2.4 GHz and 5 GHz.
            Can be either true or false.
          type: boolean
      type: object
    _networks__networkId__wireless_rfProfiles_perSsidSettings_7:
      description: Settings for SSID 7
      properties:
        minBitrate:
          description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2',
            '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
          format: float
          type: number
        bandOperationMode:
          description: Choice between 'dual', '2.4ghz' or '5ghz'.
          enum:
          - 2.4ghz
          - 5ghz
          - dual
          type: string
        bandSteeringEnabled:
          description: Steers client to most open band between 2.4 GHz and 5 GHz.
            Can be either true or false.
          type: boolean
      type: object
    _networks__networkId__wireless_rfProfiles__rfProfileId__twoFourGhzSettings:
      description: Settings related to 2.4Ghz band
      properties:
        maxPower:
          description: Sets max power (dBm) of 2.4Ghz band. Can be integer between
            2 and 30.
          type: integer
        minPower:
          description: Sets min power (dBm) of 2.4Ghz band. Can be integer between
            2 and 30.
          type: integer
        minBitrate:
          description: Sets min bitrate (Mbps) of 2.4Ghz band. Can be one of '1',
            '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
          format: float
          type: number
        validAutoChannels:
          description: Sets valid auto channels for 2.4Ghz band. Can be one of '1',
            '6' or '11'.
          items:
            type: integer
          type: array
        axEnabled:
          description: Determines whether ax radio on 2.4Ghz band is on or off. Can
            be either true or false. If false, we highly recommend disabling band
            steering.
          type: boolean
        rxsop:
          description: The RX-SOP level controls the sensitivity of the radio. It
            is strongly recommended to use RX-SOP only after consulting a wireless
            expert. RX-SOP can be configured in the range of -65 to -95 (dBm). A value
            of null will reset this to the default.
          type: integer
      type: object
    _networks__networkId__wireless_rfProfiles_perSsidSettings_8:
      description: Settings for SSID 8
      properties:
        minBitrate:
          description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2',
            '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
          format: float
          type: number
        bandOperationMode:
          description: Choice between 'dual', '2.4ghz' or '5ghz'.
          enum:
          - 2.4ghz
          - 5ghz
          - dual
          type: string
        bandSteeringEnabled:
          description: Steers client to most open band between 2.4 GHz and 5 GHz.
            Can be either true or false.
          type: boolean
      type: object
    _networks__networkId__wireless_rfProfiles_perSsidSettings_5:
      description: Settings for SSID 5
      properties:
        minBitrate:
          description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2',
            '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
          format: float
          type: number
        bandOperationMode:
          description: Choice between 'dual', '2.4ghz' or '5ghz'.
          enum:
          - 2.4ghz
          - 5ghz
          - dual
          type: string
        bandSteeringEnabled:
          description: Steers client to most open band between 2.4 GHz and 5 GHz.
            Can be either true or false.
          type: boolean
      type: object
    _networks__networkId__wireless_rfProfiles_perSsidSettings_6:
      description: Settings for SSID 6
      properties:
        minBitrate:
          description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2',
            '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
          format: float
          type: number
        bandOperationMode:
          description: Choice between 'dual', '2.4ghz' or '5ghz'.
          enum:
          - 2.4ghz
          - 5ghz
          - dual
          type: string
        bandSteeringEnabled:
          description: Steers client to most open band between 2.4 GHz and 5 GHz.
            Can be either true or false.
          type: boolean
      type: object
    inline_response_200_1_interfaces_wan1_svis_ipv4_nameservers:
      description: The nameserver settings for this SVI.
      example:
        addresses:
        - addresses
        - addresses
      properties:
        addresses:
          description: Up to 2 nameserver addresses to use, ordered in priority from
            highest to lowest priority.
          items:
            type: string
          type: array
      type: object
    _networks__networkId__wireless_rfProfiles_perSsidSettings_9:
      description: Settings for SSID 9
      properties:
        minBitrate:
          description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2',
            '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
          format: float
          type: number
        bandOperationMode:
          description: Choice between 'dual', '2.4ghz' or '5ghz'.
          enum:
          - 2.4ghz
          - 5ghz
          - dual
          type: string
        bandSteeringEnabled:
          description: Steers client to most open band between 2.4 GHz and 5 GHz.
            Can be either true or false.
          type: boolean
      type: object
    _organizations__organizationId__firmware_upgrades_byDevice_upgrade:
      description: The devices upgrade details and status
      example:
        upgradeBatchId: upgradeBatchId
        fromVersion:
          releaseDate: releaseDate
          releaseType: releaseType
          id: id
          shortName: shortName
        time: time
        id: id
        staged:
          group:
            id: id
        toVersion:
          releaseDate: releaseDate
          releaseType: releaseType
          id: id
          shortName: shortName
        status: status
      properties:
        time:
          description: Start time of the upgrade
          type: string
        fromVersion:
          $ref: '#/components/schemas/_organizations__organizationId__firmware_upgrades_byDevice_upgrade_fromVersion'
        toVersion:
          $ref: '#/components/schemas/_organizations__organizationId__firmware_upgrades_byDevice_upgrade_toVersion'
        status:
          description: Status of the upgrade
          type: string
        id:
          description: ID of the upgrade
          type: string
        upgradeBatchId:
          description: ID of the upgrade batch
          type: string
        staged:
          $ref: '#/components/schemas/_organizations__organizationId__firmware_upgrades_byDevice_upgrade_staged'
      type: object
    _networks__networkId__switch_dhcp_v4_servers_seen_device:
      description: Attributes of the server when it's a device.
      example:
        serial: serial
        name: name
        interface:
          name: name
          url: url
        url: url
      properties:
        serial:
          description: Device serial.
          type: string
        name:
          description: Device name.
          type: string
        url:
          description: Url link to device.
          type: string
        interface:
          $ref: '#/components/schemas/_networks__networkId__switch_dhcp_v4_servers_seen_device_interface'
      type: object
    inline_response_200_94_peers:
      example:
        networkTags:
        - networkTags
        - networkTags
        ipsecPoliciesPreset: ipsecPoliciesPreset
        name: name
        publicIp: publicIp
        privateSubnets:
        - privateSubnets
        - privateSubnets
        secret: secret
        ikeVersion: "1"
        ipsecPolicies:
          ikeAuthAlgo:
          - md5
          - md5
          ikeDiffieHellmanGroup:
          - ikeDiffieHellmanGroup
          - ikeDiffieHellmanGroup
          childLifetime: 6
          childCipherAlgo:
          - aes128
          - aes128
          ikeLifetime: 0
          ikeCipherAlgo:
          - aes128
          - aes128
          ikePrfAlgo:
          - default
          - default
          childAuthAlgo:
          - md5
          - md5
          childPfsGroup:
          - childPfsGroup
          - childPfsGroup
        localId: localId
        remoteId: remoteId
      properties:
        name:
          description: The name of the VPN peer
          type: string
        publicIp:
          description: '[optional] The public IP of the VPN peer'
          type: string
        remoteId:
          description: '[optional] The remote ID is used to identify the connecting
            VPN peer. This can either be a valid IPv4 Address, FQDN or User FQDN.'
          type: string
        localId:
          description: '[optional] The local ID is used to identify the MX to the
            peer. This will apply to all MXs this peer applies to.'
          type: string
        secret:
          description: The shared secret with the VPN peer
          type: string
        privateSubnets:
          description: The list of the private subnets of the VPN peer
          items:
            type: string
          type: array
        ipsecPolicies:
          $ref: '#/components/schemas/inline_response_200_94_ipsecPolicies'
        ipsecPoliciesPreset:
          description: 'One of the following available presets: ''default'', ''aws'',
            ''azure''. If this is provided, the ''ipsecPolicies'' parameter is ignored.'
          type: string
        ikeVersion:
          default: "1"
          description: '[optional] The IKE version to be used for the IPsec VPN peer
            configuration. Defaults to ''1'' when omitted.'
          enum:
          - "1"
          - "2"
          type: string
        networkTags:
          description: A list of network tags that will connect with this peer. Use
            ['all'] for all networks. Use ['none'] for no networks. If not included,
            the default is ['all'].
          items:
            type: string
          type: array
      type: object
    _organizations__organizationId__sensor_readings_history_button:
      description: Reading for the 'button' metric. This will only be present if the
        'metric' property equals 'button'.
      example:
        pressType: long
      properties:
        pressType:
          description: Type of button press that occurred.
          enum:
          - long
          - short
          type: string
      type: object
    _devices__serial__wireless_radio_settings_fiveGhzSettings:
      description: Manual radio settings for 5 GHz.
      properties:
        channel:
          description: Sets a manual channel for 5 GHz. Can be '36', '40', '44', '48',
            '52', '56', '60', '64', '100', '104', '108', '112', '116', '120', '124',
            '128', '132', '136', '140', '144', '149', '153', '157', '161', '165',
            '169', '173' or '177' or null for using auto channel.
          type: integer
        channelWidth:
          description: Sets a manual channel for 5 GHz. Can be '0', '20', '40', '80'
            or '160' or null for using auto channel width.
          type: integer
        targetPower:
          description: Set a manual target power for 5 GHz. Can be between '8' or
            '30' or null for using auto power range.
          type: integer
      type: object
    _networks__networkId__groupPolicies_contentFiltering:
      description: The content filtering settings for your group policy
      properties:
        allowedUrlPatterns:
          $ref: '#/components/schemas/_networks__networkId__groupPolicies_contentFiltering_allowedUrlPatterns'
        blockedUrlPatterns:
          $ref: '#/components/schemas/_networks__networkId__groupPolicies_contentFiltering_blockedUrlPatterns'
        blockedUrlCategories:
          $ref: '#/components/schemas/_networks__networkId__groupPolicies_contentFiltering_blockedUrlCategories'
      type: object
    inline_object_1:
      example:
        interfaces:
          wan1:
            enabled: true
            vlanTagging:
              enabled: true
              vlanId: 1
            svis:
              ipv4:
                assignmentMode: static
                address: 9.10.11.10/16
                gateway: 13.14.15.16
                nameservers:
                  addresses:
                  - 1.2.3.4
              ipv6:
                assignmentMode: static
                address: 1:2:3::4
                gateway: 1:2:3::5
                nameservers:
                  addresses:
                  - 1001:4860:4860::8888
                  - 1001:4860:4860::8844
            pppoe:
              enabled: true
              authentication:
                enabled: true
                username: username
                password: password
          wan2:
            enabled: true
            vlanTagging:
              enabled: true
              vlanId: 1
            svis:
              ipv4:
                assignmentMode: static
                address: 9.10.11.10/16
                gateway: 13.14.15.16
                nameservers:
                  addresses:
                  - 1.2.3.4
              ipv6:
                assignmentMode: static
                address: 1:2:3::4
                gateway: 1:2:3::5
                nameservers:
                  addresses:
                  - 1001:4860:4860::8888
                  - 1001:4860:4860::8844
            pppoe:
              enabled: true
              authentication:
                enabled: true
                username: username
                password: password
      properties:
        interfaces:
          $ref: '#/components/schemas/_devices__serial__appliance_uplinks_settings_interfaces'
      required:
      - interfaces
      type: object
    _networks__networkId__wireless_ssids__number__localRadius_certificateAuthentication_clientRootCaCertificate:
      description: The Client CA Certificate used to sign the client certificate.
      properties:
        contents:
          description: The contents of the Client CA Certificate. Must be in PEM or
            DER format.
          type: string
      type: object
    _networks__networkId__appliance_security_intrusion_protectedNetworks:
      description: Set the included/excluded networks from the intrusion engine (optional
        - omitting will leave current config unchanged). This is available only in
        'passthrough' mode
      properties:
        useDefault:
          description: 'true/false whether to use special IPv4 addresses: https://tools.ietf.org/html/rfc5735
            (required). Default value is true if none currently saved'
          type: boolean
        includedCidr:
          description: list of IP addresses or subnets being protected (required if
            'useDefault' is false)
          items:
            type: string
          type: array
        excludedCidr:
          description: list of IP addresses or subnets being excluded from protection
            (required if 'useDefault' is false)
          items:
            type: string
          type: array
      type: object
    inline_object_9:
      example:
        slot: sim1
        isPrimary: true
        apns:
        - name: internet
          allowedIpTypes:
          - ipv4
          - ipv6
          authentication:
            type: pap
            username: milesmeraki
            password: secret
      properties:
        sims:
          description: List of SIMs. If a SIM was previously configured and not specified
            in this request, it will remain unchanged.
          items:
            $ref: '#/components/schemas/_devices__serial__cellular_sims_sims'
          type: array
        simFailover:
          $ref: '#/components/schemas/_devices__serial__cellular_sims_simFailover'
      type: object
    inline_object_8:
      example:
        ids:
          primary: "3"
          secondary: "2"
          backup: "1"
      properties:
        ids:
          $ref: '#/components/schemas/_devices__serial__camera_wirelessProfiles_ids'
      required:
      - ids
      type: object
    inline_object_7:
      example:
        externalRtspEnabled: true
      properties:
        externalRtspEnabled:
          description: Boolean indicating if external rtsp stream is exposed
          type: boolean
      type: object
    _organizations__organizationId__firmware_upgrades_toVersion:
      description: ID of the upgrade's target version
      example:
        releaseDate: 2000-01-23T04:56:07.000+00:00
        releaseType: releaseType
        id: id
        shortName: shortName
      properties:
        id:
          description: Firmware version ID
          type: string
        shortName:
          description: Firmware version short name
          type: string
        releaseType:
          description: Release type of the firmware version
          type: string
        releaseDate:
          description: Release date of the firmware version
          format: date-time
          type: string
      type: object
    inline_object_6:
      example:
        senseEnabled: true
        audioDetection:
          enabled: false
        mqttBrokerId: "1234"
      properties:
        senseEnabled:
          description: Boolean indicating if sense(license) is enabled(true) or disabled(false)
            on the camera
          type: boolean
        mqttBrokerId:
          description: The ID of the MQTT broker to be enabled on the camera. A value
            of null will disable MQTT on the camera
          type: string
        audioDetection:
          $ref: '#/components/schemas/_devices__serial__camera_sense_audioDetection'
        detectionModelId:
          description: The ID of the object detection model
          type: string
      type: object
    inline_object_5:
      example:
        motionBasedRetentionEnabled: false
        audioRecordingEnabled: false
        restrictedBandwidthModeEnabled: false
        profileId: "1234"
        quality: Standard
        motionDetectorVersion: 2
        resolution: 1280x720
      properties:
        profileId:
          description: The ID of a quality and retention profile to assign to the
            camera. The profile's settings will override all of the per-camera quality
            and retention settings. If the value of this parameter is null, any existing
            profile will be unassigned from the camera.
          type: string
        motionBasedRetentionEnabled:
          description: Boolean indicating if motion-based retention is enabled(true)
            or disabled(false) on the camera.
          type: boolean
        audioRecordingEnabled:
          description: Boolean indicating if audio recording is enabled(true) or disabled(false)
            on the camera
          type: boolean
        restrictedBandwidthModeEnabled:
          description: Boolean indicating if restricted bandwidth is enabled(true)
            or disabled(false) on the camera. This setting does not apply to MV2 cameras.
          type: boolean
        quality:
          description: Quality of the camera. Can be one of 'Standard', 'High' or
            'Enhanced'. Not all qualities are supported by every camera model.
          enum:
          - Enhanced
          - High
          - Standard
          type: string
        resolution:
          description: Resolution of the camera. Can be one of '1280x720', '1920x1080',
            '1080x1080', '2058x2058', '2112x2112', '2880x2880', '2688x1512' or '3840x2160'.Not
            all resolutions are supported by every camera model.
          enum:
          - 1080x1080
          - 1280x720
          - 1920x1080
          - 2058x2058
          - 2112x2112
          - 2688x1512
          - 2880x2880
          - 3840x2160
          type: string
        motionDetectorVersion:
          description: The version of the motion detector that will be used by the
            camera. Only applies to Gen 2 cameras. Defaults to v2.
          type: integer
      type: object
    inline_object_4:
      example:
        timestamp: 2021-04-30T15:18:08Z
        fullframe: false
      properties:
        timestamp:
          description: '[optional] The snapshot will be taken from this time on the
            camera. The timestamp is expected to be in ISO 8601 format. If no timestamp
            is specified, we will assume current time.'
          format: date-time
          type: string
        fullframe:
          description: '[optional] If set to "true" the snapshot will be taken at
            full sensor resolution. This will error if used with timestamp.'
          type: boolean
      type: object
    _networks__networkId__appliance_trafficShaping_uplinkSelection_performanceClass:
      description: Performance class setting for this uplink preference rule
      properties:
        type:
          description: 'Type of this performance class. Must be one of: ''builtin''
            or ''custom'''
          enum:
          - builtin
          - custom
          type: string
        builtinPerformanceClassName:
          description: 'Name of builtin performance class, must be present when performanceClass
            type is ''builtin'', and value must be one of: ''VoIP'''
          enum:
          - VoIP
          type: string
        customPerformanceClassId:
          description: ID of created custom performance class, must be present when
            performanceClass type is 'custom'
          type: string
      required:
      - type
      type: object
    inline_object_3:
      example:
        enabled: true
        artifactId: "1"
        parameters:
        - name: detection_threshold
          value: "0.5"
      properties:
        enabled:
          description: Enable custom analytics
          type: boolean
        artifactId:
          description: The ID of the custom analytics artifact
          type: string
        parameters:
          description: Parameters for the custom analytics workload
          items:
            $ref: '#/components/schemas/_devices__serial__camera_customAnalytics_parameters'
          type: array
      type: object
    inline_object_2:
      example:
        duration: 20
        period: 160
        duty: 50
      properties:
        duration:
          description: The duration in seconds. Must be between 5 and 120. Default
            is 20 seconds
          type: integer
        period:
          description: The period in milliseconds. Must be between 100 and 1000. Default
            is 160 milliseconds
          type: integer
        duty:
          description: The duty cycle as the percent active. Must be between 10 and
            90. Default is 50.
          type: integer
      type: object
    _networks__networkId__appliance_firewall_l7FirewallRules_rules:
      properties:
        policy:
          description: '''Deny'' traffic specified by this rule'
          enum:
          - deny
          type: string
        type:
          description: 'Type of the L7 rule. One of: ''application'', ''applicationCategory'',
            ''host'', ''port'', ''ipRange'''
          enum:
          - application
          - applicationCategory
          - host
          - ipRange
          - port
          type: string
        value:
          description: The 'value' of what you want to block. Format of 'value' varies
            depending on type of the rule. The application categories and application
            ids can be retrieved from the the 'MX L7 application categories' endpoint.
            The countries follow the two-letter ISO 3166-1 alpha-2 format.
          type: string
      type: object
    _devices__serial__sensor_relationships_livestream_relatedDevices:
      example:
        serial: serial
        productType: camera
      properties:
        serial:
          description: The serial of the related device
          type: string
        productType:
          description: The product type of the related device
          enum:
          - camera
          - sensor
          type: string
      type: object
    _networks__networkId__groupPolicies_scheduling_tuesday:
      description: The schedule object for Tuesday.
      properties:
        active:
          description: Whether the schedule is active (true) or inactive (false) during
            the time specified between 'from' and 'to'. Defaults to true.
          type: boolean
        from:
          description: The time, from '00:00' to '24:00'. Must be less than the time
            specified in 'to'. Defaults to '00:00'. Only 30 minute increments are
            allowed.
          type: string
        to:
          description: The time, from '00:00' to '24:00'. Must be greater than the
            time specified in 'from'. Defaults to '24:00'. Only 30 minute increments
            are allowed.
          type: string
      type: object
    _devices__serial__switch_routing_interfaces__interfaceId__dhcp_dhcpOptions:
      properties:
        code:
          description: The code for DHCP option which should be from 2 to 254
          type: string
        type:
          description: The type of the DHCP option which should be one of ('text',
            'ip', 'integer' or 'hex')
          enum:
          - hex
          - integer
          - ip
          - text
          type: string
        value:
          description: The value of the DHCP option
          type: string
      required:
      - code
      - type
      - value
      type: object
    _networks__networkId__wireless_rfProfiles__rfProfileId__apBandSettings:
      description: Settings that will be enabled if selectionType is set to 'ap'.
      properties:
        bandOperationMode:
          description: Choice between 'dual', '2.4ghz' or '5ghz'.
          enum:
          - 2.4ghz
          - 5ghz
          - dual
          type: string
        bandSteeringEnabled:
          description: Steers client to most open band. Can be either true or false.
          type: boolean
      type: object
    _networks__networkId__groupPolicies_contentFiltering_blockedUrlCategories:
      description: Settings for blocked URL categories
      properties:
        settings:
          description: How URL categories are applied. Can be 'network default', 'append'
            or 'override'.
          enum:
          - append
          - network default
          - override
          type: string
        categories:
          description: A list of URL categories to block
          items:
            type: string
          type: array
      type: object
    _networks__networkId__camera_qualityRetentionProfiles_videoSettings_MV13:
      description: Quality and resolution for MV13 camera models.
      properties:
        quality:
          description: Quality of the camera. Can be one of 'Standard', 'Enhanced'
            or 'High'.
          enum:
          - Enhanced
          - High
          - Standard
          type: string
        resolution:
          description: Resolution of the camera. Can be one of '1080x1080' or '2688x1512'.
          enum:
          - 1080x1080
          - 2688x1512
          type: string
      required:
      - quality
      - resolution
      type: object
    _networks__networkId__wireless_ssids__number__splash_settings_splashImage_image:
      description: Properties for setting a new image.
      properties:
        format:
          description: The format of the encoded contents. Supported formats are 'png',
            'gif', and jpg'.
          enum:
          - gif
          - jpg
          - png
          type: string
        contents:
          description: The file contents (a base 64 encoded string) of your new image.
          format: byte
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
      type: object
    _organizations__organizationId__sensor_readings_history_indoorAirQuality:
      description: Reading for the 'indoorAirQuality' metric. This will only be present
        if the 'metric' property equals 'indoorAirQuality'.
      example:
        score: 1
      properties:
        score:
          description: Indoor air quality score between 0 and 100.
          type: integer
      type: object
    _networks__networkId__appliance_staticRoutes__staticRouteId__reservedIpRanges:
      properties:
        start:
          description: The first IP in the reserved range
          type: string
        end:
          description: The last IP in the reserved range
          type: string
        comment:
          description: A text comment for the reserved range
          type: string
      required:
      - comment
      - end
      - start
      type: object
    inline_response_200_29_stages:
      example:
        milestones:
          completedAt: 2000-01-23T04:56:07.000+00:00
          canceledAt: 2000-01-23T04:56:07.000+00:00
          scheduledFor: 2000-01-23T04:56:07.000+00:00
          startedAt: 2000-01-23T04:56:07.000+00:00
        group:
          name: name
          description: description
          id: id
        status: status
      properties:
        group:
          $ref: '#/components/schemas/inline_response_200_29_group'
        milestones:
          $ref: '#/components/schemas/inline_response_200_29_milestones'
        status:
          description: Current upgrade status of the group
          type: string
      type: object
    inline_response_200_19_value_destination:
      description: Destination of 'custom' type traffic filter
      example:
        port: port
        cidr: cidr
      properties:
        port:
          description: 'E.g.: "any", "0" (also means "any"), "8080", "1-1024"'
          type: string
        cidr:
          description: CIDR format address (e.g."192.168.10.1", which is the same
            as "192.168.10.1/32"), or "any"
          type: string
      type: object
    _networks__networkId__wireless_ssids__number__gre_concentrator:
      description: The EoGRE concentrator's settings
      properties:
        host:
          description: The EoGRE concentrator's IP or FQDN. This param is required
            when ipAssignmentMode is 'Ethernet over GRE'.
          type: string
      required:
      - host
      type: object
    _networks__networkId__health_alerts_scope_clients:
      example:
        mac: mac
      properties:
        mac:
          description: Mac address of the client
          type: string
      type: object
    _networks__networkId__switch_accessPolicies_radiusServers_1:
      properties:
        host:
          description: Public IP address of the RADIUS server
          type: string
        port:
          description: UDP port that the RADIUS server listens on for access requests
          type: integer
        secret:
          description: RADIUS client shared secret
          type: string
      required:
      - host
      - port
      - secret
      type: object
    inline_response_200_29_products_switch_nextUpgrade_toVersion:
      description: Details of the version the device will upgrade to
      example:
        id: id
        shortName: shortName
      properties:
        id:
          description: Id of the Version being upgraded to
          type: string
        shortName:
          description: Firmware version short name
          type: string
      type: object
    inline_response_200_83_namedVlans_poolDhcpMonitoring:
      description: Named VLAN Pool DHCP Monitoring settings.
      example:
        duration: 0
        enabled: true
      properties:
        enabled:
          description: Whether or not devices using named VLAN pools should remove
            dirty VLANs from the pool, thereby preventing clients from being assigned
            to VLANs where they would be unable to obtain an IP address via DHCP
          type: boolean
        duration:
          description: The duration in minutes that devices will refrain from using
            dirty VLANs before adding them back to the pool.
          type: integer
      type: object
    inline_response_200_1_interfaces_wan1_svis_ipv6:
      description: IPv6 settings for static/dynamic mode.
      example:
        address: address
        nameservers:
          addresses:
          - addresses
          - addresses
        assignmentMode: dynamic
        gateway: gateway
      properties:
        assignmentMode:
          description: The assignment mode for this SVI. Applies only when PPPoE is
            disabled.
          enum:
          - dynamic
          - static
          type: string
        address:
          description: Static address that will override the one(s) received by SLAAC.
          type: string
        gateway:
          description: Static gateway that will override the one received by autoconf.
          type: string
        nameservers:
          $ref: '#/components/schemas/inline_response_200_1_interfaces_wan1_svis_ipv4_nameservers'
      type: object
    _networks__networkId__appliance_ssids__number__radiusServers:
      properties:
        host:
          description: The IP address of your RADIUS server.
          type: string
        port:
          description: The UDP port your RADIUS servers listens on for Access-requests.
          type: integer
        secret:
          description: The RADIUS client shared secret.
          type: string
      type: object
    _organizations__organizationId__sensor_readings_history_humidity:
      description: Reading for the 'humidity' metric. This will only be present if
        the 'metric' property equals 'humidity'.
      example:
        relativePercentage: 6
      properties:
        relativePercentage:
          description: Humidity reading in %RH.
          type: integer
      type: object
    inline_response_200_1_interfaces_wan1_svis_ipv4:
      description: IPv4 settings for static/dynamic mode.
      example:
        address: address
        nameservers:
          addresses:
          - addresses
          - addresses
        assignmentMode: dynamic
        gateway: gateway
      properties:
        assignmentMode:
          description: The assignment mode for this SVI. Applies only when PPPoE is
            disabled.
          enum:
          - dynamic
          - static
          type: string
        address:
          description: IP address and subnet mask when in static mode.
          type: string
        gateway:
          description: Gateway IP address when in static mode.
          type: string
        nameservers:
          $ref: '#/components/schemas/inline_response_200_1_interfaces_wan1_svis_ipv4_nameservers'
      type: object
    _networks__networkId__wireless_ssids__number__apTagsAndVlanIds:
      properties:
        tags:
          description: Array of AP tags
          items:
            type: string
          type: array
        vlanId:
          description: Numerical identifier that is assigned to the VLAN
          type: integer
      type: object
    inline_response_200_69_overrides:
      example:
        switchProfiles:
        - switchProfiles
        - switchProfiles
        switches:
        - switches
        - switches
        mtuSize: 6
      properties:
        switches:
          description: List of switch serials. Applicable only for switch network.
          items:
            type: string
          type: array
        switchProfiles:
          description: List of switch profile IDs. Applicable only for template network.
          items:
            type: string
          type: array
        mtuSize:
          description: MTU size for the switches or switch profiles.
          type: integer
      required:
      - mtuSize
      type: object
    _organizations__organizationId__appliance_vpn_vpnFirewallRules_rules:
      properties:
        comment:
          description: Description of the rule (optional)
          type: string
        policy:
          description: '''allow'' or ''deny'' traffic specified by this rule'
          enum:
          - allow
          - deny
          type: string
        protocol:
          description: The type of protocol (must be 'tcp', 'udp', 'icmp', 'icmp6'
            or 'any')
          enum:
          - any
          - icmp
          - icmp6
          - tcp
          - udp
          type: string
        srcPort:
          description: Comma-separated list of source port(s) (integer in the range
            1-65535), or 'any'
          type: string
        srcCidr:
          description: Comma-separated list of source IP address(es) (in IP or CIDR
            notation), or 'any' (FQDN not supported)
          type: string
        destPort:
          description: Comma-separated list of destination port(s) (integer in the
            range 1-65535), or 'any'
          type: string
        destCidr:
          description: Comma-separated list of destination IP address(es) (in IP or
            CIDR notation) or 'any' (FQDN not supported)
          type: string
        syslogEnabled:
          description: Log this rule to syslog (true or false, boolean value) - only
            applicable if a syslog has been configured (optional)
          type: boolean
      required:
      - destCidr
      - policy
      - protocol
      - srcCidr
      type: object
    _networks__networkId__alerts_settings_defaultDestinations:
      description: The network-wide destinations for all alerts on the network.
      properties:
        emails:
          description: A list of emails that will recieve the alert(s).
          items:
            type: string
          type: array
        allAdmins:
          description: If true, then all network admins will receive emails.
          type: boolean
        snmp:
          description: If true, then an SNMP trap will be sent if there is an SNMP
            trap server configured for this network.
          type: boolean
        httpServerIds:
          description: A list of HTTP server IDs to send a Webhook to
          items:
            type: string
          type: array
      type: object
    _networks__networkId__appliance_firewall_oneToManyNatRules_portRules:
      properties:
        name:
          description: A description of the rule
          type: string
        protocol:
          description: '''tcp'' or ''udp'''
          enum:
          - tcp
          - udp
          type: string
        publicPort:
          description: Destination port of the traffic that is arriving on the WAN
          type: string
        localIp:
          description: Local IP address to which traffic will be forwarded
          type: string
        localPort:
          description: Destination port of the forwarded traffic that will be sent
            from the MX to the specified host on the LAN. If you simply wish to forward
            the traffic without translating the port, this should be the same as the
            Public port
          type: string
        allowedIps:
          description: Remote IP addresses or ranges that are permitted to access
            the internal resource via this port forwarding rule, or 'any'
          items:
            type: string
          type: array
      type: object
    _networks__networkId__switch_stacks__switchStackId__routing_interfaces__interfaceId__ipv6:
      description: The IPv6 settings of the interface.
      properties:
        assignmentMode:
          description: The IPv6 assignment mode for the interface. Can be either 'eui-64'
            or 'static'.
          type: string
        prefix:
          description: The IPv6 prefix of the interface. Required if IPv6 object is
            included and interface does not already have ipv6.prefix configured
          type: string
        address:
          description: The IPv6 address of the interface. Required if assignmentMode
            is included and set as 'static'. Must not be included if assignmentMode
            is 'eui-64'.
          type: string
        gateway:
          description: The IPv6 default gateway of the interface. Required if prefix
            is defined and this is the first interface with IPv6 configured for the
            stack.
          type: string
      type: object
    _networks__networkId__cellularGateway_connectivityMonitoringDestinations_destinations:
      properties:
        ip:
          description: The IP address to test connectivity with
          type: string
        description:
          default: ""
          description: Description of the testing destination. Optional, defaults
            to an empty string
          type: string
        default:
          default: false
          description: Boolean indicating whether this is the default testing destination
            (true) or not (false). Defaults to false. Only one default is allowed
          type: boolean
      required:
      - ip
      type: object
    _networks__networkId__alerts_history_destinations_sms:
      description: sms destinations for this alert
      example:
        sentAt: sentAt
      properties:
        sentAt:
          description: time when the alert was sent to the user(s) for this channel
          type: string
      type: object
    _organizations__organizationId__licensing_coterm_licenses_counts:
      example:
        count: 6
        model: model
      properties:
        model:
          description: The license model type
          type: string
        count:
          description: The number of counts the license contains of this model
          type: integer
      type: object
    inline_response_201:
      example:
        expiresAt: expiresAt
        token: token
      properties:
        token:
          description: The newly generated authentication token for the vMX instance
          type: string
        expiresAt:
          description: The expiration time for the token, in ISO 8601 format
          type: string
      type: object
    _organizations__organizationId__firmware_upgrades_byDevice_upgrade_staged_group:
      description: The staged upgrade group
      example:
        id: id
      properties:
        id:
          description: Id of the staged upgrade group
          type: string
      type: object
    inline_response_200:
      example:
        lastUsedDashboardAt: 2000-01-23T04:56:07.000+00:00
        name: name
        email: email
        authentication:
          mode: mode
          twoFactor:
            enabled: true
          saml:
            enabled: true
          api:
            key:
              created: true
      properties:
        name:
          description: Username
          type: string
        email:
          description: User email
          type: string
        lastUsedDashboardAt:
          description: Last seen active on Dashboard UI
          format: date-time
          type: string
        authentication:
          $ref: '#/components/schemas/inline_response_200_authentication'
      type: object
    _networks__networkId__health_alerts_scope_devices:
      example:
        clients:
        - mac: mac
        - mac: mac
        serial: serial
        name: name
        url: url
        productType: productType
        mac: mac
        lldp:
          portId: portId
      properties:
        url:
          description: URL to the device
          type: string
        name:
          description: Name of the device
          type: string
        productType:
          description: Product type of the device
          type: string
        serial:
          description: Serial number of the device
          type: string
        mac:
          description: The mac address of the device
          type: string
        lldp:
          $ref: '#/components/schemas/_networks__networkId__health_alerts_scope_lldp'
        clients:
          description: Clients related to the device
          items:
            $ref: '#/components/schemas/_networks__networkId__health_alerts_scope_clients'
          type: array
      type: object
    _organizations__organizationId__insight_applications_thresholds_byNetwork:
      example:
        responseDuration: 6
        goodput: 0
        networkId: networkId
      properties:
        networkId:
          description: Network identifier
          type: string
        goodput:
          description: Number of useful information bits delivered over a network
            per unit of time
          type: integer
        responseDuration:
          description: Duration of the response, in milliseconds
          type: integer
      type: object
    inline_response_200_73_servers:
      example:
        port: 0
        roles:
        - roles
        - roles
        host: host
      properties:
        host:
          description: The IP address of the syslog server
          type: string
        port:
          description: The port of the syslog server
          type: integer
        roles:
          description: 'A list of roles for the syslog server. Options (case-insensitive):
            ''Wireless event log'', ''Appliance event log'', ''Switch event log'',
            ''Air Marshal events'', ''Flows'', ''URLs'', ''IDS alerts'', ''Security
            events'''
          items:
            type: string
          type: array
      type: object
    inline_response_200_2_results_latencies:
      description: Packet latency stats
      example:
        average: 5.637377
        maximum: 2.302136
        minimum: 5.962134
      properties:
        minimum:
          description: Minimum latency
          format: float
          type: number
        average:
          description: Average latency
          format: float
          type: number
        maximum:
          description: Maximum latency
          format: float
          type: number
      type: object
    _devices__serial__switch_ports_statuses_securePort:
      description: The Secure Port status of the port.
      example:
        configOverrides:
          vlan: 7
          voiceVlan: 1
          type: access
          allowedVlans: allowedVlans
        active: true
        enabled: true
        authenticationStatus: Authentication failure
      properties:
        enabled:
          description: Whether Secure Port is turned on for this port.
          type: boolean
        active:
          description: Whether Secure Port is currently active for this port.
          type: boolean
        authenticationStatus:
          description: The current Secure Port status.
          enum:
          - Authentication failure
          - Authentication in progress
          - Authentication successful
          - Authentication timed out
          - Disabled
          - Enabled
          type: string
        configOverrides:
          $ref: '#/components/schemas/_devices__serial__switch_ports_statuses_securePort_configOverrides'
      type: object
    inline_response_200_21_subnets:
      example:
        localSubnet: localSubnet
        useVpn: true
      properties:
        localSubnet:
          description: The CIDR notation subnet used within the VPN
          type: string
        useVpn:
          description: Indicates the presence of the subnet in the VPN
          type: boolean
      type: object
    _devices__serial__sensor_relationships_livestream_1:
      description: A role defined between an MT sensor and an MV camera that adds
        the camera's livestream to the sensor's details page. Snapshots from the camera
        will also appear in alert notifications that the sensor triggers.
      properties:
        relatedDevices:
          description: An array of the related devices for the role
          items:
            $ref: '#/components/schemas/_devices__serial__sensor_relationships_livestream_1_relatedDevices'
          type: array
      type: object
    inline_response_200_authentication_twoFactor:
      description: TwoFactor authentication
      example:
        enabled: true
      properties:
        enabled:
          description: If twoFactor authentication is enabled for this user
          type: boolean
      type: object
    _networks__networkId__syslogServers_servers:
      properties:
        host:
          description: The IP address of the syslog server
          type: string
        port:
          description: The port of the syslog server
          type: integer
        roles:
          description: 'A list of roles for the syslog server. Options (case-insensitive):
            ''Wireless event log'', ''Appliance event log'', ''Switch event log'',
            ''Air Marshal events'', ''Flows'', ''URLs'', ''IDS alerts'', ''Security
            events'''
          items:
            type: string
          type: array
      required:
      - host
      - port
      - roles
      type: object
    inline_object_50:
      example:
        globalBandwidthLimits:
          limitUp: 2048
          limitDown: 5120
      properties:
        globalBandwidthLimits:
          $ref: '#/components/schemas/_networks__networkId__appliance_trafficShaping_globalBandwidthLimits'
      type: object
    inline_object_52:
      example:
        name: myCustomPerformanceClass
        maxLatency: 100
        maxJitter: 100
        maxLossPercentage: 5
      properties:
        name:
          description: Name of the custom performance class
          type: string
        maxLatency:
          description: Maximum latency in milliseconds
          type: integer
        maxJitter:
          description: Maximum jitter in milliseconds
          type: integer
        maxLossPercentage:
          description: Maximum percentage of packet loss
          type: integer
      type: object
    inline_object_51:
      example:
        name: myCustomPerformanceClass
        maxLatency: 100
        maxJitter: 100
        maxLossPercentage: 5
      properties:
        name:
          description: Name of the custom performance class
          type: string
        maxLatency:
          description: Maximum latency in milliseconds
          type: integer
        maxJitter:
          description: Maximum jitter in milliseconds
          type: integer
        maxLossPercentage:
          description: Maximum percentage of packet loss
          type: integer
      required:
      - name
      type: object
    inline_object_54:
      example:
        bandwidthLimits:
          wan1:
            limitUp: 1000000
            limitDown: 1000000
          wan2:
            limitUp: 1000000
            limitDown: 1000000
          cellular:
            limitUp: 51200
            limitDown: 51200
      properties:
        bandwidthLimits:
          $ref: '#/components/schemas/_networks__networkId__appliance_trafficShaping_uplinkBandwidth_bandwidthLimits'
      type: object
    inline_object_53:
      example:
        defaultRulesEnabled: true
        rules:
        - definitions:
          - type: host
            value: google.com
          - type: port
            value: "9090"
          - type: ipRange
            value: 192.1.0.0
          - type: ipRange
            value: 192.1.0.0/16
          - type: ipRange
            value: 10.1.0.0/16:80
          - type: localNet
            value: 192.168.0.0/16
          perClientBandwidthLimits:
            settings: custom
            bandwidthLimits:
              limitUp: 1000000
              limitDown: 1000000
          dscpTagValue: 0
          priority: normal
      properties:
        defaultRulesEnabled:
          description: Whether default traffic shaping rules are enabled (true) or
            disabled (false). There are 4 default rules, which can be seen on your
            network's traffic shaping page. Note that default rules count against
            the rule limit of 8.
          type: boolean
        rules:
          description: |2
                An array of traffic shaping rules. Rules are applied in the order that
                they are specified in. An empty list (or null) means no rules. Note that
                you are allowed a maximum of 8 rules.
          items:
            $ref: '#/components/schemas/_networks__networkId__appliance_trafficShaping_rules_rules'
          type: array
      type: object
    inline_object_56:
      example:
        id: "1234"
        name: My VLAN
        subnet: 192.168.1.0/24
        applianceIp: 192.168.1.2
        groupPolicyId: "101"
        templateVlanType: same
        cidr: 192.168.1.0/24
        mask: 28
        ipv6:
          enabled: true
          prefixAssignments:
          - autonomous: false
            staticPrefix: 2001:db8:3c4d:15::/64
            staticApplianceIp6: 2001:db8:3c4d:15::1
            origin:
              type: internet
              interfaces:
              - wan0
        mandatoryDhcp:
          enabled: true
      properties:
        id:
          description: The VLAN ID of the new VLAN (must be between 1 and 4094)
          type: string
        name:
          description: The name of the new VLAN
          type: string
        subnet:
          description: The subnet of the VLAN
          type: string
        applianceIp:
          description: The local IP of the appliance on the VLAN
          type: string
        groupPolicyId:
          description: The id of the desired group policy to apply to the VLAN
          type: string
        templateVlanType:
          default: same
          description: Type of subnetting of the VLAN. Applicable only for template
            network.
          enum:
          - same
          - unique
          type: string
        cidr:
          description: CIDR of the pool of subnets. Applicable only for template network.
            Each network bound to the template will automatically pick a subnet from
            this pool to build its own VLAN.
          type: string
        mask:
          description: Mask used for the subnet of all bound to the template networks.
            Applicable only for template network.
          type: integer
        ipv6:
          $ref: '#/components/schemas/_networks__networkId__appliance_singleLan_ipv6'
        mandatoryDhcp:
          $ref: '#/components/schemas/_networks__networkId__appliance_vlans_mandatoryDhcp'
      required:
      - id
      - name
      type: object
    inline_object_55:
      example:
        activeActiveAutoVpnEnabled: true
        defaultUplink: wan1
        loadBalancingEnabled: true
        failoverAndFailback:
          immediate:
            enabled: true
        wanTrafficUplinkPreferences:
        - trafficFilters:
          - type: custom
            value:
              protocol: tcp
              source:
                port: 1-1024
                cidr: 192.168.1.0/24
                vlan: 10
                host: 254
              destination:
                port: any
                cidr: any
          preferredUplink: wan1
        vpnTrafficUplinkPreferences:
        - trafficFilters:
          - type: applicationCategory
            value:
              id: meraki:layer7/category/1
              protocol: tcp
              source:
                port: any
                cidr: 192.168.1.0/24
                network: L_23456789
                vlan: 20
                host: 200
              destination:
                port: 1-1024
                cidr: any
                network: L_12345678
                vlan: 10
                host: 254
                fqdn: www.google.com
          preferredUplink: bestForVoIP
          failOverCriterion: poorPerformance
          performanceClass:
            type: custom
            builtinPerformanceClassName: VoIP
            customPerformanceClassId: "123456"
      properties:
        activeActiveAutoVpnEnabled:
          description: Toggle for enabling or disabling active-active AutoVPN
          type: boolean
        defaultUplink:
          description: 'The default uplink. Must be one of: ''wan1'' or ''wan2'''
          enum:
          - wan1
          - wan2
          type: string
        loadBalancingEnabled:
          description: Toggle for enabling or disabling load balancing
          type: boolean
        failoverAndFailback:
          $ref: '#/components/schemas/_networks__networkId__appliance_trafficShaping_uplinkSelection_failoverAndFailback'
        wanTrafficUplinkPreferences:
          description: Array of uplink preference rules for WAN traffic
          items:
            $ref: '#/components/schemas/_networks__networkId__appliance_trafficShaping_uplinkSelection_wanTrafficUplinkPreferences'
          type: array
        vpnTrafficUplinkPreferences:
          description: Array of uplink preference rules for VPN traffic
          items:
            $ref: '#/components/schemas/_networks__networkId__appliance_trafficShaping_uplinkSelection_vpnTrafficUplinkPreferences'
          type: array
      type: object
    inline_object_58:
      example:
        name: My VLAN
        applianceIp: 192.168.1.2
        subnet: 192.168.1.0/24
        groupPolicyId: "101"
        templateVlanType: same
        cidr: 192.168.1.0/24
        mask: 28
        fixedIpAssignments:
          "22:33:44:55:66:77":
            ip: 1.2.3.4
            name: Some client name
        reservedIpRanges:
        - start: 192.168.1.0
          end: 192.168.1.1
          comment: A reserved IP range
        dnsNameservers: google_dns
        dhcpHandling: Run a DHCP server
        dhcpLeaseTime: 1 day
        dhcpBootOptionsEnabled: false
        dhcpBootNextServer: 1.2.3.4
        dhcpBootFilename: sample.file
        dhcpOptions:
        - code: "5"
          type: text
          value: five
        ipv6:
          enabled: true
          prefixAssignments:
          - autonomous: false
            staticPrefix: 2001:db8:3c4d:15::/64
            staticApplianceIp6: 2001:db8:3c4d:15::1
            origin:
              type: internet
              interfaces:
              - wan0
        mandatoryDhcp:
          enabled: true
        dhcpRelayServerIps:
        - 192.168.1.0/24
        - 192.168.128.0/24
        vpnNatSubnet: 192.168.1.0/24
      properties:
        name:
          description: The name of the VLAN
          type: string
        subnet:
          description: The subnet of the VLAN
          type: string
        applianceIp:
          description: The local IP of the appliance on the VLAN
          type: string
        groupPolicyId:
          description: The id of the desired group policy to apply to the VLAN
          type: string
        vpnNatSubnet:
          description: The translated VPN subnet if VPN and VPN subnet translation
            are enabled on the VLAN
          type: string
        dhcpHandling:
          description: 'The appliance''s handling of DHCP requests on this VLAN. One
            of: ''Run a DHCP server'', ''Relay DHCP to another server'' or ''Do not
            respond to DHCP requests'''
          enum:
          - Do not respond to DHCP requests
          - Relay DHCP to another server
          - Run a DHCP server
          type: string
        dhcpRelayServerIps:
          description: The IPs of the DHCP servers that DHCP requests should be relayed
            to
          items:
            type: string
          type: array
        dhcpLeaseTime:
          description: 'The term of DHCP leases if the appliance is running a DHCP
            server on this VLAN. One of: ''30 minutes'', ''1 hour'', ''4 hours'',
            ''12 hours'', ''1 day'' or ''1 week'''
          enum:
          - 1 day
          - 1 hour
          - 1 week
          - 12 hours
          - 30 minutes
          - 4 hours
          type: string
        dhcpBootOptionsEnabled:
          description: Use DHCP boot options specified in other properties
          type: boolean
        dhcpBootNextServer:
          description: DHCP boot option to direct boot clients to the server to load
            the boot file from
          type: string
        dhcpBootFilename:
          description: DHCP boot option for boot filename
          type: string
        fixedIpAssignments:
          description: The DHCP fixed IP assignments on the VLAN. This should be an
            object that contains mappings from MAC addresses to objects that themselves
            each contain "ip" and "name" string fields. See the sample request/response
            for more details.
          properties: {}
          type: object
        reservedIpRanges:
          description: The DHCP reserved IP ranges on the VLAN
          items:
            $ref: '#/components/schemas/_networks__networkId__appliance_staticRoutes__staticRouteId__reservedIpRanges'
          type: array
        dnsNameservers:
          description: The DNS nameservers used for DHCP responses, either "upstream_dns",
            "google_dns", "opendns", or a newline seperated string of IP addresses
            or domain names
          type: string
        dhcpOptions:
          description: The list of DHCP options that will be included in DHCP responses.
            Each object in the list should have "code", "type", and "value" properties.
          items:
            $ref: '#/components/schemas/_networks__networkId__appliance_vlans_dhcpOptions'
          type: array
        templateVlanType:
          description: Type of subnetting of the VLAN. Applicable only for template
            network.
          enum:
          - same
          - unique
          type: string
        cidr:
          description: CIDR of the pool of subnets. Applicable only for template network.
            Each network bound to the template will automatically pick a subnet from
            this pool to build its own VLAN.
          type: string
        mask:
          description: Mask used for the subnet of all bound to the template networks.
            Applicable only for template network.
          type: integer
        ipv6:
          $ref: '#/components/schemas/_networks__networkId__appliance_singleLan_ipv6'
        mandatoryDhcp:
          $ref: '#/components/schemas/_networks__networkId__appliance_vlans_mandatoryDhcp'
      type: object
    inline_object_57:
      example:
        vlansEnabled: true
      properties:
        vlansEnabled:
          description: Boolean indicating whether to enable (true) or disable (false)
            VLANs for the network
          type: boolean
      type: object
    _organizations_api:
      description: API related settings
      example:
        enabled: true
      properties:
        enabled:
          description: Enable API access
          type: boolean
      type: object
    inline_object_59:
      example:
        enabled: true
        asNumber: 64515
        ibgpHoldTimer: 120
        neighbors:
        - ip: 10.10.10.22
          remoteAsNumber: 64343
          receiveLimit: 120
          allowTransit: true
          ebgpHoldTimer: 180
          ebgpMultihop: 2
      properties:
        enabled:
          description: Boolean value to enable or disable the BGP configuration. When
            BGP is enabled, the asNumber (ASN) will be autopopulated with the preconfigured
            ASN at other Hubs or a default value if there is no ASN configured.
          type: boolean
        asNumber:
          description: An Autonomous System Number (ASN) is required if you are to
            run BGP and peer with another BGP Speaker outside of the Auto VPN domain.
            This ASN will be applied to the entire Auto VPN domain. The entire 4-byte
            ASN range is supported. So, the ASN must be an integer between 1 and 4294967295.
            When absent, this field is not updated. If no value exists then it defaults
            to 64512.
          type: integer
        ibgpHoldTimer:
          description: The IBGP holdtimer in seconds. The IBGP holdtimer must be an
            integer between 12 and 240. When absent, this field is not updated. If
            no value exists then it defaults to 240.
          type: integer
        neighbors:
          description: List of BGP neighbors. This list replaces the existing set
            of neighbors. When absent, this field is not updated.
          items:
            $ref: '#/components/schemas/_networks__networkId__appliance_vpn_bgp_neighbors'
          type: array
      required:
      - enabled
      type: object
    inline_response_200_16_ipv6_prefixAssignments:
      example:
        staticPrefix: staticPrefix
        origin:
          interfaces:
          - interfaces
          - interfaces
          type: independent
        autonomous: true
        staticApplianceIp6: staticApplianceIp6
      properties:
        autonomous:
          description: Auto assign a /64 prefix from the origin to the single LAN
          type: boolean
        staticPrefix:
          description: Manual configuration of a /64 prefix on the single LAN
          type: string
        staticApplianceIp6:
          description: Manual configuration of the IPv6 Appliance IP
          type: string
        origin:
          $ref: '#/components/schemas/_networks__networkId__appliance_prefixes_delegated_statics_origin_1'
      type: object
    _networks__networkId__wireless_ssids__number__hotspot20_operator:
      description: Operator settings for this SSID
      properties:
        name:
          description: Operator name
          type: string
      type: object
    inline_response_200_27_products_wireless_lastUpgrade:
      description: Details of the last firmware upgrade on the device
      example:
        fromVersion:
          releaseDate: 2000-01-23T04:56:07.000+00:00
          releaseType: releaseType
          id: id
          shortName: shortName
          firmware: firmware
        time: 2000-01-23T04:56:07.000+00:00
        toVersion:
          releaseDate: 2000-01-23T04:56:07.000+00:00
          releaseType: releaseType
          id: id
          shortName: shortName
          firmware: firmware
      properties:
        time:
          description: Timestamp of the last successful firmware upgrade
          format: date-time
          type: string
        fromVersion:
          $ref: '#/components/schemas/inline_response_200_27_products_wireless_lastUpgrade_fromVersion'
        toVersion:
          $ref: '#/components/schemas/inline_response_200_27_products_wireless_lastUpgrade_toVersion'
      type: object
    _networks__networkId__sensor_alerts_profiles_threshold_tvoc:
      description: TVOC concentration threshold. One of 'concentration' or 'quality'
        must be provided.
      example:
        concentration: 5
        quality: fair
      properties:
        concentration:
          description: Alerting threshold as TVOC micrograms per cubic meter.
          type: integer
        quality:
          description: Alerting threshold as a qualitative TVOC level.
          enum:
          - fair
          - good
          - inadequate
          - poor
          type: string
      type: object
    _organizations__organizationId__summary_top_appliances_byUtilization_network:
      description: Network info
      example:
        name: name
        id: id
      properties:
        name:
          description: Network name
          type: string
        id:
          description: Network id
          type: string
      type: object
    inline_object_41:
      example:
        prefix: 2001:db8:3c4d:15::/64
        origin:
          type: internet
          interfaces:
          - wan1
        description: Prefix on WAN 1 of Long Island Office network
      properties:
        prefix:
          description: A static IPv6 prefix
          type: string
        origin:
          $ref: '#/components/schemas/_networks__networkId__appliance_prefixes_delegated_statics_origin_1'
        description:
          description: A name or description for the prefix
          type: string
      required:
      - origin
      - prefix
      type: object
    inline_response_200_27_products:
      description: The network devices to be updated
      example:
        appliance:
          lastUpgrade:
            fromVersion:
              releaseDate: 2000-01-23T04:56:07.000+00:00
              releaseType: releaseType
              id: id
              shortName: shortName
              firmware: firmware
            time: 2000-01-23T04:56:07.000+00:00
            toVersion:
              releaseDate: 2000-01-23T04:56:07.000+00:00
              releaseType: releaseType
              id: id
              shortName: shortName
              firmware: firmware
          participateInNextBetaRelease: true
          nextUpgrade:
            time: 2000-01-23T04:56:07.000+00:00
            toVersion:
              releaseDate: 2000-01-23T04:56:07.000+00:00
              releaseType: releaseType
              id: id
              shortName: shortName
              firmware: firmware
          currentVersion:
            releaseDate: 2000-01-23T04:56:07.000+00:00
            releaseType: releaseType
            id: id
            shortName: shortName
            firmware: firmware
          availableVersions:
          - releaseDate: 2000-01-23T04:56:07.000+00:00
            releaseType: releaseType
            id: id
            shortName: shortName
            firmware: firmware
          - releaseDate: 2000-01-23T04:56:07.000+00:00
            releaseType: releaseType
            id: id
            shortName: shortName
            firmware: firmware
        cellularGateway:
          lastUpgrade:
            fromVersion:
              releaseDate: 2000-01-23T04:56:07.000+00:00
              releaseType: releaseType
              id: id
              shortName: shortName
              firmware: firmware
            time: 2000-01-23T04:56:07.000+00:00
            toVersion:
              releaseDate: 2000-01-23T04:56:07.000+00:00
              releaseType: releaseType
              id: id
              shortName: shortName
              firmware: firmware
          participateInNextBetaRelease: true
          nextUpgrade:
            time: 2000-01-23T04:56:07.000+00:00
            toVersion:
              releaseDate: 2000-01-23T04:56:07.000+00:00
              releaseType: releaseType
              id: id
              shortName: shortName
              firmware: firmware
          currentVersion:
            releaseDate: 2000-01-23T04:56:07.000+00:00
            releaseType: releaseType
            id: id
            shortName: shortName
            firmware: firmware
          availableVersions:
          - releaseDate: 2000-01-23T04:56:07.000+00:00
            releaseType: releaseType
            id: id
            shortName: shortName
            firmware: firmware
          - releaseDate: 2000-01-23T04:56:07.000+00:00
            releaseType: releaseType
            id: id
            shortName: shortName
            firmware: firmware
        wireless:
          lastUpgrade:
            fromVersion:
              releaseDate: 2000-01-23T04:56:07.000+00:00
              releaseType: releaseType
              id: id
              shortName: shortName
              firmware: firmware
            time: 2000-01-23T04:56:07.000+00:00
            toVersion:
              releaseDate: 2000-01-23T04:56:07.000+00:00
              releaseType: releaseType
              id: id
              shortName: shortName
              firmware: firmware
          participateInNextBetaRelease: true
          nextUpgrade:
            time: 2000-01-23T04:56:07.000+00:00
            toVersion:
              releaseDate: 2000-01-23T04:56:07.000+00:00
              releaseType: releaseType
              id: id
              shortName: shortName
              firmware: firmware
          currentVersion:
            releaseDate: 2000-01-23T04:56:07.000+00:00
            releaseType: releaseType
            id: id
            shortName: shortName
            firmware: firmware
          availableVersions:
          - releaseDate: 2000-01-23T04:56:07.000+00:00
            releaseType: releaseType
            id: id
            shortName: shortName
            firmware: firmware
          - releaseDate: 2000-01-23T04:56:07.000+00:00
            releaseType: releaseType
            id: id
            shortName: shortName
            firmware: firmware
        sensor:
          lastUpgrade:
            fromVersion:
              releaseDate: 2000-01-23T04:56:07.000+00:00
              releaseType: releaseType
              id: id
              shortName: shortName
              firmware: firmware
            time: 2000-01-23T04:56:07.000+00:00
            toVersion:
              releaseDate: 2000-01-23T04:56:07.000+00:00
              releaseType: releaseType
              id: id
              shortName: shortName
              firmware: firmware
          participateInNextBetaRelease: true
          nextUpgrade:
            time: 2000-01-23T04:56:07.000+00:00
            toVersion:
              releaseDate: 2000-01-23T04:56:07.000+00:00
              releaseType: releaseType
              id: id
              shortName: shortName
              firmware: firmware
          currentVersion:
            releaseDate: 2000-01-23T04:56:07.000+00:00
            releaseType: releaseType
            id: id
            shortName: shortName
            firmware: firmware
          availableVersions:
          - releaseDate: 2000-01-23T04:56:07.000+00:00
            releaseType: releaseType
            id: id
            shortName: shortName
            firmware: firmware
          - releaseDate: 2000-01-23T04:56:07.000+00:00
            releaseType: releaseType
            id: id
            shortName: shortName
            firmware: firmware
        camera:
          lastUpgrade:
            fromVersion:
              releaseDate: 2000-01-23T04:56:07.000+00:00
              releaseType: releaseType
              id: id
              shortName: shortName
              firmware: firmware
            time: 2000-01-23T04:56:07.000+00:00
            toVersion:
              releaseDate: 2000-01-23T04:56:07.000+00:00
              releaseType: releaseType
              id: id
              shortName: shortName
              firmware: firmware
          participateInNextBetaRelease: true
          nextUpgrade:
            time: 2000-01-23T04:56:07.000+00:00
            toVersion:
              releaseDate: 2000-01-23T04:56:07.000+00:00
              releaseType: releaseType
              id: id
              shortName: shortName
              firmware: firmware
          currentVersion:
            releaseDate: 2000-01-23T04:56:07.000+00:00
            releaseType: releaseType
            id: id
            shortName: shortName
            firmware: firmware
          availableVersions:
          - releaseDate: 2000-01-23T04:56:07.000+00:00
            releaseType: releaseType
            id: id
            shortName: shortName
            firmware: firmware
          - releaseDate: 2000-01-23T04:56:07.000+00:00
            releaseType: releaseType
            id: id
            shortName: shortName
            firmware: firmware
        switch:
          lastUpgrade:
            fromVersion:
              releaseDate: 2000-01-23T04:56:07.000+00:00
              releaseType: releaseType
              id: id
              shortName: shortName
              firmware: firmware
            time: 2000-01-23T04:56:07.000+00:00
            toVersion:
              releaseDate: 2000-01-23T04:56:07.000+00:00
              releaseType: releaseType
              id: id
              shortName: shortName
              firmware: firmware
          participateInNextBetaRelease: true
          nextUpgrade:
            time: 2000-01-23T04:56:07.000+00:00
            toVersion:
              releaseDate: 2000-01-23T04:56:07.000+00:00
              releaseType: releaseType
              id: id
              shortName: shortName
              firmware: firmware
          currentVersion:
            releaseDate: 2000-01-23T04:56:07.000+00:00
            releaseType: releaseType
            id: id
            shortName: shortName
            firmware: firmware
          availableVersions:
          - releaseDate: 2000-01-23T04:56:07.000+00:00
            releaseType: releaseType
            id: id
            shortName: shortName
            firmware: firmware
          - releaseDate: 2000-01-23T04:56:07.000+00:00
            releaseType: releaseType
            id: id
            shortName: shortName
            firmware: firmware
      properties:
        wireless:
          $ref: '#/components/schemas/inline_response_200_27_products_wireless'
        appliance:
          $ref: '#/components/schemas/inline_response_200_27_products_wireless'
        switch:
          $ref: '#/components/schemas/inline_response_200_27_products_wireless'
        camera:
          $ref: '#/components/schemas/inline_response_200_27_products_wireless'
        cellularGateway:
          $ref: '#/components/schemas/inline_response_200_27_products_wireless'
        sensor:
          $ref: '#/components/schemas/inline_response_200_27_products_wireless'
      type: object
    _organizations__organizationId__summary_top_devices_byUsage_usage:
      description: Data usage of the device
      example:
        total: 0.8008282
        percentage: 6.0274563
      properties:
        total:
          description: Total data usage of the device
          format: float
          type: number
        percentage:
          description: Data usage of the device by percentage
          format: float
          type: number
      type: object
    inline_object_40:
      example:
        enabled: true
        dropUntaggedTraffic: false
        type: access
        vlan: 3
        allowedVlans: all
        accessPolicy: open
      properties:
        enabled:
          description: The status of the port
          type: boolean
        dropUntaggedTraffic:
          description: Trunk port can Drop all Untagged traffic. When true, no VLAN
            is required. Access ports cannot have dropUntaggedTraffic set to true.
          type: boolean
        type:
          description: 'The type of the port: ''access'' or ''trunk''.'
          type: string
        vlan:
          description: Native VLAN when the port is in Trunk mode. Access VLAN when
            the port is in Access mode.
          type: integer
        allowedVlans:
          description: Comma-delimited list of the VLAN ID's allowed on the port,
            or 'all' to permit all VLAN's on the port.
          type: string
        accessPolicy:
          description: 'The name of the policy. Only applicable to Access ports. Valid
            values are: ''open'', ''8021x-radius'', ''mac-radius'', ''hybris-radius''
            for MX64 or Z3 or any MX supporting the per port authentication feature.
            Otherwise, ''open'' is the only valid value and ''open'' is the default
            value if the field is missing.'
          type: string
      type: object
    inline_object_43:
      example:
        mode: prevention
        idsRulesets: balanced
        protectedNetworks:
          useDefault: false
          includedCidr:
          - 10.0.0.0/8
          - 127.0.0.0/8
          - 169.254.0.0/16
          - 172.16.0.0/12
          excludedCidr:
          - 10.0.0.0/8
          - 127.0.0.0/8
      properties:
        mode:
          description: Set mode to 'disabled'/'detection'/'prevention' (optional -
            omitting will leave current config unchanged)
          enum:
          - detection
          - disabled
          - prevention
          type: string
        idsRulesets:
          description: Set the detection ruleset 'connectivity'/'balanced'/'security'
            (optional - omitting will leave current config unchanged). Default value
            is 'balanced' if none currently saved
          enum:
          - balanced
          - connectivity
          - security
          type: string
        protectedNetworks:
          $ref: '#/components/schemas/_networks__networkId__appliance_security_intrusion_protectedNetworks'
      type: object
    inline_object_42:
      example:
        prefix: 2001:db8:3c4d:15::/64
        origin:
          type: internet
          interfaces:
          - wan1
        description: Prefix on WAN 1 of Long Island Office network
      properties:
        prefix:
          description: A static IPv6 prefix
          type: string
        origin:
          $ref: '#/components/schemas/_networks__networkId__appliance_prefixes_delegated_statics_origin_1'
        description:
          description: A name or description for the prefix
          type: string
      type: object
    inline_object_45:
      example:
        clientTrackingMethod: MAC address
        deploymentMode: routed
        dynamicDns:
          prefix: test
          enabled: true
      properties:
        clientTrackingMethod:
          description: Client tracking method of a network
          enum:
          - IP address
          - MAC address
          - Unique client identifier
          type: string
        deploymentMode:
          description: Deployment mode of a network
          enum:
          - passthrough
          - routed
          type: string
        dynamicDns:
          $ref: '#/components/schemas/_networks__networkId__appliance_settings_dynamicDns'
      type: object
    inline_response_200_27_products_wireless_currentVersion:
      description: Details of the current version on the device
      example:
        releaseDate: 2000-01-23T04:56:07.000+00:00
        releaseType: releaseType
        id: id
        shortName: shortName
        firmware: firmware
      properties:
        id:
          description: Firmware version identifier
          type: string
        firmware:
          description: Name of the firmware version
          type: string
        shortName:
          description: Firmware version short name
          type: string
        releaseType:
          description: Release type of the firmware version
          type: string
        releaseDate:
          description: Release date of the firmware version
          format: date-time
          type: string
      type: object
    _networks__networkId__wireless_ssids__number__hotspot20_mccMncs:
      properties:
        mcc:
          description: MCC value
          type: string
        mnc:
          description: MNC value
          type: string
      type: object
    inline_object_44:
      example:
        mode: enabled
        allowedUrls:
        - url: example.org
          comment: allow example.org
        - url: help.com.au
          comment: allow help.com.au
        allowedFiles:
        - sha256: e82c5f7d75004727e1f3b94426b9a11c8bc4c312a9170ac9a73abace40aef503
          comment: allow ZIP file
      properties:
        mode:
          description: Set mode to 'enabled' to enable malware prevention, otherwise
            'disabled'
          enum:
          - disabled
          - enabled
          type: string
        allowedUrls:
          description: The urls that should be permitted by the malware detection
            engine. If omitted, the current config will remain unchanged. This is
            available only if your network supports AMP allow listing
          items:
            $ref: '#/components/schemas/_networks__networkId__appliance_security_malware_allowedUrls'
          type: array
        allowedFiles:
          description: The sha256 digests of files that should be permitted by the
            malware detection engine. If omitted, the current config will remain unchanged.
            This is available only if your network supports AMP allow listing
          items:
            $ref: '#/components/schemas/_networks__networkId__appliance_security_malware_allowedFiles'
          type: array
      required:
      - mode
      type: object
    _organizations__organizationId__adaptivePolicy_policies_sourceGroup:
      description: The source adaptive policy group (requires one unique attribute)
      properties:
        id:
          description: The ID of the source adaptive policy group
          type: string
        name:
          description: The name of the source adaptive policy group
          type: string
        sgt:
          description: The SGT of the source adaptive policy group
          type: integer
      type: object
    inline_object_47:
      example:
        name: My SSID
        enabled: true
        defaultVlanId: 1
        authMode: 8021x-radius
        psk: psk
        radiusServers:
        - host: 0.0.0.0
          port: 1000
          secret: secret
        encryptionMode: wpa
        wpaEncryptionMode: WPA2 only
        visible: true
        dhcpEnforcedDeauthentication:
          enabled: true
      properties:
        name:
          description: The name of the SSID.
          type: string
        enabled:
          description: Whether or not the SSID is enabled.
          type: boolean
        defaultVlanId:
          description: The VLAN ID of the VLAN associated to this SSID. This parameter
            is only valid if the network is in routed mode.
          type: integer
        authMode:
          description: The association control method for the SSID ('open', 'psk',
            '8021x-meraki' or '8021x-radius').
          enum:
          - 8021x-meraki
          - 8021x-radius
          - open
          - psk
          type: string
        psk:
          description: The passkey for the SSID. This param is only valid if the authMode
            is 'psk'.
          type: string
        radiusServers:
          description: The RADIUS 802.1x servers to be used for authentication. This
            param is only valid if the authMode is '8021x-radius'.
          items:
            $ref: '#/components/schemas/_networks__networkId__appliance_ssids__number__radiusServers'
          type: array
        encryptionMode:
          description: The psk encryption mode for the SSID ('wep' or 'wpa'). This
            param is only valid if the authMode is 'psk'.
          enum:
          - wep
          - wpa
          type: string
        wpaEncryptionMode:
          description: The types of WPA encryption. ('WPA1 and WPA2', 'WPA2 only',
            'WPA3 Transition Mode' or 'WPA3 only'). This param is only valid if (1)
            the authMode is 'psk' & the encryptionMode is 'wpa' OR (2) the authMode
            is '8021x-meraki' OR (3) the authMode is '8021x-radius'
          enum:
          - WPA1 and WPA2
          - WPA2 only
          - WPA3 Transition Mode
          - WPA3 only
          type: string
        visible:
          description: Boolean indicating whether the MX should advertise or hide
            this SSID.
          type: boolean
        dhcpEnforcedDeauthentication:
          $ref: '#/components/schemas/_networks__networkId__appliance_ssids__number__dhcpEnforcedDeauthentication'
      type: object
    inline_object_46:
      example: {}
      properties:
        subnet:
          description: The subnet of the single LAN configuration
          type: string
        applianceIp:
          description: The appliance IP address of the single LAN
          type: string
        ipv6:
          $ref: '#/components/schemas/_networks__networkId__appliance_singleLan_ipv6'
        mandatoryDhcp:
          $ref: '#/components/schemas/_networks__networkId__appliance_singleLan_mandatoryDhcp'
      type: object
    inline_object_49:
      example:
        name: My route
        subnet: 192.168.1.0/24
        fixedIpAssignments:
          "22:33:44:55:66:77":
            ip: 1.2.3.4
            name: Some client name
        reservedIpRanges:
        - start: 192.168.1.0
          end: 192.168.1.1
          comment: A reserved IP range
      properties:
        name:
          description: The name of the static route
          type: string
        subnet:
          description: The subnet of the static route
          type: string
        gatewayIp:
          description: The gateway IP (next hop) of the static route
          type: string
        gatewayVlanId:
          description: The gateway IP (next hop) VLAN ID of the static route
          type: string
        enabled:
          description: The enabled state of the static route
          type: boolean
        fixedIpAssignments:
          description: The DHCP fixed IP assignments on the static route. This should
            be an object that contains mappings from MAC addresses to objects that
            themselves each contain "ip" and "name" string fields. See the sample
            request/response for more details.
          properties: {}
          type: object
        reservedIpRanges:
          description: The DHCP reserved IP ranges on the static route
          items:
            $ref: '#/components/schemas/_networks__networkId__appliance_staticRoutes__staticRouteId__reservedIpRanges'
          type: array
      type: object
    _networks__networkId__sensor_alerts_profiles_threshold_door:
      description: Door open threshold. 'open' must be provided and set to true.
      example:
        open: true
      properties:
        open:
          description: Alerting threshold for a door open event. Must be set to true.
          type: boolean
      required:
      - open
      type: object
    inline_object_48:
      example:
        name: My route
        subnet: 192.168.1.0/24
        gatewayIp: 1.2.3.5
      properties:
        name:
          description: The name of the new static route
          type: string
        subnet:
          description: The subnet of the static route
          type: string
        gatewayIp:
          description: The gateway IP (next hop) of the static route
          type: string
        gatewayVlanId:
          description: The gateway IP (next hop) VLAN ID of the static route
          type: string
      required:
      - gatewayIp
      - name
      - subnet
      type: object
    _organizations__organizationId__inventory_onboarding_cloudMonitoring_prepare_vty_accessList:
      description: AccessList details
      properties:
        vtyIn:
          $ref: '#/components/schemas/_organizations__organizationId__inventory_onboarding_cloudMonitoring_prepare_vty_accessList_vtyIn'
        vtyOut:
          $ref: '#/components/schemas/_organizations__organizationId__inventory_onboarding_cloudMonitoring_prepare_vty_accessList_vtyOut'
      type: object
    inline_object_39:
      example:
        spoofingProtection:
          ipSourceGuard:
            mode: block
      properties:
        spoofingProtection:
          $ref: '#/components/schemas/_networks__networkId__appliance_firewall_settings_spoofingProtection'
      type: object
    _networks__networkId__appliance_prefixes_delegated_statics_origin:
      description: WAN1/WAN2/Independent prefix.
      example:
        interfaces:
        - interfaces
        - interfaces
        type: type
      properties:
        type:
          description: Origin type
          type: string
        interfaces:
          description: Uplink provided or independent
          items:
            type: string
          type: array
      type: object
    inline_response_200_91_limits:
      description: The current limits of various adaptive policy objects.
      example:
        customGroups: 9
        rulesInAnAcl: 3
        policyObjects: 4
        aclsInAPolicy: 2
      properties:
        customGroups:
          description: Maximum number of user-created adaptive policy groups allowed
            in the organization.
          type: integer
        rulesInAnAcl:
          description: Maximum number of rules allowed in an adaptive policy ACL in
            the organization.
          type: integer
        aclsInAPolicy:
          description: Maximum number of adaptive policy ACLs that can be assigned
            to an adaptive policy in the organization.
          type: integer
        policyObjects:
          description: Maximum number of policy objects (with the adaptive policy
            type) allowed in the organization.
          type: integer
      type: object
    _devices__serial__wireless_radio_settings_twoFourGhzSettings:
      description: Manual radio settings for 2.4 GHz.
      properties:
        channel:
          description: Sets a manual channel for 2.4 GHz. Can be '1', '2', '3', '4',
            '5', '6', '7', '8', '9', '10', '11', '12', '13' or '14' or null for using
            auto channel.
          type: integer
        targetPower:
          description: Set a manual target power for 2.4 GHz. Can be between '5' or
            '30' or null for using auto power range.
          type: integer
      type: object
    _networks__networkId__wireless_ssids__number__hotspot20_naiRealms:
      properties:
        format:
          description: The format for the realm ('1' or '0')
          enum:
          - "0"
          - "1"
          type: string
        realm:
          description: The name of the realm
          type: string
        methods:
          description: An array of EAP methods for the realm.
          items:
            $ref: '#/components/schemas/_networks__networkId__wireless_ssids__number__hotspot20_methods'
          type: array
      type: object
    inline_response_200_100_usage_overall:
      description: Overall data usage of all clients across organization
      example:
        total: 0.8008282
        upstream: 1.4658129
        downstream: 6.0274563
      properties:
        total:
          description: Total data usage (in kb) of all clients across organization
          format: float
          type: number
        downstream:
          description: Downstream data usage (in kb) of all clients across organization
          format: float
          type: number
        upstream:
          description: Upstream data usage (in kb) of all clients across organization
          format: float
          type: number
      type: object
    _networks__networkId__firmwareUpgrades_staged_events_products_switch_nextUpgrade_toVersion:
      description: The version to be updated to for switch devices
      properties:
        id:
          description: The version ID
          type: string
      required:
      - id
      type: object
    inline_response_201_4_apBandSettings:
      description: Settings that will be enabled if selectionType is set to 'ap'.
      example:
        bandSteeringEnabled: true
        bandOperationMode: bandOperationMode
      properties:
        bandOperationMode:
          description: Choice between 'dual', '2.4ghz' or '5ghz'. Defaults to dual.
          type: string
        bandSteeringEnabled:
          description: Steers client to most open band. Can be either true or false.
            Defaults to true.
          type: boolean
      type: object
    _networks__networkId__clients__clientId__splashAuthorizationStatus_ssids:
      description: The target SSIDs. Each SSID must be enabled and must have Click-through
        splash enabled. For each SSID where isAuthorized is true, the expiration time
        will automatically be set according to the SSID's splash frequency. Not all
        networks support configuring all SSIDs
      properties:
        "0":
          $ref: '#/components/schemas/_networks__networkId__clients__clientId__splashAuthorizationStatus_ssids_0'
        "1":
          $ref: '#/components/schemas/_networks__networkId__clients__clientId__splashAuthorizationStatus_ssids_1'
        "2":
          $ref: '#/components/schemas/_networks__networkId__clients__clientId__splashAuthorizationStatus_ssids_2'
        "3":
          $ref: '#/components/schemas/_networks__networkId__clients__clientId__splashAuthorizationStatus_ssids_3'
        "4":
          $ref: '#/components/schemas/_networks__networkId__clients__clientId__splashAuthorizationStatus_ssids_4'
        "5":
          $ref: '#/components/schemas/_networks__networkId__clients__clientId__splashAuthorizationStatus_ssids_5'
        "6":
          $ref: '#/components/schemas/_networks__networkId__clients__clientId__splashAuthorizationStatus_ssids_6'
        "7":
          $ref: '#/components/schemas/_networks__networkId__clients__clientId__splashAuthorizationStatus_ssids_7'
        "8":
          $ref: '#/components/schemas/_networks__networkId__clients__clientId__splashAuthorizationStatus_ssids_8'
        "9":
          $ref: '#/components/schemas/_networks__networkId__clients__clientId__splashAuthorizationStatus_ssids_9'
        "10":
          $ref: '#/components/schemas/_networks__networkId__clients__clientId__splashAuthorizationStatus_ssids_10'
        "11":
          $ref: '#/components/schemas/_networks__networkId__clients__clientId__splashAuthorizationStatus_ssids_11'
        "12":
          $ref: '#/components/schemas/_networks__networkId__clients__clientId__splashAuthorizationStatus_ssids_12'
        "13":
          $ref: '#/components/schemas/_networks__networkId__clients__clientId__splashAuthorizationStatus_ssids_13'
        "14":
          $ref: '#/components/schemas/_networks__networkId__clients__clientId__splashAuthorizationStatus_ssids_14'
      type: object
    inline_response_200_21_hubs:
      example:
        hubId: hubId
        useDefaultRoute: true
      properties:
        hubId:
          description: The network ID of the hub.
          type: string
        useDefaultRoute:
          description: Indicates whether default route traffic should be sent to this
            hub.
          type: boolean
      type: object
    inline_object_30:
      example:
        rules:
        - comment: Allow TCP traffic to subnet with HTTP servers.
          policy: allow
          protocol: tcp
          destPort: "443"
          destCidr: 192.168.1.0/24
          srcPort: Any
          srcCidr: Any
          syslogEnabled: false
      properties:
        rules:
          description: An ordered array of the firewall rules (not including the default
            rule)
          items:
            $ref: '#/components/schemas/_networks__networkId__appliance_firewall_cellularFirewallRules_rules'
          type: array
      type: object
    _networks__networkId__sm_devices_fields_deviceFields:
      description: The new fields of the device. Each field of this object is optional.
      properties:
        name:
          description: New name for the device
          type: string
        notes:
          description: New notes for the device
          type: string
      type: object
    inline_object_32:
      example:
        rules:
        - comment: Allow TCP traffic to subnet with HTTP servers.
          policy: allow
          protocol: tcp
          destPort: "443"
          destCidr: 192.168.1.0/24
          srcPort: Any
          srcCidr: Any
          syslogEnabled: false
      properties:
        rules:
          description: An ordered array of the firewall rules (not including the default
            rule)
          items:
            $ref: '#/components/schemas/_networks__networkId__appliance_firewall_cellularFirewallRules_rules'
          type: array
      type: object
    inline_object_31:
      example:
        access: restricted
        allowedIps:
        - 123.123.123.1
      properties:
        access:
          description: A string indicating the rule for which IPs are allowed to use
            the specified service. Acceptable values are "blocked" (no remote IPs
            can access the service), "restricted" (only allowed IPs can access the
            service), and "unrestriced" (any remote IP can access the service). This
            field is required
          enum:
          - blocked
          - restricted
          - unrestricted
          type: string
        allowedIps:
          description: An array of allowed IPs that can access the service. This field
            is required if "access" is set to "restricted". Otherwise this field is
            ignored
          items:
            type: string
          type: array
      required:
      - access
      type: object
    inline_response_201_5_status:
      description: Status of action batch
      example:
        createdResources:
        - id: id
          uri: uri
        - id: id
          uri: uri
        completed: true
        failed: true
        errors:
        - errors
        - errors
      properties:
        completed:
          description: Flag describing whether all actions in the action batch have
            completed
          type: boolean
        failed:
          description: Flag describing whether any actions in the action batch failed
          type: boolean
        errors:
          description: List of errors encountered when running actions in the action
            batch
          items:
            type: string
          type: array
        createdResources:
          description: Resources created as a result of this action batch
          items:
            $ref: '#/components/schemas/inline_response_201_5_status_createdResources'
          type: array
      required:
      - createdResources
      type: object
    inline_object_34:
      example:
        rules:
        - comment: Allow TCP traffic to subnet with HTTP servers.
          policy: allow
          protocol: tcp
          destPort: "443"
          destCidr: 192.168.1.0/24
          srcPort: Any
          srcCidr: Any
          syslogEnabled: false
      properties:
        rules:
          description: An ordered array of the firewall rules (not including the default
            rule)
          items:
            $ref: '#/components/schemas/_networks__networkId__appliance_firewall_cellularFirewallRules_rules'
          type: array
        syslogDefaultRule:
          description: Log the special default rule (boolean value - enable only if
            you've configured a syslog server) (optional)
          type: boolean
      type: object
    inline_object_33:
      example:
        rules:
        - comment: Allow TCP traffic to subnet with HTTP servers.
          policy: allow
          protocol: tcp
          destPort: "443"
          destCidr: 192.168.1.0/24
          srcPort: Any
          srcCidr: Any
          syslogEnabled: false
      properties:
        rules:
          description: An ordered array of the firewall rules (not including the default
            rule)
          items:
            $ref: '#/components/schemas/_networks__networkId__appliance_firewall_cellularFirewallRules_rules'
          type: array
        syslogDefaultRule:
          description: Log the special default rule (boolean value - enable only if
            you've configured a syslog server) (optional)
          type: boolean
      type: object
    inline_object_36:
      example:
        rules:
        - publicIp: 146.11.11.13
          uplink: internet1
          portRules:
          - name: Rule 1
            protocol: tcp
            publicPort: "9443"
            localIp: 192.168.128.1
            localPort: "443"
            allowedIps:
            - any
          - name: Rule 2
            protocol: tcp
            publicPort: "8080"
            localIp: 192.168.128.1
            localPort: "80"
            allowedIps:
            - 10.82.110.0/24
            - 10.82.111.0/24
      properties:
        rules:
          description: An array of 1:Many nat rules
          items:
            $ref: '#/components/schemas/_networks__networkId__appliance_firewall_oneToManyNatRules_rules'
          type: array
      required:
      - rules
      type: object
    inline_object_35:
      example:
        rules:
        - policy: deny
          type: host
          value: google.com
        - policy: deny
          type: port
          value: "23"
        - policy: deny
          type: ipRange
          value: 10.11.12.00/24
        - policy: deny
          type: ipRange
          value: 10.11.12.00/24:5555
      properties:
        rules:
          description: An ordered array of the MX L7 firewall rules
          items:
            $ref: '#/components/schemas/_networks__networkId__appliance_firewall_l7FirewallRules_rules'
          type: array
      type: object
    inline_object_38:
      example:
        rules:
        - lanIp: 192.168.128.1
          allowedIps:
          - any
          name: Description of Port Forwarding Rule
          protocol: tcp
          publicPort: 8100-8101
          localPort: 442-443
          uplink: both
      properties:
        rules:
          description: An array of port forwarding params
          items:
            $ref: '#/components/schemas/_networks__networkId__appliance_firewall_portForwardingRules_rules'
          type: array
      required:
      - rules
      type: object
    inline_response_200_15_dynamicDns:
      description: Dynamic DNS settings for a network
      example:
        prefix: prefix
        enabled: true
        url: url
      properties:
        enabled:
          description: Dynamic DNS enabled
          type: boolean
        prefix:
          description: Dynamic DNS url prefix. DDNS must be enabled to update
          type: string
        url:
          description: Dynamic DNS url. DDNS must be enabled to update
          type: string
      type: object
    inline_object_37:
      example:
        rules:
        - name: Service behind NAT
          lanIp: 192.168.128.22
          publicIp: 146.12.3.33
          uplink: internet1
          allowedInbound:
          - protocol: tcp
            destinationPorts:
            - "80"
            allowedIps:
            - 10.82.112.0/24
            - 10.82.0.0/16
          - protocol: udp
            destinationPorts:
            - "8080"
            allowedIps:
            - 10.81.110.5
            - 10.81.0.0/16
      properties:
        rules:
          description: An array of 1:1 nat rules
          items:
            $ref: '#/components/schemas/_networks__networkId__appliance_firewall_oneToOneNatRules_rules'
          type: array
      required:
      - rules
      type: object
    inline_object_29:
      example:
        allowedUrlPatterns:
        - http://www.example.org
        - http://help.com.au
        blockedUrlPatterns:
        - http://www.example.com
        - http://www.betting.com
        blockedUrlCategories:
        - meraki:contentFiltering/category/1
        - meraki:contentFiltering/category/7
        urlCategoryListSize: topSites
      properties:
        allowedUrlPatterns:
          description: A list of URL patterns that are allowed
          items:
            type: string
          type: array
        blockedUrlPatterns:
          description: A list of URL patterns that are blocked
          items:
            type: string
          type: array
        blockedUrlCategories:
          description: A list of URL categories to block
          items:
            type: string
          type: array
        urlCategoryListSize:
          description: URL category list size which is either 'topSites' or 'fullList'
          enum:
          - fullList
          - topSites
          type: string
      type: object
    inline_object_28:
      example:
        destinations:
        - ip: 8.8.8.8
          description: Google
          default: false
        - ip: 1.23.45.67
          description: test description
          default: true
        - ip: 9.8.7.6
      properties:
        destinations:
          description: The list of connectivity monitoring destinations
          items:
            $ref: '#/components/schemas/_networks__networkId__appliance_connectivityMonitoringDestinations_destinations'
          type: array
      type: object
    inline_response_200_28_reasons:
      example:
        comment: comment
        category: broke old features
      properties:
        category:
          description: Reason for the rollback
          enum:
          - broke old features
          - other
          - performance
          - stability
          - testing
          - unifying networks versions
          type: string
        comment:
          description: Additional comment about the rollback
          type: string
      type: object
    _networks__networkId__wireless_ssids__number__splash_settings_splashLogo:
      description: The logo used in the splash page.
      properties:
        md5:
          description: The MD5 value of the logo file. Setting this to null will remove
            the logo from the splash page.
          type: string
        extension:
          description: The extension of the logo file.
          type: string
        image:
          $ref: '#/components/schemas/_networks__networkId__wireless_ssids__number__splash_settings_splashLogo_image'
      type: object
    _networks__networkId__settings_localStatusPage_authentication:
      description: A hash of Local Status page(s)' authentication options applied
        to the Network.
      properties:
        enabled:
          description: Enables / disables the authentication on Local Status page(s).
          type: boolean
        password:
          description: The password used for Local Status Page(s). Set this to null
            to clear the password.
          type: string
      type: object
    _networks__networkId__sensor_alerts_profiles_threshold_water:
      description: Water detection threshold. 'present' must be provided and set to
        true.
      example:
        present: true
      properties:
        present:
          description: Alerting threshold for a water detection event. Must be set
            to true.
          type: boolean
      required:
      - present
      type: object
    _networks__networkId__wireless_ssids__number__vpn_failover:
      description: Secondary VPN concentrator settings. This is only used when two
        VPN concentrators are configured on the SSID.
      properties:
        requestIp:
          description: IP addressed reserved on DHCP server where SSID will terminate.
          type: string
        heartbeatInterval:
          description: Idle timer interval in seconds.
          type: integer
        idleTimeout:
          description: Idle timer timeout in seconds.
          type: integer
      type: object
    _organizations__organizationId__summary_top_ssids_byUsage_clients:
      description: Clients info of the SSID
      example:
        counts:
          total: 5
      properties:
        counts:
          $ref: '#/components/schemas/_organizations__organizationId__summary_top_ssids_byUsage_clients_counts'
      type: object
    _networks__networkId__mqttBrokers_security:
      description: Security settings of the MQTT broker.
      properties:
        mode:
          description: Security protocol of the MQTT broker.
          type: string
        security:
          $ref: '#/components/schemas/_networks__networkId__mqttBrokers_security_security'
      type: object
    inline_response_200_83_namedVlans:
      description: Named VLAN settings for wireless networks.
      example:
        poolDhcpMonitoring:
          duration: 0
          enabled: true
      properties:
        poolDhcpMonitoring:
          $ref: '#/components/schemas/inline_response_200_83_namedVlans_poolDhcpMonitoring'
      type: object
    _devices__serial__appliance_uplinks_settings_interfaces_wan1_pppoe_authentication:
      description: Settings for PPPoE Authentication.
      properties:
        enabled:
          description: Whether PPPoE authentication is enabled.
          type: boolean
        username:
          description: Username for PPPoE authentication.
          type: string
        password:
          description: Password for PPPoE authentication. This parameter is not returned.
          type: string
      type: object
    inline_object_21:
      example:
        name: My route
        subnet: 192.168.1.0/24
        nextHopIp: 1.2.3.4
        advertiseViaOspfEnabled: false
        preferOverOspfRoutesEnabled: false
      properties:
        name:
          description: Name or description for layer 3 static route
          type: string
        subnet:
          description: The subnet which is routed via this static route and should
            be specified in CIDR notation (ex. 1.2.3.0/24)
          type: string
        nextHopIp:
          description: IP address of the next hop device to which the device sends
            its traffic for the subnet
          type: string
        advertiseViaOspfEnabled:
          description: Option to advertise static route via OSPF
          type: boolean
        preferOverOspfRoutesEnabled:
          description: Option to prefer static route over OSPF routes
          type: boolean
      required:
      - nextHopIp
      - subnet
      type: object
    inline_object_20:
      example:
        dhcpMode: dhcpServer
        dhcpLeaseTime: 1 day
        dnsNameserversOption: custom
        dnsCustomNameservers:
        - 8.8.8.8, 8.8.4.4
        bootOptionsEnabled: true
        bootNextServer: 1.2.3.4
        bootFileName: home_boot_file
        dhcpOptions:
        - code: "5"
          type: text
          value: five
        reservedIpRanges:
        - start: 192.168.1.1
          end: 192.168.1.10
          comment: A reserved IP range
        fixedIpAssignments:
        - mac: 22:33:44:55:66:77
          name: Cisco Meraki valued client
          ip: 192.168.1.12
      properties:
        dhcpMode:
          description: The DHCP mode options for the switch interface ('dhcpDisabled',
            'dhcpRelay' or 'dhcpServer')
          enum:
          - dhcpDisabled
          - dhcpRelay
          - dhcpServer
          type: string
        dhcpRelayServerIps:
          description: The DHCP relay server IPs to which DHCP packets would get relayed
            for the switch interface
          items:
            type: string
          type: array
        dhcpLeaseTime:
          description: The DHCP lease time config for the dhcp server running on switch
            interface ('30 minutes', '1 hour', '4 hours', '12 hours', '1 day' or '1
            week')
          enum:
          - 1 day
          - 1 hour
          - 1 week
          - 12 hours
          - 30 minutes
          - 4 hours
          type: string
        dnsNameserversOption:
          description: The DHCP name server option for the dhcp server running on
            the switch interface ('googlePublicDns', 'openDns' or 'custom')
          enum:
          - custom
          - googlePublicDns
          - openDns
          type: string
        dnsCustomNameservers:
          description: The DHCP name server IPs when DHCP name server option is 'custom'
          items:
            type: string
          type: array
        bootOptionsEnabled:
          description: Enable DHCP boot options to provide PXE boot options configs
            for the dhcp server running on the switch interface
          type: boolean
        bootNextServer:
          description: The PXE boot server IP for the DHCP server running on the switch
            interface
          type: string
        bootFileName:
          description: The PXE boot server filename for the DHCP server running on
            the switch interface
          type: string
        dhcpOptions:
          description: Array of DHCP options consisting of code, type and value for
            the DHCP server running on the switch interface
          items:
            $ref: '#/components/schemas/_devices__serial__switch_routing_interfaces__interfaceId__dhcp_dhcpOptions'
          type: array
        reservedIpRanges:
          description: Array of DHCP reserved IP assignments for the DHCP server running
            on the switch interface
          items:
            $ref: '#/components/schemas/_devices__serial__switch_routing_interfaces__interfaceId__dhcp_reservedIpRanges'
          type: array
        fixedIpAssignments:
          description: Array of DHCP fixed IP assignments for the DHCP server running
            on the switch interface
          items:
            $ref: '#/components/schemas/_devices__serial__switch_routing_interfaces__interfaceId__dhcp_fixedIpAssignments'
          type: array
      type: object
    inline_object_23:
      example:
        enabled: true
        spareSerial: Q234-ABCD-0002
      properties:
        enabled:
          description: Enable or disable warm spare for a switch
          type: boolean
        spareSerial:
          description: Serial number of the warm spare switch
          type: string
      required:
      - enabled
      type: object
    inline_object_22:
      example:
        name: My route
        subnet: 192.168.1.0/24
        nextHopIp: 1.2.3.4
        advertiseViaOspfEnabled: false
        preferOverOspfRoutesEnabled: false
      properties:
        name:
          description: Name or description for layer 3 static route
          type: string
        subnet:
          description: The subnet which is routed via this static route and should
            be specified in CIDR notation (ex. 1.2.3.0/24)
          type: string
        nextHopIp:
          description: IP address of the next hop device to which the device sends
            its traffic for the subnet
          type: string
        advertiseViaOspfEnabled:
          description: Option to advertise static route via OSPF
          type: boolean
        preferOverOspfRoutesEnabled:
          description: Option to prefer static route over OSPF routes
          type: boolean
      type: object
    inline_object_25:
      example:
        rfProfileId: "1234"
        twoFourGhzSettings:
          channel: 11
          targetPower: 21
        fiveGhzSettings:
          channel: 149
          channelWidth: 20
          targetPower: 15
      properties:
        rfProfileId:
          description: The ID of an RF profile to assign to the device. If the value
            of this parameter is null, the appropriate basic RF profile (indoor or
            outdoor) will be assigned to the device. Assigning an RF profile will
            clear ALL manually configured overrides on the device (channel width,
            channel, power).
          type: string
        twoFourGhzSettings:
          $ref: '#/components/schemas/_devices__serial__wireless_radio_settings_twoFourGhzSettings'
        fiveGhzSettings:
          $ref: '#/components/schemas/_devices__serial__wireless_radio_settings_fiveGhzSettings'
      type: object
    _organizations__organizationId__wireless_devices_ethernet_statuses_power:
      description: Power details object
      example:
        mode: mode
        ac:
          isConnected: true
        poe:
          isConnected: true
      properties:
        mode:
          description: The PoE power mode for the AP. Can be 'full' or 'low'
          type: string
        ac:
          $ref: '#/components/schemas/_organizations__organizationId__wireless_devices_ethernet_statuses_power_ac'
        poe:
          $ref: '#/components/schemas/_organizations__organizationId__wireless_devices_ethernet_statuses_power_poe'
      type: object
    inline_object_24:
      example:
        uuid: 00000000-0000-0000-000-000000000000
        major: 13
        minor: 125
      properties:
        uuid:
          description: Desired UUID of the beacon. If the value is set to null it
            will reset to Dashboard's automatically generated value.
          type: string
        major:
          description: Desired major value of the beacon. If the value is set to null
            it will reset to Dashboard's automatically generated value.
          type: integer
        minor:
          description: Desired minor value of the beacon. If the value is set to null
            it will reset to Dashboard's automatically generated value.
          type: integer
      type: object
    _networks__networkId__camera_qualityRetentionProfiles_videoSettings:
      description: Video quality and resolution settings for all the camera models.
      properties:
        MV21/MV71:
          $ref: '#/components/schemas/_networks__networkId__camera_qualityRetentionProfiles_videoSettings_MV21_MV71'
        MV12/MV22/MV72:
          $ref: '#/components/schemas/_networks__networkId__camera_qualityRetentionProfiles_videoSettings_MV12_MV22_MV72'
        MV32:
          $ref: '#/components/schemas/_networks__networkId__camera_qualityRetentionProfiles_videoSettings_MV32'
        MV33:
          $ref: '#/components/schemas/_networks__networkId__camera_qualityRetentionProfiles_videoSettings_MV33'
        MV12WE:
          $ref: '#/components/schemas/_networks__networkId__camera_qualityRetentionProfiles_videoSettings_MV12WE'
        MV13:
          $ref: '#/components/schemas/_networks__networkId__camera_qualityRetentionProfiles_videoSettings_MV13'
        MV22X/MV72X:
          $ref: '#/components/schemas/_networks__networkId__camera_qualityRetentionProfiles_videoSettings_MV22X_MV72X'
        MV52:
          $ref: '#/components/schemas/_networks__networkId__camera_qualityRetentionProfiles_videoSettings_MV52'
        MV63:
          $ref: '#/components/schemas/_networks__networkId__camera_qualityRetentionProfiles_videoSettings_MV63'
        MV93:
          $ref: '#/components/schemas/_networks__networkId__camera_qualityRetentionProfiles_videoSettings_MV93'
        MV63X:
          $ref: '#/components/schemas/_networks__networkId__camera_qualityRetentionProfiles_videoSettings_MV63X'
        MV93X:
          $ref: '#/components/schemas/_networks__networkId__camera_qualityRetentionProfiles_videoSettings_MV93X'
      type: object
    _organizations__organizationId__inventory_onboarding_cloudMonitoring_prepare_configParams_tunnel_rootCertificate:
      description: Root certificate information
      example:
        name: name
        content: content
      properties:
        content:
          description: Public certificate value
          type: string
        name:
          description: The name of the server protected by the certificate
          type: string
      type: object
    inline_object_27:
      example:
        defaultDestinations:
          emails:
          - miles@meraki.com
          allAdmins: true
          snmp: true
          httpServerIds:
          - aHR0cHM6Ly93d3cuZXhhbXBsZS5jb20vd2ViaG9va3M=
        alerts:
        - type: gatewayDown
          enabled: true
          alertDestinations:
            emails:
            - miles@meraki.com
            allAdmins: false
            snmp: false
            httpServerIds:
            - aHR0cHM6Ly93d3cuZXhhbXBsZS5jb20vd2ViaG9va3M=
          filters:
            timeout: 60
      properties:
        defaultDestinations:
          $ref: '#/components/schemas/_networks__networkId__alerts_settings_defaultDestinations'
        alerts:
          description: Alert-specific configuration for each type. Only alerts that
            pertain to the network can be updated.
          items:
            $ref: '#/components/schemas/_networks__networkId__alerts_settings_alerts'
          type: array
      type: object
    inline_object_26:
      example:
        name: Main Office
        timeZone: America/Los_Angeles
        tags:
        - tag1
        - tag2
        enrollmentString: my-enrollment-string
        notes: Additional description of the network
      properties:
        name:
          description: The name of the network
          type: string
        timeZone:
          description: The timezone of the network. For a list of allowed timezones,
            please see the 'TZ' column in the table in <a target='_blank' href='https://en.wikipedia.org/wiki/List_of_tz_database_time_zones'>this
            article.</a>
          type: string
        tags:
          description: A list of tags to be applied to the network
          items:
            type: string
          type: array
        enrollmentString:
          description: A unique identifier which can be used for device enrollment
            or easy access through the Meraki SM Registration page or the Self Service
            Portal. Please note that changing this field may cause existing bookmarks
            to break.
          type: string
        notes:
          description: Add any notes or additional information about this network
            here.
          type: string
      type: object
    _networks__networkId__floorPlans_center:
      description: The longitude and latitude of the center of your floor plan. The
        'center' or two adjacent corners (e.g. 'topLeftCorner' and 'bottomLeftCorner')
        must be specified. If 'center' is specified, the floor plan is placed over
        that point with no rotation. If two adjacent corners are specified, the floor
        plan is rotated to line up with the two specified points. The aspect ratio
        of the floor plan's image is preserved regardless of which corners/center
        are specified. (This means if that more than two corners are specified, only
        two corners may be used to preserve the floor plan's aspect ratio.). No two
        points can have the same latitude, longitude pair.
      properties:
        lat:
          description: Latitude
          format: float
          type: number
        lng:
          description: Longitude
          format: float
          type: number
      type: object
    inline_object_18:
      example:
        name: L3 interface
        subnet: 192.168.1.0/24
        interfaceIp: 192.168.1.2
        multicastRouting: disabled
        vlanId: 100
        defaultGateway: 192.168.1.1
        ospfSettings:
          area: "0"
          cost: 1
          isPassiveEnabled: true
        ospfV3:
          area: "1"
          cost: 2
          isPassiveEnabled: true
        ipv6:
          assignmentMode: static
          prefix: 1:2:3:4::/48
          address: 1:2:3:4::1
          gateway: 1:2:3:4::2
      properties:
        name:
          description: A friendly name or description for the interface or VLAN.
          type: string
        subnet:
          description: The network that this routed interface is on, in CIDR notation
            (ex. 10.1.1.0/24).
          type: string
        interfaceIp:
          description: The IP address this switch will use for layer 3 routing on
            this VLAN or subnet. This cannot be the same         as the switch's management
            IP.
          type: string
        multicastRouting:
          description: 'Enable multicast support if, multicast routing between VLANs
            is required. Options are:         ''disabled'', ''enabled'' or ''IGMP
            snooping querier''. Default is ''disabled''.'
          enum:
          - IGMP snooping querier
          - disabled
          - enabled
          type: string
        vlanId:
          description: The VLAN this routed interface is on. VLAN must be between
            1 and 4094.
          type: integer
        defaultGateway:
          description: The next hop for any traffic that isn't going to a directly
            connected subnet or over a static route.         This IP address must
            exist in a subnet with a routed interface. Required if this is the first
            IPv4 interface.
          type: string
        ospfSettings:
          $ref: '#/components/schemas/_devices__serial__switch_routing_interfaces_ospfSettings_1'
        ospfV3:
          $ref: '#/components/schemas/_devices__serial__switch_routing_interfaces_ospfV3_1'
        ipv6:
          $ref: '#/components/schemas/_devices__serial__switch_routing_interfaces_ipv6_1'
      type: object
    inline_object_17:
      example:
        name: My switch port
        tags:
        - tag1
        - tag2
        enabled: true
        poeEnabled: true
        type: access
        vlan: 10
        voiceVlan: 20
        allowedVlans: 1,3,5-10
        isolationEnabled: false
        rstpEnabled: true
        stpGuard: disabled
        linkNegotiation: Auto negotiate
        portScheduleId: "1234"
        udld: Alert only
        accessPolicyType: Sticky MAC allow list
        accessPolicyNumber: 2
        macAllowList:
        - 34:56:fe:ce:8e:b0
        - 34:56:fe:ce:8e:b1
        stickyMacAllowList:
        - 34:56:fe:ce:8e:b0
        - 34:56:fe:ce:8e:b1
        stickyMacAllowListLimit: 5
        stormControlEnabled: true
        adaptivePolicyGroupId: "123"
        peerSgtCapable: false
        flexibleStackingEnabled: true
        daiTrusted: false
        profile:
          enabled: false
          id: "1284392014819"
          iname: iname
      properties:
        name:
          description: The name of the switch port.
          type: string
        tags:
          description: The list of tags of the switch port.
          items:
            type: string
          type: array
        enabled:
          description: The status of the switch port.
          type: boolean
        poeEnabled:
          description: The PoE status of the switch port.
          type: boolean
        type:
          description: The type of the switch port ('trunk' or 'access').
          enum:
          - access
          - trunk
          type: string
        vlan:
          description: The VLAN of the switch port. A null value will clear the value
            set for trunk ports.
          type: integer
        voiceVlan:
          description: The voice VLAN of the switch port. Only applicable to access
            ports.
          type: integer
        allowedVlans:
          description: The VLANs allowed on the switch port. Only applicable to trunk
            ports.
          type: string
        isolationEnabled:
          description: The isolation status of the switch port.
          type: boolean
        rstpEnabled:
          description: The rapid spanning tree protocol status.
          type: boolean
        stpGuard:
          description: The state of the STP guard ('disabled', 'root guard', 'bpdu
            guard' or 'loop guard').
          enum:
          - bpdu guard
          - disabled
          - loop guard
          - root guard
          type: string
        linkNegotiation:
          description: The link speed for the switch port.
          type: string
        portScheduleId:
          description: The ID of the port schedule. A value of null will clear the
            port schedule.
          type: string
        udld:
          description: The action to take when Unidirectional Link is detected (Alert
            only, Enforce). Default configuration is Alert only.
          enum:
          - Alert only
          - Enforce
          type: string
        accessPolicyType:
          description: The type of the access policy of the switch port. Only applicable
            to access ports. Can be one of 'Open', 'Custom access policy', 'MAC allow
            list' or 'Sticky MAC allow list'.
          enum:
          - Custom access policy
          - MAC allow list
          - Open
          - Sticky MAC allow list
          type: string
        accessPolicyNumber:
          description: The number of a custom access policy to configure on the switch
            port. Only applicable when 'accessPolicyType' is 'Custom access policy'.
          type: integer
        macAllowList:
          description: Only devices with MAC addresses specified in this list will
            have access to this port. Up to 20 MAC addresses can be defined. Only
            applicable when 'accessPolicyType' is 'MAC allow list'.
          items:
            type: string
          type: array
        stickyMacAllowList:
          description: The initial list of MAC addresses for sticky Mac allow list.
            Only applicable when 'accessPolicyType' is 'Sticky MAC allow list'.
          items:
            type: string
          type: array
        stickyMacAllowListLimit:
          description: The maximum number of MAC addresses for sticky MAC allow list.
            Only applicable when 'accessPolicyType' is 'Sticky MAC allow list'.
          type: integer
        stormControlEnabled:
          description: The storm control status of the switch port.
          type: boolean
        adaptivePolicyGroupId:
          description: The adaptive policy group ID that will be used to tag traffic
            through this switch port. This ID must pre-exist during the configuration,
            else needs to be created using adaptivePolicy/groups API. Cannot be applied
            to a port on a switch bound to profile.
          type: string
        peerSgtCapable:
          description: If true, Peer SGT is enabled for traffic through this switch
            port. Applicable to trunk port only, not access port. Cannot be applied
            to a port on a switch bound to profile.
          type: boolean
        flexibleStackingEnabled:
          description: For supported switches (e.g. MS420/MS425), whether or not the
            port has flexible stacking enabled.
          type: boolean
        daiTrusted:
          description: If true, ARP packets for this port will be considered trusted,
            and Dynamic ARP Inspection will allow the traffic.
          type: boolean
        profile:
          $ref: '#/components/schemas/_devices__serial__switch_ports_profile'
      type: object
    _networks__networkId__switch_routing_multicast_defaultSettings:
      description: Default multicast setting for entire network. IGMP snooping and
        Flood unknown multicast traffic settings are enabled by default.
      properties:
        igmpSnoopingEnabled:
          description: IGMP snooping setting for entire network
          type: boolean
        floodUnknownMulticastTrafficEnabled:
          description: Flood unknown multicast traffic setting for entire network
          type: boolean
      type: object
    inline_object_19:
      example:
        name: L3 interface
        subnet: 192.168.1.0/24
        interfaceIp: 192.168.1.2
        multicastRouting: disabled
        vlanId: 100
        defaultGateway: 192.168.1.1
        ospfSettings:
          area: "0"
          cost: 1
          isPassiveEnabled: true
        ospfV3:
          area: "1"
          cost: 2
          isPassiveEnabled: true
        ipv6:
          assignmentMode: static
          prefix: 1:2:3:4::/48
          address: 1:2:3:4::1
          gateway: 1:2:3:4::2
      properties:
        name:
          description: A friendly name or description for the interface or VLAN.
          type: string
        subnet:
          description: The network that this routed interface is on, in CIDR notation
            (ex. 10.1.1.0/24).
          type: string
        interfaceIp:
          description: The IP address this switch will use for layer 3 routing on
            this VLAN or subnet. This cannot be the same         as the switch's management
            IP.
          type: string
        multicastRouting:
          description: 'Enable multicast support if, multicast routing between VLANs
            is required. Options are:         ''disabled'', ''enabled'' or ''IGMP
            snooping querier''. Default is ''disabled''.'
          enum:
          - IGMP snooping querier
          - disabled
          - enabled
          type: string
        vlanId:
          description: The VLAN this routed interface is on. VLAN must be between
            1 and 4094.
          type: integer
        defaultGateway:
          description: The next hop for any traffic that isn't going to a directly
            connected subnet or over a static route.         This IP address must
            exist in a subnet with a routed interface. Required if this is the first
            IPv4 interface.
          type: string
        ospfSettings:
          $ref: '#/components/schemas/_devices__serial__switch_routing_interfaces_ospfSettings_1'
        ospfV3:
          $ref: '#/components/schemas/_devices__serial__switch_routing_interfaces_ospfV3_1'
        ipv6:
          $ref: '#/components/schemas/_devices__serial__switch_routing_interfaces_ipv6_1'
      type: object
    _networks__networkId__wireless_ssids__number__splash_settings_splashPrepaidFront_image:
      description: Properties for setting a new image.
      properties:
        format:
          description: The format of the encoded contents. Supported formats are 'png',
            'gif', and jpg'.
          enum:
          - gif
          - jpg
          - png
          type: string
        contents:
          description: The file contents (a base 64 encoded string) of your new prepaid
            front.
          format: byte
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
      type: object
    _devices__serial__camera_customAnalytics_parameters:
      properties:
        name:
          description: Name of the parameter
          type: string
        value:
          description: Value of the parameter
          type: string
      required:
      - name
      - value
      type: object
    _organizations__organizationId__firmware_upgrades_byDevice_upgrade_fromVersion:
      description: The initial version of the device
      example:
        releaseDate: releaseDate
        releaseType: releaseType
        id: id
        shortName: shortName
      properties:
        id:
          description: ID of the initial firmware version
          type: string
        shortName:
          description: Firmware version short name
          type: string
        releaseType:
          description: Release type of the firmware version
          type: string
        releaseDate:
          description: Release date of the firmware version
          type: string
      type: object
    _networks__networkId__trafficAnalysis_customPieChartItems:
      properties:
        name:
          description: The name of the custom pie chart item.
          type: string
        type:
          description: |2
                The signature type for the custom pie chart item. Can be one of 'host', 'port' or 'ipRange'.
          enum:
          - host
          - ipRange
          - port
          type: string
        value:
          description: |2
                The value of the custom pie chart item. Valid syntax depends on the signature type of the chart item
                (see sample request/response for more details).
          type: string
      required:
      - name
      - type
      - value
      type: object
    inline_object_90:
      example:
        name: Miles Meraki
        password: secret
        emailPasswordToUser: false
        authorizations:
        - ssidNumber: 1
          expiresAt: 2018-03-13T00:00:00.090210Z
      properties:
        name:
          description: Name of the user. Only allowed If the user is not Dashboard
            administrator.
          type: string
        password:
          description: The password for this user account. Only allowed If the user
            is not Dashboard administrator.
          type: string
        emailPasswordToUser:
          description: Whether or not Meraki should email the password to user. Default
            is false.
          type: boolean
        authorizations:
          description: Authorization zones and expiration dates for the user.
          items:
            $ref: '#/components/schemas/_networks__networkId__merakiAuthUsers__merakiAuthUserId__authorizations'
          type: array
      type: object
    inline_object_92:
      example:
        id: "1234"
        name: MQTT_Broker_1
        host: 1.1.1.1
        port: 1234
        security:
          mode: tls
          tls:
            hasCaCertificate: true
            verifyHostnames: true
        authentication:
          username: Username
      properties:
        name:
          description: Name of the MQTT broker.
          type: string
        host:
          description: Host name/IP address where the MQTT broker runs.
          type: string
        port:
          description: Host port though which the MQTT broker can be reached.
          type: integer
        security:
          $ref: '#/components/schemas/_networks__networkId__mqttBrokers_security'
        authentication:
          description: Authentication settings of the MQTT broker
          properties: {}
          type: object
      type: object
    inline_object_91:
      example:
        name: MQTT_Broker_1
        host: 1.1.1.1
        port: 1234
        security:
          mode: tls
          tls:
            hasCaCertificate: true
            verifyHostnames: true
        authentication:
          username: Username
      properties:
        name:
          description: Name of the MQTT broker.
          type: string
        host:
          description: Host name/IP address where the MQTT broker runs.
          type: string
        port:
          description: Host port though which the MQTT broker can be reached.
          type: integer
        security:
          $ref: '#/components/schemas/_networks__networkId__mqttBrokers_security'
        authentication:
          description: Authentication settings of the MQTT broker
          properties: {}
          type: object
      required:
      - host
      - name
      - port
      type: object
    inline_object_94:
      example:
        type: delete
        datasets:
        - usage
        - events
        mac: 00:77:00:77:00:77
      properties:
        type:
          description: One of "delete" or "restrict processing"
          enum:
          - delete
          - restrict processing
          type: string
        datasets:
          description: 'The datasets related to the provided key that should be deleted.
            Only applies to "delete" requests. The value "all" will be expanded to
            all datasets applicable to this type. The datasets by applicable to each
            type are: mac (usage, events, traffic), email (users, loginAttempts),
            username (users, loginAttempts), bluetoothMac (client, connectivity),
            smDeviceId (device), smUserId (user)'
          items:
            type: string
          type: array
        username:
          description: The username of a network log in. Only applies to "delete"
            requests.
          type: string
        email:
          description: The email of a network user account. Only applies to "delete"
            requests.
          type: string
        mac:
          description: The MAC of a network client device. Applies to both "restrict
            processing" and "delete" requests.
          type: string
        smDeviceId:
          description: The sm_device_id of a Systems Manager device. The only way
            to "restrict processing" or "delete" a Systems Manager device. Must include
            "device" in the dataset for a "delete" request to destroy the device.
          type: string
        smUserId:
          description: The sm_user_id of a Systems Manager user. The only way to "restrict
            processing" or "delete" a Systems Manager user. Must include "user" in
            the dataset for a "delete" request to destroy the user.
          type: string
      type: object
    inline_object_93:
      example:
        reportingEnabled: true
        collectorIp: 1.2.3.4
        collectorPort: 443
        etaEnabled: true
        etaDstPort: 443
      properties:
        reportingEnabled:
          description: Boolean indicating whether NetFlow traffic reporting is enabled
            (true) or disabled (false).
          type: boolean
        collectorIp:
          description: The IPv4 address of the NetFlow collector.
          type: string
        collectorPort:
          description: The port that the NetFlow collector will be listening on.
          type: integer
        etaEnabled:
          description: Boolean indicating whether Encrypted Traffic Analytics is enabled
            (true) or disabled (false).
          type: boolean
        etaDstPort:
          description: The port that the Encrypted Traffic Analytics collector will
            be listening on.
          type: integer
      type: object
    _networks__networkId__merakiAuthUsers_authorizations_1:
      properties:
        ssidNumber:
          description: Required for wireless networks. The SSID for which the user
            is being authorized, which must be configured for the user's given accountType.
          type: integer
        expiresAt:
          default: Never
          description: Date for authorization to expire. Set to 'Never' for the authorization
            to not expire, which is the default.
          type: string
      type: object
    inline_object_96:
      example:
        name: My Sensor Alert Profile
        schedule:
          id: "5"
        conditions:
        - metric: temperature
          threshold:
            temperature:
              celsius: 20.5
              fahrenheit: 70.0
              quality: good
            humidity:
              relativePercentage: 65
              quality: inadequate
            water:
              present: true
            door:
              open: true
            tvoc:
              concentration: 400
              quality: poor
            pm25:
              concentration: 90
              quality: fair
            noise:
              ambient:
                level: 120
                quality: poor
            indoorAirQuality:
              score: 80
              quality: fair
          direction: above
          duration: 60
        recipients:
          emails:
          - miles@meraki.com
          smsNumbers:
          - +15555555555
          httpServerIds:
          - aHR0cHM6Ly93d3cuZXhhbXBsZS5jb20vd2ViaG9va3M=
        serials:
        - Q234-ABCD-0001
        - Q234-ABCD-0002
        - Q234-ABCD-0003
      properties:
        name:
          description: Name of the sensor alert profile.
          type: string
        schedule:
          $ref: '#/components/schemas/_networks__networkId__sensor_alerts_profiles_schedule_1'
        conditions:
          description: List of conditions that will cause the profile to send an alert.
          items:
            $ref: '#/components/schemas/_networks__networkId__sensor_alerts_profiles_conditions'
          type: array
        recipients:
          $ref: '#/components/schemas/_networks__networkId__sensor_alerts_profiles_recipients'
        serials:
          description: List of device serials assigned to this sensor alert profile.
          items:
            type: string
          type: array
      type: object
    inline_object_95:
      example:
        name: My Sensor Alert Profile
        schedule:
          id: "5"
        conditions:
        - metric: temperature
          threshold:
            temperature:
              celsius: 20.5
              fahrenheit: 70.0
              quality: good
            humidity:
              relativePercentage: 65
              quality: inadequate
            water:
              present: true
            door:
              open: true
            tvoc:
              concentration: 400
              quality: poor
            pm25:
              concentration: 90
              quality: fair
            noise:
              ambient:
                level: 120
                quality: poor
            indoorAirQuality:
              score: 80
              quality: fair
          direction: above
          duration: 60
        recipients:
          emails:
          - miles@meraki.com
          smsNumbers:
          - +15555555555
          httpServerIds:
          - aHR0cHM6Ly93d3cuZXhhbXBsZS5jb20vd2ViaG9va3M=
        serials:
        - Q234-ABCD-0001
        - Q234-ABCD-0002
        - Q234-ABCD-0003
      properties:
        name:
          description: Name of the sensor alert profile.
          type: string
        schedule:
          $ref: '#/components/schemas/_networks__networkId__sensor_alerts_profiles_schedule_1'
        conditions:
          description: List of conditions that will cause the profile to send an alert.
          items:
            $ref: '#/components/schemas/_networks__networkId__sensor_alerts_profiles_conditions'
          type: array
        recipients:
          $ref: '#/components/schemas/_networks__networkId__sensor_alerts_profiles_recipients'
        serials:
          description: List of device serials assigned to this sensor alert profile.
          items:
            type: string
          type: array
      required:
      - conditions
      - name
      type: object
    _organizations__organizationId__actionBatches_actions:
      properties:
        resource:
          description: Unique identifier for the resource to be acted on
          type: string
        operation:
          description: The operation to be used
          type: string
        body:
          description: The body of the action
          properties: {}
          type: object
      required:
      - operation
      - resource
      type: object
    inline_object_98:
      example:
        localStatusPageEnabled: true
        remoteStatusPageEnabled: true
        localStatusPage:
          authentication:
            enabled: false
            password: miles123
        securePort:
          enabled: false
      properties:
        localStatusPageEnabled:
          description: Enables / disables the local device status pages (<a target='_blank'
            href='http://my.meraki.com/'>my.meraki.com, </a><a target='_blank' href='http://ap.meraki.com/'>ap.meraki.com,
            </a><a target='_blank' href='http://switch.meraki.com/'>switch.meraki.com,
            </a><a target='_blank' href='http://wired.meraki.com/'>wired.meraki.com</a>).
            Optional (defaults to false)
          type: boolean
        remoteStatusPageEnabled:
          description: Enables / disables access to the device status page (<a target='_blank'>http://[device's
            LAN IP])</a>. Optional. Can only be set if localStatusPageEnabled is set
            to true
          type: boolean
        localStatusPage:
          $ref: '#/components/schemas/_networks__networkId__settings_localStatusPage'
        securePort:
          $ref: '#/components/schemas/inline_response_200_41_securePort'
      type: object
    inline_object_97:
      example:
        mqttBrokerId: "1234"
        enabled: true
      properties:
        enabled:
          description: Set to true to enable MQTT broker for sensor network
          type: boolean
      required:
      - enabled
      type: object
    inline_object_99:
      example:
        ids:
        - "1284392014819"
        - "2983092129865"
      properties:
        ids:
          description: The ids of the devices to attempt activation lock bypass.
          items:
            type: string
          type: array
      required:
      - ids
      type: object
    _organizations__organizationId__licensing_coterm_licenses_move_licenses:
      properties:
        key:
          description: The license key to move counts from
          type: string
        counts:
          description: The counts to move from the license by model type
          items:
            $ref: '#/components/schemas/_organizations__organizationId__licensing_coterm_licenses_move_counts'
          type: array
      required:
      - counts
      - key
      type: object
    _devices__serial__switch_ports_statuses_securePort_configOverrides:
      description: The configuration overrides applied to this port when Secure Port
        is active.
      example:
        vlan: 7
        voiceVlan: 1
        type: access
        allowedVlans: allowedVlans
      properties:
        type:
          description: The type of the  ('trunk' or 'access').
          enum:
          - access
          - trunk
          type: string
        vlan:
          description: The VLAN of the . A null value will clear the value set for
            trunk ports.
          type: integer
        voiceVlan:
          description: The voice VLAN of the . Only applicable to access ports.
          type: integer
        allowedVlans:
          description: The VLANs allowed on the . Only applicable to trunk ports.
          type: string
      type: object
    _networks__networkId__wireless_ssids__number__localRadius_certificateAuthentication:
      description: The current setting for certificate verification.
      properties:
        enabled:
          description: Whether or not to use EAP-TLS certificate-based authentication
            to validate wireless clients.
          type: boolean
        useLdap:
          description: Whether or not to verify the certificate with LDAP.
          type: boolean
        useOcsp:
          description: Whether or not to verify the certificate with OCSP.
          type: boolean
        ocspResponderUrl:
          description: (Optional) The URL of the OCSP responder to verify client certificate
            status.
          type: string
        clientRootCaCertificate:
          $ref: '#/components/schemas/_networks__networkId__wireless_ssids__number__localRadius_certificateAuthentication_clientRootCaCertificate'
      type: object
    _networks__networkId__wireless_ssids__number__trafficShaping_rules_rules:
      properties:
        definitions:
          description: |2
                A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.
          items:
            $ref: '#/components/schemas/_networks__networkId__appliance_trafficShaping_rules_definitions'
          type: array
        perClientBandwidthLimits:
          $ref: '#/components/schemas/_networks__networkId__appliance_trafficShaping_rules_perClientBandwidthLimits'
        dscpTagValue:
          description: |2
                The DSCP tag applied by your rule. null means 'Do not change DSCP tag'.
                For a list of possible tag values, use the trafficShaping/dscpTaggingOptions endpoint.
          type: integer
        pcpTagValue:
          description: |2
                The PCP tag applied by your rule. Can be 0 (lowest priority) through 7 (highest priority).
                null means 'Do not set PCP tag'.
          type: integer
      required:
      - definitions
      type: object
    _networks__networkId__appliance_trafficShaping_uplinkSelection_failoverAndFailback:
      description: WAN failover and failback behavior
      properties:
        immediate:
          $ref: '#/components/schemas/_networks__networkId__appliance_trafficShaping_uplinkSelection_failoverAndFailback_immediate'
      type: object
    _networks__networkId__appliance_trafficShaping_uplinkSelection_value_1:
      description: Value object of this traffic filter
      properties:
        id:
          description: 'ID of this applicationCategory or application type traffic
            filter. E.g.: "meraki:layer7/category/1", "meraki:layer7/application/4"'
          type: string
        protocol:
          description: 'Protocol of this custom type traffic filter. Must be one of:
            ''tcp'', ''udp'', ''icmp'', ''icmp6'' or ''any'''
          enum:
          - any
          - icmp
          - icmp6
          - tcp
          - udp
          type: string
        source:
          $ref: '#/components/schemas/_networks__networkId__appliance_trafficShaping_uplinkSelection_value_1_source'
        destination:
          $ref: '#/components/schemas/_networks__networkId__appliance_trafficShaping_uplinkSelection_value_1_destination'
      type: object
    inline_response_200_87_guestSponsorship:
      description: Details associated with guest sponsored splash
      example:
        durationInMinutes: 1
        guestCanRequestTimeframe: true
      properties:
        durationInMinutes:
          description: Duration in minutes of sponsored guest authorization.
          type: integer
        guestCanRequestTimeframe:
          description: Whether or not guests can specify how much time they are requesting.
          type: boolean
      type: object
    _devices__serial__switch_routing_interfaces_ospfV3_1:
      description: The OSPFv3 routing settings of the interface.
      properties:
        area:
          description: The OSPFv3 area to which this interface should belong. Can
            be either 'disabled' or the identifier of an           existing OSPFv3
            area. Defaults to 'disabled'.
          type: string
        cost:
          description: The path cost for this interface. Defaults to 1, but can be
            increased up to 65535           to give lower priority.
          type: integer
        isPassiveEnabled:
          description: When enabled, OSPFv3 will not run on the interface, but the
            subnet will still be advertised.
          type: boolean
      type: object
    inline_response_200_87_sentryEnrollment:
      description: Systems Manager sentry enrollment splash settings.
      example:
        strength: click-through
        enforcedSystems:
        - enforcedSystems
        - enforcedSystems
        systemsManagerNetwork:
          id: id
      properties:
        systemsManagerNetwork:
          $ref: '#/components/schemas/inline_response_200_87_sentryEnrollment_systemsManagerNetwork'
        strength:
          description: The strength of the enforcement of selected system types.
          enum:
          - click-through
          - focused
          - strict
          type: string
        enforcedSystems:
          description: The system types that the Sentry enforces.
          items:
            type: string
          type: array
      type: object
    _networks__networkId__alerts_settings_alertDestinations:
      description: A hash of destinations for this specific alert
      properties:
        emails:
          description: A list of emails that will receive information about the alert
          items:
            type: string
          type: array
        allAdmins:
          description: If true, then all network admins will receive emails for this
            alert
          type: boolean
        snmp:
          description: If true, then an SNMP trap will be sent for this alert if there
            is an SNMP trap server configured for this network
          type: boolean
        httpServerIds:
          description: A list of HTTP server IDs to send a Webhook to for this alert
          items:
            type: string
          type: array
      type: object
    _organizations__organizationId__uplinks_statuses_uplinks:
      example:
        primaryDns: primaryDns
        dns2: dns2
        ip: ip
        dns1: dns1
        ipAssignedBy: ipAssignedBy
        signalStat:
          rsrq: rsrq
          rsrp: rsrp
        publicIp: publicIp
        interface: cellular
        connectionType: connectionType
        iccid: iccid
        provider: provider
        signalType: signalType
        secondaryDns: secondaryDns
        gateway: gateway
        apn: apn
        status: active
      properties:
        interface:
          description: Uplink interface
          enum:
          - cellular
          - wan1
          - wan2
          type: string
        status:
          description: Uplink status
          enum:
          - active
          - connecting
          - failed
          - not connected
          - ready
          type: string
        ip:
          description: Uplink IP
          type: string
        gateway:
          description: Gateway IP
          type: string
        publicIp:
          description: Public IP
          type: string
        primaryDns:
          description: Primary DNS IP
          type: string
        secondaryDns:
          description: Secondary DNS IP
          type: string
        ipAssignedBy:
          description: The way in which the IP is assigned
          type: string
        provider:
          description: Network Provider
          type: string
        signalStat:
          $ref: '#/components/schemas/_organizations__organizationId__cellularGateway_uplink_statuses_signalStat'
        connectionType:
          description: Connection Type
          type: string
        apn:
          description: Access Point Name
          type: string
        dns1:
          description: Primary DNS IP
          type: string
        dns2:
          description: Secondary DNS IP
          type: string
        signalType:
          description: Signal Type
          type: string
        iccid:
          description: Integrated Circuit Card Identification Number
          type: string
      type: object
    inline_object_81:
      example:
        stages:
        - group:
            id: "1234"
          milestones:
            scheduledFor: 2018-02-11T00:00:00Z
        reasons:
        - category: performance
          comment: Network was slower with the upgrade
      properties:
        stages:
          description: All completed or in-progress stages in the network with their
            new start times. All pending stages will be canceled
          items:
            $ref: '#/components/schemas/_networks__networkId__firmwareUpgrades_staged_events_stages'
          type: array
        reasons:
          description: The reason for rolling back the staged upgrade
          items:
            $ref: '#/components/schemas/_networks__networkId__firmwareUpgrades_rollbacks_reasons'
          type: array
      required:
      - stages
      type: object
    inline_object_80:
      example:
        products:
          switch:
            nextUpgrade:
              toVersion:
                id: "1234"
        stages:
        - group:
            id: "1234"
          milestones:
            scheduledFor: 2018-02-11T00:00:00Z
      properties:
        products:
          $ref: '#/components/schemas/_networks__networkId__firmwareUpgrades_staged_events_products'
        stages:
          description: All firmware upgrade stages in the network with their start
            time.
          items:
            $ref: '#/components/schemas/_networks__networkId__firmwareUpgrades_staged_events_stages'
          type: array
      required:
      - stages
      type: object
    inline_object_83:
      example:
        name: My Staged Upgrade Group
        description: The description of the group
        isDefault: false
        assignedDevices:
          devices:
          - serial: Q234-ABCD-5678
            name: Device Name
          switchStacks:
          - id: "1234"
            name: Stack Name
      properties:
        name:
          description: Name of the Staged Upgrade Group. Length must be 1 to 255 characters
          type: string
        description:
          description: Description of the Staged Upgrade Group. Length must be 1 to
            255 characters
          type: string
        isDefault:
          description: Boolean indicating the default Group. Any device that does
            not have a group explicitly assigned will upgrade with this group
          type: boolean
        assignedDevices:
          $ref: '#/components/schemas/_networks__networkId__firmwareUpgrades_staged_groups_assignedDevices_1'
      required:
      - isDefault
      - name
      type: object
    inline_object_82:
      example:
        name: My Staged Upgrade Group
        description: The description of the group
        isDefault: false
        assignedDevices:
          devices:
          - serial: Q234-ABCD-5678
            name: Device Name
          switchStacks:
          - id: "1234"
            name: Stack Name
      properties:
        name:
          description: Name of the Staged Upgrade Group. Length must be 1 to 255 characters
          type: string
        description:
          description: Description of the Staged Upgrade Group. Length must be 1 to
            255 characters
          type: string
        isDefault:
          description: Boolean indicating the default Group. Any device that does
            not have a group explicitly assigned will upgrade with this group
          type: boolean
        assignedDevices:
          $ref: '#/components/schemas/_networks__networkId__firmwareUpgrades_staged_groups_assignedDevices_1'
      required:
      - isDefault
      - name
      type: object
    _networks__networkId__switch_stacks__switchStackId__routing_interfaces_ospfSettings:
      description: The OSPF routing settings of the interface.
      properties:
        area:
          description: The OSPF area to which this interface should belong. Can be
            either 'disabled' or the identifier of an existing OSPF area. Defaults
            to 'disabled'.
          type: string
        cost:
          description: The path cost for this interface. Defaults to 1, but can be
            increased up to 65535 to give lower priority.
          type: integer
        isPassiveEnabled:
          description: When enabled, OSPF will not run on the interface, but the subnet
            will still be advertised.
          type: boolean
      type: object
    inline_object_85:
      example:
        name: HQ Floor Plan
        imageContents: Q2lzY28gTWVyYWtp
      properties:
        name:
          description: The name of your floor plan.
          type: string
        center:
          $ref: '#/components/schemas/_networks__networkId__floorPlans_center'
        bottomLeftCorner:
          $ref: '#/components/schemas/_networks__networkId__floorPlans_bottomLeftCorner'
        bottomRightCorner:
          $ref: '#/components/schemas/_networks__networkId__floorPlans_bottomRightCorner'
        topLeftCorner:
          $ref: '#/components/schemas/_networks__networkId__floorPlans_topLeftCorner'
        topRightCorner:
          $ref: '#/components/schemas/_networks__networkId__floorPlans_topRightCorner'
        imageContents:
          description: The file contents (a base 64 encoded string) of your image.
            Supported formats are PNG, GIF, and JPG. Note that all images are saved
            as PNG files, regardless of the format they are uploaded in.
          format: byte
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
      required:
      - imageContents
      - name
      type: object
    _networks__networkId__firmwareUpgrades_products_wireless_nextUpgrade_toVersion:
      description: The version to be updated to
      properties:
        id:
          description: The version ID
          type: string
      type: object
    inline_object_84:
      example:
        _json:
        - group:
            id: "1234"
      properties:
        _json:
          description: Array of Staged Upgrade Groups
          items:
            $ref: '#/components/schemas/_networks__networkId__firmwareUpgrades_staged_stages__json'
          type: array
      type: object
    _networks__networkId__groupPolicies_scheduling_thursday:
      description: The schedule object for Thursday.
      properties:
        active:
          description: Whether the schedule is active (true) or inactive (false) during
            the time specified between 'from' and 'to'. Defaults to true.
          type: boolean
        from:
          description: The time, from '00:00' to '24:00'. Must be less than the time
            specified in 'to'. Defaults to '00:00'. Only 30 minute increments are
            allowed.
          type: string
        to:
          description: The time, from '00:00' to '24:00'. Must be greater than the
            time specified in 'from'. Defaults to '24:00'. Only 30 minute increments
            are allowed.
          type: string
      type: object
    inline_object_87:
      example:
        name: No video streaming
        scheduling:
          enabled: true
          monday:
            active: true
            from: 9:00
            to: 17:00
          tuesday:
            active: true
            from: 9:00
            to: 17:00
          wednesday:
            active: true
            from: 9:00
            to: 17:00
          thursday:
            active: true
            from: 9:00
            to: 17:00
          friday:
            active: true
            from: 9:00
            to: 17:00
          saturday:
            active: false
            from: 0:00
            to: 24:00
          sunday:
            active: false
            from: 0:00
            to: 24:00
        bandwidth:
          settings: custom
          bandwidthLimits:
            limitUp: 1000000
            limitDown: 1000000
        firewallAndTrafficShaping:
          settings: custom
          trafficShapingRules:
          - definitions:
            - type: host
              value: google.com
            - type: port
              value: "9090"
            - type: ipRange
              value: 192.1.0.0
            - type: ipRange
              value: 192.1.0.0/16
            - type: ipRange
              value: 10.1.0.0/16:80
            - type: localNet
              value: 192.168.0.0/16
            perClientBandwidthLimits:
              settings: custom
              bandwidthLimits:
                limitUp: 1000000
                limitDown: 1000000
            dscpTagValue: 0
            pcpTagValue: 0
          l3FirewallRules:
          - comment: Allow TCP traffic to subnet with HTTP servers.
            policy: allow
            protocol: tcp
            destPort: "443"
            destCidr: 192.168.1.0/24
          l7FirewallRules:
          - policy: deny
            type: host
            value: google.com
          - policy: deny
            type: port
            value: "23"
          - policy: deny
            type: ipRange
            value: 10.11.12.00/24
          - policy: deny
            type: ipRange
            value: 10.11.12.00/24:5555
        contentFiltering:
          allowedUrlPatterns:
            settings: network default
            patterns: []
          blockedUrlPatterns:
            settings: append
            patterns:
            - http://www.example.com
            - http://www.betting.com
          blockedUrlCategories:
            settings: override
            categories:
            - meraki:contentFiltering/category/1
            - meraki:contentFiltering/category/7
        splashAuthSettings: bypass
        vlanTagging:
          settings: custom
          vlanId: "1"
        bonjourForwarding:
          settings: custom
          rules:
          - description: A simple bonjour rule
            vlanId: "1"
            services:
            - All Services
      properties:
        name:
          description: The name for your group policy. Required.
          type: string
        scheduling:
          $ref: '#/components/schemas/_networks__networkId__groupPolicies_scheduling'
        bandwidth:
          $ref: '#/components/schemas/_networks__networkId__groupPolicies_bandwidth'
        firewallAndTrafficShaping:
          $ref: '#/components/schemas/_networks__networkId__groupPolicies_firewallAndTrafficShaping'
        contentFiltering:
          $ref: '#/components/schemas/_networks__networkId__groupPolicies_contentFiltering'
        splashAuthSettings:
          description: Whether clients bound to your policy will bypass splash authorization
            or behave according to the network's rules. Can be one of 'network default'
            or 'bypass'. Only available if your network has a wireless configuration.
          enum:
          - bypass
          - network default
          type: string
        vlanTagging:
          $ref: '#/components/schemas/_networks__networkId__groupPolicies_vlanTagging'
        bonjourForwarding:
          $ref: '#/components/schemas/_networks__networkId__groupPolicies_bonjourForwarding'
      required:
      - name
      type: object
    inline_object_86:
      example: {}
      properties:
        name:
          description: The name of your floor plan.
          type: string
        center:
          $ref: '#/components/schemas/_networks__networkId__floorPlans__floorPlanId__center'
        bottomLeftCorner:
          $ref: '#/components/schemas/_networks__networkId__floorPlans_bottomLeftCorner'
        bottomRightCorner:
          $ref: '#/components/schemas/_networks__networkId__floorPlans_bottomRightCorner'
        topLeftCorner:
          $ref: '#/components/schemas/_networks__networkId__floorPlans_topLeftCorner'
        topRightCorner:
          $ref: '#/components/schemas/_networks__networkId__floorPlans_topRightCorner'
        imageContents:
          description: The file contents (a base 64 encoded string) of your new image.
            Supported formats are PNG, GIF, and JPG. Note that all images are saved
            as PNG files, regardless of the format they are uploaded in. If you upload
            a new image, and you do NOT specify any new geolocation fields ('center,
            'topLeftCorner', etc), the floor plan will be recentered with no rotation
            in order to maintain the aspect ratio of your new image.
          format: byte
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
      type: object
    inline_object_89:
      example:
        email: miles@meraki.com
        name: Miles Meraki
        password: secret
        accountType: 802.1X
        emailPasswordToUser: false
        isAdmin: false
        authorizations:
        - ssidNumber: 1
          expiresAt: 2018-03-13T00:00:00.090210Z
      properties:
        email:
          description: Email address of the user
          type: string
        name:
          description: Name of the user. Only required If the user is not a Dashboard
            administrator.
          type: string
        password:
          description: The password for this user account. Only required If the user
            is not a Dashboard administrator.
          type: string
        accountType:
          default: 802.1X
          description: Authorization type for user. Can be 'Guest' or '802.1X' for
            wireless networks, or 'Client VPN' for wired networks. Defaults to '802.1X'.
          enum:
          - 802.1X
          - Client VPN
          - Guest
          type: string
        emailPasswordToUser:
          description: Whether or not Meraki should email the password to user. Default
            is false.
          type: boolean
        isAdmin:
          description: Whether or not the user is a Dashboard administrator.
          type: boolean
        authorizations:
          description: Authorization zones and expiration dates for the user.
          items:
            $ref: '#/components/schemas/_networks__networkId__merakiAuthUsers_authorizations_1'
          type: array
      required:
      - authorizations
      - email
      type: object
    inline_object_88:
      example:
        name: No video streaming
        scheduling:
          enabled: true
          monday:
            active: true
            from: 9:00
            to: 17:00
          tuesday:
            active: true
            from: 9:00
            to: 17:00
          wednesday:
            active: true
            from: 9:00
            to: 17:00
          thursday:
            active: true
            from: 9:00
            to: 17:00
          friday:
            active: true
            from: 9:00
            to: 17:00
          saturday:
            active: false
            from: 0:00
            to: 24:00
          sunday:
            active: false
            from: 0:00
            to: 24:00
        bandwidth:
          settings: custom
          bandwidthLimits:
            limitUp: 1000000
            limitDown: 1000000
        firewallAndTrafficShaping:
          settings: custom
          trafficShapingRules:
          - definitions:
            - type: host
              value: google.com
            - type: port
              value: "9090"
            - type: ipRange
              value: 192.1.0.0
            - type: ipRange
              value: 192.1.0.0/16
            - type: ipRange
              value: 10.1.0.0/16:80
            - type: localNet
              value: 192.168.0.0/16
            perClientBandwidthLimits:
              settings: custom
              bandwidthLimits:
                limitUp: 1000000
                limitDown: 1000000
            dscpTagValue: 0
            pcpTagValue: 0
          l3FirewallRules:
          - comment: Allow TCP traffic to subnet with HTTP servers.
            policy: allow
            protocol: tcp
            destPort: "443"
            destCidr: 192.168.1.0/24
          l7FirewallRules:
          - policy: deny
            type: host
            value: google.com
          - policy: deny
            type: port
            value: "23"
          - policy: deny
            type: ipRange
            value: 10.11.12.00/24
          - policy: deny
            type: ipRange
            value: 10.11.12.00/24:5555
        contentFiltering:
          allowedUrlPatterns:
            settings: network default
            patterns: []
          blockedUrlPatterns:
            settings: append
            patterns:
            - http://www.example.com
            - http://www.betting.com
          blockedUrlCategories:
            settings: override
            categories:
            - meraki:contentFiltering/category/1
            - meraki:contentFiltering/category/7
        splashAuthSettings: bypass
        vlanTagging:
          settings: custom
          vlanId: "1"
        bonjourForwarding:
          settings: custom
          rules:
          - description: A simple bonjour rule
            vlanId: "1"
            services:
            - All Services
      properties:
        name:
          description: The name for your group policy.
          type: string
        scheduling:
          $ref: '#/components/schemas/_networks__networkId__groupPolicies_scheduling'
        bandwidth:
          $ref: '#/components/schemas/_networks__networkId__groupPolicies_bandwidth'
        firewallAndTrafficShaping:
          $ref: '#/components/schemas/_networks__networkId__groupPolicies_firewallAndTrafficShaping'
        contentFiltering:
          $ref: '#/components/schemas/_networks__networkId__groupPolicies_contentFiltering'
        splashAuthSettings:
          description: Whether clients bound to your policy will bypass splash authorization
            or behave according to the network's rules. Can be one of 'network default'
            or 'bypass'. Only available if your network has a wireless configuration.
          enum:
          - bypass
          - network default
          type: string
        vlanTagging:
          $ref: '#/components/schemas/_networks__networkId__groupPolicies_vlanTagging'
        bonjourForwarding:
          $ref: '#/components/schemas/_networks__networkId__groupPolicies_bonjourForwarding'
      type: object
    _networks__networkId__appliance_trafficShaping_uplinkBandwidth_bandwidthLimits_cellular:
      description: The bandwidth settings for the 'cellular' uplink
      properties:
        limitUp:
          description: The maximum upload limit (integer, in Kbps). null indicates
            no limit
          type: integer
        limitDown:
          description: The maximum download limit (integer, in Kbps). null indicates
            no limit
          type: integer
      type: object
    inline_response_200_87_sentryEnrollment_systemsManagerNetwork:
      description: Systems Manager network targeted for sentry enrollment.
      example:
        id: id
      properties:
        id:
          description: The network ID of the Systems Manager network.
          type: string
      type: object
    _organizations_management_details:
      example:
        name: name
        value: value
      properties:
        name:
          description: Name of management data
          type: string
        value:
          description: Value of management data
          type: string
      type: object
    inline_response_200_23_usage:
      description: Usage, sent and received
      example:
        recv: 5.962134
        sent: 1.4658129
      properties:
        sent:
          description: Usage sent by the client
          format: float
          type: number
        recv:
          description: Usage received by the client
          format: float
          type: number
      type: object
    inline_response_200_authentication_api_key:
      description: API key
      example:
        created: true
      properties:
        created:
          description: If API key is created for this user
          type: boolean
      type: object
    inline_object_70:
      example: {}
      properties:
        bandwidthLimits:
          $ref: '#/components/schemas/_networks__networkId__appliance_trafficShaping_uplinkBandwidth_bandwidthLimits_cellular'
      type: object
    inline_object_72:
      example:
        mac: 00:11:22:33:44:55
        devicePolicy: Group policy
        groupPolicyId: "101"
      properties:
        devicePolicy:
          description: The policy to assign. Can be 'Whitelisted', 'Blocked', 'Normal'
            or 'Group policy'. Required.
          type: string
        groupPolicyId:
          description: '[optional] If ''devicePolicy'' is set to ''Group policy''
            this param is used to specify the group policy ID.'
          type: string
      required:
      - devicePolicy
      type: object
    inline_response_200_19_performanceClass:
      description: Performance class setting for uplink preference rule
      example:
        builtinPerformanceClassName: VoIP
        customPerformanceClassId: customPerformanceClassId
        type: builtin
      properties:
        type:
          description: 'Type of this performance class. Must be one of: ''builtin''
            or ''custom'''
          enum:
          - builtin
          - custom
          type: string
        builtinPerformanceClassName:
          description: 'Name of builtin performance class. Must be present when performanceClass
            type is ''builtin'' and value must be one of: ''VoIP'''
          enum:
          - VoIP
          type: string
        customPerformanceClassId:
          description: ID of created custom performance class, must be present when
            performanceClass type is "custom"
          type: string
      required:
      - type
      type: object
    inline_object_71:
      example:
        clients:
        - mac: 00:11:22:33:44:55
          clientId: k74272e
          name: Miles's phone
        devicePolicy: Group policy
        groupPolicyId: "101"
      properties:
        clients:
          description: The array of clients to provision
          items:
            $ref: '#/components/schemas/_networks__networkId__clients_provision_clients'
          type: array
        devicePolicy:
          description: The policy to apply to the specified client. Can be 'Group
            policy', 'Allowed', 'Blocked', 'Per connection' or 'Normal'. Required.
          enum:
          - Allowed
          - Blocked
          - Group policy
          - Normal
          - Per connection
          type: string
        groupPolicyId:
          description: The ID of the desired group policy to apply to the client.
            Required if 'devicePolicy' is set to "Group policy". Otherwise this is
            ignored.
          type: string
        policiesBySecurityAppliance:
          $ref: '#/components/schemas/_networks__networkId__clients_provision_policiesBySecurityAppliance'
        policiesBySsid:
          $ref: '#/components/schemas/_networks__networkId__clients_provision_policiesBySsid'
      required:
      - clients
      - devicePolicy
      type: object
    inline_object_74:
      example:
        serials:
        - Q234-ABCD-0001
        - Q234-ABCD-0002
        - Q234-ABCD-0003
      properties:
        serials:
          description: A list of serials of devices to claim
          items:
            type: string
          type: array
      required:
      - serials
      type: object
    inline_object_73:
      example:
        ssids:
          "0":
            isAuthorized: true
          "2":
            isAuthorized: false
      properties:
        ssids:
          $ref: '#/components/schemas/_networks__networkId__clients__clientId__splashAuthorizationStatus_ssids'
      required:
      - ssids
      type: object
    inline_object_76:
      example:
        serial: Q234-ABCD-5678
      properties:
        serial:
          description: The serial of a device
          type: string
      required:
      - serial
      type: object
    inline_object_75:
      example:
        size: small
      properties:
        size:
          description: 'The size of the vMX you claim. It can be one of: small, medium,
            large, 100'
          enum:
          - "100"
          - large
          - medium
          - small
          type: string
      required:
      - size
      type: object
    inline_object_78:
      example:
        product: switch
        time: 2020-10-21T02:00:00Z
        reasons:
        - category: performance
          comment: Network was slower with the upgrade
        toVersion:
          id: "7857"
      properties:
        product:
          description: Product type to rollback (if the network is a combined network)
          enum:
          - appliance
          - camera
          - cellularGateway
          - switch
          - wireless
          type: string
        time:
          description: Scheduled time for the rollback
          format: date-time
          type: string
        reasons:
          description: Reasons for the rollback
          items:
            $ref: '#/components/schemas/_networks__networkId__firmwareUpgrades_rollbacks_reasons'
          type: array
        toVersion:
          $ref: '#/components/schemas/_networks__networkId__firmwareUpgrades_rollbacks_toVersion'
      required:
      - reasons
      type: object
    inline_response_200_27_products_wireless_availableVersions:
      example:
        releaseDate: 2000-01-23T04:56:07.000+00:00
        releaseType: releaseType
        id: id
        shortName: shortName
        firmware: firmware
      properties:
        id:
          description: Firmware version identifier
          type: string
        firmware:
          description: Name of the firmware version
          type: string
        shortName:
          description: Firmware version short name
          type: string
        releaseType:
          description: Release type of the firmware version
          type: string
        releaseDate:
          description: Release date of the firmware version
          format: date-time
          type: string
      type: object
    inline_object_77:
      example:
        upgradeWindow:
          dayOfWeek: sun
          hourOfDay: 4:00
        timezone: America/Los_Angeles
        products:
          wireless:
            nextUpgrade:
              time: 2019-03-17T17:22:52Z
              toVersion:
                id: "1000"
            participateInNextBetaRelease: false
          appliance:
            nextUpgrade:
              time: 2019-03-17T17:22:52Z
              toVersion:
                id: "1001"
            participateInNextBetaRelease: false
          switch:
            nextUpgrade:
              time: 2019-03-17T17:22:52Z
              toVersion:
                id: "1002"
            participateInNextBetaRelease: false
          camera:
            nextUpgrade:
              time: 2019-03-17T17:22:52Z
              toVersion:
                id: "1003"
            participateInNextBetaRelease: false
          cellularGateway:
            nextUpgrade:
              time: 2019-03-17T17:22:52Z
              toVersion:
                id: "1004"
            participateInNextBetaRelease: false
          sensor:
            nextUpgrade:
              time: 2019-03-17T17:22:52Z
              toVersion:
                id: "1005"
            participateInNextBetaRelease: false
      properties:
        upgradeWindow:
          $ref: '#/components/schemas/inline_response_200_27_upgradeWindow'
        timezone:
          description: The timezone for the network
          type: string
        products:
          $ref: '#/components/schemas/_networks__networkId__firmwareUpgrades_products'
      type: object
    inline_object_79:
      example:
        stages:
        - group:
            id: "1234"
          milestones:
            scheduledFor: 2018-02-11T00:00:00Z
      properties:
        stages:
          description: All firmware upgrade stages in the network with their start
            time.
          items:
            $ref: '#/components/schemas/_networks__networkId__firmwareUpgrades_staged_events_stages'
          type: array
      required:
      - stages
      type: object
    inline_response_200_87_splashPrepaidFront:
      description: The prepaid front image used in the splash page.
      example:
        extension: extension
        md5: md5
      properties:
        md5:
          description: The MD5 value of the prepaid front image file.
          type: string
        extension:
          description: The extension of the prepaid front image file.
          type: string
      type: object
    _networks__networkId__wireless_ssids__number__ldap_serverCaCertificate:
      description: The CA certificate used to sign the LDAP server's key.
      properties:
        contents:
          description: The contents of the CA certificate. Must be in PEM or DER format.
          type: string
      type: object
    _networks__networkId__appliance_trafficShaping_rules_rules:
      properties:
        definitions:
          description: |2
                A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.
          items:
            $ref: '#/components/schemas/_networks__networkId__appliance_trafficShaping_rules_definitions'
          type: array
        perClientBandwidthLimits:
          $ref: '#/components/schemas/_networks__networkId__appliance_trafficShaping_rules_perClientBandwidthLimits'
        dscpTagValue:
          description: |2
                The DSCP tag applied by your rule. null means 'Do not change DSCP tag'.
                For a list of possible tag values, use the trafficShaping/dscpTaggingOptions endpoint.
          type: integer
        priority:
          description: |2
                A string, indicating the priority level for packets bound to your rule.
                Can be 'low', 'normal' or 'high'.
          type: string
      required:
      - definitions
      type: object
    inline_response_200_41_localStatusPage_authentication:
      description: A hash of Local Status page(s)' authentication options applied
        to the Network.
      example:
        enabled: true
        username: username
      properties:
        enabled:
          description: Enables / disables the authentication on Local Status page(s).
          type: boolean
        username:
          description: The username used for Local Status Page(s).
          type: string
      type: object
    inline_object_61:
      example:
        enabled: true
        spareSerial: Q234-ABCD-5678
        uplinkMode: virtual
        virtualIp1: 1.2.3.4
        virtualIp2: 1.2.3.4
      properties:
        enabled:
          description: Enable warm spare
          type: boolean
        spareSerial:
          description: Serial number of the warm spare appliance
          type: string
        uplinkMode:
          description: Uplink mode, either virtual or public
          type: string
        virtualIp1:
          description: The WAN 1 shared IP
          type: string
        virtualIp2:
          description: The WAN 2 shared IP
          type: string
      required:
      - enabled
      type: object
    inline_object_60:
      example:
        mode: spoke
        hubs:
        - hubId: N_4901849
          useDefaultRoute: true
        subnets:
        - localSubnet: 192.168.1.0/24
          useVpn: true
      properties:
        mode:
          description: The site-to-site VPN mode. Can be one of 'none', 'spoke' or
            'hub'
          enum:
          - hub
          - none
          - spoke
          type: string
        hubs:
          description: The list of VPN hubs, in order of preference. In spoke mode,
            at least 1 hub is required.
          items:
            $ref: '#/components/schemas/_networks__networkId__appliance_vpn_siteToSiteVpn_hubs'
          type: array
        subnets:
          description: The list of subnets and their VPN presence.
          items:
            $ref: '#/components/schemas/_networks__networkId__appliance_vpn_siteToSiteVpn_subnets'
          type: array
      required:
      - mode
      type: object
    inline_response_200_41_fips:
      description: A hash of FIPS options applied to the Network
      example:
        enabled: true
      properties:
        enabled:
          description: Enables / disables FIPS on the network.
          type: boolean
      type: object
    inline_response_200_1_interfaces_wan1_vlanTagging:
      description: VLAN tagging settings.
      example:
        vlanId: 0
        enabled: true
      properties:
        enabled:
          description: Whether VLAN tagging is enabled.
          type: boolean
        vlanId:
          description: The ID of the VLAN to use for VLAN tagging.
          type: integer
      type: object
    inline_object_63:
      example:
        name: Sample quality retention profile
      properties:
        name:
          description: The name of the new profile. Must be unique. This parameter
            is required.
          type: string
        motionBasedRetentionEnabled:
          description: Deletes footage older than 3 days in which no motion was detected.
            Can be either true or false. Defaults to false. This setting does not
            apply to MV2 cameras.
          type: boolean
        restrictedBandwidthModeEnabled:
          description: Disable features that require additional bandwidth such as
            Motion Recap. Can be either true or false. Defaults to false. This setting
            does not apply to MV2 cameras.
          type: boolean
        audioRecordingEnabled:
          description: Whether or not to record audio. Can be either true or false.
            Defaults to false.
          type: boolean
        cloudArchiveEnabled:
          description: Create redundant video backup using Cloud Archive. Can be either
            true or false. Defaults to false.
          type: boolean
        motionDetectorVersion:
          description: The version of the motion detector that will be used by the
            camera. Only applies to Gen 2 cameras. Defaults to v2.
          type: integer
        scheduleId:
          description: Schedule for which this camera will record video, or 'null'
            to always record.
          type: string
        maxRetentionDays:
          description: The maximum number of days for which the data will be stored,
            or 'null' to keep data until storage space runs out. If the former, it
            can be one of [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 30, 60, 90] days.
          type: integer
        videoSettings:
          $ref: '#/components/schemas/_networks__networkId__camera_qualityRetentionProfiles_videoSettings'
      required:
      - name
      type: object
    inline_object_62:
      example:
        configTemplateId: N_23952905
        autoBind: false
      properties:
        configTemplateId:
          description: The ID of the template to which the network should be bound.
          type: string
        autoBind:
          description: Optional boolean indicating whether the network's switches
            should automatically bind to profiles of the same model. Defaults to false
            if left unspecified. This option only affects switch networks and switch
            templates. Auto-bind is not valid unless the switch template has at least
            one profile and has at most one profile per switch model.
          type: boolean
      required:
      - configTemplateId
      type: object
    inline_object_65:
      example:
        name: wireless profile A
        ssid:
          name: ssid test
          authMode: 8021x-radius
          encryptionMode: wpa-eap
      properties:
        name:
          description: The name of the camera wireless profile. This parameter is
            required.
          type: string
        ssid:
          $ref: '#/components/schemas/_networks__networkId__camera_wirelessProfiles_ssid'
        identity:
          $ref: '#/components/schemas/_networks__networkId__camera_wirelessProfiles_identity'
      required:
      - name
      - ssid
      type: object
    inline_object_64:
      example: {}
      properties:
        name:
          description: The name of the new profile. Must be unique.
          type: string
        motionBasedRetentionEnabled:
          description: Deletes footage older than 3 days in which no motion was detected.
            Can be either true or false. Defaults to false. This setting does not
            apply to MV2 cameras.
          type: boolean
        restrictedBandwidthModeEnabled:
          description: Disable features that require additional bandwidth such as
            Motion Recap. Can be either true or false. Defaults to false. This setting
            does not apply to MV2 cameras.
          type: boolean
        audioRecordingEnabled:
          description: Whether or not to record audio. Can be either true or false.
            Defaults to false.
          type: boolean
        cloudArchiveEnabled:
          description: Create redundant video backup using Cloud Archive. Can be either
            true or false. Defaults to false.
          type: boolean
        motionDetectorVersion:
          description: The version of the motion detector that will be used by the
            camera. Only applies to Gen 2 cameras. Defaults to v2.
          type: integer
        scheduleId:
          description: Schedule for which this camera will record video, or 'null'
            to always record.
          type: string
        maxRetentionDays:
          description: The maximum number of days for which the data will be stored,
            or 'null' to keep data until storage space runs out. If the former, it
            can be one of [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 30, 60, 90] days.
          type: integer
        videoSettings:
          $ref: '#/components/schemas/_networks__networkId__camera_qualityRetentionProfiles_videoSettings'
      type: object
    inline_object_67:
      example:
        destinations:
        - ip: 8.8.8.8
          description: Google
          default: false
        - ip: 1.23.45.67
          description: test description
          default: true
        - ip: 9.8.7.6
      properties:
        destinations:
          description: The list of connectivity monitoring destinations
          items:
            $ref: '#/components/schemas/_networks__networkId__cellularGateway_connectivityMonitoringDestinations_destinations'
          type: array
      type: object
    _networks__networkId__firmwareUpgrades_staged_groups_assignedDevices:
      description: The devices and Switch Stacks assigned to the Group
      example:
        switchStacks:
        - name: name
          id: id
        - name: name
          id: id
        devices:
        - serial: serial
          name: name
        - serial: serial
          name: name
      properties:
        devices:
          description: Data Array of Devices containing the name and serial
          items:
            $ref: '#/components/schemas/_networks__networkId__firmwareUpgrades_staged_groups_assignedDevices_devices'
          type: array
        switchStacks:
          description: Data Array of Switch Stacks containing the name and id
          items:
            $ref: '#/components/schemas/_networks__networkId__firmwareUpgrades_staged_groups_assignedDevices_switchStacks'
          type: array
      type: object
    inline_object_66:
      example: {}
      properties:
        name:
          description: The name of the camera wireless profile.
          type: string
        ssid:
          $ref: '#/components/schemas/_networks__networkId__camera_wirelessProfiles_ssid'
        identity:
          $ref: '#/components/schemas/_networks__networkId__camera_wirelessProfiles_identity'
      type: object
    inline_object_69:
      example:
        deploymentMode: routed
        cidr: 192.168.0.0/16
        mask: 24
      properties:
        mask:
          description: Mask used for the subnet of all MGs in  this network.
          type: integer
        cidr:
          description: CIDR of the pool of subnets. Each MG in this network will automatically
            pick a subnet from this pool.
          type: string
      type: object
    inline_response_200_19_wanTrafficUplinkPreferences:
      example:
        preferredUplink: wan1
        trafficFilters:
        - type: custom
          value:
            protocol: any
            destination:
              port: port
              cidr: cidr
            source:
              vlan: 0
              port: port
              host: 6
              cidr: cidr
        - type: custom
          value:
            protocol: any
            destination:
              port: port
              cidr: cidr
            source:
              vlan: 0
              port: port
              host: 6
              cidr: cidr
      properties:
        trafficFilters:
          description: Traffic filters
          items:
            $ref: '#/components/schemas/inline_response_200_19_trafficFilters'
          type: array
        preferredUplink:
          description: 'Preferred uplink for uplink preference rule. Must be one of:
            ''wan1'' or ''wan2'''
          enum:
          - wan1
          - wan2
          type: string
      required:
      - preferredUplink
      - trafficFilters
      type: object
    inline_object_68:
      example:
        dhcpLeaseTime: 1 hour
        dnsNameservers: custom
        dnsCustomNameservers:
        - 172.16.2.111
        - 172.16.2.30
      properties:
        dhcpLeaseTime:
          description: DHCP Lease time for all MG of the network. Possible values
            are '30 minutes', '1 hour', '4 hours', '12 hours', '1 day' or '1 week'.
          type: string
        dnsNameservers:
          description: 'DNS name servers mode for all MG of the network. Possible
            values are: ''upstream_dns'', ''google_dns'', ''opendns'', ''custom''.'
          type: string
        dnsCustomNameservers:
          description: list of fixed IPs representing the the DNS Name servers when
            the mode is 'custom'
          items:
            type: string
          type: array
      type: object
    _networks__networkId__wireless_ssids__number__gre:
      description: Ethernet over GRE settings
      properties:
        concentrator:
          $ref: '#/components/schemas/_networks__networkId__wireless_ssids__number__gre_concentrator'
        key:
          description: Optional numerical identifier that will add the GRE key field
            to the GRE header. Used to identify an individual traffic flow within
            a tunnel.
          type: integer
      type: object
    inline_response_201_4_perSsidSettings:
      description: Per-SSID radio settings by number.
      example:
        "11":
          minBitrate: 9
          name: name
          bandSteeringEnabled: true
          bandOperationMode: 2.4ghz
        "12":
          minBitrate: 6
          name: name
          bandSteeringEnabled: true
          bandOperationMode: 2.4ghz
        "13":
          minBitrate: 8
          name: name
          bandSteeringEnabled: true
          bandOperationMode: 2.4ghz
        "14":
          minBitrate: 9
          name: name
          bandSteeringEnabled: true
          bandOperationMode: 2.4ghz
        "0":
          minBitrate: 4
          name: name
          bandSteeringEnabled: true
          bandOperationMode: 2.4ghz
        "1":
          minBitrate: 7
          name: name
          bandSteeringEnabled: true
          bandOperationMode: 2.4ghz
        "2":
          minBitrate: 1
          name: name
          bandSteeringEnabled: true
          bandOperationMode: 2.4ghz
        "3":
          minBitrate: 1
          name: name
          bandSteeringEnabled: true
          bandOperationMode: 2.4ghz
        "4":
          minBitrate: 1
          name: name
          bandSteeringEnabled: true
          bandOperationMode: 2.4ghz
        "5":
          minBitrate: 6
          name: name
          bandSteeringEnabled: true
          bandOperationMode: 2.4ghz
        "6":
          minBitrate: 7
          name: name
          bandSteeringEnabled: true
          bandOperationMode: 2.4ghz
        "7":
          minBitrate: 1
          name: name
          bandSteeringEnabled: true
          bandOperationMode: 2.4ghz
        "8":
          minBitrate: 4
          name: name
          bandSteeringEnabled: true
          bandOperationMode: 2.4ghz
        "9":
          minBitrate: 5
          name: name
          bandSteeringEnabled: true
          bandOperationMode: 2.4ghz
        "10":
          minBitrate: 9
          name: name
          bandSteeringEnabled: true
          bandOperationMode: 2.4ghz
      properties:
        "0":
          $ref: '#/components/schemas/inline_response_201_4_perSsidSettings_0'
        "1":
          $ref: '#/components/schemas/inline_response_201_4_perSsidSettings_1'
        "2":
          $ref: '#/components/schemas/inline_response_201_4_perSsidSettings_2'
        "3":
          $ref: '#/components/schemas/inline_response_201_4_perSsidSettings_3'
        "4":
          $ref: '#/components/schemas/inline_response_201_4_perSsidSettings_4'
        "5":
          $ref: '#/components/schemas/inline_response_201_4_perSsidSettings_5'
        "6":
          $ref: '#/components/schemas/inline_response_201_4_perSsidSettings_6'
        "7":
          $ref: '#/components/schemas/inline_response_201_4_perSsidSettings_7'
        "8":
          $ref: '#/components/schemas/inline_response_201_4_perSsidSettings_8'
        "9":
          $ref: '#/components/schemas/inline_response_201_4_perSsidSettings_9'
        "10":
          $ref: '#/components/schemas/inline_response_201_4_perSsidSettings_10'
        "11":
          $ref: '#/components/schemas/inline_response_201_4_perSsidSettings_11'
        "12":
          $ref: '#/components/schemas/inline_response_201_4_perSsidSettings_12'
        "13":
          $ref: '#/components/schemas/inline_response_201_4_perSsidSettings_13'
        "14":
          $ref: '#/components/schemas/inline_response_201_4_perSsidSettings_14'
      type: object
    _organizations__organizationId__inventory_onboarding_cloudMonitoring_prepare_vty_accessList_vtyIn:
      description: VTY in ACL
      properties:
        name:
          description: Name
          type: string
      type: object
    _networks__networkId__appliance_security_malware_allowedUrls:
      properties:
        url:
          description: The url to allow
          type: string
        comment:
          description: Comment about the allowed entity
          type: string
      required:
      - comment
      - url
      type: object
    _organizations__organizationId__insight_applications_thresholds:
      description: Thresholds defined by a user or Meraki models for each application
      example:
        type: type
        byNetwork:
        - responseDuration: 6
          goodput: 0
          networkId: networkId
        - responseDuration: 6
          goodput: 0
          networkId: networkId
      properties:
        type:
          description: Threshold type (static or smart)
          type: string
        byNetwork:
          description: Threshold for each network
          items:
            $ref: '#/components/schemas/_organizations__organizationId__insight_applications_thresholds_byNetwork'
          type: array
      type: object
    inline_response_200_19_trafficFilters_1:
      example:
        type: application
        value:
          protocol: any
          destination:
            vlan: 5
            port: port
            fqdn: fqdn
            host: 2
            cidr: cidr
            network: network
          id: id
          source:
            vlan: 1
            port: port
            host: 5
            cidr: cidr
            network: network
      properties:
        type:
          description: 'Traffic filter type. Must be one of: ''applicationCategory'',
            ''application'' or ''custom'''
          enum:
          - application
          - applicationCategory
          - custom
          type: string
        value:
          $ref: '#/components/schemas/inline_response_200_19_value_1'
      required:
      - type
      - value
      type: object
    _networks__networkId__webhooks_httpServers_payloadTemplate:
      description: The payload template to use when posting data to the HTTP server.
      example:
        name: name
        payloadTemplateId: payloadTemplateId
      properties:
        payloadTemplateId:
          description: The ID of the payload template.
          type: string
        name:
          description: The name of the payload template.
          type: string
      type: object
    _networks__networkId__wireless_ssids__number__localRadius_passwordAuthentication:
      description: The current setting for password-based authentication.
      properties:
        enabled:
          description: Whether or not to use EAP-TTLS/PAP or PEAP-GTC password-based
            authentication via LDAP lookup.
          type: boolean
      type: object
    _organizations__organizationId__brandingPolicies_customLogo_1:
      description: Properties describing the custom logo attached to the branding
        policy.
      properties:
        enabled:
          description: Whether or not there is a custom logo enabled.
          type: boolean
        image:
          $ref: '#/components/schemas/_organizations__organizationId__brandingPolicies_customLogo_1_image'
      type: object
    _networks__networkId__wireless_ssids__number__ldap_servers:
      properties:
        host:
          description: IP address of your LDAP server.
          type: string
        port:
          description: UDP port the LDAP server listens on.
          type: integer
      required:
      - host
      - port
      type: object
    _networks__networkId__appliance_trafficShaping_uplinkSelection_value_1_source:
      description: Source of this custom type traffic filter
      properties:
        port:
          description: 'E.g.: "any", "0" (also means "any"), "8080", "1-1024"'
          type: string
        cidr:
          description: 'CIDR format address, or "any". E.g.: "192.168.10.0/24",  "192.168.10.1"
            (same as "192.168.10.1/32"), "0.0.0.0/0" (same as "any")'
          type: string
        network:
          description: 'Meraki network ID. Currently only available under a template
            network, and the value should be ID of either same template network, or
            another template network currently. E.g.: "L_12345678".'
          type: string
        vlan:
          description: VLAN ID of the configured VLAN in the Meraki network. Currently
            only available under a template network.
          type: integer
        host:
          description: Host ID in the VLAN, should be used along with 'vlan', and
            not exceed the vlan subnet capacity. Currently only available under a
            template network.
          type: integer
      type: object
    inline_response_200_19_value_1:
      description: Value of traffic filter
      example:
        protocol: any
        destination:
          vlan: 5
          port: port
          fqdn: fqdn
          host: 2
          cidr: cidr
          network: network
        id: id
        source:
          vlan: 1
          port: port
          host: 5
          cidr: cidr
          network: network
      properties:
        id:
          description: ID of 'applicationCategory' or 'application' type traffic filter
          type: string
        protocol:
          description: 'Protocol of ''custom'' type traffic filter. Must be one of:
            ''tcp'', ''udp'', ''icmp'', ''icmp6'' or ''any'''
          enum:
          - any
          - icmp
          - icmp6
          - tcp
          - udp
          type: string
        source:
          $ref: '#/components/schemas/inline_response_200_19_value_1_source'
        destination:
          $ref: '#/components/schemas/inline_response_200_19_value_1_destination'
      type: object
    _networks__networkId__camera_qualityRetentionProfiles_videoSettings_MV63X:
      description: Quality and resolution for MV63X camera models.
      properties:
        quality:
          description: Quality of the camera. Can be one of 'Standard', 'Enhanced'
            or 'High'.
          enum:
          - Enhanced
          - High
          - Standard
          type: string
        resolution:
          description: Resolution of the camera. Can be one of '1920x1080', '2688x1512'
            or '3840x2160'.
          enum:
          - 1920x1080
          - 2688x1512
          - 3840x2160
          type: string
      required:
      - quality
      - resolution
      type: object
    _networks__networkId__health_alerts_scope_network:
      description: Network of the peer
      example:
        name: name
        id: id
      properties:
        name:
          description: Name of the network
          type: string
        id:
          description: Id of the network
          type: string
      type: object
    _networks__networkId__switch_dhcpServerPolicy_arpInspection_trustedServers_ipv4_1:
      description: The IPv4 attributes of the trusted server being added
      properties:
        address:
          description: The IPv4 address of the trusted server being added
          type: string
      type: object
    inline_response_200_authentication_saml:
      description: SAML authentication
      example:
        enabled: true
      properties:
        enabled:
          description: If SAML authentication is enabled for this user
          type: boolean
      type: object
    _networks__networkId__switch_dhcp_v4_servers_seen_device_interface:
      description: Interface attributes of the server. Only for configured servers.
      example:
        name: name
        url: url
      properties:
        name:
          description: Interface name.
          type: string
        url:
          description: Url link to interface.
          type: string
      type: object
    _networks__networkId__wireless_ssids__number__activeDirectory:
      description: The current setting for Active Directory. Only valid if splashPage
        is 'Password-protected with Active Directory'
      properties:
        servers:
          description: The Active Directory servers to be used for authentication.
          items:
            $ref: '#/components/schemas/_networks__networkId__wireless_ssids__number__activeDirectory_servers'
          type: array
        credentials:
          $ref: '#/components/schemas/_networks__networkId__wireless_ssids__number__activeDirectory_credentials'
      type: object
    _organizations__organizationId__sensor_readings_history_water:
      description: Reading for the 'water' metric. This will only be present if the
        'metric' property equals 'water'.
      example:
        present: true
      properties:
        present:
          description: True if water is detected.
          type: boolean
      type: object
    _organizations__organizationId__licensing_coterm_licenses_move_counts:
      properties:
        model:
          description: The license model type to move counts of
          type: string
        count:
          description: The number of counts to move
          type: integer
      required:
      - count
      - model
      type: object
    _networks__networkId__appliance_trafficShaping_rules_perClientBandwidthLimits_bandwidthLimits:
      description: The bandwidth limits object, specifying the upload ('limitUp')
        and download ('limitDown') speed in Kbps. These are only enforced if 'settings'
        is set to 'custom'.
      properties:
        limitUp:
          description: The maximum upload limit (integer, in Kbps).
          type: integer
        limitDown:
          description: The maximum download limit (integer, in Kbps).
          type: integer
      type: object
    _networks__networkId__switch_dhcpServerPolicy_arpInspection_trustedServers__trustedServerId__ipv4:
      description: The updated IPv4 attributes of the trusted server
      properties:
        address:
          description: The updated IPv4 address of the trusted server
          type: string
      type: object
    _networks__networkId__camera_wirelessProfiles_ssid:
      description: The details of the SSID config.
      properties:
        name:
          description: The name of the SSID.
          type: string
        authMode:
          description: The auth mode of the SSID. It can be set to ('psk', '8021x-radius').
          enum:
          - 8021x-radius
          - psk
          type: string
        encryptionMode:
          description: The encryption mode of the SSID. It can be set to ('wpa', 'wpa-eap').
            With 'wpa' mode, the authMode should be 'psk' and with 'wpa-eap' the authMode
            should be '8021x-radius'
          type: string
        psk:
          description: The pre-shared key of the SSID.
          type: string
      type: object
    _organizations__organizationId__inventory_onboarding_cloudMonitoring_prepare_user:
      description: User parameters
      properties:
        username:
          description: The name of the device user for Meraki monitoring
          type: string
      type: object
    _networks__networkId__firmwareUpgrades_rollbacks_toVersion:
      description: Version to downgrade to (if the network has firmware flexibility)
      properties:
        id:
          description: The version ID
          type: string
      type: object
    _organizations__organizationId__inventory_onboarding_cloudMonitoring_prepare_tunnel:
      description: TLS Related Parameters
      properties:
        certificateName:
          description: Name of the configured TLS certificate
          type: string
        name:
          description: Name of the configured TLS tunnel
          type: string
        loopbackNumber:
          description: Number of the configured Loopback Interface used for TLS overlay
          type: integer
        localInterface:
          description: Number of the vlan expected to be used to connect to the cloud
          type: integer
      type: object
    _organizations__organizationId__wireless_devices_ethernet_statuses_ports:
      example:
        linkNegotiation:
          duplex: duplex
          speed: 0
        poe:
          standard: standard
        name: name
      properties:
        name:
          description: Label of the port
          type: string
        poe:
          $ref: '#/components/schemas/_organizations__organizationId__wireless_devices_ethernet_statuses_poe'
        linkNegotiation:
          $ref: '#/components/schemas/_organizations__organizationId__wireless_devices_ethernet_statuses_linkNegotiation'
      type: object
    _networks__networkId__appliance_trafficShaping_uplinkSelection_wanTrafficUplinkPreferences:
      properties:
        trafficFilters:
          description: Array of traffic filters for this uplink preference rule
          items:
            $ref: '#/components/schemas/_networks__networkId__appliance_trafficShaping_uplinkSelection_trafficFilters'
          type: array
        preferredUplink:
          description: 'Preferred uplink for this uplink preference rule. Must be
            one of: ''wan1'' or ''wan2'''
          enum:
          - wan1
          - wan2
          type: string
      required:
      - preferredUplink
      - trafficFilters
      type: object
    inline_response_200_1_interfaces_wan1_svis:
      description: SVI settings by protocol.
      example:
        ipv4:
          address: address
          nameservers:
            addresses:
            - addresses
            - addresses
          assignmentMode: dynamic
          gateway: gateway
        ipv6:
          address: address
          nameservers:
            addresses:
            - addresses
            - addresses
          assignmentMode: dynamic
          gateway: gateway
      properties:
        ipv4:
          $ref: '#/components/schemas/inline_response_200_1_interfaces_wan1_svis_ipv4'
        ipv6:
          $ref: '#/components/schemas/inline_response_200_1_interfaces_wan1_svis_ipv6'
      type: object
    _networks__networkId__sensor_relationships_relationships:
      description: An object describing the relationships defined between the device
        and other devices
      example:
        livestream:
          relatedDevices:
          - serial: serial
            productType: camera
          - serial: serial
            productType: camera
      properties:
        livestream:
          $ref: '#/components/schemas/_devices__serial__sensor_relationships_livestream'
      type: object
    _organizations__organizationId__sensor_readings_history_battery:
      description: Reading for the 'battery' metric. This will only be present if
        the 'metric' property equals 'battery'.
      example:
        percentage: 0
      properties:
        percentage:
          description: Remaining battery life.
          type: integer
      type: object
    _organizations__organizationId__inventory_onboarding_cloudMonitoring_imports_devices:
      properties:
        deviceId:
          description: Import ID from the Import operation
          type: string
        udi:
          description: Device UDI certificate
          type: string
        networkId:
          description: Network Id
          type: string
      required:
      - deviceId
      - networkId
      - udi
      type: object
    _networks__networkId__firmwareUpgrades_products_wireless:
      description: The network device to be updated
      properties:
        nextUpgrade:
          $ref: '#/components/schemas/_networks__networkId__firmwareUpgrades_products_wireless_nextUpgrade'
        participateInNextBetaRelease:
          description: Whether or not the network wants beta firmware
          type: boolean
      type: object
    _networks__networkId__switch_accessPolicies_radius_criticalAuth:
      description: Critical auth settings for when authentication is rejected by the
        RADIUS server
      example:
        dataVlanId: 6
        suspendPortBounce: true
        voiceVlanId: 1
      properties:
        dataVlanId:
          description: VLAN that clients who use data will be placed on when RADIUS
            authentication fails. Will be null if hostMode is Multi-Auth
          type: integer
        voiceVlanId:
          description: VLAN that clients who use voice will be placed on when RADIUS
            authentication fails. Will be null if hostMode is Multi-Auth
          type: integer
        suspendPortBounce:
          description: Enable to suspend port bounce when RADIUS servers are unreachable
          type: boolean
      type: object
    _organizations__organizationId__sensor_readings_history_door:
      description: Reading for the 'door' metric. This will only be present if the
        'metric' property equals 'door'.
      example:
        open: true
      properties:
        open:
          description: True if the door is open.
          type: boolean
      type: object
    _organizations__organizationId__licenses_permanentlyQueuedLicenses:
      example:
        licenseType: licenseType
        licenseKey: licenseKey
        durationInDays: 5
        orderNumber: orderNumber
        id: id
      properties:
        id:
          description: Permanently queued license ID
          type: string
        licenseType:
          description: License type
          type: string
        licenseKey:
          description: License key
          type: string
        orderNumber:
          description: Order number
          type: string
        durationInDays:
          description: The duration of the individual license
          type: integer
      type: object
    _devices__serial__appliance_uplinks_settings_interfaces_wan1:
      description: WAN 1 settings.
      properties:
        enabled:
          description: Enable or disable the interface.
          type: boolean
        vlanTagging:
          $ref: '#/components/schemas/inline_response_200_1_interfaces_wan1_vlanTagging'
        svis:
          $ref: '#/components/schemas/inline_response_200_1_interfaces_wan1_svis'
        pppoe:
          $ref: '#/components/schemas/_devices__serial__appliance_uplinks_settings_interfaces_wan1_pppoe'
      type: object
    _networks__networkId__appliance_trafficShaping_uplinkSelection_value_1_destination:
      description: Destination of this custom type traffic filter
      properties:
        port:
          description: 'E.g.: "any", "0" (also means "any"), "8080", "1-1024"'
          type: string
        cidr:
          description: 'CIDR format address, or "any". E.g.: "192.168.10.0/24",  "192.168.10.1"
            (same as "192.168.10.1/32"), "0.0.0.0/0" (same as "any")'
          type: string
        network:
          description: 'Meraki network ID. Currently only available under a template
            network, and the value should be ID of either same template network, or
            another template network currently. E.g.: "L_12345678".'
          type: string
        vlan:
          description: VLAN ID of the configured VLAN in the Meraki network. Currently
            only available under a template network.
          type: integer
        host:
          description: Host ID in the VLAN, should be used along with 'vlan', and
            not exceed the vlan subnet capacity. Currently only available under a
            template network.
          type: integer
        fqdn:
          description: 'FQDN format address. Currently only availabe in ''destination''
            of ''vpnTrafficUplinkPreference'' object. E.g.: ''www.google.com'''
          type: string
      type: object
    inline_response_200_19_failoverAndFailback_immediate:
      description: Immediate WAN failover and failback
      example:
        enabled: true
      properties:
        enabled:
          description: Whether immediate WAN failover and failback is enabled
          type: boolean
      required:
      - enabled
      type: object
    _networks__networkId__firmwareUpgrades_staged_groups_assignedDevices_devices:
      example:
        serial: serial
        name: name
      properties:
        serial:
          description: Serial of the device
          type: string
        name:
          description: Name of the device
          type: string
      type: object
    _devices__serial__appliance_uplinks_settings_interfaces_wan2:
      description: WAN 2 settings.
      properties:
        enabled:
          description: Enable or disable the interface.
          type: boolean
        vlanTagging:
          $ref: '#/components/schemas/inline_response_200_1_interfaces_wan1_vlanTagging'
        svis:
          $ref: '#/components/schemas/inline_response_200_1_interfaces_wan1_svis'
        pppoe:
          $ref: '#/components/schemas/_devices__serial__appliance_uplinks_settings_interfaces_wan1_pppoe'
      type: object
    _organizations__organizationId__summary_top_devices_byUsage_clients:
      description: Clients
      example:
        counts:
          total: 0
      properties:
        counts:
          $ref: '#/components/schemas/_organizations__organizationId__summary_top_clients_manufacturers_byUsage_clients_counts'
      type: object
    _networks__networkId__switch_accessPolicies_radius:
      description: Object for RADIUS Settings
      example:
        criticalAuth:
          dataVlanId: 6
          suspendPortBounce: true
          voiceVlanId: 1
        failedAuthVlanId: 5
        reAuthenticationInterval: 5
      properties:
        criticalAuth:
          $ref: '#/components/schemas/_networks__networkId__switch_accessPolicies_radius_criticalAuth'
        failedAuthVlanId:
          description: VLAN that clients will be placed on when RADIUS authentication
            fails. Will be null if hostMode is Multi-Auth
          type: integer
        reAuthenticationInterval:
          description: Re-authentication period in seconds. Will be null if hostMode
            is Multi-Auth
          type: integer
      type: object
    _organizations__organizationId__firmware_upgrades_network:
      description: Network of the upgrade
      example:
        name: name
        id: id
      properties:
        id:
          description: ID of network
          type: string
        name:
          description: The network
          type: string
      type: object
    inline_object_10:
      example:
        deviceName: name of the MG
        deviceLanIp: 192.168.0.33
        deviceSubnet: 192.168.0.32/27
        fixedIpAssignments:
        - mac: 0b:00:00:00:00:ac
          name: server 1
          ip: 192.168.0.10
        - mac: 0b:00:00:00:00:ab
          name: server 2
          ip: 192.168.0.20
        reservedIpRanges:
        - start: 192.168.1.0
          end: 192.168.1.1
          comment: A reserved IP range
      properties:
        reservedIpRanges:
          description: list of all reserved IP ranges for a single MG
          items:
            $ref: '#/components/schemas/_devices__serial__cellularGateway_lan_reservedIpRanges'
          type: array
        fixedIpAssignments:
          description: list of all fixed IP assignments for a single MG
          items:
            $ref: '#/components/schemas/_devices__serial__cellularGateway_lan_fixedIpAssignments'
          type: array
      type: object
    inline_object_12:
      example:
        target: 75.75.75.75
        count: 2
      properties:
        target:
          description: FQDN, IPv4 or IPv6 address
          type: string
        count:
          description: Count parameter to pass to ping. [1..5], default 5
          type: integer
      required:
      - target
      type: object
    inline_object_11:
      example:
        rules:
        - lanIp: 172.31.128.5
          name: test
          access: any
          publicPort: 11-12
          localPort: "4"
          uplink: both
          protocol: tcp
        - lanIp: 172.31.128.5
          name: test 2
          access: restricted
          allowedIps:
          - 10.10.10.10
          - 10.10.10.11
          publicPort: "99"
          localPort: "5"
          uplink: both
          protocol: tcp
      properties:
        rules:
          description: An array of port forwarding params
          items:
            $ref: '#/components/schemas/_devices__serial__cellularGateway_portForwardingRules_rules'
          type: array
      type: object
    inline_object_14:
      example:
        wan1:
          wanEnabled: not configured
          usingStaticIp: true
          staticIp: 1.2.3.4
          staticSubnetMask: 255.255.255.0
          staticGatewayIp: 1.2.3.1
          staticDns:
          - 1.2.3.2
          - 1.2.3.3
          vlan: 7
        wan2:
          wanEnabled: enabled
          usingStaticIp: false
          vlan: 2
      properties:
        wan1:
          $ref: '#/components/schemas/_devices__serial__managementInterface_wan1'
        wan2:
          $ref: '#/components/schemas/_devices__serial__managementInterface_wan2'
      type: object
    inline_object_13:
      example:
        count: 3
      properties:
        count:
          description: Count parameter to pass to ping. [1..5], default 5
          type: integer
      type: object
    inline_object_16:
      example:
        ports:
        - "1"
        - 2-5
        - 1_MA-MOD-8X10G_1
        - 1_MA-MOD-8X10G_2-1_MA-MOD-8X10G_8
      properties:
        ports:
          description: List of switch ports
          items:
            type: string
          type: array
      required:
      - ports
      type: object
    _networks__networkId__switch_routing_ospf_md5AuthenticationKey:
      description: MD5 authentication credentials. This param is only relevant if
        md5AuthenticationEnabled is true
      properties:
        id:
          description: MD5 authentication key index. Key index must be between 1 to
            255
          type: integer
        passphrase:
          description: MD5 authentication passphrase
          type: string
      type: object
    inline_object_15:
      example: {}
      properties:
        livestream:
          $ref: '#/components/schemas/_devices__serial__sensor_relationships_livestream_1'
      type: object
    _organizations__organizationId__inventory_onboarding_cloudMonitoring_prepare_configParams_user:
      description: User credentials used to connect to the device
      example:
        publicKey: publicKey
        secret:
          hash: hash
        username: username
      properties:
        publicKey:
          description: The public key for the registered user
          type: string
        username:
          description: The username added to Catalyst device
          type: string
        secret:
          $ref: '#/components/schemas/_organizations__organizationId__inventory_onboarding_cloudMonitoring_prepare_configParams_user_secret'
      type: object
    inline_response_200_9:
      example:
        major: 0
        minor: 6
        uuid: uuid
      properties:
        uuid:
          description: Desired UUID of the beacon. If the value is set to null it
            will reset to Dashboard's automatically generated value.
          type: string
        major:
          description: Desired major value of the beacon. If the value is set to null
            it will reset to Dashboard's automatically generated value.
          type: integer
        minor:
          description: Desired minor value of the beacon. If the value is set to null
            it will reset to Dashboard's automatically generated value.
          type: integer
      type: object
    _networks__networkId__groupPolicies_bonjourForwarding:
      description: The Bonjour settings for your group policy. Only valid if your
        network has a wireless configuration.
      properties:
        settings:
          description: How Bonjour rules are applied. Can be 'network default', 'ignore'
            or 'custom'.
          enum:
          - custom
          - ignore
          - network default
          type: string
        rules:
          description: A list of the Bonjour forwarding rules for your group policy.
            If 'settings' is set to 'custom', at least one rule must be specified.
          items:
            $ref: '#/components/schemas/_networks__networkId__groupPolicies_bonjourForwarding_rules'
          type: array
      type: object
    inline_response_200_5:
      example:
        ports:
        - ports
        - ports
      properties:
        ports:
          description: List of switch ports
          items:
            type: string
          type: array
      type: object
    inline_response_200_6:
      example:
        usageInKb:
          total: 0
          recv: 1
          sent: 6
        warnings:
        - warnings
        - warnings
        duplex: ""
        portId: portId
        trafficInKbps:
          total: 3.6160767
          recv: 4.145608
          sent: 2.027123
        enabled: true
        speed: ""
        cdp:
          managementAddress: managementAddress
          address: address
          capabilities: capabilities
          systemName: systemName
          vtpManagementDomain: vtpManagementDomain
          portId: portId
          deviceId: deviceId
          nativeVlan: 5
          version: version
          platform: platform
        isUplink: true
        securePort:
          configOverrides:
            vlan: 7
            voiceVlan: 1
            type: access
            allowedVlans: allowedVlans
          active: true
          enabled: true
          authenticationStatus: Authentication failure
        clientCount: 7
        errors:
        - errors
        - errors
        lldp:
          managementAddress: managementAddress
          chassisId: chassisId
          systemName: systemName
          portDescription: portDescription
          managementVlan: 5
          systemCapabilities: systemCapabilities
          systemDescription: systemDescription
          portId: portId
          portVlan: 2
        powerUsageInWh: 9.301444
        status: Connected
      properties:
        portId:
          description: The string identifier of this port on the switch. This is commonly
            just the port number but may contain additional identifying information
            such as the slot and module-type if the port is located on a port module.
          type: string
        enabled:
          description: Whether the port is configured to be enabled.
          type: boolean
        status:
          description: The current connection status of the port.
          enum:
          - Connected
          - Disabled
          - Disconnected
          type: string
        isUplink:
          description: Whether the port is the switch's uplink.
          type: boolean
        errors:
          description: All errors present on the port.
          items:
            type: string
          type: array
        warnings:
          description: All warnings present on the port.
          items:
            type: string
          type: array
        speed:
          description: The current data transfer rate which the port is operating
            at.
          enum:
          - ""
          - 1 Gbps
          - 10 Gbps
          - 10 Mbps
          - 100 Gbps
          - 100 Mbps
          - 2.5 Gbps
          - 20 Gbps
          - 40 Gbps
          - 5 Gbps
          type: string
        duplex:
          description: The current duplex of a connected port.
          enum:
          - ""
          - full
          - half
          type: string
        usageInKb:
          $ref: '#/components/schemas/_devices__serial__switch_ports_statuses_usageInKb'
        cdp:
          $ref: '#/components/schemas/_devices__serial__switch_ports_statuses_cdp'
        lldp:
          $ref: '#/components/schemas/_devices__serial__switch_ports_statuses_lldp'
        clientCount:
          description: The number of clients connected through this port.
          type: integer
        powerUsageInWh:
          description: How much power (in watt-hours) has been delivered by this port
            during the timespan.
          format: float
          type: number
        trafficInKbps:
          $ref: '#/components/schemas/_devices__serial__switch_ports_statuses_trafficInKbps'
        securePort:
          $ref: '#/components/schemas/_devices__serial__switch_ports_statuses_securePort'
      type: object
    inline_response_200_7:
      example:
        subnet: subnet
        multicastRouting: multicastRouting
        vlanId: 0
        ospfV3:
          area: area
          cost: 1
          isPassiveEnabled: true
        ipv6:
          address: address
          assignmentMode: assignmentMode
          prefix: prefix
          gateway: gateway
        name: name
        ospfSettings:
          area: area
          cost: 6
          isPassiveEnabled: true
        interfaceId: interfaceId
        defaultGateway: defaultGateway
        interfaceIp: interfaceIp
      properties:
        interfaceId:
          description: The id
          type: string
        name:
          description: The name
          type: string
        subnet:
          description: IPv4 subnet
          type: string
        interfaceIp:
          description: IPv4 address
          type: string
        multicastRouting:
          description: Multicast routing status
          type: string
        vlanId:
          description: VLAN id
          type: integer
        defaultGateway:
          description: IPv4 default gateway
          type: string
        ospfSettings:
          $ref: '#/components/schemas/_devices__serial__switch_routing_interfaces_ospfSettings'
        ospfV3:
          $ref: '#/components/schemas/_devices__serial__switch_routing_interfaces_ospfV3'
        ipv6:
          $ref: '#/components/schemas/_devices__serial__switch_routing_interfaces_ipv6'
      type: object
    inline_response_200_8:
      example:
        advertiseViaOspfEnabled: true
        subnet: subnet
        preferOverOspfRoutesEnabled: true
        name: name
        staticRouteId: staticRouteId
        nextHopIp: nextHopIp
      properties:
        staticRouteId:
          description: The identifier of a layer 3 static route
          type: string
        name:
          description: The name or description of the layer 3 static route
          type: string
        subnet:
          description: The IP address of the subnetwork specified in CIDR notation
            (ex. 1.2.3.0/24)
          type: string
        nextHopIp:
          description: ' The IP address of the router to which traffic for this destination
            network should be sent'
          type: string
        advertiseViaOspfEnabled:
          description: Option to advertise static routes via OSPF
          type: boolean
        preferOverOspfRoutesEnabled:
          description: Option to prefer static routes over OSPF routes
          type: boolean
      required:
      - nextHopIp
      - subnet
      type: object
    _networks__networkId__health_alerts_scope:
      description: The scope of the alert
      example:
        devices:
        - clients:
          - mac: mac
          - mac: mac
          serial: serial
          name: name
          url: url
          productType: productType
          mac: mac
          lldp:
            portId: portId
        - clients:
          - mac: mac
          - mac: mac
          serial: serial
          name: name
          url: url
          productType: productType
          mac: mac
          lldp:
            portId: portId
        peers:
        - url: url
          network:
            name: name
            id: id
        - url: url
          network:
            name: name
            id: id
        applications:
        - name: name
          url: url
        - name: name
          url: url
      properties:
        devices:
          description: Devices related to the alert
          items:
            $ref: '#/components/schemas/_networks__networkId__health_alerts_scope_devices'
          type: array
        applications:
          description: Applications related to the alert
          items:
            $ref: '#/components/schemas/_networks__networkId__health_alerts_scope_applications'
          type: array
        peers:
          description: Peers related to the alert
          items:
            $ref: '#/components/schemas/_networks__networkId__health_alerts_scope_peers'
          type: array
      type: object
    _organizations__organizationId__devices_powerModules_statuses_byDevice_slots:
      example:
        number: 0
        serial: serial
        model: model
        status: connected
      properties:
        number:
          description: 'Which slot the AC power supply occupies. Possible values are:
            0, 1, 2.'
          type: integer
        serial:
          description: The power supply unit serial number.
          type: string
        model:
          description: The power supply unit model.
          type: string
        status:
          description: 'Status of the power supply unit. Possible values are: connected,
            not connected, powering.'
          enum:
          - connected
          - not connected
          - powering
          type: string
      type: object
    inline_response_200_29_group:
      description: The staged upgrade group
      example:
        name: name
        description: description
        id: id
      properties:
        id:
          description: Id of the Staged Upgrade Group
          type: string
        name:
          description: Name of the Staged Upgrade Group
          type: string
        description:
          description: Description of the Staged Upgrade Group
          type: string
      type: object
    inline_response_200_1:
      example:
        interfaces:
          wan2:
            vlanTagging:
              vlanId: 0
              enabled: true
            pppoe:
              enabled: true
              authentication:
                enabled: true
                username: username
            svis:
              ipv4:
                address: address
                nameservers:
                  addresses:
                  - addresses
                  - addresses
                assignmentMode: dynamic
                gateway: gateway
              ipv6:
                address: address
                nameservers:
                  addresses:
                  - addresses
                  - addresses
                assignmentMode: dynamic
                gateway: gateway
            enabled: true
          wan1:
            vlanTagging:
              vlanId: 0
              enabled: true
            pppoe:
              enabled: true
              authentication:
                enabled: true
                username: username
            svis:
              ipv4:
                address: address
                nameservers:
                  addresses:
                  - addresses
                  - addresses
                assignmentMode: dynamic
                gateway: gateway
              ipv6:
                address: address
                nameservers:
                  addresses:
                  - addresses
                  - addresses
                assignmentMode: dynamic
                gateway: gateway
            enabled: true
      properties:
        interfaces:
          $ref: '#/components/schemas/inline_response_200_1_interfaces'
      type: object
    inline_response_200_2:
      example:
        request:
          serial: serial
          count: 0
          target: target
        pingId: pingId
        results:
          loss:
            percentage: 1.4658129
          replies:
          - size: 9
            latency: 3.6160767
            sequenceId: 7
          - size: 9
            latency: 3.6160767
            sequenceId: 7
          latencies:
            average: 5.637377
            maximum: 2.302136
            minimum: 5.962134
          received: 6
          sent: 0
        url: url
        status: status
      properties:
        pingId:
          description: Id to check the status of your ping request.
          type: string
        url:
          description: GET this url to check the status of your ping request.
          type: string
        request:
          $ref: '#/components/schemas/inline_response_201_1_request'
        status:
          description: Status of the ping request.
          type: string
        results:
          $ref: '#/components/schemas/inline_response_200_2_results'
      type: object
    inline_response_200_3:
      example:
        livestream:
          relatedDevices:
          - serial: serial
            productType: camera
          - serial: serial
            productType: camera
      properties:
        livestream:
          $ref: '#/components/schemas/_devices__serial__sensor_relationships_livestream'
      type: object
    inline_response_200_4:
      example:
        stpGuard: bpdu guard
        portScheduleId: portScheduleId
        isolationEnabled: true
        stormControlEnabled: true
        peerSgtCapable: true
        portId: portId
        type: access
        enabled: true
        accessPolicyNumber: 1
        vlan: 0
        rstpEnabled: true
        profile:
          id: id
          enabled: true
          iname: iname
        stickyMacAllowList:
        - stickyMacAllowList
        - stickyMacAllowList
        tags:
        - tags
        - tags
        allowedVlans: allowedVlans
        stickyMacAllowListLimit: 5
        udld: Alert only
        linkNegotiation: linkNegotiation
        flexibleStackingEnabled: true
        linkNegotiationCapabilities:
        - linkNegotiationCapabilities
        - linkNegotiationCapabilities
        macAllowList:
        - macAllowList
        - macAllowList
        voiceVlan: 6
        poeEnabled: true
        name: name
        accessPolicyType: Custom access policy
        adaptivePolicyGroupId: adaptivePolicyGroupId
        daiTrusted: true
      properties:
        portId:
          description: The identifier of the switch port.
          type: string
        name:
          description: The name of the switch port.
          type: string
        tags:
          description: The list of tags of the switch port.
          items:
            type: string
          type: array
        enabled:
          description: The status of the switch port.
          type: boolean
        poeEnabled:
          description: The PoE status of the switch port.
          type: boolean
        type:
          description: The type of the switch port ('trunk' or 'access').
          enum:
          - access
          - trunk
          type: string
        vlan:
          description: The VLAN of the switch port. A null value will clear the value
            set for trunk ports.
          type: integer
        voiceVlan:
          description: The voice VLAN of the switch port. Only applicable to access
            ports.
          type: integer
        allowedVlans:
          description: The VLANs allowed on the switch port. Only applicable to trunk
            ports.
          type: string
        isolationEnabled:
          description: The isolation status of the switch port.
          type: boolean
        rstpEnabled:
          description: The rapid spanning tree protocol status.
          type: boolean
        stpGuard:
          description: The state of the STP guard ('disabled', 'root guard', 'bpdu
            guard' or 'loop guard').
          enum:
          - bpdu guard
          - disabled
          - loop guard
          - root guard
          type: string
        linkNegotiation:
          description: The link speed for the switch port.
          type: string
        linkNegotiationCapabilities:
          description: Available link speeds for the switch port.
          items:
            type: string
          type: array
        portScheduleId:
          description: The ID of the port schedule. A value of null will clear the
            port schedule.
          type: string
        udld:
          description: The action to take when Unidirectional Link is detected (Alert
            only, Enforce). Default configuration is Alert only.
          enum:
          - Alert only
          - Enforce
          type: string
        accessPolicyType:
          description: The type of the access policy of the switch port. Only applicable
            to access ports. Can be one of 'Open', 'Custom access policy', 'MAC allow
            list' or 'Sticky MAC allow list'.
          enum:
          - Custom access policy
          - MAC allow list
          - Open
          - Sticky MAC allow list
          type: string
        accessPolicyNumber:
          description: The number of a custom access policy to configure on the switch
            port. Only applicable when 'accessPolicyType' is 'Custom access policy'.
          type: integer
        macAllowList:
          description: Only devices with MAC addresses specified in this list will
            have access to this port. Up to 20 MAC addresses can be defined. Only
            applicable when 'accessPolicyType' is 'MAC allow list'.
          items:
            type: string
          type: array
        stickyMacAllowList:
          description: The initial list of MAC addresses for sticky Mac allow list.
            Only applicable when 'accessPolicyType' is 'Sticky MAC allow list'.
          items:
            type: string
          type: array
        stickyMacAllowListLimit:
          description: The maximum number of MAC addresses for sticky MAC allow list.
            Only applicable when 'accessPolicyType' is 'Sticky MAC allow list'.
          type: integer
        stormControlEnabled:
          description: The storm control status of the switch port.
          type: boolean
        adaptivePolicyGroupId:
          description: The adaptive policy group ID that will be used to tag traffic
            through this switch port. This ID must pre-exist during the configuration,
            else needs to be created using adaptivePolicy/groups API. Cannot be applied
            to a port on a switch bound to profile.
          type: string
        peerSgtCapable:
          description: If true, Peer SGT is enabled for traffic through this switch
            port. Applicable to trunk port only, not access port. Cannot be applied
            to a port on a switch bound to profile.
          type: boolean
        flexibleStackingEnabled:
          description: For supported switches (e.g. MS420/MS425), whether or not the
            port has flexible stacking enabled.
          type: boolean
        daiTrusted:
          description: If true, ARP packets for this port will be considered trusted,
            and Dynamic ARP Inspection will allow the traffic.
          type: boolean
        profile:
          $ref: '#/components/schemas/_devices__serial__switch_ports_profile'
      type: object
    _devices__serial__cellular_sims_authentication:
      description: APN authentication configurations.
      properties:
        type:
          default: none
          description: APN auth type.
          enum:
          - chap
          - none
          - pap
          type: string
        username:
          description: APN username, if type is set.
          type: string
        password:
          description: APN password, if type is set (if APN password is not supplied,
            the password is left unchanged).
          type: string
      type: object
    _networks__networkId__clients_provision_policiesBySsid:
      description: An object, describing the policy-connection associations for each
        active SSID within the network. Keys should be the number of enabled SSIDs,
        mapping to an object describing the client's policy
      properties:
        "0":
          $ref: '#/components/schemas/_networks__networkId__clients_provision_policiesBySsid_0'
        "1":
          $ref: '#/components/schemas/_networks__networkId__clients_provision_policiesBySsid_0'
        "2":
          $ref: '#/components/schemas/_networks__networkId__clients_provision_policiesBySsid_0'
        "3":
          $ref: '#/components/schemas/_networks__networkId__clients_provision_policiesBySsid_0'
        "4":
          $ref: '#/components/schemas/_networks__networkId__clients_provision_policiesBySsid_0'
        "5":
          $ref: '#/components/schemas/_networks__networkId__clients_provision_policiesBySsid_0'
        "6":
          $ref: '#/components/schemas/_networks__networkId__clients_provision_policiesBySsid_0'
        "7":
          $ref: '#/components/schemas/_networks__networkId__clients_provision_policiesBySsid_0'
        "8":
          $ref: '#/components/schemas/_networks__networkId__clients_provision_policiesBySsid_0'
        "9":
          $ref: '#/components/schemas/_networks__networkId__clients_provision_policiesBySsid_0'
        "10":
          $ref: '#/components/schemas/_networks__networkId__clients_provision_policiesBySsid_0'
        "11":
          $ref: '#/components/schemas/_networks__networkId__clients_provision_policiesBySsid_0'
        "12":
          $ref: '#/components/schemas/_networks__networkId__clients_provision_policiesBySsid_0'
        "13":
          $ref: '#/components/schemas/_networks__networkId__clients_provision_policiesBySsid_0'
        "14":
          $ref: '#/components/schemas/_networks__networkId__clients_provision_policiesBySsid_0'
      type: object
    inline_response_200_11:
      example:
        organizationId: organizationId
        isBoundToConfigTemplate: true
        notes: notes
        name: name
        timeZone: timeZone
        productTypes:
        - productTypes
        - productTypes
        id: id
        enrollmentString: enrollmentString
        url: url
        tags:
        - tags
        - tags
      properties:
        id:
          description: Network ID
          type: string
        organizationId:
          description: Organization ID
          type: string
        name:
          description: Network name
          type: string
        productTypes:
          description: List of the product types that the network supports
          items:
            type: string
          type: array
        timeZone:
          description: Timezone of the network
          type: string
        tags:
          description: Network tags
          items:
            type: string
          type: array
        enrollmentString:
          description: Enrollment string for the network
          type: string
        url:
          description: URL to the network Dashboard UI
          type: string
        notes:
          description: Notes for the network
          type: string
        isBoundToConfigTemplate:
          description: If the network is bound to a config template
          type: boolean
      type: object
    _organizations__organizationId__sensor_readings_history_tvoc:
      description: Reading for the 'tvoc' metric. This will only be present if the
        'metric' property equals 'tvoc'.
      example:
        concentration: 9
      properties:
        concentration:
          description: TVOC reading in micrograms per cubic meter.
          type: integer
      type: object
    inline_response_200_10:
      example:
        connectionStats:
          auth: 6
          success: 5
          dns: 5
          assoc: 0
          dhcp: 1
        serial: serial
      properties:
        serial:
          description: The serial number for the device
          type: string
        connectionStats:
          $ref: '#/components/schemas/inline_response_200_10_connectionStats'
      type: object
    inline_response_200_16_ipv6:
      description: IPv6 configuration on the single LAN
      example:
        prefixAssignments:
        - staticPrefix: staticPrefix
          origin:
            interfaces:
            - interfaces
            - interfaces
            type: independent
          autonomous: true
          staticApplianceIp6: staticApplianceIp6
        - staticPrefix: staticPrefix
          origin:
            interfaces:
            - interfaces
            - interfaces
            type: independent
          autonomous: true
          staticApplianceIp6: staticApplianceIp6
        enabled: true
      properties:
        enabled:
          description: Enable IPv6 on single LAN
          type: boolean
        prefixAssignments:
          description: Prefix assignments on the single LAN
          items:
            $ref: '#/components/schemas/inline_response_200_16_ipv6_prefixAssignments'
          type: array
      type: object
    inline_response_200_13:
      example:
        number: 0
        vlan: 6
        dropUntaggedTraffic: true
        accessPolicy: accessPolicy
        type: type
        enabled: true
        allowedVlans: allowedVlans
      properties:
        number:
          description: Number of the port
          type: integer
        enabled:
          description: The status of the port
          type: boolean
        type:
          description: 'The type of the port: ''access'' or ''trunk''.'
          type: string
        dropUntaggedTraffic:
          description: Whether the trunk port can drop all untagged traffic.
          type: boolean
        vlan:
          description: Native VLAN when the port is in Trunk mode. Access VLAN when
            the port is in Access mode.
          type: integer
        allowedVlans:
          description: Comma-delimited list of the VLAN ID's allowed on the port,
            or 'all' to permit all VLAN's on the port.
          type: string
        accessPolicy:
          description: The name of the policy. Only applicable to Access ports.
          type: string
      type: object
    inline_response_200_12:
      example:
        alertTypeId: alertTypeId
        occurredAt: occurredAt
        alertType: alertType
        destinations:
          webhook:
            sentAt: sentAt
          sms:
            sentAt: sentAt
          email:
            sentAt: sentAt
          push:
            sentAt: sentAt
        alertData: '{}'
        device:
          serial: serial
      properties:
        occurredAt:
          description: time when the event occurred
          type: string
        alertTypeId:
          description: type of alert
          type: string
        alertType:
          description: user friendly alert type
          type: string
        device:
          $ref: '#/components/schemas/_networks__networkId__alerts_history_device'
        destinations:
          $ref: '#/components/schemas/_networks__networkId__alerts_history_destinations'
        alertData:
          description: relevant data about the event that caused the alert
          properties: {}
          type: object
      type: object
    _organizations__organizationId__samlRoles_networks:
      properties:
        id:
          description: The network ID
          type: string
        access:
          description: The privilege of the SAML administrator on the network. Can
            be one of 'full', 'read-only', 'guest-ambassador', 'monitor-only' or 'ssid-admin'
          enum:
          - full
          - guest-ambassador
          - monitor-only
          - read-only
          - ssid-admin
          type: string
      required:
      - access
      - id
      type: object
    _organizations__organizationId__brandingPolicies_adminSettings:
      description: Settings for describing which kinds of admins this policy applies
        to.
      example:
        values:
        - values
        - values
        appliesTo: All SAML admins
      properties:
        appliesTo:
          description: Which kinds of admins this policy applies to. Can be one of
            'All organization admins', 'All enterprise admins', 'All network admins',
            'All admins of networks...', 'All admins of networks tagged...', 'Specific
            admins...', 'All admins' or 'All SAML admins'.
          enum:
          - All SAML admins
          - All admins
          - All admins of networks tagged...
          - All admins of networks...
          - All enterprise admins
          - All network admins
          - All organization admins
          - Specific admins...
          type: string
        values:
          description: |2
                  If 'appliesTo' is set to one of 'Specific admins...', 'All admins of networks...' or 'All admins of networks tagged...', then you must specify this 'values' property to provide the set of
                  entities to apply the branding policy to. For 'Specific admins...', specify an array of admin IDs. For 'All admins of
                  networks...', specify an array of network IDs and/or configuration template IDs. For 'All admins of networks tagged...',
                  specify an array of tag names.
          items:
            type: string
          type: array
      type: object
    inline_response_200_19:
      example:
        wanTrafficUplinkPreferences:
        - preferredUplink: wan1
          trafficFilters:
          - type: custom
            value:
              protocol: any
              destination:
                port: port
                cidr: cidr
              source:
                vlan: 0
                port: port
                host: 6
                cidr: cidr
          - type: custom
            value:
              protocol: any
              destination:
                port: port
                cidr: cidr
              source:
                vlan: 0
                port: port
                host: 6
                cidr: cidr
        - preferredUplink: wan1
          trafficFilters:
          - type: custom
            value:
              protocol: any
              destination:
                port: port
                cidr: cidr
              source:
                vlan: 0
                port: port
                host: 6
                cidr: cidr
          - type: custom
            value:
              protocol: any
              destination:
                port: port
                cidr: cidr
              source:
                vlan: 0
                port: port
                host: 6
                cidr: cidr
        loadBalancingEnabled: true
        activeActiveAutoVpnEnabled: true
        vpnTrafficUplinkPreferences:
        - preferredUplink: bestForVoIP
          trafficFilters:
          - type: application
            value:
              protocol: any
              destination:
                vlan: 5
                port: port
                fqdn: fqdn
                host: 2
                cidr: cidr
                network: network
              id: id
              source:
                vlan: 1
                port: port
                host: 5
                cidr: cidr
                network: network
          - type: application
            value:
              protocol: any
              destination:
                vlan: 5
                port: port
                fqdn: fqdn
                host: 2
                cidr: cidr
                network: network
              id: id
              source:
                vlan: 1
                port: port
                host: 5
                cidr: cidr
                network: network
          failOverCriterion: poorPerformance
          performanceClass:
            builtinPerformanceClassName: VoIP
            customPerformanceClassId: customPerformanceClassId
            type: builtin
        - preferredUplink: bestForVoIP
          trafficFilters:
          - type: application
            value:
              protocol: any
              destination:
                vlan: 5
                port: port
                fqdn: fqdn
                host: 2
                cidr: cidr
                network: network
              id: id
              source:
                vlan: 1
                port: port
                host: 5
                cidr: cidr
                network: network
          - type: application
            value:
              protocol: any
              destination:
                vlan: 5
                port: port
                fqdn: fqdn
                host: 2
                cidr: cidr
                network: network
              id: id
              source:
                vlan: 1
                port: port
                host: 5
                cidr: cidr
                network: network
          failOverCriterion: poorPerformance
          performanceClass:
            builtinPerformanceClassName: VoIP
            customPerformanceClassId: customPerformanceClassId
            type: builtin
        failoverAndFailback:
          immediate:
            enabled: true
        defaultUplink: wan1
      properties:
        activeActiveAutoVpnEnabled:
          description: Whether active-active AutoVPN is enabled
          type: boolean
        defaultUplink:
          description: 'The default uplink. Must be one of: ''wan1'' or ''wan2'''
          enum:
          - wan1
          - wan2
          type: string
        loadBalancingEnabled:
          description: Whether load balancing is enabled
          type: boolean
        failoverAndFailback:
          $ref: '#/components/schemas/inline_response_200_19_failoverAndFailback'
        wanTrafficUplinkPreferences:
          description: Uplink preference rules for WAN traffic
          items:
            $ref: '#/components/schemas/inline_response_200_19_wanTrafficUplinkPreferences'
          type: array
        vpnTrafficUplinkPreferences:
          description: Uplink preference rules for VPN traffic
          items:
            $ref: '#/components/schemas/inline_response_200_19_vpnTrafficUplinkPreferences'
          type: array
      type: object
    _organizations_cloud:
      description: Data for this organization
      example:
        region:
          name: name
      properties:
        region:
          $ref: '#/components/schemas/_organizations_cloud_region'
      type: object
    inline_response_200_18:
      example:
        bandwidthLimits:
          cellular:
            limitUp: 5
            limitDown: 2
          wan2:
            limitUp: 1
            limitDown: 5
          wan1:
            limitUp: 0
            limitDown: 6
      properties:
        bandwidthLimits:
          $ref: '#/components/schemas/inline_response_200_18_bandwidthLimits'
      type: object
    inline_response_200_15:
      example:
        deploymentMode: passthrough
        dynamicDns:
          prefix: prefix
          enabled: true
          url: url
        clientTrackingMethod: IP address
      properties:
        clientTrackingMethod:
          description: Client tracking method of a network
          enum:
          - IP address
          - MAC address
          - Unique client identifier
          type: string
        deploymentMode:
          description: Deployment mode of a network
          enum:
          - passthrough
          - routed
          type: string
        dynamicDns:
          $ref: '#/components/schemas/inline_response_200_15_dynamicDns'
      type: object
    inline_response_200_14:
      example:
        staticDelegatedPrefixId: staticDelegatedPrefixId
        createdAt: 2000-01-23T04:56:07.000+00:00
        prefix: prefix
        origin:
          interfaces:
          - interfaces
          - interfaces
          type: type
        description: description
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        staticDelegatedPrefixId:
          description: Static delegated prefix id.
          type: string
        prefix:
          description: IPv6 prefix/prefix length.
          type: string
        origin:
          $ref: '#/components/schemas/_networks__networkId__appliance_prefixes_delegated_statics_origin'
        description:
          description: Identifying description for the prefix.
          type: string
        createdAt:
          description: Prefix creation time.
          format: date-time
          type: string
        updatedAt:
          description: Prefix Updated time.
          format: date-time
          type: string
      type: object
    inline_response_200_17:
      example:
        authMode: authMode
        number: 0
        visible: true
        encryptionMode: encryptionMode
        name: name
        radiusServers:
        - port: 1
          host: host
        - port: 1
          host: host
        wpaEncryptionMode: wpaEncryptionMode
        enabled: true
        defaultVlanId: 6
      properties:
        number:
          description: The number of the SSID.
          type: integer
        name:
          description: The name of the SSID.
          type: string
        enabled:
          description: Whether or not the SSID is enabled.
          type: boolean
        defaultVlanId:
          description: The VLAN ID of the VLAN associated to this SSID.
          type: integer
        authMode:
          description: The association control method for the SSID.
          type: string
        radiusServers:
          description: The RADIUS 802.1x servers to be used for authentication.
          items:
            $ref: '#/components/schemas/_networks__networkId__appliance_ssids_radiusServers'
          type: array
        encryptionMode:
          description: The psk encryption mode for the SSID.
          type: string
        wpaEncryptionMode:
          description: WPA encryption mode for the SSID.
          type: string
        visible:
          description: Boolean indicating whether the MX should advertise or hide
            this SSID.
          type: boolean
      type: object
    inline_response_200_16:
      example:
        mandatoryDhcp:
          enabled: true
        subnet: subnet
        ipv6:
          prefixAssignments:
          - staticPrefix: staticPrefix
            origin:
              interfaces:
              - interfaces
              - interfaces
              type: independent
            autonomous: true
            staticApplianceIp6: staticApplianceIp6
          - staticPrefix: staticPrefix
            origin:
              interfaces:
              - interfaces
              - interfaces
              type: independent
            autonomous: true
            staticApplianceIp6: staticApplianceIp6
          enabled: true
        applianceIp: applianceIp
      properties:
        subnet:
          description: The subnet of the single LAN
          type: string
        applianceIp:
          description: The local IP of the appliance on the single LAN
          type: string
        mandatoryDhcp:
          $ref: '#/components/schemas/inline_response_200_16_mandatoryDhcp'
        ipv6:
          $ref: '#/components/schemas/inline_response_200_16_ipv6'
      type: object
    _networks__networkId__floorPlans_bottomLeftCorner:
      description: The longitude and latitude of the bottom left corner of your floor
        plan.
      properties:
        lat:
          description: Latitude
          format: float
          type: number
        lng:
          description: Longitude
          format: float
          type: number
      type: object
    _networks__networkId__switch_dhcp_v4_servers_seen_lastPacket_ip:
      description: Additional IP attributes of the packet.
      example:
        protocol: 7
        dscp:
          ecn: 2
          tag: 3
        headerLength: 2
        length: 5
        id: id
        version: 5
        ttl: 9
      properties:
        id:
          description: IP ID of the packet.
          type: string
        version:
          description: IP version of the packet.
          type: integer
        length:
          description: IP length of the packet.
          type: integer
        headerLength:
          description: IP header length of the packet.
          type: integer
        protocol:
          description: IP protocol number of the packet.
          type: integer
        ttl:
          description: Time to live of the packet.
          type: integer
        dscp:
          $ref: '#/components/schemas/_networks__networkId__switch_dhcp_v4_servers_seen_lastPacket_ip_dscp'
      type: object
    _networks__networkId__sensor_relationships_device:
      description: A sensor or gateway device in the network
      example:
        serial: serial
        name: name
        productType: camera
      properties:
        name:
          description: The name of the device
          type: string
        serial:
          description: The serial of the device
          type: string
        productType:
          description: The product type of the device
          enum:
          - camera
          - sensor
          type: string
      type: object
    _networks__networkId__webhooks_httpServers_payloadTemplate_1:
      description: The payload template to use when posting data to the HTTP server.
      properties:
        payloadTemplateId:
          description: 'The ID of the payload template. Defaults to ''wpt_00001''
            for the Meraki template. For Meraki-included templates: for the Webex
            (included) template use ''wpt_00002''; for the Slack (included) template
            use ''wpt_00003''; for the Microsoft Teams (included) template use ''wpt_00004'';
            for the ServiceNow (included) template use ''wpt_00006'''
          type: string
        name:
          description: The name of the payload template.
          type: string
      type: object
    _organizations__organizationId__adaptivePolicy_acls_rules:
      example:
        protocol: protocol
        dstPort: dstPort
        srcPort: srcPort
        policy: policy
      properties:
        policy:
          description: '''allow'' or ''deny'' traffic specified by this rule'
          type: string
        protocol:
          description: The type of protocol
          type: string
        srcPort:
          description: Source port
          type: string
        dstPort:
          description: Destination port
          type: string
      type: object
    _networks__networkId__switch_dhcp_v4_servers_seen_lastAck_ipv4:
      description: IPv4 attributes of the last ack.
      example:
        address: address
      properties:
        address:
          description: IPv4 address of the last ack.
          type: string
      type: object
    _devices__serial__cellular_sims_apns:
      properties:
        name:
          description: APN name.
          type: string
        allowedIpTypes:
          description: IP versions to support (permitted values include 'ipv4', 'ipv6').
          items:
            type: string
          type: array
        authentication:
          $ref: '#/components/schemas/_devices__serial__cellular_sims_authentication'
      required:
      - allowedIpTypes
      - name
      type: object
    _organizations__organizationId__summary_top_clients_manufacturers_byUsage_usage:
      description: Clients usage
      example:
        total: 6.0274563
        upstream: 1.4658129
        downstream: 5.962134
      properties:
        total:
          description: Total data usage by client
          format: float
          type: number
        upstream:
          description: Upstream data usage by client
          format: float
          type: number
        downstream:
          description: Downstream data usage by client
          format: float
          type: number
      type: object
    _networks__networkId__switch_stp_stpBridgePriority:
      properties:
        switchProfiles:
          description: List of switch profile IDs
          items:
            type: string
          type: array
        switches:
          description: List of switch serial numbers
          items:
            type: string
          type: array
        stacks:
          description: List of stack IDs
          items:
            type: string
          type: array
        stpPriority:
          description: STP priority for switch, stacks, or switch profiles
          type: integer
      required:
      - stpPriority
      type: object
    inline_object:
      example:
        name: My AP
        lat: 37.4180951010362
        lng: -122.098531723022
        serial: Q234-ABCD-5678
        mac: 00:11:22:33:44:55
        tags:
        - recently-added
      properties:
        name:
          description: The name of a device
          type: string
        tags:
          description: The list of tags of a device
          items:
            type: string
          type: array
        lat:
          description: The latitude of a device
          format: float
          type: number
        lng:
          description: The longitude of a device
          format: float
          type: number
        address:
          description: The address of a device
          type: string
        notes:
          description: The notes for the device. String. Limited to 255 characters.
          type: string
        moveMapMarker:
          description: Whether or not to set the latitude and longitude of a device
            based on the new address. Only applies when lat and lng are not specified.
          type: boolean
        switchProfileId:
          description: The ID of a switch profile to bind to the device (for available
            switch profiles, see the 'Switch Profiles' endpoint). Use null to unbind
            the switch device from the current profile. For a device to be bindable
            to a switch profile, it must (1) be a switch, and (2) belong to a network
            that is bound to a configuration template.
          type: string
        floorPlanId:
          description: The floor plan to associate to this device. null disassociates
            the device from the floorplan.
          type: string
      type: object
    _networks__networkId__wireless_billing_bandwidthLimits:
      description: The uplink bandwidth settings for the pricing plan.
      properties:
        limitUp:
          description: The maximum upload limit (integer, in Kbps). null indicates
            no limit
          type: integer
        limitDown:
          description: The maximum download limit (integer, in Kbps). null indicates
            no limit
          type: integer
      type: object
    _networks__networkId__groupPolicies_firewallAndTrafficShaping:
      description: |2
            The firewall and traffic shaping rules and settings for your policy.
      properties:
        settings:
          description: How firewall and traffic shaping rules are enforced. Can be
            'network default', 'ignore' or 'custom'.
          enum:
          - custom
          - ignore
          - network default
          type: string
        trafficShapingRules:
          description: |2
                An array of traffic shaping rules. Rules are applied in the order that
                they are specified in. An empty list (or null) means no rules. Note that
                you are allowed a maximum of 8 rules.
          items:
            $ref: '#/components/schemas/_networks__networkId__groupPolicies_firewallAndTrafficShaping_trafficShapingRules'
          type: array
        l3FirewallRules:
          description: An ordered array of the L3 firewall rules
          items:
            $ref: '#/components/schemas/_networks__networkId__groupPolicies_firewallAndTrafficShaping_l3FirewallRules'
          type: array
        l7FirewallRules:
          description: An ordered array of L7 firewall rules
          items:
            $ref: '#/components/schemas/_networks__networkId__groupPolicies_firewallAndTrafficShaping_l7FirewallRules'
          type: array
      type: object
    _networks__networkId__switch_dhcp_v4_servers_seen_lastPacket_source_ipv4:
      description: Source ipv4 attributes of the packet.
      example:
        address: address
      properties:
        address:
          description: Source ipv4 address of the packet.
          type: string
      type: object
    _networks__networkId__switch_routing_multicast_overrides:
      properties:
        switchProfiles:
          description: List of switch profiles ids for template network
          items:
            type: string
          type: array
        switches:
          description: List of switch serials for non-template network
          items:
            type: string
          type: array
        stacks:
          description: List of switch stack ids for non-template network
          items:
            type: string
          type: array
        igmpSnoopingEnabled:
          description: IGMP snooping setting for switches, switch stacks or switch
            profiles
          type: boolean
        floodUnknownMulticastTrafficEnabled:
          description: Flood unknown multicast traffic setting for switches, switch
            stacks or switch profiles
          type: boolean
      required:
      - floodUnknownMulticastTrafficEnabled
      - igmpSnoopingEnabled
      type: object
    inline_object_138:
      example:
        broadcastThreshold: 30
        multicastThreshold: 30
        unknownUnicastThreshold: 30
      properties:
        broadcastThreshold:
          description: Percentage (1 to 99) of total available port bandwidth for
            broadcast traffic type. Default value 100 percent rate is to clear the
            configuration.
          type: integer
        multicastThreshold:
          description: Percentage (1 to 99) of total available port bandwidth for
            multicast traffic type. Default value 100 percent rate is to clear the
            configuration.
          type: integer
        unknownUnicastThreshold:
          description: Percentage (1 to 99) of total available port bandwidth for
            unknown unicast (dlf-destination lookup failure) traffic type. Default
            value 100 percent rate is to clear the configuration.
          type: integer
      type: object
    inline_object_139:
      example:
        rstpEnabled: true
        stpBridgePriority:
        - switches:
          - Q234-ABCD-0001
          - Q234-ABCD-0002
          - Q234-ABCD-0003
          stpPriority: 4096
        - stacks:
          - "789102"
          - "123456"
          - "129102"
          stpPriority: 28672
      properties:
        rstpEnabled:
          description: The spanning tree protocol status in network
          type: boolean
        stpBridgePriority:
          description: STP bridge priority for switches/stacks or switch profiles.
            An empty array will clear the STP bridge priority settings.
          items:
            $ref: '#/components/schemas/_networks__networkId__switch_stp_stpBridgePriority'
          type: array
      type: object
    inline_object_136:
      example:
        name: My route
        subnet: 192.168.1.0/24
        nextHopIp: 1.2.3.4
        advertiseViaOspfEnabled: false
        preferOverOspfRoutesEnabled: false
      properties:
        name:
          description: Name or description for layer 3 static route
          type: string
        subnet:
          description: The subnet which is routed via this static route and should
            be specified in CIDR notation (ex. 1.2.3.0/24)
          type: string
        nextHopIp:
          description: IP address of the next hop device to which the device sends
            its traffic for the subnet
          type: string
        advertiseViaOspfEnabled:
          description: Option to advertise static route via OSPF
          type: boolean
        preferOverOspfRoutesEnabled:
          description: Option to prefer static route over OSPF routes
          type: boolean
      required:
      - nextHopIp
      - subnet
      type: object
    inline_object_137:
      example:
        name: My route
        subnet: 192.168.1.0/24
        nextHopIp: 1.2.3.4
        advertiseViaOspfEnabled: false
        preferOverOspfRoutesEnabled: false
      properties:
        name:
          description: Name or description for layer 3 static route
          type: string
        subnet:
          description: The subnet which is routed via this static route and should
            be specified in CIDR notation (ex. 1.2.3.0/24)
          type: string
        nextHopIp:
          description: IP address of the next hop device to which the device sends
            its traffic for the subnet
          type: string
        advertiseViaOspfEnabled:
          description: Option to advertise static route via OSPF
          type: boolean
        preferOverOspfRoutesEnabled:
          description: Option to prefer static route over OSPF routes
          type: boolean
      type: object
    inline_object_134:
      example:
        name: L3 interface
        subnet: 192.168.1.0/24
        interfaceIp: 192.168.1.2
        multicastRouting: disabled
        vlanId: 100
        ospfSettings:
          area: "0"
          cost: 1
          isPassiveEnabled: true
        ospfV3:
          area: "1"
          cost: 2
          isPassiveEnabled: true
        ipv6:
          assignmentMode: static
          address: 1:2:3:4::1
          prefix: 1:2:3:4::/48
          gateway: 1:2:3:4::2
      properties:
        name:
          description: A friendly name or description for the interface or VLAN.
          type: string
        subnet:
          description: The network that this routed interface is on, in CIDR notation
            (ex. 10.1.1.0/24).
          type: string
        interfaceIp:
          description: The IP address this switch stack will use for layer 3 routing
            on this VLAN or subnet. This cannot be the same as the switch's management
            IP.
          type: string
        multicastRouting:
          description: Enable multicast support if, multicast routing between VLANs
            is required. Options are, 'disabled', 'enabled' or 'IGMP snooping querier'.
          enum:
          - IGMP snooping querier
          - disabled
          - enabled
          type: string
        vlanId:
          description: The VLAN this routed interface is on. VLAN must be between
            1 and 4094.
          type: integer
        defaultGateway:
          description: The next hop for any traffic that isn't going to a directly
            connected subnet or over a static route. This IP address must exist in
            a subnet with a routed interface.
          type: string
        ospfSettings:
          $ref: '#/components/schemas/_networks__networkId__switch_stacks__switchStackId__routing_interfaces__interfaceId__ospfSettings'
        ipv6:
          $ref: '#/components/schemas/_networks__networkId__switch_stacks__switchStackId__routing_interfaces__interfaceId__ipv6'
      type: object
    inline_object_135:
      example:
        dhcpMode: dhcpServer
        dhcpLeaseTime: 1 day
        dnsNameserversOption: custom
        dnsCustomNameservers:
        - 8.8.8.8, 8.8.4.4
        bootOptionsEnabled: true
        bootNextServer: 1.2.3.4
        bootFileName: home_boot_file
        dhcpOptions:
        - code: "5"
          type: text
          value: five
        reservedIpRanges:
        - start: 192.168.1.1
          end: 192.168.1.10
          comment: A reserved IP range
        fixedIpAssignments:
        - mac: 22:33:44:55:66:77
          name: Cisco Meraki valued client
          ip: 192.168.1.12
      properties:
        dhcpMode:
          description: The DHCP mode options for the switch stack interface ('dhcpDisabled',
            'dhcpRelay' or 'dhcpServer')
          enum:
          - dhcpDisabled
          - dhcpRelay
          - dhcpServer
          type: string
        dhcpRelayServerIps:
          description: The DHCP relay server IPs to which DHCP packets would get relayed
            for the switch stack interface
          items:
            type: string
          type: array
        dhcpLeaseTime:
          description: The DHCP lease time config for the dhcp server running on switch
            stack interface ('30 minutes', '1 hour', '4 hours', '12 hours', '1 day'
            or '1 week')
          enum:
          - 1 day
          - 1 hour
          - 1 week
          - 12 hours
          - 30 minutes
          - 4 hours
          type: string
        dnsNameserversOption:
          description: The DHCP name server option for the dhcp server running on
            the switch stack interface ('googlePublicDns', 'openDns' or 'custom')
          enum:
          - custom
          - googlePublicDns
          - openDns
          type: string
        dnsCustomNameservers:
          description: The DHCP name server IPs when DHCP name server option is 'custom'
          items:
            type: string
          type: array
        bootOptionsEnabled:
          description: Enable DHCP boot options to provide PXE boot options configs
            for the dhcp server running on the switch stack interface
          type: boolean
        bootNextServer:
          description: The PXE boot server IP for the DHCP server running on the switch
            stack interface
          type: string
        bootFileName:
          description: The PXE boot server file name for the DHCP server running on
            the switch stack interface
          type: string
        dhcpOptions:
          description: Array of DHCP options consisting of code, type and value for
            the DHCP server running on the switch stack interface
          items:
            $ref: '#/components/schemas/_devices__serial__switch_routing_interfaces__interfaceId__dhcp_dhcpOptions'
          type: array
        reservedIpRanges:
          description: Array of DHCP reserved IP assignments for the DHCP server running
            on the switch stack interface
          items:
            $ref: '#/components/schemas/_devices__serial__switch_routing_interfaces__interfaceId__dhcp_reservedIpRanges'
          type: array
        fixedIpAssignments:
          description: Array of DHCP fixed IP assignments for the DHCP server running
            on the switch stack interface
          items:
            $ref: '#/components/schemas/_devices__serial__switch_routing_interfaces__interfaceId__dhcp_fixedIpAssignments'
          type: array
      type: object
    inline_object_132:
      example:
        serial: QBZY-XWVU-TSRQ
      properties:
        serial:
          description: The serial of the switch to be removed
          type: string
      required:
      - serial
      type: object
    _networks__networkId__wireless_rfProfiles_transmission:
      description: Settings related to radio transmission.
      example:
        enabled: true
      properties:
        enabled:
          description: Toggle for radio transmission. When false, radios will not
            transmit at all.
          type: boolean
      type: object
    inline_object_133:
      example:
        name: L3 interface
        subnet: 192.168.1.0/24
        interfaceIp: 192.168.1.2
        multicastRouting: disabled
        vlanId: 100
        defaultGateway: 192.168.1.1
        ospfSettings:
          area: "0"
          cost: 1
          isPassiveEnabled: true
        ospfV3:
          area: "1"
          cost: 2
          isPassiveEnabled: true
        ipv6:
          assignmentMode: static
          address: 1:2:3:4::1
          prefix: 1:2:3:4::/48
          gateway: 1:2:3:4::2
      properties:
        name:
          description: A friendly name or description for the interface or VLAN.
          type: string
        subnet:
          description: The network that this routed interface is on, in CIDR notation
            (ex. 10.1.1.0/24).
          type: string
        interfaceIp:
          description: The IP address this switch stack will use for layer 3 routing
            on this VLAN or subnet. This cannot be the same as the switch's management
            IP.
          type: string
        multicastRouting:
          description: Enable multicast support if, multicast routing between VLANs
            is required. Options are, 'disabled', 'enabled' or 'IGMP snooping querier'.
            Default is 'disabled'.
          enum:
          - IGMP snooping querier
          - disabled
          - enabled
          type: string
        vlanId:
          description: The VLAN this routed interface is on. VLAN must be between
            1 and 4094.
          type: integer
        defaultGateway:
          description: The next hop for any traffic that isn't going to a directly
            connected subnet or over a static route. This IP address must exist in
            a subnet with a routed interface.
          type: string
        ospfSettings:
          $ref: '#/components/schemas/_networks__networkId__switch_stacks__switchStackId__routing_interfaces_ospfSettings'
        ipv6:
          $ref: '#/components/schemas/_networks__networkId__switch_stacks__switchStackId__routing_interfaces_ipv6'
      required:
      - name
      - vlanId
      type: object
    inline_object_130:
      example:
        name: A cool stack
        serials:
        - QBZY-XWVU-TSRQ
        - QBAB-CDEF-GHIJ
      properties:
        name:
          description: The name of the new stack
          type: string
        serials:
          description: An array of switch serials to be added into the new stack
          items:
            type: string
          type: array
      required:
      - name
      - serials
      type: object
    inline_response_200_19_value_source:
      description: Source of 'custom' type traffic filter
      example:
        vlan: 0
        port: port
        host: 6
        cidr: cidr
      properties:
        port:
          description: 'E.g.: "any", "0" (also means "any"), "8080", "1-1024"'
          type: string
        cidr:
          description: CIDR format address (e.g."192.168.10.1", which is the same
            as "192.168.10.1/32"), or "any". Cannot be used in combination with the
            "vlan" property
          type: string
        vlan:
          description: VLAN ID of the configured VLAN in the Meraki network. Cannot
            be used in combination with the "cidr" property and is currently only
            available under a template network.
          type: integer
        host:
          description: Host ID in the VLAN. Should not exceed the VLAN subnet capacity.
            Must be used along with the "vlan" property and is currently only available
            under a template network.
          type: integer
      type: object
    inline_object_131:
      example:
        serial: QBZY-XWVU-TSRQ
      properties:
        serial:
          description: The serial of the switch to be added
          type: string
      required:
      - serial
      type: object
    _organizations__organizationId__inventory_onboarding_cloudMonitoring_prepare_configParams_user_secret:
      description: Stores the user secret hash
      example:
        hash: hash
      properties:
        hash:
          description: The hashed secret
          type: string
      type: object
    inline_response_200_29_milestones:
      description: The Staged Upgrade Milestones for the stage
      example:
        completedAt: 2000-01-23T04:56:07.000+00:00
        canceledAt: 2000-01-23T04:56:07.000+00:00
        scheduledFor: 2000-01-23T04:56:07.000+00:00
        startedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        scheduledFor:
          description: Scheduled start time for the group
          format: date-time
          type: string
        startedAt:
          description: Start time for the group
          format: date-time
          type: string
        completedAt:
          description: Finish time for the group
          format: date-time
          type: string
        canceledAt:
          description: Time that the group was canceled
          format: date-time
          type: string
      type: object
    _organizations__organizationId__summary_top_clients_manufacturers_byUsage_clients:
      description: Clients info
      example:
        counts:
          total: 0
      properties:
        counts:
          $ref: '#/components/schemas/_organizations__organizationId__summary_top_clients_manufacturers_byUsage_clients_counts'
      type: object
    _networks__networkId__groupPolicies_scheduling_wednesday:
      description: The schedule object for Wednesday.
      properties:
        active:
          description: Whether the schedule is active (true) or inactive (false) during
            the time specified between 'from' and 'to'. Defaults to true.
          type: boolean
        from:
          description: The time, from '00:00' to '24:00'. Must be less than the time
            specified in 'to'. Defaults to '00:00'. Only 30 minute increments are
            allowed.
          type: string
        to:
          description: The time, from '00:00' to '24:00'. Must be greater than the
            time specified in 'from'. Defaults to '24:00'. Only 30 minute increments
            are allowed.
          type: string
      type: object
    _networks__networkId__wireless_ssids__number__splash_settings_splashPrepaidFront:
      description: The prepaid front image used in the splash page.
      properties:
        md5:
          description: The MD5 value of the prepaid front image file. Setting this
            to null will remove the prepaid front from the splash page.
          type: string
        extension:
          description: The extension of the prepaid front image file.
          type: string
        image:
          $ref: '#/components/schemas/_networks__networkId__wireless_ssids__number__splash_settings_splashPrepaidFront_image'
      type: object
    _organizations__organizationId__alerts_profiles_recipients:
      description: List of recipients that will recieve the alert.
      properties:
        emails:
          description: A list of emails that will receive information about the alert
          items:
            type: string
          type: array
        httpServerIds:
          description: A list base64 encoded urls of webhook endpoints that will receive
            information about the alert
          items:
            type: string
          type: array
      type: object
    _devices__serial__sensor_relationships_livestream_1_relatedDevices:
      properties:
        serial:
          description: The serial of the related device
          type: string
      required:
      - serial
      type: object
    inline_object_129:
      example: {}
      properties:
        vlan:
          description: Management VLAN
          type: integer
        useCombinedPower:
          description: The use Combined Power as the default behavior of secondary
            power supplies on supported devices.
          type: boolean
        powerExceptions:
          description: Exceptions on a per switch basis to "useCombinedPower"
          items:
            $ref: '#/components/schemas/_networks__networkId__switch_settings_powerExceptions'
          type: array
      type: object
    _networks__networkId__wireless_rfProfiles_perSsidSettings_10:
      description: Settings for SSID 10
      properties:
        minBitrate:
          description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2',
            '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
          format: float
          type: number
        bandOperationMode:
          description: Choice between 'dual', '2.4ghz' or '5ghz'.
          enum:
          - 2.4ghz
          - 5ghz
          - dual
          type: string
        bandSteeringEnabled:
          description: Steers client to most open band between 2.4 GHz and 5 GHz.
            Can be either true or false.
          type: boolean
      type: object
    _networks__networkId__wireless_rfProfiles_perSsidSettings_11:
      description: Settings for SSID 11
      properties:
        minBitrate:
          description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2',
            '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
          format: float
          type: number
        bandOperationMode:
          description: Choice between 'dual', '2.4ghz' or '5ghz'.
          enum:
          - 2.4ghz
          - 5ghz
          - dual
          type: string
        bandSteeringEnabled:
          description: Steers client to most open band between 2.4 GHz and 5 GHz.
            Can be either true or false.
          type: boolean
      type: object
    inline_object_127:
      example:
        interfaceIp: 192.168.1.2
        multicastGroup: 192.168.128.0/24
      properties:
        interfaceIp:
          description: The IP address of the interface to use
          type: string
        multicastGroup:
          description: '''Any'', or the IP address of a multicast group'
          type: string
      required:
      - interfaceIp
      - multicastGroup
      type: object
    _networks__networkId__wireless_rfProfiles_perSsidSettings_12:
      description: Settings for SSID 12
      properties:
        minBitrate:
          description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2',
            '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
          format: float
          type: number
        bandOperationMode:
          description: Choice between 'dual', '2.4ghz' or '5ghz'.
          enum:
          - 2.4ghz
          - 5ghz
          - dual
          type: string
        bandSteeringEnabled:
          description: Steers client to most open band between 2.4 GHz and 5 GHz.
            Can be either true or false.
          type: boolean
      type: object
    inline_object_128:
      example:
        enabled: true
        helloTimerInSeconds: 10
        deadTimerInSeconds: 40
        areas:
        - areaId: "1284392014819"
          areaName: Backbone
          areaType: normal
        v3:
          enabled: true
          helloTimerInSeconds: 10
          deadTimerInSeconds: 40
          areas:
          - areaId: "1284392014819"
            areaName: V3 Backbone
            areaType: normal
        md5AuthenticationEnabled: true
        md5AuthenticationKey:
          id: 1234
          passphrase: abc1234
      properties:
        enabled:
          description: Boolean value to enable or disable OSPF routing. OSPF routing
            is disabled by default.
          type: boolean
        helloTimerInSeconds:
          description: Time interval in seconds at which hello packet will be sent
            to OSPF neighbors to maintain connectivity. Value must be between 1 and
            255. Default is 10 seconds.
          type: integer
        deadTimerInSeconds:
          description: Time interval to determine when the peer will be declared inactive/dead.
            Value must be between 1 and 65535
          type: integer
        areas:
          description: OSPF areas
          items:
            $ref: '#/components/schemas/_networks__networkId__switch_routing_ospf_areas'
          type: array
        v3:
          $ref: '#/components/schemas/_networks__networkId__switch_routing_ospf_v3'
        md5AuthenticationEnabled:
          description: Boolean value to enable or disable MD5 authentication. MD5
            authentication is disabled by default.
          type: boolean
        md5AuthenticationKey:
          $ref: '#/components/schemas/_networks__networkId__switch_routing_ospf_md5AuthenticationKey'
      type: object
    _networks__networkId__wireless_rfProfiles_perSsidSettings_13:
      description: Settings for SSID 13
      properties:
        minBitrate:
          description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2',
            '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
          format: float
          type: number
        bandOperationMode:
          description: Choice between 'dual', '2.4ghz' or '5ghz'.
          enum:
          - 2.4ghz
          - 5ghz
          - dual
          type: string
        bandSteeringEnabled:
          description: Steers client to most open band between 2.4 GHz and 5 GHz.
            Can be either true or false.
          type: boolean
      type: object
    inline_object_125:
      example:
        defaultSettings:
          igmpSnoopingEnabled: true
          floodUnknownMulticastTrafficEnabled: true
        overrides:
        - switches:
          - Q234-ABCD-0001
          - Q234-ABCD-0002
          - Q234-ABCD-0003
          igmpSnoopingEnabled: true
          floodUnknownMulticastTrafficEnabled: true
        - stacks:
          - "789102"
          - "123456"
          - "129102"
          igmpSnoopingEnabled: true
          floodUnknownMulticastTrafficEnabled: true
      properties:
        defaultSettings:
          $ref: '#/components/schemas/_networks__networkId__switch_routing_multicast_defaultSettings'
        overrides:
          description: Array of paired switches/stacks/profiles and corresponding
            multicast settings. An empty array will clear the multicast settings.
          items:
            $ref: '#/components/schemas/_networks__networkId__switch_routing_multicast_overrides'
          type: array
      type: object
    _networks__networkId__wireless_rfProfiles_perSsidSettings_14:
      description: Settings for SSID 14
      properties:
        minBitrate:
          description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2',
            '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
          format: float
          type: number
        bandOperationMode:
          description: Choice between 'dual', '2.4ghz' or '5ghz'.
          enum:
          - 2.4ghz
          - 5ghz
          - dual
          type: string
        bandSteeringEnabled:
          description: Steers client to most open band between 2.4 GHz and 5 GHz.
            Can be either true or false.
          type: boolean
      type: object
    _networks__networkId__appliance_security_malware_allowedFiles:
      properties:
        sha256:
          description: The file sha256 hash to allow
          type: string
        comment:
          description: Comment about the allowed entity
          type: string
      required:
      - comment
      - sha256
      type: object
    inline_object_126:
      example:
        interfaceIp: 192.168.1.2
        multicastGroup: 192.168.128.0/24
      properties:
        interfaceIp:
          description: The IP address of the interface where the RP needs to be created.
          type: string
        multicastGroup:
          description: '''Any'', or the IP address of a multicast group'
          type: string
      required:
      - interfaceIp
      - multicastGroup
      type: object
    inline_object_123:
      example:
        ruleIds:
        - "1284392014819"
        - "2983092129865"
      properties:
        ruleIds:
          description: A list of quality of service rule IDs arranged in order in
            which they should be processed by the switch.
          items:
            type: string
          type: array
      required:
      - ruleIds
      type: object
    inline_object_124:
      example:
        vlan: 100
        protocol: TCP
        srcPort: 2000
        srcPortRange: 70-80
        dstPort: 3000
        dstPortRange: 3000-3100
        dscp: 0
      properties:
        vlan:
          description: The VLAN of the incoming packet. A null value will match any
            VLAN.
          type: integer
        protocol:
          description: The protocol of the incoming packet. Can be one of "ANY", "TCP"
            or "UDP". Default value is "ANY".
          enum:
          - ANY
          - TCP
          - UDP
          type: string
        srcPort:
          description: The source port of the incoming packet. Applicable only if
            protocol is TCP or UDP.
          type: integer
        srcPortRange:
          description: 'The source port range of the incoming packet. Applicable only
            if protocol is set to TCP or UDP. Example: 70-80'
          type: string
        dstPort:
          description: The destination port of the incoming packet. Applicable only
            if protocol is TCP or UDP.
          type: integer
        dstPortRange:
          description: 'The destination port range of the incoming packet. Applicable
            only if protocol is set to TCP or UDP. Example: 70-80'
          type: string
        dscp:
          description: DSCP tag that should be assigned to incoming packet. Set this
            to -1 to trust incoming DSCP. Default value is 0.
          type: integer
      type: object
    inline_object_121:
      example:
        name: Weekdays schedule
        portSchedule:
          monday:
            active: true
            from: 9:00
            to: 17:00
          tuesday:
            active: true
            from: 9:00
            to: 17:00
          wednesday:
            active: true
            from: 9:00
            to: 17:00
          thursday:
            active: true
            from: 9:00
            to: 17:00
          friday:
            active: true
            from: 9:00
            to: 17:00
          saturday:
            active: false
            from: 0:00
            to: 24:00
          sunday:
            active: false
            from: 0:00
            to: 24:00
      properties:
        name:
          description: The name for your port schedule.
          type: string
        portSchedule:
          $ref: '#/components/schemas/_networks__networkId__switch_portSchedules_portSchedule'
      type: object
    inline_object_122:
      example:
        vlan: 100
        protocol: TCP
        srcPort: 2000
        srcPortRange: 70-80
        dstPort: 3000
        dstPortRange: 3000-3100
        dscp: 0
      properties:
        vlan:
          description: The VLAN of the incoming packet. A null value will match any
            VLAN.
          type: integer
        protocol:
          description: The protocol of the incoming packet. Can be one of "ANY", "TCP"
            or "UDP". Default value is "ANY"
          enum:
          - ANY
          - TCP
          - UDP
          type: string
        srcPort:
          description: The source port of the incoming packet. Applicable only if
            protocol is TCP or UDP.
          type: integer
        srcPortRange:
          description: 'The source port range of the incoming packet. Applicable only
            if protocol is set to TCP or UDP. Example: 70-80'
          type: string
        dstPort:
          description: The destination port of the incoming packet. Applicable only
            if protocol is TCP or UDP.
          type: integer
        dstPortRange:
          description: 'The destination port range of the incoming packet. Applicable
            only if protocol is set to TCP or UDP. Example: 70-80'
          type: string
        dscp:
          description: DSCP tag. Set this to -1 to trust incoming DSCP. Default value
            is 0
          type: integer
      required:
      - vlan
      type: object
    inline_object_120:
      example:
        name: Weekdays schedule
        portSchedule:
          monday:
            active: true
            from: 9:00
            to: 17:00
          tuesday:
            active: true
            from: 9:00
            to: 17:00
          wednesday:
            active: true
            from: 9:00
            to: 17:00
          thursday:
            active: true
            from: 9:00
            to: 17:00
          friday:
            active: true
            from: 9:00
            to: 17:00
          saturday:
            active: false
            from: 0:00
            to: 24:00
          sunday:
            active: false
            from: 0:00
            to: 24:00
      properties:
        name:
          description: The name for your port schedule. Required
          type: string
        portSchedule:
          $ref: '#/components/schemas/_networks__networkId__switch_portSchedules_portSchedule'
      required:
      - name
      type: object
    _devices__serial__cellular_sims_sims:
      properties:
        slot:
          description: SIM slot being configured. Must be 'sim1' on single-sim devices.
          enum:
          - sim1
          - sim2
          type: string
        isPrimary:
          default: false
          description: If true, this SIM is used for boot. Must be true on single-sim
            devices.
          type: boolean
        apns:
          description: APN configurations. If empty, the default APN will be used.
          items:
            $ref: '#/components/schemas/_devices__serial__cellular_sims_apns'
          type: array
      type: object
    _networks__networkId__firmwareUpgrades_rollbacks_reasons:
      properties:
        category:
          description: Reason for the rollback
          enum:
          - broke old features
          - other
          - performance
          - stability
          - testing
          - unifying networks versions
          type: string
        comment:
          description: Additional comment about the rollback
          type: string
      required:
      - category
      - comment
      type: object
    _networks__networkId__appliance_vpn_siteToSiteVpn_subnets:
      properties:
        localSubnet:
          description: The CIDR notation subnet used within the VPN
          type: string
        useVpn:
          description: Indicates the presence of the subnet in the VPN
          type: boolean
      required:
      - localSubnet
      type: object
    _networks__networkId__policies_byClient_ssid:
      example:
        ssidNumber: 0
      properties:
        ssidNumber:
          description: number of ssid
          type: integer
      type: object
    _networks__networkId__firmwareUpgrades_staged_stages_group_1:
      description: The Staged Upgrade Group
      properties:
        id:
          description: ID of the Staged Upgrade Group
          type: string
      required:
      - id
      type: object
    _devices__serial__managementInterface_wan2:
      description: WAN 2 settings (only for MX devices)
      properties:
        wanEnabled:
          description: Enable or disable the interface (only for MX devices). Valid
            values are 'enabled', 'disabled', and 'not configured'.
          enum:
          - disabled
          - enabled
          - not configured
          type: string
        usingStaticIp:
          description: Configure the interface to have static IP settings or use DHCP.
          type: boolean
        staticIp:
          description: The IP the device should use on the WAN.
          type: string
        staticGatewayIp:
          description: The IP of the gateway on the WAN.
          type: string
        staticSubnetMask:
          description: The subnet mask for the WAN.
          type: string
        staticDns:
          description: Up to two DNS IPs.
          items:
            type: string
          type: array
        vlan:
          description: The VLAN that management traffic should be tagged with. Applies
            whether usingStaticIp is true or false.
          type: integer
      type: object
    inline_object_158:
      example:
        rules:
        - comment: Allow TCP traffic to subnet with HTTP servers.
          policy: allow
          protocol: tcp
          destPort: "443"
          destCidr: 192.168.1.0/24
      properties:
        rules:
          description: An ordered array of the firewall rules for this SSID (not including
            the local LAN access rule or the default rule)
          items:
            $ref: '#/components/schemas/_networks__networkId__wireless_ssids__number__firewall_l3FirewallRules_rules'
          type: array
        allowLanAccess:
          description: Allow wireless client access to local LAN (boolean value -
            true allows access and false denies access) (optional)
          type: boolean
      type: object
    _devices__serial__managementInterface_wan1:
      description: WAN 1 settings
      properties:
        wanEnabled:
          description: Enable or disable the interface (only for MX devices). Valid
            values are 'enabled', 'disabled', and 'not configured'.
          enum:
          - disabled
          - enabled
          - not configured
          type: string
        usingStaticIp:
          description: Configure the interface to have static IP settings or use DHCP.
          type: boolean
        staticIp:
          description: The IP the device should use on the WAN.
          type: string
        staticGatewayIp:
          description: The IP of the gateway on the WAN.
          type: string
        staticSubnetMask:
          description: The subnet mask for the WAN.
          type: string
        staticDns:
          description: Up to two DNS IPs.
          items:
            type: string
          type: array
        vlan:
          description: The VLAN that management traffic should be tagged with. Applies
            whether usingStaticIp is true or false.
          type: integer
      type: object
    inline_object_159:
      example:
        rules:
        - policy: deny
          type: host
          value: google.com
        - policy: deny
          type: port
          value: "23"
        - policy: deny
          type: ipRange
          value: 10.11.12.00/24
        - policy: deny
          type: ipRange
          value: 10.11.12.00/24:5555
      properties:
        rules:
          description: An array of L7 firewall rules for this SSID. Rules will get
            applied in the same order user has specified in request. Empty array will
            clear the L7 firewall rule configuration.
          items:
            $ref: '#/components/schemas/_networks__networkId__wireless_ssids__number__firewall_l7FirewallRules_rules'
          type: array
      type: object
    _organizations__organizationId__brandingPolicies_helpSettings:
      description: |2
              Settings for describing the modifications to various Help page features. Each property in this object accepts one of
              'default or inherit' (do not modify functionality), 'hide' (remove the section from Dashboard), or 'show' (always show
              the section on Dashboard). Some properties in this object also accept custom HTML used to replace the section on
              Dashboard; see the documentation for each property to see the allowed values.
      example:
        firewallInfoSubtab: default or inherit
        getHelpSubtabKnowledgeBaseSearch: getHelpSubtabKnowledgeBaseSearch
        universalSearchKnowledgeBaseSearch: default or inherit
        hardwareReplacementsSubtab: default or inherit
        newFeaturesSubtab: default or inherit
        communitySubtab: default or inherit
        supportContactInfo: supportContactInfo
        apiDocsSubtab: default or inherit
        helpTab: default or inherit
        ciscoMerakiProductDocumentation: ciscoMerakiProductDocumentation
        dataProtectionRequestsSubtab: default or inherit
        getHelpSubtab: default or inherit
        casesSubtab: default or inherit
        smForums: default or inherit
        helpWidget: default or inherit
      properties:
        helpTab:
          description: |2
                  The Help tab, under which all support information resides. If this tab is hidden, no other 'Help' branding
                  customizations will be visible. Can be one of 'default or inherit', 'hide' or 'show'.
          enum:
          - default or inherit
          - hide
          - show
          type: string
        getHelpSubtab:
          description: |2
                  The 'Help -> Get Help' subtab on which Cisco Meraki KB, Product Manuals, and Support/Case Information are displayed. Note
                  that if this subtab is hidden, branding customizations for the KB on 'Get help', Cisco Meraki product documentation,
                  and support contact info will not be visible. Can be one of 'default or inherit', 'hide' or 'show'.
          enum:
          - default or inherit
          - hide
          - show
          type: string
        communitySubtab:
          description: |2
                  The 'Help -> Community' subtab which provides a link to Meraki Community. Can be one of 'default or inherit', 'hide' or 'show'.
          enum:
          - default or inherit
          - hide
          - show
          type: string
        casesSubtab:
          description: |2
                  The 'Help -> Cases' Dashboard subtab on which Cisco Meraki support cases for this organization can be managed. Can be one
                  of 'default or inherit', 'hide' or 'show'.
          enum:
          - default or inherit
          - hide
          - show
          type: string
        dataProtectionRequestsSubtab:
          description: |2
                  The 'Help -> Data protection requests' Dashboard subtab on which requests to delete, restrict, or export end-user data can
                  be audited. Can be one of 'default or inherit', 'hide' or 'show'.
          enum:
          - default or inherit
          - hide
          - show
          type: string
        getHelpSubtabKnowledgeBaseSearch:
          description: |2
                  The KB search box which appears on the Help page. Can be one of 'default or inherit', 'hide', 'show', or a replacement custom HTML string.
          type: string
        universalSearchKnowledgeBaseSearch:
          description: |2
                  The universal search box always visible on Dashboard will, by default, present results from the Meraki KB. This configures
                  whether these Meraki KB results should be returned. Can be one of 'default or inherit', 'hide' or 'show'.
          enum:
          - default or inherit
          - hide
          - show
          type: string
        ciscoMerakiProductDocumentation:
          description: |2
                  The 'Product Manuals' section of the 'Help -> Get Help' subtab. Can be one of 'default or inherit', 'hide', 'show', or a replacement custom HTML string.
          type: string
        supportContactInfo:
          description: |2
                  The 'Contact Meraki Support' section of the 'Help -> Get Help' subtab. Can be one of 'default or inherit', 'hide', 'show', or a replacement custom HTML string.
          type: string
        newFeaturesSubtab:
          description: |2
                  The 'Help -> New features' subtab where new Dashboard features are detailed. Can be one of 'default or inherit', 'hide' or 'show'.
          enum:
          - default or inherit
          - hide
          - show
          type: string
        firewallInfoSubtab:
          description: |2
                  The 'Help -> Firewall info' subtab where necessary upstream firewall rules for communication to the Cisco Meraki cloud are
                  listed. Can be one of 'default or inherit', 'hide' or 'show'.
          enum:
          - default or inherit
          - hide
          - show
          type: string
        apiDocsSubtab:
          description: |2
                  The 'Help -> API docs' subtab where a detailed description of the Dashboard API is listed. Can be one of
                  'default or inherit', 'hide' or 'show'.
          enum:
          - default or inherit
          - hide
          - show
          type: string
        hardwareReplacementsSubtab:
          description: |2
                  The 'Help -> Replacement info' subtab where important information regarding device replacements is detailed. Can be one of
                  'default or inherit', 'hide' or 'show'.
          enum:
          - default or inherit
          - hide
          - show
          type: string
        smForums:
          description: |2
                  The 'SM Forums' subtab which links to community-based support for Cisco Meraki Systems Manager. Only configurable for
                  organizations that contain Systems Manager networks. Can be one of 'default or inherit', 'hide' or 'show'.
          enum:
          - default or inherit
          - hide
          - show
          type: string
        helpWidget:
          description: |2
                  The 'Help Widget' is a support widget which provides access to live chat, documentation links, Sales contact info,
                  and other contact avenues to reach Meraki Support. Can be one of 'default or inherit', 'hide' or 'show'.
          enum:
          - default or inherit
          - hide
          - show
          type: string
      type: object
    inline_object_156:
      example:
        enabled: true
        deviceTypePolicies:
        - deviceType: Android
          devicePolicy: Allowed
        - deviceType: iPhone
          devicePolicy: Group policy
          groupPolicyId: 101
      properties:
        enabled:
          description: If true, the SSID device type group policies are enabled.
          type: boolean
        deviceTypePolicies:
          description: List of device type policies.
          items:
            $ref: '#/components/schemas/_networks__networkId__wireless_ssids__number__deviceTypeGroupPolicies_deviceTypePolicies'
          type: array
      type: object
    inline_response_200_124_apiAuthentication_ipRestrictionsForKeys:
      description: Details for API-only IP restrictions.
      example:
        ranges:
        - ranges
        - ranges
        enabled: true
      properties:
        enabled:
          description: Boolean indicating whether the organization will restrict API
            key (not Dashboard GUI) usage to a specific list of IP addresses or CIDR
            ranges.
          type: boolean
        ranges:
          description: List of acceptable IP ranges. Entries can be single IP addresses,
            IP address ranges, and CIDR subnets.
          items:
            type: string
          type: array
      type: object
    inline_object_157:
      example:
        timeout: 5
        identity:
          retries: 5
          timeout: 5
        maxRetries: 5
        eapolKey:
          retries: 5
          timeoutInMs: 5000
      properties:
        timeout:
          description: General EAP timeout in seconds.
          type: integer
        identity:
          $ref: '#/components/schemas/inline_response_200_85_identity'
        maxRetries:
          description: Maximum number of general EAP retries.
          type: integer
        eapolKey:
          $ref: '#/components/schemas/inline_response_200_85_eapolKey'
      type: object
    _networks__networkId__clients_provision_clients:
      properties:
        mac:
          description: The MAC address of the client. Required.
          type: string
        name:
          description: The display name for the client. Optional. Limited to 255 bytes.
          type: string
      required:
      - mac
      type: object
    inline_object_154:
      example:
        name: My SSID
        enabled: true
      properties:
        name:
          description: The name of the SSID
          type: string
        enabled:
          description: Whether or not the SSID is enabled
          type: boolean
        authMode:
          description: The association control method for the SSID ('open', 'open-enhanced',
            'psk', 'open-with-radius', 'open-with-nac', '8021x-meraki', '8021x-nac',
            '8021x-radius', '8021x-google', '8021x-localradius', 'ipsk-with-radius'
            or 'ipsk-without-radius')
          enum:
          - 8021x-google
          - 8021x-localradius
          - 8021x-meraki
          - 8021x-nac
          - 8021x-radius
          - ipsk-with-radius
          - ipsk-without-radius
          - open
          - open-enhanced
          - open-with-nac
          - open-with-radius
          - psk
          type: string
        enterpriseAdminAccess:
          description: Whether or not an SSID is accessible by 'enterprise' administrators
            ('access disabled' or 'access enabled')
          enum:
          - access disabled
          - access enabled
          type: string
        encryptionMode:
          description: The psk encryption mode for the SSID ('wep' or 'wpa'). This
            param is only valid if the authMode is 'psk'
          enum:
          - wep
          - wpa
          type: string
        psk:
          description: The passkey for the SSID. This param is only valid if the authMode
            is 'psk'
          type: string
        wpaEncryptionMode:
          description: The types of WPA encryption. ('WPA1 only', 'WPA1 and WPA2',
            'WPA2 only', 'WPA3 Transition Mode', 'WPA3 only' or 'WPA3 192-bit Security')
          enum:
          - WPA1 and WPA2
          - WPA1 only
          - WPA2 only
          - WPA3 192-bit Security
          - WPA3 Transition Mode
          - WPA3 only
          type: string
        dot11w:
          $ref: '#/components/schemas/_networks__networkId__wireless_ssids__number__dot11w'
        dot11r:
          $ref: '#/components/schemas/_networks__networkId__wireless_ssids__number__dot11r'
        splashPage:
          description: The type of splash page for the SSID ('None', 'Click-through
            splash page', 'Billing', 'Password-protected with Meraki RADIUS', 'Password-protected
            with custom RADIUS', 'Password-protected with Active Directory', 'Password-protected
            with LDAP', 'SMS authentication', 'Systems Manager Sentry', 'Facebook
            Wi-Fi', 'Google OAuth', 'Sponsored guest', 'Cisco ISE' or 'Google Apps
            domain'). This attribute is not supported for template children.
          enum:
          - Billing
          - Cisco ISE
          - Click-through splash page
          - Facebook Wi-Fi
          - Google Apps domain
          - Google OAuth
          - None
          - Password-protected with Active Directory
          - Password-protected with LDAP
          - Password-protected with Meraki RADIUS
          - Password-protected with custom RADIUS
          - SMS authentication
          - Sponsored guest
          - Systems Manager Sentry
          type: string
        splashGuestSponsorDomains:
          description: Array of valid sponsor email domains for sponsored guest splash
            type.
          items:
            type: string
          type: array
        oauth:
          $ref: '#/components/schemas/_networks__networkId__wireless_ssids__number__oauth'
        localRadius:
          $ref: '#/components/schemas/_networks__networkId__wireless_ssids__number__localRadius'
        ldap:
          $ref: '#/components/schemas/_networks__networkId__wireless_ssids__number__ldap'
        activeDirectory:
          $ref: '#/components/schemas/_networks__networkId__wireless_ssids__number__activeDirectory'
        radiusServers:
          description: The RADIUS 802.1X servers to be used for authentication. This
            param is only valid if the authMode is 'open-with-radius', '8021x-radius'
            or 'ipsk-with-radius'
          items:
            $ref: '#/components/schemas/_networks__networkId__wireless_ssids__number__radiusServers'
          type: array
        radiusProxyEnabled:
          description: If true, Meraki devices will proxy RADIUS messages through
            the Meraki cloud to the configured RADIUS auth and accounting servers.
          type: boolean
        radiusTestingEnabled:
          description: If true, Meraki devices will periodically send Access-Request
            messages to configured RADIUS servers using identity 'meraki_8021x_test'
            to ensure that the RADIUS servers are reachable.
          type: boolean
        radiusCalledStationId:
          description: The template of the called station identifier to be used for
            RADIUS (ex. $NODE_MAC$:$VAP_NUM$).
          type: string
        radiusAuthenticationNasId:
          description: The template of the NAS identifier to be used for RADIUS authentication
            (ex. $NODE_MAC$:$VAP_NUM$).
          type: string
        radiusServerTimeout:
          description: The amount of time for which a RADIUS client waits for a reply
            from the RADIUS server (must be between 1-10 seconds).
          type: integer
        radiusServerAttemptsLimit:
          description: The maximum number of transmit attempts after which a RADIUS
            server is failed over (must be between 1-5).
          type: integer
        radiusFallbackEnabled:
          description: Whether or not higher priority RADIUS servers should be retried
            after 60 seconds.
          type: boolean
        radiusCoaEnabled:
          description: If true, Meraki devices will act as a RADIUS Dynamic Authorization
            Server and will respond to RADIUS Change-of-Authorization and Disconnect
            messages sent by the RADIUS server.
          type: boolean
        radiusFailoverPolicy:
          description: This policy determines how authentication requests should be
            handled in the event that all of the configured RADIUS servers are unreachable
            ('Deny access' or 'Allow access')
          enum:
          - Allow access
          - Deny access
          type: string
        radiusLoadBalancingPolicy:
          description: This policy determines which RADIUS server will be contacted
            first in an authentication attempt and the ordering of any necessary retry
            attempts ('Strict priority order' or 'Round robin')
          enum:
          - Round robin
          - Strict priority order
          type: string
        radiusAccountingEnabled:
          description: Whether or not RADIUS accounting is enabled. This param is
            only valid if the authMode is 'open-with-radius', '8021x-radius' or 'ipsk-with-radius'
          type: boolean
        radiusAccountingServers:
          description: The RADIUS accounting 802.1X servers to be used for authentication.
            This param is only valid if the authMode is 'open-with-radius', '8021x-radius'
            or 'ipsk-with-radius' and radiusAccountingEnabled is 'true'
          items:
            $ref: '#/components/schemas/_networks__networkId__wireless_ssids__number__radiusAccountingServers'
          type: array
        radiusAccountingInterimInterval:
          description: The interval (in seconds) in which accounting information is
            updated and sent to the RADIUS accounting server.
          type: integer
        radiusAttributeForGroupPolicies:
          description: Specify the RADIUS attribute used to look up group policies
            ('Filter-Id', 'Reply-Message', 'Airespace-ACL-Name' or 'Aruba-User-Role').
            Access points must receive this attribute in the RADIUS Access-Accept
            message
          enum:
          - Airespace-ACL-Name
          - Aruba-User-Role
          - Filter-Id
          - Reply-Message
          type: string
        ipAssignmentMode:
          description: The client IP assignment mode ('NAT mode', 'Bridge mode', 'Layer
            3 roaming', 'Ethernet over GRE', 'Layer 3 roaming with a concentrator'
            or 'VPN')
          type: string
        useVlanTagging:
          description: Whether or not traffic should be directed to use specific VLANs.
            This param is only valid if the ipAssignmentMode is 'Bridge mode' or 'Layer
            3 roaming'
          type: boolean
        concentratorNetworkId:
          description: The concentrator to use when the ipAssignmentMode is 'Layer
            3 roaming with a concentrator' or 'VPN'.
          type: string
        secondaryConcentratorNetworkId:
          description: The secondary concentrator to use when the ipAssignmentMode
            is 'VPN'. If configured, the APs will switch to using this concentrator
            if the primary concentrator is unreachable. This param is optional. ('disabled'
            represents no secondary concentrator.)
          type: string
        disassociateClientsOnVpnFailover:
          description: Disassociate clients when 'VPN' concentrator failover occurs
            in order to trigger clients to re-associate and generate new DHCP requests.
            This param is only valid if ipAssignmentMode is 'VPN'.
          type: boolean
        vlanId:
          description: The VLAN ID used for VLAN tagging. This param is only valid
            when the ipAssignmentMode is 'Layer 3 roaming with a concentrator' or
            'VPN'
          type: integer
        defaultVlanId:
          description: The default VLAN ID used for 'all other APs'. This param is
            only valid when the ipAssignmentMode is 'Bridge mode' or 'Layer 3 roaming'
          type: integer
        apTagsAndVlanIds:
          description: The list of tags and VLAN IDs used for VLAN tagging. This param
            is only valid when the ipAssignmentMode is 'Bridge mode' or 'Layer 3 roaming'
          items:
            $ref: '#/components/schemas/_networks__networkId__wireless_ssids__number__apTagsAndVlanIds'
          type: array
        walledGardenEnabled:
          description: Allow access to a configurable list of IP ranges, which users
            may access prior to sign-on.
          type: boolean
        walledGardenRanges:
          description: Specify your walled garden by entering an array of addresses,
            ranges using CIDR notation, domain names, and domain wildcards (e.g. '192.168.1.1/24',
            '192.168.37.10/32', 'www.yahoo.com', '*.google.com']). Meraki's splash
            page is automatically included in your walled garden.
          items:
            type: string
          type: array
        gre:
          $ref: '#/components/schemas/_networks__networkId__wireless_ssids__number__gre'
        radiusOverride:
          description: If true, the RADIUS response can override VLAN tag. This is
            not valid when ipAssignmentMode is 'NAT mode'.
          type: boolean
        radiusGuestVlanEnabled:
          description: Whether or not RADIUS Guest VLAN is enabled. This param is
            only valid if the authMode is 'open-with-radius' and addressing mode is
            not set to 'isolated' or 'nat' mode
          type: boolean
        radiusGuestVlanId:
          description: VLAN ID of the RADIUS Guest VLAN. This param is only valid
            if the authMode is 'open-with-radius' and addressing mode is not set to
            'isolated' or 'nat' mode
          type: integer
        minBitrate:
          description: The minimum bitrate in Mbps of this SSID in the default indoor
            RF profile. ('1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36',
            '48' or '54')
          format: float
          type: number
        bandSelection:
          description: The client-serving radio frequencies of this SSID in the default
            indoor RF profile. ('Dual band operation', '5 GHz band only' or 'Dual
            band operation with Band Steering')
          type: string
        perClientBandwidthLimitUp:
          description: The upload bandwidth limit in Kbps. (0 represents no limit.)
          type: integer
        perClientBandwidthLimitDown:
          description: The download bandwidth limit in Kbps. (0 represents no limit.)
          type: integer
        perSsidBandwidthLimitUp:
          description: The total upload bandwidth limit in Kbps. (0 represents no
            limit.)
          type: integer
        perSsidBandwidthLimitDown:
          description: The total download bandwidth limit in Kbps. (0 represents no
            limit.)
          type: integer
        lanIsolationEnabled:
          description: Boolean indicating whether Layer 2 LAN isolation should be
            enabled or disabled. Only configurable when ipAssignmentMode is 'Bridge
            mode'.
          type: boolean
        visible:
          description: Boolean indicating whether APs should advertise or hide this
            SSID. APs will only broadcast this SSID if set to true
          type: boolean
        availableOnAllAps:
          description: Boolean indicating whether all APs should broadcast the SSID
            or if it should be restricted to APs matching any availability tags. Can
            only be false if the SSID has availability tags.
          type: boolean
        availabilityTags:
          description: Accepts a list of tags for this SSID. If availableOnAllAps
            is false, then the SSID will only be broadcast by APs with tags matching
            any of the tags in this list.
          items:
            type: string
          type: array
        mandatoryDhcpEnabled:
          description: If true, Mandatory DHCP will enforce that clients connecting
            to this SSID must use the IP address assigned by the DHCP server. Clients
            who use a static IP address won't be able to associate.
          type: boolean
        adultContentFilteringEnabled:
          description: Boolean indicating whether or not adult content will be blocked
          type: boolean
        dnsRewrite:
          $ref: '#/components/schemas/_networks__networkId__wireless_ssids__number__dnsRewrite'
        speedBurst:
          $ref: '#/components/schemas/_networks__networkId__wireless_ssids__number__speedBurst'
      type: object
    inline_response_200_103:
      example:
        address: address
        notes: notes
        lng: 6.0274563
        mac: mac
        tags:
        - tags
        - tags
        serial: serial
        name: name
        networkId: networkId
        model: model
        firmware: firmware
        lat: 0.8008282
        productType: productType
        lanIp: lanIp
      properties:
        name:
          description: Name of the device
          type: string
        lat:
          description: Latitude of the device
          format: float
          type: number
        lng:
          description: Longitude of the device
          format: float
          type: number
        address:
          description: Physical address of the device
          type: string
        notes:
          description: Notes for the device, limited to 255 characters
          type: string
        tags:
          description: List of tags assigned to the device
          items:
            type: string
          type: array
        networkId:
          description: ID of the network the device belongs to
          type: string
        serial:
          description: Serial number of the device
          type: string
        model:
          description: Model of the device
          type: string
        mac:
          description: MAC address of the device
          type: string
        lanIp:
          description: LAN IP address of the device
          type: string
        firmware:
          description: Firmware version of the device
          type: string
        productType:
          description: Product type of the device
          type: string
      type: object
    inline_object_155:
      example:
        enabled: true
        rules:
        - description: A simple bonjour rule
          vlanId: "1"
          services:
          - All Services
      properties:
        enabled:
          description: If true, Bonjour forwarding is enabled on this SSID.
          type: boolean
        rules:
          description: List of bonjour forwarding rules.
          items:
            $ref: '#/components/schemas/_networks__networkId__groupPolicies_bonjourForwarding_rules'
          type: array
      type: object
    inline_response_200_102:
      example:
        stpGuard: bpdu guard
        portScheduleId: portScheduleId
        isolationEnabled: true
        stormControlEnabled: true
        portId: portId
        type: access
        enabled: true
        accessPolicyNumber: 1
        vlan: 0
        rstpEnabled: true
        profile:
          id: id
          enabled: true
          iname: iname
        stickyMacAllowList:
        - stickyMacAllowList
        - stickyMacAllowList
        tags:
        - tags
        - tags
        allowedVlans: allowedVlans
        stickyMacAllowListLimit: 5
        udld: Alert only
        linkNegotiation: linkNegotiation
        flexibleStackingEnabled: true
        linkNegotiationCapabilities:
        - linkNegotiationCapabilities
        - linkNegotiationCapabilities
        macAllowList:
        - macAllowList
        - macAllowList
        voiceVlan: 6
        poeEnabled: true
        name: name
        accessPolicyType: Custom access policy
        daiTrusted: true
      properties:
        portId:
          description: The identifier of the switch profile port.
          type: string
        name:
          description: The name of the switch profile port.
          type: string
        tags:
          description: The list of tags of the switch profile port.
          items:
            type: string
          type: array
        enabled:
          description: The status of the switch profile port.
          type: boolean
        poeEnabled:
          description: The PoE status of the switch profile port.
          type: boolean
        type:
          description: The type of the switch profile port ('trunk' or 'access').
          enum:
          - access
          - trunk
          type: string
        vlan:
          description: The VLAN of the switch profile port. A null value will clear
            the value set for trunk ports.
          type: integer
        voiceVlan:
          description: The voice VLAN of the switch profile port. Only applicable
            to access ports.
          type: integer
        allowedVlans:
          description: The VLANs allowed on the switch profile port. Only applicable
            to trunk ports.
          type: string
        isolationEnabled:
          description: The isolation status of the switch profile port.
          type: boolean
        rstpEnabled:
          description: The rapid spanning tree protocol status.
          type: boolean
        stpGuard:
          description: The state of the STP guard ('disabled', 'root guard', 'bpdu
            guard' or 'loop guard').
          enum:
          - bpdu guard
          - disabled
          - loop guard
          - root guard
          type: string
        linkNegotiation:
          description: The link speed for the switch profile port.
          type: string
        linkNegotiationCapabilities:
          description: Available link speeds for the switch profile port.
          items:
            type: string
          type: array
        portScheduleId:
          description: The ID of the port schedule. A value of null will clear the
            port schedule.
          type: string
        udld:
          description: The action to take when Unidirectional Link is detected (Alert
            only, Enforce). Default configuration is Alert only.
          enum:
          - Alert only
          - Enforce
          type: string
        accessPolicyType:
          description: The type of the access policy of the switch profile port. Only
            applicable to access ports. Can be one of 'Open', 'Custom access policy',
            'MAC allow list' or 'Sticky MAC allow list'.
          enum:
          - Custom access policy
          - MAC allow list
          - Open
          - Sticky MAC allow list
          type: string
        accessPolicyNumber:
          description: The number of a custom access policy to configure on the switch
            profile port. Only applicable when 'accessPolicyType' is 'Custom access
            policy'.
          type: integer
        macAllowList:
          description: Only devices with MAC addresses specified in this list will
            have access to this port. Up to 20 MAC addresses can be defined. Only
            applicable when 'accessPolicyType' is 'MAC allow list'.
          items:
            type: string
          type: array
        stickyMacAllowList:
          description: The initial list of MAC addresses for sticky Mac allow list.
            Only applicable when 'accessPolicyType' is 'Sticky MAC allow list'.
          items:
            type: string
          type: array
        stickyMacAllowListLimit:
          description: The maximum number of MAC addresses for sticky MAC allow list.
            Only applicable when 'accessPolicyType' is 'Sticky MAC allow list'.
          type: integer
        stormControlEnabled:
          description: The storm control status of the switch profile port.
          type: boolean
        flexibleStackingEnabled:
          description: For supported switches (e.g. MS420/MS425), whether or not the
            port has flexible stacking enabled.
          type: boolean
        daiTrusted:
          description: If true, ARP packets for this port will be considered trusted,
            and Dynamic ARP Inspection will allow the traffic.
          type: boolean
        profile:
          $ref: '#/components/schemas/_devices__serial__switch_ports_profile'
      type: object
    _networks__networkId__appliance_vpn_bgp_neighbors:
      properties:
        ip:
          description: The IPv4 address of the neighbor
          type: string
        ipv6:
          $ref: '#/components/schemas/_networks__networkId__appliance_vpn_bgp_ipv6'
        remoteAsNumber:
          description: Remote ASN of the neighbor. The remote ASN must be an integer
            between 1 and 4294967295.
          type: integer
        receiveLimit:
          description: The receive limit is the maximum number of routes that can
            be received from any BGP peer. The receive limit must be an integer between
            0 and 4294967295. When absent, it defaults to 0.
          type: integer
        allowTransit:
          description: When this feature is on, the Meraki device will advertise routes
            learned from other Autonomous Systems, thereby allowing traffic between
            Autonomous Systems to transit this AS. When absent, it defaults to false.
          type: boolean
        ebgpHoldTimer:
          description: The EBGP hold timer in seconds for each neighbor. The EBGP
            hold timer must be an integer between 12 and 240.
          type: integer
        ebgpMultihop:
          description: Configure this if the neighbor is not adjacent. The EBGP multi-hop
            must be an integer between 1 and 255.
          type: integer
        sourceInterface:
          description: 'The output interface for peering with the remote BGP peer.
            Valid values are: ''wired0'', ''wired1'' or ''vlan{VLAN ID}''(e.g. ''vlan123'').'
          type: string
        nextHopIp:
          description: The IPv4 address of the remote BGP peer that will establish
            a TCP session with the local MX.
          type: string
        ttlSecurity:
          $ref: '#/components/schemas/_networks__networkId__appliance_vpn_bgp_ttlSecurity'
        authentication:
          $ref: '#/components/schemas/_networks__networkId__appliance_vpn_bgp_authentication'
      required:
      - ebgpHoldTimer
      - ebgpMultihop
      - remoteAsNumber
      type: object
    inline_object_152:
      example:
        name: "1234"
        clientBalancingEnabled: true
        minBitrateType: band
        bandSelectionType: ap
        apBandSettings:
          bandOperationMode: dual
          bandSteeringEnabled: true
        twoFourGhzSettings:
          maxPower: 30
          minPower: 5
          minBitrate: 11.0
          validAutoChannels:
          - 1
          - 6
          - 11
          axEnabled: true
          rxsop: -95
        fiveGhzSettings:
          maxPower: 30
          minPower: 8
          minBitrate: 12
          validAutoChannels:
          - 36
          - 40
          - 44
          - 48
          - 52
          - 56
          - 60
          - 64
          - 100
          - 104
          - 108
          - 112
          - 116
          - 120
          - 124
          - 128
          - 132
          - 136
          - 140
          - 144
          - 149
          - 153
          - 157
          - 161
          - 165
          channelWidth: auto
          rxsop: -95
        transmission:
          enabled: true
        perSsidSettings:
          "0":
            minBitrate: 11.0
            bandOperationMode: dual
            bandSteeringEnabled: true
          "1":
            minBitrate: 11.0
            bandOperationMode: dual
            bandSteeringEnabled: true
          "2":
            minBitrate: 11.0
            bandOperationMode: dual
            bandSteeringEnabled: true
          "3":
            minBitrate: 11.0
            bandOperationMode: dual
            bandSteeringEnabled: true
          "4":
            minBitrate: 11.0
            bandOperationMode: dual
            bandSteeringEnabled: true
          "5":
            minBitrate: 11.0
            bandOperationMode: dual
            bandSteeringEnabled: true
          "6":
            minBitrate: 11.0
            bandOperationMode: dual
            bandSteeringEnabled: true
          "7":
            minBitrate: 11.0
            bandOperationMode: dual
            bandSteeringEnabled: true
          "8":
            minBitrate: 11.0
            bandOperationMode: dual
            bandSteeringEnabled: true
          "9":
            minBitrate: 11.0
            bandOperationMode: dual
            bandSteeringEnabled: true
          "10":
            minBitrate: 11.0
            bandOperationMode: dual
            bandSteeringEnabled: true
          "11":
            minBitrate: 11.0
            bandOperationMode: dual
            bandSteeringEnabled: true
          "12":
            minBitrate: 11.0
            bandOperationMode: dual
            bandSteeringEnabled: true
          "13":
            minBitrate: 11.0
            bandOperationMode: dual
            bandSteeringEnabled: true
          "14":
            minBitrate: 11.0
            bandOperationMode: dual
            bandSteeringEnabled: true
      properties:
        name:
          description: The name of the new profile. Must be unique.
          type: string
        clientBalancingEnabled:
          description: Steers client to best available access point. Can be either
            true or false.
          type: boolean
        minBitrateType:
          description: Minimum bitrate can be set to either 'band' or 'ssid'.
          enum:
          - band
          - ssid
          type: string
        bandSelectionType:
          description: Band selection can be set to either 'ssid' or 'ap'.
          enum:
          - ap
          - ssid
          type: string
        apBandSettings:
          $ref: '#/components/schemas/_networks__networkId__wireless_rfProfiles__rfProfileId__apBandSettings'
        twoFourGhzSettings:
          $ref: '#/components/schemas/_networks__networkId__wireless_rfProfiles__rfProfileId__twoFourGhzSettings'
        fiveGhzSettings:
          $ref: '#/components/schemas/_networks__networkId__wireless_rfProfiles__rfProfileId__fiveGhzSettings'
        transmission:
          $ref: '#/components/schemas/_networks__networkId__wireless_rfProfiles_transmission'
        perSsidSettings:
          $ref: '#/components/schemas/_networks__networkId__wireless_rfProfiles_perSsidSettings'
      type: object
    inline_response_200_101:
      example:
        switchProfileId: switchProfileId
        name: name
        model: model
      properties:
        switchProfileId:
          description: Switch profile id
          type: string
        name:
          description: Switch profile name
          type: string
        model:
          description: Switch model
          type: string
      type: object
    inline_response_200_27_products_wireless:
      description: The network device to be updated
      example:
        lastUpgrade:
          fromVersion:
            releaseDate: 2000-01-23T04:56:07.000+00:00
            releaseType: releaseType
            id: id
            shortName: shortName
            firmware: firmware
          time: 2000-01-23T04:56:07.000+00:00
          toVersion:
            releaseDate: 2000-01-23T04:56:07.000+00:00
            releaseType: releaseType
            id: id
            shortName: shortName
            firmware: firmware
        participateInNextBetaRelease: true
        nextUpgrade:
          time: 2000-01-23T04:56:07.000+00:00
          toVersion:
            releaseDate: 2000-01-23T04:56:07.000+00:00
            releaseType: releaseType
            id: id
            shortName: shortName
            firmware: firmware
        currentVersion:
          releaseDate: 2000-01-23T04:56:07.000+00:00
          releaseType: releaseType
          id: id
          shortName: shortName
          firmware: firmware
        availableVersions:
        - releaseDate: 2000-01-23T04:56:07.000+00:00
          releaseType: releaseType
          id: id
          shortName: shortName
          firmware: firmware
        - releaseDate: 2000-01-23T04:56:07.000+00:00
          releaseType: releaseType
          id: id
          shortName: shortName
          firmware: firmware
      properties:
        currentVersion:
          $ref: '#/components/schemas/inline_response_200_27_products_wireless_currentVersion'
        lastUpgrade:
          $ref: '#/components/schemas/inline_response_200_27_products_wireless_lastUpgrade'
        nextUpgrade:
          $ref: '#/components/schemas/inline_response_200_27_products_wireless_nextUpgrade'
        availableVersions:
          description: Firmware versions available for upgrade
          items:
            $ref: '#/components/schemas/inline_response_200_27_products_wireless_availableVersions'
          type: array
        participateInNextBetaRelease:
          description: Whether or not the network wants beta firmware
          type: boolean
      type: object
    inline_object_153:
      example:
        meshingEnabled: true
        ipv6BridgeEnabled: false
        locationAnalyticsEnabled: false
        upgradeStrategy: minimizeUpgradeTime
        ledLightsOn: false
      properties:
        meshingEnabled:
          description: Toggle for enabling or disabling meshing in a network
          type: boolean
        ipv6BridgeEnabled:
          description: 'Toggle for enabling or disabling IPv6 bridging in a network
            (Note: if enabled, SSIDs must also be configured to use bridge mode)'
          type: boolean
        locationAnalyticsEnabled:
          description: Toggle for enabling or disabling location analytics for your
            network
          type: boolean
        upgradeStrategy:
          description: The upgrade strategy to apply to the network. Must be one of
            'minimizeUpgradeTime' or 'minimizeClientDowntime'. Requires firmware version
            MR 26.8 or higher'
          enum:
          - minimizeClientDowntime
          - minimizeUpgradeTime
          type: string
        ledLightsOn:
          description: Toggle for enabling or disabling LED lights on all APs in the
            network (making them run dark)
          type: boolean
      type: object
    inline_response_200_100:
      example:
        counts:
          total: 5
        usage:
          average: 5.962134
          overall:
            total: 0.8008282
            upstream: 1.4658129
            downstream: 6.0274563
      properties:
        usage:
          $ref: '#/components/schemas/inline_response_200_100_usage'
        counts:
          $ref: '#/components/schemas/inline_response_200_100_counts'
      type: object
    inline_object_150:
      example:
        scanningEnabled: true
        advertisingEnabled: true
        uuid: 00000000-0000-0000-000-000000000000
        majorMinorAssignmentMode: Non-unique
        major: 1
        minor: 1
      properties:
        scanningEnabled:
          description: Whether APs will scan for Bluetooth enabled clients.
          type: boolean
        advertisingEnabled:
          description: Whether APs will advertise beacons.
          type: boolean
        uuid:
          description: The UUID to be used in the beacon identifier.
          type: string
        majorMinorAssignmentMode:
          description: The way major and minor number should be assigned to nodes
            in the network. ('Unique', 'Non-unique')
          enum:
          - Non-unique
          - Unique
          type: string
        major:
          description: The major number to be used in the beacon identifier. Only
            valid in 'Non-unique' mode.
          type: integer
        minor:
          description: The minor number to be used in the beacon identifier. Only
            valid in 'Non-unique' mode.
          type: integer
      type: object
    inline_object_151:
      example:
        name: Main Office
        clientBalancingEnabled: true
        minBitrateType: band
        bandSelectionType: ap
        apBandSettings:
          bandOperationMode: dual
          bandSteeringEnabled: true
        twoFourGhzSettings:
          maxPower: 30
          minPower: 5
          minBitrate: 11.0
          validAutoChannels:
          - 1
          - 6
          - 11
          axEnabled: true
          rxsop: -95
        fiveGhzSettings:
          maxPower: 30
          minPower: 8
          minBitrate: 12
          validAutoChannels:
          - 36
          - 40
          - 44
          - 48
          - 52
          - 56
          - 60
          - 64
          - 100
          - 104
          - 108
          - 112
          - 116
          - 120
          - 124
          - 128
          - 132
          - 136
          - 140
          - 144
          - 149
          - 153
          - 157
          - 161
          - 165
          channelWidth: auto
          rxsop: -95
        transmission:
          enabled: true
        perSsidSettings:
          "0":
            minBitrate: 11.0
            bandOperationMode: dual
            bandSteeringEnabled: true
          "1":
            minBitrate: 11.0
            bandOperationMode: dual
            bandSteeringEnabled: true
          "2":
            minBitrate: 11.0
            bandOperationMode: dual
            bandSteeringEnabled: true
          "3":
            minBitrate: 11.0
            bandOperationMode: dual
            bandSteeringEnabled: true
          "4":
            minBitrate: 11.0
            bandOperationMode: dual
            bandSteeringEnabled: true
          "5":
            minBitrate: 11.0
            bandOperationMode: dual
            bandSteeringEnabled: true
          "6":
            minBitrate: 11.0
            bandOperationMode: dual
            bandSteeringEnabled: true
          "7":
            minBitrate: 11.0
            bandOperationMode: dual
            bandSteeringEnabled: true
          "8":
            minBitrate: 11.0
            bandOperationMode: dual
            bandSteeringEnabled: true
          "9":
            minBitrate: 11.0
            bandOperationMode: dual
            bandSteeringEnabled: true
          "10":
            minBitrate: 11.0
            bandOperationMode: dual
            bandSteeringEnabled: true
          "11":
            minBitrate: 11.0
            bandOperationMode: dual
            bandSteeringEnabled: true
          "12":
            minBitrate: 11.0
            bandOperationMode: dual
            bandSteeringEnabled: true
          "13":
            minBitrate: 11.0
            bandOperationMode: dual
            bandSteeringEnabled: true
          "14":
            minBitrate: 11.0
            bandOperationMode: dual
            bandSteeringEnabled: true
      properties:
        name:
          description: The name of the new profile. Must be unique. This param is
            required on creation.
          type: string
        clientBalancingEnabled:
          description: Steers client to best available access point. Can be either
            true or false. Defaults to true.
          type: boolean
        minBitrateType:
          description: Minimum bitrate can be set to either 'band' or 'ssid'. Defaults
            to band.
          enum:
          - band
          - ssid
          type: string
        bandSelectionType:
          description: Band selection can be set to either 'ssid' or 'ap'. This param
            is required on creation.
          enum:
          - ap
          - ssid
          type: string
        apBandSettings:
          $ref: '#/components/schemas/_networks__networkId__wireless_rfProfiles_apBandSettings'
        twoFourGhzSettings:
          $ref: '#/components/schemas/_networks__networkId__wireless_rfProfiles_twoFourGhzSettings'
        fiveGhzSettings:
          $ref: '#/components/schemas/_networks__networkId__wireless_rfProfiles_fiveGhzSettings'
        transmission:
          $ref: '#/components/schemas/_networks__networkId__wireless_rfProfiles_transmission'
        perSsidSettings:
          $ref: '#/components/schemas/_networks__networkId__wireless_rfProfiles_perSsidSettings'
      required:
      - bandSelectionType
      - name
      type: object
    inline_response_200_19_value_1_source:
      description: Source of 'custom' type traffic filter
      example:
        vlan: 1
        port: port
        host: 5
        cidr: cidr
        network: network
      properties:
        port:
          description: 'E.g.: "any", "0" (also means "any"), "8080", "1-1024"'
          type: string
        cidr:
          description: CIDR format address (e.g."192.168.10.1", which is the same
            as "192.168.10.1/32"), or "any". Cannot be used in combination with the
            "vlan" property
          type: string
        network:
          description: 'Meraki network ID. Currently only available under a template
            network, and the value should be ID of either same template network, or
            another template network currently. E.g.: "L_12345678".'
          type: string
        vlan:
          description: VLAN ID of the configured VLAN in the Meraki network. Cannot
            be used in combination with the "cidr" property and is currently only
            available under a template network.
          type: integer
        host:
          description: Host ID in the VLAN. Should not exceed the VLAN subnet capacity.
            Must be used along with the "vlan" property and is currently only available
            under a template network.
          type: integer
      type: object
    inline_response_200_107_components:
      description: Components
      example:
        powerSupplies:
        - powerSupplies
        - powerSupplies
      properties:
        powerSupplies:
          description: Power Supplies
          items:
            type: string
          type: array
      type: object
    inline_response_200_109:
      example:
        serial: serial
        uplinks:
        - addresses:
          - protocol: ipv4
            address: address
            public:
              address: address
            assignmentMode: dynamic
            gateway: gateway
          - protocol: ipv4
            address: address
            public:
              address: address
            assignmentMode: dynamic
            gateway: gateway
          interface: cellular
        - addresses:
          - protocol: ipv4
            address: address
            public:
              address: address
            assignmentMode: dynamic
            gateway: gateway
          - protocol: ipv4
            address: address
            public:
              address: address
            assignmentMode: dynamic
            gateway: gateway
          interface: cellular
        name: name
        mac: mac
        productType: appliance
        network:
          id: id
        tags:
        - tags
        - tags
      properties:
        mac:
          description: The device MAC address.
          type: string
        name:
          description: The device name.
          type: string
        network:
          $ref: '#/components/schemas/_organizations__organizationId__devices_availabilities_network'
        productType:
          description: Device product type.
          enum:
          - appliance
          - camera
          - cellularGateway
          - sensor
          - switch
          - systemsManager
          - wireless
          type: string
        serial:
          description: The device serial number.
          type: string
        tags:
          description: List of custom tags for the device.
          items:
            type: string
          type: array
        uplinks:
          description: List of device uplink addresses information.
          items:
            $ref: '#/components/schemas/_organizations__organizationId__devices_uplinks_addresses_byDevice_uplinks'
          type: array
      type: object
    inline_response_200_108:
      example:
        counts:
          byStatus:
            offline: 1
            dormant: 5
            online: 0
            alerting: 6
      properties:
        counts:
          $ref: '#/components/schemas/inline_response_200_108_counts'
      type: object
    inline_response_200_107:
      example:
        lastReportedAt: lastReportedAt
        components:
          powerSupplies:
          - powerSupplies
          - powerSupplies
        primaryDns: primaryDns
        publicIp: publicIp
        mac: mac
        tags:
        - tags
        - tags
        serial: serial
        name: name
        networkId: networkId
        secondaryDns: secondaryDns
        model: model
        gateway: gateway
        ipType: ipType
        productType: productType
        status: status
        lanIp: lanIp
      properties:
        name:
          description: Device Name
          type: string
        serial:
          description: Device Serial Number
          type: string
        mac:
          description: MAC Address
          type: string
        publicIp:
          description: Public IP Address
          type: string
        networkId:
          description: Network ID
          type: string
        status:
          description: Device Status
          type: string
        lastReportedAt:
          description: Device Last Reported Location
          type: string
        lanIp:
          description: LAN IP Address
          type: string
        gateway:
          description: IP Gateway
          type: string
        ipType:
          description: IP Type
          type: string
        primaryDns:
          description: Primary DNS
          type: string
        secondaryDns:
          description: Secondary DNS
          type: string
        productType:
          description: Product Type
          type: string
        components:
          $ref: '#/components/schemas/inline_response_200_107_components'
        model:
          description: Model
          type: string
        tags:
          description: Tags
          items:
            type: string
          type: array
      type: object
    _networks__networkId__groupPolicies_scheduling:
      description: |2
            The schedule for the group policy. Schedules are applied to days of the week.
      properties:
        enabled:
          description: Whether scheduling is enabled (true) or disabled (false). Defaults
            to false. If true, the schedule objects for each day of the week (monday
            - sunday) are parsed.
          type: boolean
        monday:
          $ref: '#/components/schemas/_networks__networkId__groupPolicies_scheduling_monday'
        tuesday:
          $ref: '#/components/schemas/_networks__networkId__groupPolicies_scheduling_tuesday'
        wednesday:
          $ref: '#/components/schemas/_networks__networkId__groupPolicies_scheduling_wednesday'
        thursday:
          $ref: '#/components/schemas/_networks__networkId__groupPolicies_scheduling_thursday'
        friday:
          $ref: '#/components/schemas/_networks__networkId__groupPolicies_scheduling_friday'
        saturday:
          $ref: '#/components/schemas/_networks__networkId__groupPolicies_scheduling_saturday'
        sunday:
          $ref: '#/components/schemas/_networks__networkId__groupPolicies_scheduling_sunday'
      type: object
    inline_response_200_106:
      example:
        serial: serial
        name: name
        mac: mac
        productType: appliance
        network:
          id: id
        status: complete
        tags:
        - tags
        - tags
      properties:
        mac:
          description: The device MAC address.
          type: string
        name:
          description: The device name.
          type: string
        network:
          $ref: '#/components/schemas/_organizations__organizationId__devices_availabilities_network'
        productType:
          description: Device product type.
          enum:
          - appliance
          - camera
          - cellularGateway
          - sensor
          - switch
          - systemsManager
          - wireless
          type: string
        serial:
          description: The device serial number.
          type: string
        status:
          description: 'The device provisioning status. Possible statuses: unprovisioned,
            incomplete, complete.'
          enum:
          - complete
          - incomplete
          - unprovisioned
          type: string
        tags:
          description: List of custom tags for the device.
          items:
            type: string
          type: array
      type: object
    inline_response_200_105:
      example:
        slots:
        - number: 0
          serial: serial
          model: model
          status: connected
        - number: 0
          serial: serial
          model: model
          status: connected
        serial: serial
        name: name
        mac: mac
        productType: appliance
        network:
          id: id
        tags:
        - tags
        - tags
      properties:
        mac:
          description: The device MAC address.
          type: string
        name:
          description: The device name.
          type: string
        network:
          $ref: '#/components/schemas/_organizations__organizationId__devices_powerModules_statuses_byDevice_network'
        productType:
          description: Device product type.
          enum:
          - appliance
          - camera
          - cellularGateway
          - sensor
          - switch
          - systemsManager
          - wireless
          type: string
        serial:
          description: The device serial number.
          type: string
        tags:
          description: List of custom tags for the device.
          items:
            type: string
          type: array
        slots:
          description: Information for the device's AC power supplies.
          items:
            $ref: '#/components/schemas/_organizations__organizationId__devices_powerModules_statuses_byDevice_slots'
          type: array
      type: object
    _networks__networkId__firmwareUpgrades_staged_stages__json:
      properties:
        group:
          $ref: '#/components/schemas/_networks__networkId__firmwareUpgrades_staged_stages_group_1'
      type: object
    inline_response_200_104:
      example:
        serial: serial
        name: name
        mac: mac
        productType: appliance
        network:
          id: id
        status: alerting
        tags:
        - tags
        - tags
      properties:
        mac:
          description: The device MAC address.
          type: string
        name:
          description: The device name.
          type: string
        network:
          $ref: '#/components/schemas/_organizations__organizationId__devices_availabilities_network'
        productType:
          description: Device product type.
          enum:
          - appliance
          - camera
          - cellularGateway
          - sensor
          - switch
          - systemsManager
          - wireless
          type: string
        serial:
          description: The device serial number.
          type: string
        status:
          description: 'Status of the device. Possible values are: online, alerting,
            offline, dormant.'
          enum:
          - alerting
          - dormant
          - offline
          - online
          type: string
        tags:
          description: List of custom tags for the device.
          items:
            type: string
          type: array
      type: object
    _networks__networkId__switch_dhcp_v4_servers_seen_lastPacket:
      description: Last packet the server received.
      example:
        udp:
          length: 4
          checksum: checksum
        ethernet:
          type: type
        ip:
          protocol: 7
          dscp:
            ecn: 2
            tag: 3
          headerLength: 2
          length: 5
          id: id
          version: 5
          ttl: 9
        destination:
          ipv4:
            address: address
          port: 1
          mac: mac
        source:
          ipv4:
            address: address
          port: 6
          mac: mac
        type: type
        fields:
          chaddr: chaddr
          op: 7
          flags: flags
          giaddr: giaddr
          yiaddr: yiaddr
          htype: 1
          xid: xid
          ciaddr: ciaddr
          magicCookie: magicCookie
          siaddr: siaddr
          sname: sname
          secs: 6
          options:
          - name: name
            value: value
          - name: name
            value: value
          hops: 1
          hlen: 1
      properties:
        source:
          $ref: '#/components/schemas/_networks__networkId__switch_dhcp_v4_servers_seen_lastPacket_source'
        destination:
          $ref: '#/components/schemas/_networks__networkId__switch_dhcp_v4_servers_seen_lastPacket_destination'
        type:
          description: Packet type.
          type: string
        ethernet:
          $ref: '#/components/schemas/_networks__networkId__switch_dhcp_v4_servers_seen_lastPacket_ethernet'
        ip:
          $ref: '#/components/schemas/_networks__networkId__switch_dhcp_v4_servers_seen_lastPacket_ip'
        udp:
          $ref: '#/components/schemas/_networks__networkId__switch_dhcp_v4_servers_seen_lastPacket_udp'
        fields:
          $ref: '#/components/schemas/_networks__networkId__switch_dhcp_v4_servers_seen_lastPacket_fields'
      type: object
    inline_response_201_4_perSsidSettings_6:
      description: Settings for SSID 6
      example:
        minBitrate: 7
        name: name
        bandSteeringEnabled: true
        bandOperationMode: 2.4ghz
      properties:
        name:
          description: Name of SSID
          type: string
        minBitrate:
          description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2',
            '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
          type: integer
        bandOperationMode:
          description: Choice between 'dual', '2.4ghz' or '5ghz'.
          enum:
          - 2.4ghz
          - 5ghz
          - dual
          type: string
        bandSteeringEnabled:
          description: Steers client to most open band between 2.4 GHz and 5 GHz.
            Can be either true or false.
          type: boolean
      type: object
    inline_response_201_4_perSsidSettings_5:
      description: Settings for SSID 5
      example:
        minBitrate: 6
        name: name
        bandSteeringEnabled: true
        bandOperationMode: 2.4ghz
      properties:
        name:
          description: Name of SSID
          type: string
        minBitrate:
          description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2',
            '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
          type: integer
        bandOperationMode:
          description: Choice between 'dual', '2.4ghz' or '5ghz'.
          enum:
          - 2.4ghz
          - 5ghz
          - dual
          type: string
        bandSteeringEnabled:
          description: Steers client to most open band between 2.4 GHz and 5 GHz.
            Can be either true or false.
          type: boolean
      type: object
    inline_object_149:
      example:
        currency: USD
        plans:
        - id: "1"
          price: 5
          bandwidthLimits:
            limitUp: 1000
            limitDown: 1000
          timeLimit: 1 hour
      properties:
        currency:
          description: The currency code of this node group's billing plans
          type: string
        plans:
          description: Array of billing plans in the node group. (Can configure a
            maximum of 5)
          items:
            $ref: '#/components/schemas/_networks__networkId__wireless_billing_plans'
          type: array
      type: object
    inline_response_201_4_perSsidSettings_4:
      description: Settings for SSID 4
      example:
        minBitrate: 1
        name: name
        bandSteeringEnabled: true
        bandOperationMode: 2.4ghz
      properties:
        name:
          description: Name of SSID
          type: string
        minBitrate:
          description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2',
            '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
          type: integer
        bandOperationMode:
          description: Choice between 'dual', '2.4ghz' or '5ghz'.
          enum:
          - 2.4ghz
          - 5ghz
          - dual
          type: string
        bandSteeringEnabled:
          description: Steers client to most open band between 2.4 GHz and 5 GHz.
            Can be either true or false.
          type: boolean
      type: object
    inline_response_201_4_perSsidSettings_3:
      description: Settings for SSID 3
      example:
        minBitrate: 1
        name: name
        bandSteeringEnabled: true
        bandOperationMode: 2.4ghz
      properties:
        name:
          description: Name of SSID
          type: string
        minBitrate:
          description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2',
            '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
          type: integer
        bandOperationMode:
          description: Choice between 'dual', '2.4ghz' or '5ghz'.
          enum:
          - 2.4ghz
          - 5ghz
          - dual
          type: string
        bandSteeringEnabled:
          description: Steers client to most open band between 2.4 GHz and 5 GHz.
            Can be either true or false.
          type: boolean
      type: object
    inline_object_147:
      example:
        url: https://www.example.com/path
        sharedSecret: shhh
        payloadTemplateId: wpt_00001
        payloadTemplateName: Payload Template
        alertTypeId: power_supply_down
      properties:
        url:
          description: The URL where the test webhook will be sent
          type: string
        sharedSecret:
          default: ""
          description: The shared secret the test webhook will send. Optional. Defaults
            to an empty string.
          type: string
        payloadTemplateId:
          description: The ID of the payload template of the test webhook. Defaults
            to the HTTP server's template ID if one exists for the given URL, or Generic
            template ID otherwise
          type: string
        payloadTemplateName:
          description: The name of the payload template.
          type: string
        alertTypeId:
          default: power_supply_down
          description: The type of alert which the test webhook will send. Optional.
            Defaults to power_supply_down.
          type: string
      required:
      - url
      type: object
    inline_object_148:
      example:
        enabled: true
        vlanId: 100
        protocols:
        - radius
        - snmp
        - syslog
        - ldap
        accessPoints:
        - serial: Q234-ABCD-5678
          alternateManagementIp: 1.2.3.4
          subnetMask: 255.255.255.0
          gateway: 1.2.3.5
          dns1: 8.8.8.8
          dns2: 8.8.4.4
      properties:
        enabled:
          description: Boolean value to enable or disable alternate management interface
          type: boolean
        vlanId:
          description: Alternate management interface VLAN, must be between 1 and
            4094
          type: integer
        protocols:
          description: 'Can be one or more of the following values: ''radius'', ''snmp'',
            ''syslog'' or ''ldap'''
          items:
            enum:
            - ldap
            - radius
            - snmp
            - syslog
            type: string
          type: array
        accessPoints:
          description: 'Array of access point serial number and IP assignment. Note:
            accessPoints IP assignment is not applicable for template networks, in
            other words, do not put ''accessPoints'' in the body when updating template
            networks. Also, an empty ''accessPoints'' array will remove all previous
            static IP assignments'
          items:
            $ref: '#/components/schemas/_networks__networkId__wireless_alternateManagementInterface_accessPoints'
          type: array
      type: object
    inline_response_201_4_perSsidSettings_9:
      description: Settings for SSID 9
      example:
        minBitrate: 5
        name: name
        bandSteeringEnabled: true
        bandOperationMode: 2.4ghz
      properties:
        name:
          description: Name of SSID
          type: string
        minBitrate:
          description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2',
            '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
          type: integer
        bandOperationMode:
          description: Choice between 'dual', '2.4ghz' or '5ghz'.
          enum:
          - 2.4ghz
          - 5ghz
          - dual
          type: string
        bandSteeringEnabled:
          description: Steers client to most open band between 2.4 GHz and 5 GHz.
            Can be either true or false.
          type: boolean
      type: object
    inline_object_145:
      example:
        name: Custom Template
        body: '{"event_type":"{{alertTypeId}}","client_payload":{"text":"{{alertData}}"}}'
        headers:
        - name: Authorization
          template: Bearer {{sharedSecret}}
        bodyFile: Qm9keSBGaWxl
        headersFile: SGVhZGVycyBGaWxl
      properties:
        name:
          description: The name of the new template
          type: string
        body:
          description: The liquid template used for the body of the webhook message.
            Either `body` or `bodyFile` must be specified.
          type: string
        headers:
          description: The liquid template used with the webhook headers.
          items:
            $ref: '#/components/schemas/_networks__networkId__webhooks_payloadTemplates_headers_1'
          type: array
        bodyFile:
          description: A file containing liquid template used for the body of the
            webhook message. Either `body` or `bodyFile` must be specified.
          format: byte
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
        headersFile:
          description: A file containing the liquid template used with the webhook
            headers.
          format: byte
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
      required:
      - name
      type: object
    inline_response_201_4_perSsidSettings_8:
      description: Settings for SSID 8
      example:
        minBitrate: 4
        name: name
        bandSteeringEnabled: true
        bandOperationMode: 2.4ghz
      properties:
        name:
          description: Name of SSID
          type: string
        minBitrate:
          description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2',
            '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
          type: integer
        bandOperationMode:
          description: Choice between 'dual', '2.4ghz' or '5ghz'.
          enum:
          - 2.4ghz
          - 5ghz
          - dual
          type: string
        bandSteeringEnabled:
          description: Steers client to most open band between 2.4 GHz and 5 GHz.
            Can be either true or false.
          type: boolean
      type: object
    _organizations__organizationId__earlyAccess_features_descriptions:
      description: Descriptions of the early access feature
      example:
        short: short
        long: long
      properties:
        short:
          description: Short description
          type: string
        long:
          description: Long description
          type: string
      type: object
    inline_object_146:
      example:
        name: Custom Template
        body: '{"event_type":"{{alertTypeId}}","client_payload":{"text":"{{alertData}}"}}'
        headers:
        - name: Authorization
          template: Bearer {{sharedSecret}}
        bodyFile: Qm9keSBGaWxl
        headersFile: SGVhZGVycyBGaWxl
      properties:
        name:
          description: The name of the template
          type: string
        body:
          description: The liquid template used for the body of the webhook message.
          type: string
        headers:
          description: The liquid template used with the webhook headers.
          items:
            $ref: '#/components/schemas/_networks__networkId__webhooks_payloadTemplates_headers_1'
          type: array
        bodyFile:
          description: A file containing liquid template used for the body of the
            webhook message.
          format: byte
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
        headersFile:
          description: A file containing the liquid template used with the webhook
            headers.
          format: byte
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
      type: object
    inline_response_201_4_perSsidSettings_7:
      description: Settings for SSID 7
      example:
        minBitrate: 1
        name: name
        bandSteeringEnabled: true
        bandOperationMode: 2.4ghz
      properties:
        name:
          description: Name of SSID
          type: string
        minBitrate:
          description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2',
            '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
          type: integer
        bandOperationMode:
          description: Choice between 'dual', '2.4ghz' or '5ghz'.
          enum:
          - 2.4ghz
          - 5ghz
          - dual
          type: string
        bandSteeringEnabled:
          description: Steers client to most open band between 2.4 GHz and 5 GHz.
            Can be either true or false.
          type: boolean
      type: object
    inline_response_200_1_interfaces_wan1_pppoe_authentication:
      description: Settings for PPPoE Authentication.
      example:
        enabled: true
        username: username
      properties:
        enabled:
          description: Whether PPPoE authentication is enabled.
          type: boolean
        username:
          description: Username for PPPoE authentication.
          type: string
      type: object
    inline_object_143:
      example:
        name: Example Webhook Server
        url: https://example.com
        sharedSecret: shhh
        payloadTemplate:
          payloadTemplateId: wpt_00001
          name: Meraki (included)
      properties:
        name:
          description: A name for easy reference to the HTTP server
          type: string
        url:
          description: The URL of the HTTP server. Once set, cannot be updated.
          type: string
        sharedSecret:
          description: A shared secret that will be included in POSTs sent to the
            HTTP server. This secret can be used to verify that the request was sent
            by Meraki.
          type: string
        payloadTemplate:
          $ref: '#/components/schemas/_networks__networkId__webhooks_httpServers_payloadTemplate_1'
      required:
      - name
      - url
      type: object
    inline_response_200_114:
      example:
        thresholds:
          type: type
          byNetwork:
          - responseDuration: 6
            goodput: 0
            networkId: networkId
          - responseDuration: 6
            goodput: 0
            networkId: networkId
        name: name
        applicationId: applicationId
      properties:
        applicationId:
          description: Application identifier
          type: string
        name:
          description: Application name
          type: string
        thresholds:
          $ref: '#/components/schemas/_organizations__organizationId__insight_applications_thresholds'
      type: object
    _networks__networkId__firmwareUpgrades_staged_events_stages:
      properties:
        group:
          $ref: '#/components/schemas/_networks__networkId__firmwareUpgrades_staged_events_group'
        milestones:
          $ref: '#/components/schemas/_networks__networkId__firmwareUpgrades_staged_events_milestones'
      type: object
    inline_object_144:
      example:
        name: Example Webhook Server
        sharedSecret: shhh
        payloadTemplate:
          payloadTemplateId: wpt_00001
      properties:
        name:
          description: A name for easy reference to the HTTP server
          type: string
        sharedSecret:
          description: A shared secret that will be included in POSTs sent to the
            HTTP server. This secret can be used to verify that the request was sent
            by Meraki.
          type: string
        payloadTemplate:
          $ref: '#/components/schemas/_networks__networkId__webhooks_httpServers__httpServerId__payloadTemplate'
      type: object
    inline_response_200_113:
      example:
        upgrade:
          upgradeBatchId: upgradeBatchId
          fromVersion:
            releaseDate: releaseDate
            releaseType: releaseType
            id: id
            shortName: shortName
          time: time
          id: id
          staged:
            group:
              id: id
          toVersion:
            releaseDate: releaseDate
            releaseType: releaseType
            id: id
            shortName: shortName
          status: status
        serial: serial
        name: name
        deviceStatus: deviceStatus
      properties:
        serial:
          description: Serial of the device
          type: string
        name:
          description: Name assigned to the device
          type: string
        deviceStatus:
          description: Status of the device upgrade
          type: string
        upgrade:
          $ref: '#/components/schemas/_organizations__organizationId__firmware_upgrades_byDevice_upgrade'
      type: object
    _networks__networkId__appliance_trafficShaping_uplinkSelection_failoverAndFailback_immediate:
      description: Immediate WAN transition terminates all flows (new and existing)
        on current WAN when it is deemed unreliable.
      properties:
        enabled:
          description: Toggle for enabling or disabling immediate WAN failover and
            failback
          type: boolean
      required:
      - enabled
      type: object
    inline_object_141:
      example:
        mode: detailed
        customPieChartItems:
        - name: Item from hostname
          type: host
          value: example.com
        - name: Item from port
          type: port
          value: "440"
        - name: Item from IP
          type: ipRange
          value: 192.1.0.0
        - name: Item from IP range (CIDR)
          type: ipRange
          value: 192.2.0.0/16
        - name: Item from IP range with port
          type: ipRange
          value: 192.3.0.0/16:80
      properties:
        mode:
          description: |2
                The traffic analysis mode for the network. Can be one of 'disabled' (do not collect traffic types),
                'basic' (collect generic traffic categories), or 'detailed' (collect destination hostnames).
          enum:
          - basic
          - detailed
          - disabled
          type: string
        customPieChartItems:
          description: The list of items that make up the custom pie chart for traffic
            reporting.
          items:
            $ref: '#/components/schemas/_networks__networkId__trafficAnalysis_customPieChartItems'
          type: array
      type: object
    inline_response_200_112:
      example:
        upgradeBatchId: upgradeBatchId
        completedAt: completedAt
        fromVersion:
          releaseDate: 2000-01-23T04:56:07.000+00:00
          releaseType: releaseType
          id: id
          shortName: shortName
        time: 2000-01-23T04:56:07.000+00:00
        upgradeId: upgradeId
        productType: productType
        network:
          name: name
          id: id
        status: status
        toVersion:
          releaseDate: 2000-01-23T04:56:07.000+00:00
          releaseType: releaseType
          id: id
          shortName: shortName
      properties:
        upgradeId:
          description: The upgrade
          type: string
        upgradeBatchId:
          description: The upgrade batch
          type: string
        network:
          $ref: '#/components/schemas/_organizations__organizationId__firmware_upgrades_network'
        status:
          description: 'Status of upgrade event: [Cancelled, Completed]'
          type: string
        time:
          description: Scheduled start time
          format: date-time
          type: string
        completedAt:
          description: Timestamp when upgrade completed. Null if status pending.
          type: string
        productType:
          description: product upgraded [wireless, appliance, switch, systemsManager,
            camera, cellularGateway, sensor]
          type: string
        toVersion:
          $ref: '#/components/schemas/_organizations__organizationId__firmware_upgrades_toVersion'
        fromVersion:
          $ref: '#/components/schemas/_organizations__organizationId__firmware_upgrades_fromVersion'
      type: object
    inline_object_142:
      example:
        retainConfigs: true
      properties:
        retainConfigs:
          description: Optional boolean to retain all the current configs given by
            the template.
          type: boolean
      type: object
    inline_response_200_111:
      example:
        isOrgScopedOnly: true
        name: name
        topic: topic
        documentationLink: documentationLink
        shortName: shortName
        descriptions:
          short: short
          long: long
        supportLink: supportLink
      properties:
        shortName:
          description: Short name of the early access feature
          type: string
        name:
          description: Name of the early access feature
          type: string
        descriptions:
          $ref: '#/components/schemas/_organizations__organizationId__earlyAccess_features_descriptions'
        topic:
          description: Topic of the early access feature
          type: string
        isOrgScopedOnly:
          description: If this early access feature can only be opted in for the entire
            organization
          type: boolean
        documentationLink:
          description: Link to the documentation of this early access feature
          type: string
        supportLink:
          description: Link to get support for this early access feature
          type: string
      type: object
    inline_response_200_110:
      example:
        timeSeries:
        - lossPercent: 0.8008282
          latencyMs: 6.0274563
          ts: 2000-01-23T04:56:07.000+00:00
        - lossPercent: 0.8008282
          latencyMs: 6.0274563
          ts: 2000-01-23T04:56:07.000+00:00
        serial: serial
        uplink: uplink
        ip: ip
        networkId: networkId
      properties:
        networkId:
          description: Network ID
          type: string
        serial:
          description: Serial of MX device
          type: string
        uplink:
          description: Uplink interface (wan1, wan2, or cellular)
          type: string
        ip:
          description: IP address of uplink
          type: string
        timeSeries:
          description: Loss and latency timeseries data
          items:
            $ref: '#/components/schemas/_organizations__organizationId__devices_uplinksLossAndLatency_timeSeries'
          type: array
      type: object
    _networks__networkId__switch_linkAggregations_switchProfilePorts:
      properties:
        profile:
          description: Profile identifier.
          type: string
        portId:
          description: 'Port identifier of switch port. For modules, the identifier
            is "SlotNumber_ModuleType_PortNumber" (Ex: "1_8X10G_1"), otherwise it
            is just the port number (Ex: "8").'
          type: string
      required:
      - portId
      - profile
      type: object
    inline_object_140:
      example:
        servers:
        - host: 1.2.3.4
          port: 443
          roles:
          - Wireless event log
          - URLs
      properties:
        servers:
          description: A list of the syslog servers for this network
          items:
            $ref: '#/components/schemas/_networks__networkId__syslogServers_servers'
          type: array
      required:
      - servers
      type: object
    _networks__networkId__wireless_ssids__number__splash_settings_guestSponsorship:
      description: Details associated with guest sponsored splash.
      properties:
        durationInMinutes:
          description: Duration in minutes of sponsored guest authorization. Must
            be between 1 and 60480 (6 weeks)
          type: integer
        guestCanRequestTimeframe:
          description: Whether or not guests can specify how much time they are requesting.
          type: boolean
      type: object
    _organizations__organizationId__summary_top_clients_byUsage_network:
      description: ""
      example:
        name: name
        id: id
      properties:
        name:
          description: Name of network
          type: string
        id:
          description: ID of network
          type: string
      type: object
    inline_response_200_119:
      example:
        resultingLicenses:
        - durationInDays: 1
          orderNumber: orderNumber
          headLicenseId: headLicenseId
          seatCount: 0
          totalDurationInDays: 6
          licenseType: licenseType
          licenseKey: licenseKey
          deviceSerial: deviceSerial
          claimDate: claimDate
          networkId: networkId
          id: id
          state: active
          activationDate: activationDate
          permanentlyQueuedLicenses:
          - licenseType: licenseType
            licenseKey: licenseKey
            durationInDays: 5
            orderNumber: orderNumber
            id: id
          - licenseType: licenseType
            licenseKey: licenseKey
            durationInDays: 5
            orderNumber: orderNumber
            id: id
          expirationDate: expirationDate
        - durationInDays: 1
          orderNumber: orderNumber
          headLicenseId: headLicenseId
          seatCount: 0
          totalDurationInDays: 6
          licenseType: licenseType
          licenseKey: licenseKey
          deviceSerial: deviceSerial
          claimDate: claimDate
          networkId: networkId
          id: id
          state: active
          activationDate: activationDate
          permanentlyQueuedLicenses:
          - licenseType: licenseType
            licenseKey: licenseKey
            durationInDays: 5
            orderNumber: orderNumber
            id: id
          - licenseType: licenseType
            licenseKey: licenseKey
            durationInDays: 5
            orderNumber: orderNumber
            id: id
          expirationDate: expirationDate
      properties:
        resultingLicenses:
          description: Resulting licenses from the move
          items:
            $ref: '#/components/schemas/inline_response_200_118'
          type: array
      type: object
    inline_response_200_118:
      example:
        durationInDays: 1
        orderNumber: orderNumber
        headLicenseId: headLicenseId
        seatCount: 0
        totalDurationInDays: 6
        licenseType: licenseType
        licenseKey: licenseKey
        deviceSerial: deviceSerial
        claimDate: claimDate
        networkId: networkId
        id: id
        state: active
        activationDate: activationDate
        permanentlyQueuedLicenses:
        - licenseType: licenseType
          licenseKey: licenseKey
          durationInDays: 5
          orderNumber: orderNumber
          id: id
        - licenseType: licenseType
          licenseKey: licenseKey
          durationInDays: 5
          orderNumber: orderNumber
          id: id
        expirationDate: expirationDate
      properties:
        id:
          description: License ID
          type: string
        licenseType:
          description: License type
          type: string
        licenseKey:
          description: License key
          type: string
        orderNumber:
          description: Order number
          type: string
        deviceSerial:
          description: Serial number of the device the license is assigned to
          type: string
        networkId:
          description: ID of the network the license is assigned to
          type: string
        state:
          description: The state of the license. All queued licenses have a status
            of `recentlyQueued`.
          enum:
          - active
          - expired
          - expiring
          - recentlyQueued
          - unused
          - unusedActive
          type: string
        seatCount:
          description: The number of seats of the license. Only applicable to SM licenses.
          type: integer
        totalDurationInDays:
          description: The duration of the license plus all permanently queued licenses
            associated with it
          type: integer
        durationInDays:
          description: The duration of the individual license
          type: integer
        permanentlyQueuedLicenses:
          description: DEPRECATED List of permanently queued licenses attached to
            the license. Instead, use /organizations/{organizationId}/licenses?deviceSerial=
            to retrieved queued licenses for a given device.
          items:
            $ref: '#/components/schemas/_organizations__organizationId__licenses_permanentlyQueuedLicenses'
          type: array
        claimDate:
          description: The date the license was claimed into the organization
          type: string
        activationDate:
          description: The date the license started burning
          type: string
        expirationDate:
          description: The date the license will expire
          type: string
        headLicenseId:
          description: The id of the head license this license is queued behind. If
            there is no head license, it returns nil.
          type: string
      type: object
    inline_response_200_117:
      example:
        importId: importId
        device:
          created: true
          url: url
          status: status
      properties:
        importId:
          description: Database ID for the new entity entry.
          type: string
        device:
          $ref: '#/components/schemas/_organizations__organizationId__inventory_onboarding_cloudMonitoring_imports_device'
      type: object
    inline_response_200_116:
      example:
        claimedAt: 2000-01-23T04:56:07.000+00:00
        orderNumber: orderNumber
        serial: serial
        licenseExpirationDate: 2000-01-23T04:56:07.000+00:00
        name: name
        model: model
        networkId: networkId
        mac: mac
        productType: productType
        tags:
        - tags
        - tags
      properties:
        mac:
          description: MAC address of the device
          type: string
        serial:
          description: Serial number of the device
          type: string
        name:
          description: Name of the device
          type: string
        model:
          description: Model type of the device
          type: string
        networkId:
          description: Network Id of the device
          type: string
        orderNumber:
          description: Order number of the device
          type: string
        claimedAt:
          description: Claimed time of the device
          format: date-time
          type: string
        licenseExpirationDate:
          description: License expiration date of the device
          format: date-time
          type: string
        tags:
          description: Device tags
          items:
            type: string
          type: array
        productType:
          description: Product type of the device
          type: string
      type: object
    _networks__networkId__alerts_history_destinations:
      description: the destinations this alert is configured to be delivered to
      example:
        webhook:
          sentAt: sentAt
        sms:
          sentAt: sentAt
        email:
          sentAt: sentAt
        push:
          sentAt: sentAt
      properties:
        email:
          $ref: '#/components/schemas/_networks__networkId__alerts_history_destinations_email'
        push:
          $ref: '#/components/schemas/_networks__networkId__alerts_history_destinations_push'
        sms:
          $ref: '#/components/schemas/_networks__networkId__alerts_history_destinations_sms'
        webhook:
          $ref: '#/components/schemas/_networks__networkId__alerts_history_destinations_webhook'
      type: object
    inline_response_200_115:
      example:
        address: address
        name: name
        id: id
        bestEffortMonitoringEnabled: true
      properties:
        id:
          description: Monitored media server id
          type: string
        name:
          description: The name of the VoIP provider
          type: string
        address:
          description: The IP address (IPv4 only) or hostname of the media server
            to monitor
          type: string
        bestEffortMonitoringEnabled:
          description: Indicates that if the media server doesn't respond to ICMP
            pings, the nearest hop will be used in its stead
          type: boolean
      type: object
    _networks__networkId__switch_alternateManagementInterface_switches:
      properties:
        serial:
          description: Switch serial number
          type: string
        alternateManagementIp:
          description: Switch alternative management IP. To remove a prior IP setting,
            provide an empty string
          type: string
        subnetMask:
          description: Switch subnet mask must be in IP format. Only and must be specified
            for Polaris switches
          type: string
        gateway:
          description: Switch gateway must be in IP format. Only and must be specified
            for Polaris switches
          type: string
      required:
      - alternateManagementIp
      - serial
      type: object
    inline_response_200_124_apiAuthentication:
      description: Details for indicating whether organization will restrict access
        to API (but not Dashboard) to certain IP addresses.
      example:
        ipRestrictionsForKeys:
          ranges:
          - ranges
          - ranges
          enabled: true
      properties:
        ipRestrictionsForKeys:
          $ref: '#/components/schemas/inline_response_200_124_apiAuthentication_ipRestrictionsForKeys'
      type: object
    inline_response_200_87_selfRegistration:
      description: Self-registration for splash with Meraki authentication.
      example:
        authorizationType: admin
        enabled: true
      properties:
        enabled:
          description: Whether or not to allow users to create their own account on
            the network.
          type: boolean
        authorizationType:
          description: How created user accounts should be authorized.
          enum:
          - admin
          - auto
          - self_email
          type: string
      type: object
    inline_response_200_27_products_wireless_nextUpgrade_toVersion:
      description: Details of the version the device will upgrade to if it exists
      example:
        releaseDate: 2000-01-23T04:56:07.000+00:00
        releaseType: releaseType
        id: id
        shortName: shortName
        firmware: firmware
      properties:
        id:
          description: Firmware version identifier
          type: string
        firmware:
          description: Name of the firmware version
          type: string
        shortName:
          description: Firmware version short name
          type: string
        releaseType:
          description: Release type of the firmware version
          type: string
        releaseDate:
          description: Release date of the firmware version
          format: date-time
          type: string
      type: object
    _networks__networkId__sensor_alerts_profiles_schedule_1:
      description: The sensor schedule to use with the alert profile.
      properties:
        id:
          description: ID of the sensor schedule to use with the alert profile. If
            not defined, the alert profile will be active at all times.
          type: string
      type: object
    _networks__networkId__firmwareUpgrades_staged_events_products:
      description: Contains firmware upgrade version information
      properties:
        switch:
          $ref: '#/components/schemas/_networks__networkId__firmwareUpgrades_staged_events_products_switch'
      type: object
    inline_response_200_29_products_switch_nextUpgrade:
      description: Details of the next firmware upgrade
      example:
        toVersion:
          id: id
          shortName: shortName
      properties:
        toVersion:
          $ref: '#/components/schemas/inline_response_200_29_products_switch_nextUpgrade_toVersion'
      type: object
    _organizations__organizationId__firmware_upgrades_byDevice_upgrade_toVersion:
      description: Version the device is upgrading to
      example:
        releaseDate: releaseDate
        releaseType: releaseType
        id: id
        shortName: shortName
      properties:
        id:
          description: ID of the initial firmware version
          type: string
        shortName:
          description: Firmware version short name
          type: string
        releaseType:
          description: Release type of the firmware version
          type: string
        releaseDate:
          description: Release date of the firmware version
          type: string
      type: object
    _organizations__organizationId__sensor_readings_latest_readings:
      example:
        button:
          pressType: long
        tvoc:
          concentration: 9
        door:
          open: true
        pm25:
          concentration: 5
        metric: battery
        noise:
          ambient:
            level: 5
        temperature:
          celsius: 7.0614014
          fahrenheit: 2.302136
        humidity:
          relativePercentage: 6
        indoorAirQuality:
          score: 1
        battery:
          percentage: 0
        water:
          present: true
        ts: ts
      properties:
        ts:
          description: Time at which the reading occurred, in ISO8601 format.
          type: string
        metric:
          description: Type of sensor reading.
          enum:
          - battery
          - button
          - door
          - humidity
          - indoorAirQuality
          - noise
          - pm25
          - temperature
          - tvoc
          - water
          type: string
        battery:
          $ref: '#/components/schemas/_organizations__organizationId__sensor_readings_history_battery'
        button:
          $ref: '#/components/schemas/_organizations__organizationId__sensor_readings_history_button'
        door:
          $ref: '#/components/schemas/_organizations__organizationId__sensor_readings_history_door'
        humidity:
          $ref: '#/components/schemas/_organizations__organizationId__sensor_readings_history_humidity'
        indoorAirQuality:
          $ref: '#/components/schemas/_organizations__organizationId__sensor_readings_history_indoorAirQuality'
        noise:
          $ref: '#/components/schemas/_organizations__organizationId__sensor_readings_history_noise'
        pm25:
          $ref: '#/components/schemas/_organizations__organizationId__sensor_readings_history_pm25'
        temperature:
          $ref: '#/components/schemas/_organizations__organizationId__sensor_readings_history_temperature'
        tvoc:
          $ref: '#/components/schemas/_organizations__organizationId__sensor_readings_history_tvoc'
        water:
          $ref: '#/components/schemas/_organizations__organizationId__sensor_readings_history_water'
      type: object
    _networks__networkId__sensor_alerts_profiles_threshold_noise_ambient:
      description: Ambient noise threshold. One of 'level' or 'quality' must be provided.
      example:
        level: 2
        quality: fair
      properties:
        level:
          description: Alerting threshold as adjusted decibels.
          type: integer
        quality:
          description: Alerting threshold as a qualitative ambient noise level.
          enum:
          - fair
          - good
          - inadequate
          - poor
          type: string
      type: object
    inline_response_200_125_resultingNetwork:
      description: Network after the combination
      example:
        organizationId: organizationId
        isBoundToConfigTemplate: true
        notes: notes
        name: name
        timeZone: timeZone
        productTypes:
        - productTypes
        - productTypes
        id: id
        enrollmentString: enrollmentString
        url: url
        tags:
        - tags
        - tags
      properties:
        id:
          description: Network ID
          type: string
        organizationId:
          description: Organization ID
          type: string
        name:
          description: Network name
          type: string
        productTypes:
          description: List of the product types that the network supports
          items:
            type: string
          type: array
        timeZone:
          description: Timezone of the network
          type: string
        tags:
          description: Network tags
          items:
            type: string
          type: array
        enrollmentString:
          description: Enrollment string for the network
          type: string
        url:
          description: URL to the network Dashboard UI
          type: string
        notes:
          description: Notes for the network
          type: string
        isBoundToConfigTemplate:
          description: If the network is bound to a config template
          type: boolean
      type: object
    inline_response_201_4_perSsidSettings_2:
      description: Settings for SSID 2
      example:
        minBitrate: 1
        name: name
        bandSteeringEnabled: true
        bandOperationMode: 2.4ghz
      properties:
        name:
          description: Name of SSID
          type: string
        minBitrate:
          description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2',
            '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
          type: integer
        bandOperationMode:
          description: Choice between 'dual', '2.4ghz' or '5ghz'.
          enum:
          - 2.4ghz
          - 5ghz
          - dual
          type: string
        bandSteeringEnabled:
          description: Steers client to most open band between 2.4 GHz and 5 GHz.
            Can be either true or false.
          type: boolean
      type: object
    inline_response_201_4_perSsidSettings_1:
      description: Settings for SSID 1
      example:
        minBitrate: 7
        name: name
        bandSteeringEnabled: true
        bandOperationMode: 2.4ghz
      properties:
        name:
          description: Name of SSID
          type: string
        minBitrate:
          description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2',
            '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
          type: integer
        bandOperationMode:
          description: Choice between 'dual', '2.4ghz' or '5ghz'.
          enum:
          - 2.4ghz
          - 5ghz
          - dual
          type: string
        bandSteeringEnabled:
          description: Steers client to most open band between 2.4 GHz and 5 GHz.
            Can be either true or false.
          type: boolean
      type: object
    _devices__serial__cellular_sims_simFailover:
      description: SIM Failover settings.
      properties:
        enabled:
          description: Failover to secondary SIM (optional)
          type: boolean
      type: object
    inline_response_201_4_perSsidSettings_0:
      description: Settings for SSID 0
      example:
        minBitrate: 4
        name: name
        bandSteeringEnabled: true
        bandOperationMode: 2.4ghz
      properties:
        name:
          description: Name of SSID
          type: string
        minBitrate:
          description: Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2',
            '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
          type: integer
        bandOperationMode:
          description: Choice between 'dual', '2.4ghz' or '5ghz'.
          enum:
          - 2.4ghz
          - 5ghz
          - dual
          type: string
        bandSteeringEnabled:
          description: Steers client to most open band between 2.4 GHz and 5 GHz.
            Can be either true or false.
          type: boolean
      type: object
    inline_response_200_41_securePort:
      description: A hash of SecureConnect options applied to the Network.
      example:
        enabled: true
      properties:
        enabled:
          description: Enables / disables SecureConnect on the network. Optional.
          type: boolean
      type: object
    _networks__networkId__switch_accessPolicies_dot1x:
      description: 802.1x Settings
      example:
        controlDirection: both
      properties:
        controlDirection:
          description: Supports either 'both' or 'inbound'. Set to 'inbound' to allow
            unauthorized egress on the switchport. Set to 'both' to control both traffic
            directions with authorization. Defaults to 'both'
          enum:
          - both
          - inbound
          type: string
      type: object
    inline_response_201_5_actions:
      example:
        resource: resource
        operation: operation
      properties:
        resource:
          description: Unique identifier for the resource to be acted on
          type: string
        operation:
          description: The operation to be used by this action
          type: string
      required:
      - operation
      - resource
      type: object
    _networks__networkId__firmwareUpgrades_products_wireless_nextUpgrade:
      description: The pending firmware upgrade if it exists
      properties:
        time:
          description: The time of the last successful upgrade
          type: string
        toVersion:
          $ref: '#/components/schemas/_networks__networkId__firmwareUpgrades_products_wireless_nextUpgrade_toVersion'
      type: object
    _networks__networkId__merakiAuthUsers_authorizations:
      example:
        ssidNumber: 0
        authorizedByName: authorizedByName
        authorizedZone: authorizedZone
        authorizedByEmail: authorizedByEmail
        expiresAt: 2000-01-23T04:56:07.000+00:00
      properties:
        ssidNumber:
          description: SSID number
          type: integer
        authorizedZone:
          description: Authorized zone of the user
          type: string
        expiresAt:
          description: Authorization expiration time
          format: date-time
          type: string
        authorizedByName:
          description: User is authorized by the account name
          type: string
        authorizedByEmail:
          description: User is authorized by the account email address
          type: string
      type: object
    _networks__networkId__switch_dhcp_v4_servers_seen_lastAck:
      description: Attributes of the server's last ack.
      example:
        ipv4:
          address: address
        ts: 2000-01-23T04:56:07.000+00:00
      properties:
        ts:
          description: Last time the server was acked.
          format: date-time
          type: string
        ipv4:
          $ref: '#/components/schemas/_networks__networkId__switch_dhcp_v4_servers_seen_lastAck_ipv4'
      type: object
    _organizations__organizationId__adaptivePolicy_policies_destinationGroup:
      description: The destination adaptive policy group (requires one unique attribute)
      properties:
        id:
          description: The ID of the destination adaptive policy group
          type: string
        name:
          description: The name of the destination adaptive policy group
          type: string
        sgt:
          description: The SGT of the destination adaptive policy group
          type: integer
      type: object
    inline_response_200_41_clientPrivacy:
      description: Privacy settings
      example:
        expireDataOlderThan: 0
        expireDataBefore: 2000-01-23T04:56:07.000+00:00
      properties:
        expireDataOlderThan:
          description: The number of days, weeks, or months in Epoch time to expire
            the data before
          type: integer
        expireDataBefore:
          description: The date to expire the data before
          format: date-time
          type: string
      type: object
    inline_object_118:
      example:
        id: NDU2N18yXzM=
        switchPorts:
        - serial: Q234-ABCD-0001
          portId: "1"
        - serial: Q234-ABCD-0002
          portId: "2"
        - serial: Q234-ABCD-0003
          portId: "3"
        - serial: Q234-ABCD-0004
          portId: "4"
        - serial: Q234-ABCD-0005
          portId: "5"
        - serial: Q234-ABCD-0006
          portId: "6"
        - serial: Q234-ABCD-0007
          portId: "7"
        - serial: Q234-ABCD-0008
          portId: "8"
      properties:
        switchPorts:
          description: Array of switch or stack ports for updating aggregation group.
            Minimum 2 and maximum 8 ports are supported.
          items:
            $ref: '#/components/schemas/_networks__networkId__switch_linkAggregations_switchPorts'
          type: array
        switchProfilePorts:
          description: Array of switch profile ports for updating aggregation group.
            Minimum 2 and maximum 8 ports are supported.
          items:
            $ref: '#/components/schemas/_networks__networkId__switch_linkAggregations_switchProfilePorts'
          type: array
      type: object
    inline_object_119:
      example:
        defaultMtuSize: 9578
        overrides:
        - switches:
          - Q234-ABCD-0001
          - Q234-ABCD-0002
          - Q234-ABCD-0003
          mtuSize: 1500
        - switchProfiles:
          - "1284392014819"
          - "2983092129865"
          mtuSize: 1600
      properties:
        defaultMtuSize:
          description: MTU size for the entire network. Default value is 9578.
          type: integer
        overrides:
          description: Override MTU size for individual switches or switch profiles.
            An empty array will clear overrides.
          items:
            $ref: '#/components/schemas/inline_response_200_69_overrides'
          type: array
      type: object
    inline_object_116:
      example:
        mappings:
        - dscp: 1
          cos: 1
          title: Video
      properties:
        mappings:
          description: An array of DSCP to CoS mappings. An empty array will reset
            the mappings to default.
          items:
            $ref: '#/components/schemas/_networks__networkId__switch_dscpToCosMappings_mappings'
          type: array
      required:
      - mappings
      type: object
    _networks__networkId__appliance_firewall_portForwardingRules_rules:
      properties:
        name:
          description: A descriptive name for the rule
          type: string
        lanIp:
          description: The IP address of the server or device that hosts the internal
            resource that you wish to make available on the WAN
          type: string
        uplink:
          description: The physical WAN interface on which the traffic will arrive
            ('internet1' or, if available, 'internet2' or 'both')
          enum:
          - both
          - internet1
          - internet2
          type: string
        publicPort:
          description: A port or port ranges that will be forwarded to the host on
            the LAN
          type: string
        localPort:
          description: A port or port ranges that will receive the forwarded traffic
            from the WAN
          type: string
        allowedIps:
          description: An array of ranges of WAN IP addresses that are allowed to
            make inbound connections on the specified ports or port ranges (or any)
          items:
            type: string
          type: array
        protocol:
          description: TCP or UDP
          enum:
          - tcp
          - udp
          type: string
      required:
      - allowedIps
      - lanIp
      - localPort
      - protocol
      - publicPort
      type: object
    inline_object_117:
      example:
        switchPorts:
        - serial: Q234-ABCD-0001
          portId: "1"
        - serial: Q234-ABCD-0002
          portId: "2"
        - serial: Q234-ABCD-0003
          portId: "3"
        - serial: Q234-ABCD-0004
          portId: "4"
        - serial: Q234-ABCD-0005
          portId: "5"
        - serial: Q234-ABCD-0006
          portId: "6"
        - serial: Q234-ABCD-0007
          portId: "7"
        - serial: Q234-ABCD-0008
          portId: "8"
      properties:
        switchPorts:
          description: Array of switch or stack ports for creating aggregation group.
            Minimum 2 and maximum 8 ports are supported.
          items:
            $ref: '#/components/schemas/_networks__networkId__switch_linkAggregations_switchPorts'
          type: array
        switchProfilePorts:
          description: Array of switch profile ports for creating aggregation group.
            Minimum 2 and maximum 8 ports are supported.
          items:
            $ref: '#/components/schemas/_networks__networkId__switch_linkAggregations_switchProfilePorts'
          type: array
      type: object
    inline_object_114:
      example:
        mac: 00:11:22:33:44:55
        vlan: 100
        ipv4:
          address: 1.2.3.4
      properties:
        mac:
          description: The mac address of the trusted server being added
          type: string
        vlan:
          description: The VLAN of the trusted server being added. It must be between
            1 and 4094
          type: integer
        ipv4:
          $ref: '#/components/schemas/_networks__networkId__switch_dhcpServerPolicy_arpInspection_trustedServers_ipv4_1'
      required:
      - ipv4
      - mac
      - vlan
      type: object
    inline_object_115:
      example:
        mac: 00:11:22:33:44:55
        vlan: 100
        ipv4:
          address: 1.2.3.4
      properties:
        mac:
          description: The updated mac address of the trusted server
          type: string
        vlan:
          description: The updated VLAN of the trusted server. It must be between
            1 and 4094
          type: integer
        ipv4:
          $ref: '#/components/schemas/_networks__networkId__switch_dhcpServerPolicy_arpInspection_trustedServers__trustedServerId__ipv4'
      type: object
    inline_object_112:
      example:
        enabled: true
        vlanId: 100
        protocols:
        - radius
        - snmp
        - syslog
        switches:
        - serial: Q234-ABCD-5678
          alternateManagementIp: 1.2.3.4
          subnetMask: 255.255.255.0
          gateway: 1.2.3.5
      properties:
        enabled:
          description: Boolean value to enable or disable AMI configuration. If enabled,
            VLAN and protocols must be set
          type: boolean
        vlanId:
          description: Alternate management VLAN, must be between 1 and 4094
          type: integer
        protocols:
          description: 'Can be one or more of the following values: ''radius'', ''snmp''
            or ''syslog'''
          items:
            enum:
            - radius
            - snmp
            - syslog
            type: string
          type: array
        switches:
          description: 'Array of switch serial number and IP assignment. If parameter
            is present, it cannot have empty body. Note: switches parameter is not
            applicable for template networks, in other words, do not put ''switches''
            in the body when updating template networks. Also, an empty ''switches''
            array will remove all previous assignments'
          items:
            $ref: '#/components/schemas/_networks__networkId__switch_alternateManagementInterface_switches'
          type: array
      type: object
    _networks__networkId__sensor_alerts_profiles_threshold_pm25:
      description: PM2.5 concentration threshold. One of 'concentration' or 'quality'
        must be provided.
      example:
        concentration: 5
        quality: fair
      properties:
        concentration:
          description: Alerting threshold as PM2.5 parts per million.
          type: integer
        quality:
          description: Alerting threshold as a qualitative PM2.5 level.
          enum:
          - fair
          - good
          - inadequate
          - poor
          type: string
      type: object
    inline_object_113:
      example:
        alerts:
          email:
            enabled: false
        defaultPolicy: block
        blockedServers:
        - 00:50:56:00:00:03
        - 00:50:56:00:00:04
        allowedServers:
        - 00:50:56:00:00:01
        - 00:50:56:00:00:02
        arpInspection:
          enabled: false
      properties:
        alerts:
          $ref: '#/components/schemas/_networks__networkId__switch_dhcpServerPolicy_alerts'
        defaultPolicy:
          description: '''allow'' or ''block'' new DHCP servers. Default value is
            ''allow''.'
          enum:
          - allow
          - block
          type: string
        allowedServers:
          description: List the MAC addresses of DHCP servers to permit on the network
            when defaultPolicy is set to block. An empty array will clear the entries.
          items:
            type: string
          type: array
        blockedServers:
          description: List the MAC addresses of DHCP servers to block on the network
            when defaultPolicy is set to allow. An empty array will clear the entries.
          items:
            type: string
          type: array
        arpInspection:
          $ref: '#/components/schemas/_networks__networkId__switch_dhcpServerPolicy_arpInspection'
      type: object
    inline_object_110:
      example:
        name: 'Access policy #1'
        radiusServers:
        - host: 1.2.3.4
          port: 22
          secret: secret
        radius:
          criticalAuth:
            dataVlanId: 100
            voiceVlanId: 100
            suspendPortBounce: true
          failedAuthVlanId: 100
          reAuthenticationInterval: 120
        guestPortBouncing: false
        radiusTestingEnabled: false
        radiusCoaSupportEnabled: false
        radiusAccountingEnabled: true
        radiusAccountingServers:
        - host: 1.2.3.4
          port: 22
          secret: secret
        radiusGroupAttribute: "11"
        hostMode: Single-Host
        accessPolicyType: Hybrid authentication
        increaseAccessSpeed: false
        guestVlanId: 100
        dot1x:
          controlDirection: inbound
        voiceVlanClients: true
        urlRedirectWalledGardenEnabled: true
        urlRedirectWalledGardenRanges:
        - 192.168.1.0/24
      properties:
        name:
          description: Name of the access policy
          type: string
        radiusServers:
          description: List of RADIUS servers to require connecting devices to authenticate
            against before granting network access
          items:
            $ref: '#/components/schemas/_networks__networkId__switch_accessPolicies_radiusServers_1'
          type: array
        radius:
          $ref: '#/components/schemas/_networks__networkId__switch_accessPolicies_radius'
        guestPortBouncing:
          description: If enabled, Meraki devices will periodically send access-request
            messages to these RADIUS servers
          type: boolean
        radiusTestingEnabled:
          description: If enabled, Meraki devices will periodically send access-request
            messages to these RADIUS servers
          type: boolean
        radiusCoaSupportEnabled:
          description: Change of authentication for RADIUS re-authentication and disconnection
          type: boolean
        radiusAccountingEnabled:
          description: Enable to send start, interim-update and stop messages to a
            configured RADIUS accounting server for tracking connected clients
          type: boolean
        radiusAccountingServers:
          description: List of RADIUS accounting servers to require connecting devices
            to authenticate against before granting network access
          items:
            $ref: '#/components/schemas/_networks__networkId__switch_accessPolicies_radiusAccountingServers_1'
          type: array
        radiusGroupAttribute:
          description: Acceptable values are `""` for None, or `"11"` for Group Policies
            ACL
          type: string
        hostMode:
          description: Choose the Host Mode for the access policy.
          enum:
          - Multi-Auth
          - Multi-Domain
          - Multi-Host
          - Single-Host
          type: string
        accessPolicyType:
          description: Access Type of the policy. Automatically 'Hybrid authentication'
            when hostMode is 'Multi-Domain'.
          enum:
          - 802.1x
          - Hybrid authentication
          - MAC authentication bypass
          type: string
        increaseAccessSpeed:
          description: Enabling this option will make switches execute 802.1X and
            MAC-bypass authentication simultaneously so that clients authenticate
            faster. Only required when accessPolicyType is 'Hybrid Authentication.
          type: boolean
        guestVlanId:
          description: ID for the guest VLAN allow unauthorized devices access to
            limited network resources
          type: integer
        dot1x:
          $ref: '#/components/schemas/_networks__networkId__switch_accessPolicies_dot1x'
        voiceVlanClients:
          description: CDP/LLDP capable voice clients will be able to use this VLAN.
            Automatically true when hostMode is 'Multi-Domain'.
          type: boolean
        urlRedirectWalledGardenEnabled:
          description: Enable to restrict access for clients to a specific set of
            IP addresses or hostnames prior to authentication
          type: boolean
        urlRedirectWalledGardenRanges:
          description: IP address ranges, in CIDR notation, to restrict access for
            clients to a specific set of IP addresses or hostnames prior to authentication
          items:
            type: string
          type: array
      required:
      - hostMode
      - name
      - radiusAccountingEnabled
      - radiusCoaSupportEnabled
      - radiusServers
      - radiusTestingEnabled
      - urlRedirectWalledGardenEnabled
      type: object
    inline_object_111:
      example:
        name: 'Access policy #1'
        radiusServers:
        - host: 1.2.3.4
          port: 22
          secret: secret
        radius:
          criticalAuth:
            dataVlanId: 100
            voiceVlanId: 100
            suspendPortBounce: true
          failedAuthVlanId: 100
          reAuthenticationInterval: 120
        guestPortBouncing: false
        radiusTestingEnabled: false
        radiusCoaSupportEnabled: false
        radiusAccountingEnabled: true
        radiusAccountingServers:
        - host: 1.2.3.4
          port: 22
          secret: secret
        radiusGroupAttribute: "11"
        hostMode: Single-Host
        accessPolicyType: Hybrid authentication
        increaseAccessSpeed: false
        guestVlanId: 100
        dot1x:
          controlDirection: inbound
        voiceVlanClients: true
        urlRedirectWalledGardenEnabled: true
        urlRedirectWalledGardenRanges:
        - 192.168.1.0/24
      properties:
        name:
          description: Name of the access policy
          type: string
        radiusServers:
          description: List of RADIUS servers to require connecting devices to authenticate
            against before granting network access
          items:
            $ref: '#/components/schemas/_networks__networkId__switch_accessPolicies_radiusServers_1'
          type: array
        radius:
          $ref: '#/components/schemas/_networks__networkId__switch_accessPolicies_radius'
        guestPortBouncing:
          description: If enabled, Meraki devices will periodically send access-request
            messages to these RADIUS servers
          type: boolean
        radiusTestingEnabled:
          description: If enabled, Meraki devices will periodically send access-request
            messages to these RADIUS servers
          type: boolean
        radiusCoaSupportEnabled:
          description: Change of authentication for RADIUS re-authentication and disconnection
          type: boolean
        radiusAccountingEnabled:
          description: Enable to send start, interim-update and stop messages to a
            configured RADIUS accounting server for tracking connected clients
          type: boolean
        radiusAccountingServers:
          description: List of RADIUS accounting servers to require connecting devices
            to authenticate against before granting network access
          items:
            $ref: '#/components/schemas/_networks__networkId__switch_accessPolicies_radiusAccountingServers_1'
          type: array
        radiusGroupAttribute:
          description: Acceptable values are `""` for None, or `"11"` for Group Policies
            ACL
          type: string
        hostMode:
          description: Choose the Host Mode for the access policy.
          enum:
          - Multi-Auth
          - Multi-Domain
          - Multi-Host
          - Single-Host
          type: string
        accessPolicyType:
          description: Access Type of the policy. Automatically 'Hybrid authentication'
            when hostMode is 'Multi-Domain'.
          enum:
          - 802.1x
          - Hybrid authentication
          - MAC authentication bypass
          type: string
        increaseAccessSpeed:
          description: Enabling this option will make switches execute 802.1X and
            MAC-bypass authentication simultaneously so that clients authenticate
            faster. Only required when accessPolicyType is 'Hybrid Authentication.
          type: boolean
        guestVlanId:
          description: ID for the guest VLAN allow unauthorized devices access to
            limited network resources
          type: integer
        dot1x:
          $ref: '#/components/schemas/_networks__networkId__switch_accessPolicies_dot1x'
        voiceVlanClients:
          description: CDP/LLDP capable voice clients will be able to use this VLAN.
            Automatically true when hostMode is 'Multi-Domain'.
          type: boolean
        urlRedirectWalledGardenEnabled:
          description: Enable to restrict access for clients to a specific set of
            IP addresses or hostnames prior to authentication
          type: boolean
        urlRedirectWalledGardenRanges:
          description: IP address ranges, in CIDR notation, to restrict access for
            clients to a specific set of IP addresses or hostnames prior to authentication
          items:
            type: string
          type: array
      type: object
    _networks__networkId__appliance_firewall_oneToManyNatRules_rules:
      properties:
        publicIp:
          description: The IP address that will be used to access the internal resource
            from the WAN
          type: string
        uplink:
          description: The physical WAN interface on which the traffic will arrive
            ('internet1' or, if available, 'internet2')
          enum:
          - internet1
          - internet2
          type: string
        portRules:
          description: An array of associated forwarding rules
          items:
            $ref: '#/components/schemas/_networks__networkId__appliance_firewall_oneToManyNatRules_portRules'
          type: array
      required:
      - portRules
      - publicIp
      - uplink
      type: object
    _networks__networkId__wireless_rfProfiles_perSsidSettings:
      description: Per-SSID radio settings by number.
      properties:
        "0":
          $ref: '#/components/schemas/_networks__networkId__wireless_rfProfiles_perSsidSettings_0'
        "1":
          $ref: '#/components/schemas/_networks__networkId__wireless_rfProfiles_perSsidSettings_1'
        "2":
          $ref: '#/components/schemas/_networks__networkId__wireless_rfProfiles_perSsidSettings_2'
        "3":
          $ref: '#/components/schemas/_networks__networkId__wireless_rfProfiles_perSsidSettings_3'
        "4":
          $ref: '#/components/schemas/_networks__networkId__wireless_rfProfiles_perSsidSettings_4'
        "5":
          $ref: '#/components/schemas/_networks__networkId__wireless_rfProfiles_perSsidSettings_5'
        "6":
          $ref: '#/components/schemas/_networks__networkId__wireless_rfProfiles_perSsidSettings_6'
        "7":
          $ref: '#/components/schemas/_networks__networkId__wireless_rfProfiles_perSsidSettings_7'
        "8":
          $ref: '#/components/schemas/_networks__networkId__wireless_rfProfiles_perSsidSettings_8'
        "9":
          $ref: '#/components/schemas/_networks__networkId__wireless_rfProfiles_perSsidSettings_9'
        "10":
          $ref: '#/components/schemas/_networks__networkId__wireless_rfProfiles_perSsidSettings_10'
        "11":
          $ref: '#/components/schemas/_networks__networkId__wireless_rfProfiles_perSsidSettings_11'
        "12":
          $ref: '#/components/schemas/_networks__networkId__wireless_rfProfiles_perSsidSettings_12'
        "13":
          $ref: '#/components/schemas/_networks__networkId__wireless_rfProfiles_perSsidSettings_13'
        "14":
          $ref: '#/components/schemas/_networks__networkId__wireless_rfProfiles_perSsidSettings_14'
      type: object
    _organizations__organizationId__sensor_readings_history_noise:
      description: Reading for the 'noise' metric. This will only be present if the
        'metric' property equals 'noise'.
      example:
        ambient:
          level: 5
      properties:
        ambient:
          $ref: '#/components/schemas/_organizations__organizationId__sensor_readings_history_noise_ambient'
      type: object
    _networks__networkId__wireless_ssids__number__schedules_ranges:
      properties:
        startDay:
          description: Day of when the outage starts. Can be either full day name,
            or three letter abbreviation.
          type: string
        startTime:
          description: 24 hour time when the outage starts.
          type: string
        endDay:
          description: Day of when the outage ends. Can be either full day name, or
            three letter abbreviation
          type: string
        endTime:
          description: 24 hour time when the outage ends.
          type: string
      required:
      - endDay
      - endTime
      - startDay
      - startTime
      type: object
    inline_object_109:
      example:
        rules:
        - comment: Deny SSH
          policy: deny
          ipVersion: ipv4
          protocol: tcp
          srcCidr: 10.1.10.0/24
          srcPort: any
          dstCidr: 172.16.30/24
          dstPort: "22"
          vlan: "10"
      properties:
        rules:
          description: An ordered array of the access control list rules (not including
            the default rule). An empty array will clear the rules.
          items:
            $ref: '#/components/schemas/_networks__networkId__switch_accessControlLists_rules'
          type: array
      required:
      - rules
      type: object
    _organizations__organizationId__summary_top_devices_models_byUsage_usage:
      description: Usage info in megabytes
      example:
        average: 1.4658129
        total: 6.0274563
      properties:
        total:
          description: Total usage in megabytes
          format: float
          type: number
        average:
          description: Average usage in megabytes
          format: float
          type: number
      type: object
    inline_object_107:
      example:
        name: My target group
        scope: none
        tags: '[]'
        type: devices
      properties:
        name:
          description: The name of this target group
          type: string
        scope:
          description: The scope and tag options of the target group. Comma separated
            values beginning with one of withAny, withAll, withoutAny, withoutAll,
            all, none, followed by tags. Default to none if empty.
          type: string
      type: object
    inline_object_108:
      example:
        access: users
        users:
        - username: AzureDiamond
          passphrase: hunter2
      properties:
        access:
          description: The type of SNMP access. Can be one of 'none' (disabled), 'community'
            (V1/V2c), or 'users' (V3).
          enum:
          - community
          - none
          - users
          type: string
        communityString:
          description: The SNMP community string. Only relevant if 'access' is set
            to 'community'.
          type: string
        users:
          description: The list of SNMP users. Only relevant if 'access' is set to
            'users'.
          items:
            $ref: '#/components/schemas/_networks__networkId__snmp_users'
          type: array
      type: object
    inline_object_105:
      example:
        wifiMac: 00:11:22:33:44:55
        id: "1284392014819"
        serial: Q234-ABCD-5678
        pin: 123456
      properties:
        wifiMac:
          description: The wifiMac of the device to be wiped.
          type: string
        id:
          description: The id of the device to be wiped.
          type: string
        serial:
          description: The serial of the device to be wiped.
          type: string
        pin:
          description: The pin number (a six digit value) for wiping a macOS device.
            Required only for macOS devices.
          type: integer
      type: object
    inline_object_106:
      example:
        name: My target group
        scope: none
        tags: '[]'
        type: devices
      properties:
        name:
          description: The name of this target group
          type: string
        scope:
          description: The scope and tag options of the target group. Comma separated
            values beginning with one of withAny, withAll, withoutAny, withoutAll,
            all, none, followed by tags. Default to none if empty.
          type: string
      type: object
    inline_object_103:
      example:
        wifiMacs:
        - 00:11:22:33:44:55
        ids:
        - "1284392014819"
        - "2983092129865"
        serials:
        - Q234-ABCD-0001
        - Q234-ABCD-0002
        - Q234-ABCD-0003
        scope:
        - withAny, old_tag
        tags:
        - tag1
        - tag2
        updateAction: add
      properties:
        wifiMacs:
          description: The wifiMacs of the devices to be modified.
          items:
            type: string
          type: array
        ids:
          description: The ids of the devices to be modified.
          items:
            type: string
          type: array
        serials:
          description: The serials of the devices to be modified.
          items:
            type: string
          type: array
        scope:
          description: The scope (one of all, none, withAny, withAll, withoutAny,
            or withoutAll) and a set of tags of the devices to be modified.
          items:
            type: string
          type: array
        tags:
          description: The tags to be added, deleted, or updated.
          items:
            type: string
          type: array
        updateAction:
          description: One of add, delete, or update. Only devices that have been
            modified will be returned.
          type: string
      required:
      - tags
      - updateAction
      type: object
    inline_object_104:
      example:
        wifiMacs:
        - 00:11:22:33:44:55
        ids:
        - "1284392014819"
        - "2983092129865"
        serials:
        - Q234-ABCD-0001
        - Q234-ABCD-0002
        - Q234-ABCD-0003
        scope:
        - withAny
        - tag1
        - tag2
        newNetwork: "1284392014819"
      properties:
        wifiMacs:
          description: The wifiMacs of the devices to be moved.
          items:
            type: string
          type: array
        ids:
          description: The ids of the devices to be moved.
          items:
            type: string
          type: array
        serials:
          description: The serials of the devices to be moved.
          items:
            type: string
          type: array
        scope:
          description: The scope (one of all, none, withAny, withAll, withoutAny,
            or withoutAll) and a set of tags of the devices to be moved.
          items:
            type: string
          type: array
        newNetwork:
          description: The new network to which the devices will be moved.
          type: string
      required:
      - newNetwork
      type: object
    inline_object_101:
      example:
        wifiMac: 00:11:22:33:44:55
        id: "1284392014819"
        serial: Q234-ABCD-5678
        deviceFields:
          name: Miles's phone
          notes: Here's some info about my device
      properties:
        wifiMac:
          description: The wifiMac of the device to be modified.
          type: string
        id:
          description: The id of the device to be modified.
          type: string
        serial:
          description: The serial of the device to be modified.
          type: string
        deviceFields:
          $ref: '#/components/schemas/_networks__networkId__sm_devices_fields_deviceFields'
      required:
      - deviceFields
      type: object
    inline_object_102:
      example:
        wifiMacs:
        - 00:11:22:33:44:55
        ids:
        - "1284392014819"
        - "2983092129865"
        serials:
        - Q234-ABCD-0001
        - Q234-ABCD-0002
        - Q234-ABCD-0003
        scope:
        - withAny
        - tag1
        - tag2
        pin: 123456
      properties:
        wifiMacs:
          description: The wifiMacs of the devices to be locked.
          items:
            type: string
          type: array
        ids:
          description: The ids of the devices to be locked.
          items:
            type: string
          type: array
        serials:
          description: The serials of the devices to be locked.
          items:
            type: string
          type: array
        scope:
          description: The scope (one of all, none, withAny, withAll, withoutAny,
            or withoutAll) and a set of tags of the devices to be wiped.
          items:
            type: string
          type: array
        pin:
          description: The pin number for locking macOS devices (a six digit number).
            Required only for macOS devices.
          type: integer
      type: object
    inline_object_100:
      example:
        wifiMacs:
        - 00:11:22:33:44:55
        ids:
        - "1284392014819"
        - "2983092129865"
        serials:
        - Q234-ABCD-0001
        - Q234-ABCD-0002
        - Q234-ABCD-0003
        scope:
        - withAny
        - tag1
        - tag2
      properties:
        wifiMacs:
          description: The wifiMacs of the devices to be checked-in.
          items:
            type: string
          type: array
        ids:
          description: The ids of the devices to be checked-in.
          items:
            type: string
          type: array
        serials:
          description: The serials of the devices to be checked-in.
          items:
            type: string
          type: array
        scope:
          description: The scope (one of all, none, withAny, withAll, withoutAny,
            or withoutAll) and a set of tags of the devices to be checked-in.
          items:
            type: string
          type: array
      type: object
    _organizations__organizationId__apiRequests_overview_responseCodes_byInterval_counts:
      example:
        code: 0
        count: 6
      properties:
        code:
          description: Response status code of the API response
          type: integer
        count:
          description: Number of records that match the status code
          type: integer
      type: object
    _networks__networkId__wireless_ssids__number__speedBurst:
      description: The SpeedBurst setting for this SSID'
      properties:
        enabled:
          description: Boolean indicating whether or not to allow users to temporarily
            exceed the bandwidth limit for short periods while still keeping them
            under the bandwidth limit over time.
          type: boolean
      type: object
    _networks__networkId__switch_dhcp_v4_servers_seen_lastPacket_destination_ipv4:
      description: Destination ipv4 attributes of the packet.
      example:
        address: address
      properties:
        address:
          description: Destination ipv4 address of the packet.
          type: string
      type: object
    _organizations__organizationId__inventory_onboarding_cloudMonitoring_prepare_vty_accessList_vtyOut:
      description: VTY out ACL
      properties:
        name:
          description: Name
          type: string
      type: object
    _networks__networkId__clients_provision_policiesBySsid_0:
      description: The number for the SSID
      properties:
        devicePolicy:
          description: The policy to apply to the specified client. Can be 'Allowed',
            'Blocked', 'Normal' or 'Group policy'. Required.
          enum:
          - Allowed
          - Blocked
          - Group policy
          - Normal
          type: string
        groupPolicyId:
          description: The ID of the desired group policy to apply to the client.
            Required if 'devicePolicy' is set to "Group policy". Otherwise this is
            ignored.
          type: string
      required:
      - devicePolicy
      type: object
    _networks__networkId__switch_routing_ospf_v3:
      description: OSPF v3 configuration
      properties:
        enabled:
          description: Boolean value to enable or disable V3 OSPF routing. OSPF V3
            routing is disabled by default.
          type: boolean
        helloTimerInSeconds:
          description: Time interval in seconds at which hello packet will be sent
            to OSPF neighbors to maintain connectivity. Value must be between 1 and
            255. Default is 10 seconds.
          type: integer
        deadTimerInSeconds:
          description: Time interval to determine when the peer will be declared inactive/dead.
            Value must be between 1 and 65535
          type: integer
        areas:
          description: OSPF v3 areas
          items:
            $ref: '#/components/schemas/_networks__networkId__switch_routing_ospf_areas'
          type: array
      type: object
    _networks__networkId__wireless_rfProfiles_twoFourGhzSettings:
      description: Settings related to 2.4Ghz band
      example:
        validAutoChannels:
        - 5
        - 5
        rxsop: 5
        minBitrate: 1.4658129
        axEnabled: true
        maxPower: 0
        minPower: 6
      properties:
        maxPower:
          description: Sets max power (dBm) of 2.4Ghz band. Can be integer between
            2 and 30. Defaults to 30.
          type: integer
        minPower:
          description: Sets min power (dBm) of 2.4Ghz band. Can be integer between
            2 and 30. Defaults to 5.
          type: integer
        minBitrate:
          description: Sets min bitrate (Mbps) of 2.4Ghz band. Can be one of '1',
            '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'. Defaults
            to 11.
          format: float
          type: number
        validAutoChannels:
          description: Sets valid auto channels for 2.4Ghz band. Can be one of '1',
            '6' or '11'. Defaults to [1, 6, 11].
          items:
            type: integer
          type: array
        axEnabled:
          description: Determines whether ax radio on 2.4Ghz band is on or off. Can
            be either true or false. If false, we highly recommend disabling band
            steering. Defaults to true.
          type: boolean
        rxsop:
          description: The RX-SOP level controls the sensitivity of the radio. It
            is strongly recommended to use RX-SOP only after consulting a wireless
            expert. RX-SOP can be configured in the range of -65 to -95 (dBm). A value
            of null will reset this to the default.
          type: integer
      type: object
    _networks__networkId__alerts_history_destinations_email:
      description: email destinations for this alert
      example:
        sentAt: sentAt
      properties:
        sentAt:
          description: time when the alert was sent to the user(s) for this channel
          type: string
      type: object
    _organizations__organizationId__inventory_onboarding_cloudMonitoring_prepare_configParams:
      description: Params used in order to connect to the device
      example:
        cloudStaticIp: cloudStaticIp
        user:
          publicKey: publicKey
          secret:
            hash: hash
          username: username
        tunnel:
          mode: mode
          rootCertificate:
            name: name
            content: content
          port: port
          host: host
          name: name
      properties:
        tunnel:
          $ref: '#/components/schemas/_organizations__organizationId__inventory_onboarding_cloudMonitoring_prepare_configParams_tunnel'
        cloudStaticIp:
          description: Static IP Address used to connect to the device
          type: string
        user:
          $ref: '#/components/schemas/_organizations__organizationId__inventory_onboarding_cloudMonitoring_prepare_configParams_user'
      type: object
    _networks__networkId__settings_localStatusPage:
      description: A hash of Local Status page(s)' authentication options applied
        to the Network.
      properties:
        authentication:
          $ref: '#/components/schemas/_networks__networkId__settings_localStatusPage_authentication'
      type: object
    _organizations__organizationId__admins_networks:
      properties:
        id:
          description: The network ID
          type: string
        access:
          description: The privilege of the dashboard administrator on the network.
            Can be one of 'full', 'read-only', 'guest-ambassador' or 'monitor-only'
          type: string
      required:
      - access
      - id
      type: object
    _organizations__organizationId__summary_top_clients_manufacturers_byUsage_clients_counts:
      description: Counts of clients
      example:
        total: 0
      properties:
        total:
          description: Total counts of clients
          type: integer
      type: object
    _networks__networkId__appliance_trafficShaping_uplinkSelection_trafficFilters:
      properties:
        type:
          description: 'Type of this traffic filter. Must be one of: ''custom'''
          enum:
          - custom
          type: string
        value:
          $ref: '#/components/schemas/_networks__networkId__appliance_trafficShaping_uplinkSelection_value'
      required:
      - type
      - value
      type: object
    _organizations__organizationId__sensor_readings_history_noise_ambient:
      description: Ambient noise reading.
      example:
        level: 5
      properties:
        level:
          description: Ambient noise reading in adjusted decibels.
          type: integer
      type: object
    _networks__networkId__wireless_ssids__number__vpn_splitTunnel_rules:
      properties:
        protocol:
          description: Protocol for this split tunnel rule.
          enum:
          - Any
          - TCP
          - UDP
          type: string
        destCidr:
          description: Destination for this split tunnel rule. IP address, fully-qualified
            domain names (FQDN) or 'any'.
          type: string
        destPort:
          description: Destination port for this split tunnel rule, (integer in the
            range 1-65535), or 'any'.
          type: string
        policy:
          description: Traffic policy specified for this split tunnel rule, 'allow'
            or 'deny'.
          type: string
        comment:
          description: Description for this split tunnel rule (optional).
          type: string
      required:
      - destCidr
      - policy
      type: object
    _networks__networkId__firmwareUpgrades_staged_events_milestones:
      description: The Staged Upgrade Milestones for the specific stage
      properties:
        scheduledFor:
          description: The start time of the staged upgrade stage. (In ISO-8601 format,
            in the time zone of the network.)
          type: string
      required:
      - scheduledFor
      type: object
    _organizations__organizationId__inventory_onboarding_cloudMonitoring_imports_device:
      description: Represents the details of an imported device.
      example:
        created: true
        url: url
        status: status
      properties:
        url:
          description: The url to the device details page within dashboard.
          type: string
        created:
          description: Whether or not the device was successfully created in dashboard.
          type: boolean
        status:
          description: Represents the current state of importing the device.
          type: string
      type: object
    _networks__networkId__groupPolicies_vlanTagging:
      description: The VLAN tagging settings for your group policy. Only available
        if your network has a wireless configuration.
      properties:
        settings:
          description: How VLAN tagging is applied. Can be 'network default', 'ignore'
            or 'custom'.
          enum:
          - custom
          - ignore
          - network default
          type: string
        vlanId:
          description: The ID of the vlan you want to tag. This only applies if 'settings'
            is set to 'custom'.
          type: string
      type: object
    _networks__networkId__appliance_trafficShaping_uplinkBandwidth_bandwidthLimits:
      description: A mapping of uplinks to their bandwidth settings (be sure to check
        which uplinks are supported for your network)
      properties:
        wan1:
          $ref: '#/components/schemas/_networks__networkId__appliance_trafficShaping_uplinkBandwidth_bandwidthLimits_wan1'
        wan2:
          $ref: '#/components/schemas/_networks__networkId__appliance_trafficShaping_uplinkBandwidth_bandwidthLimits_wan2'
        cellular:
          $ref: '#/components/schemas/_networks__networkId__appliance_trafficShaping_uplinkBandwidth_bandwidthLimits_cellular'
      type: object
    _networks__networkId__appliance_trafficShaping_uplinkSelection_value:
      description: Value object of this traffic filter
      properties:
        protocol:
          description: 'Protocol of this custom type traffic filter. Must be one of:
            ''tcp'', ''udp'', ''icmp6'' or ''any'''
          enum:
          - any
          - icmp6
          - tcp
          - udp
          type: string
        source:
          $ref: '#/components/schemas/_networks__networkId__appliance_trafficShaping_uplinkSelection_value_source'
        destination:
          $ref: '#/components/schemas/_networks__networkId__appliance_trafficShaping_uplinkSelection_value_destination'
      required:
      - destination
      - source
      type: object
    _networks__networkId__policies_byClient_assigned:
      example:
        name: name
        type: type
        groupPolicyId: groupPolicyId
        ssid:
        - ssidNumber: 0
        - ssidNumber: 0
      properties:
        name:
          description: name of policy
          type: string
        type:
          description: type of policy
          type: string
        groupPolicyId:
          description: id of policy
          type: string
        ssid:
          description: ssid
          items:
            $ref: '#/components/schemas/_networks__networkId__policies_byClient_ssid'
          type: array
      type: object
    _networks__networkId__wireless_ssids__number__ldap:
      description: The current setting for LDAP. Only valid if splashPage is 'Password-protected
        with LDAP'.
      properties:
        servers:
          description: The LDAP servers to be used for authentication.
          items:
            $ref: '#/components/schemas/_networks__networkId__wireless_ssids__number__ldap_servers'
          type: array
        credentials:
          $ref: '#/components/schemas/_networks__networkId__wireless_ssids__number__ldap_credentials'
        baseDistinguishedName:
          description: The base distinguished name of users on the LDAP server.
          type: string
        serverCaCertificate:
          $ref: '#/components/schemas/_networks__networkId__wireless_ssids__number__ldap_serverCaCertificate'
      type: object
    _organizations__organizationId__licensing_coterm_licenses_move_destination:
      description: Destination data for the license move
      properties:
        organizationId:
          description: The organization to move the license to
          type: string
        mode:
          description: The claim mode of the moved license
          enum:
          - addDevices
          - renew
          type: string
      type: object
    _organizations__organizationId__brandingPolicies_helpSettings_1:
      description: |2-
              Settings for describing the modifications to various Help page features. Each property in this object accepts one of
              'default or inherit' (do not modify functionality), 'hide' (remove the section from Dashboard), or 'show' (always show
              the section on Dashboard). Some properties in this object also accept custom HTML used to replace the section on
              Dashboard; see the documentation for each property to see the allowed values.
         Each property defaults to 'default or inherit' when not provided.
      example:
        firewallInfoSubtab: default or inherit
        getHelpSubtabKnowledgeBaseSearch: getHelpSubtabKnowledgeBaseSearch
        universalSearchKnowledgeBaseSearch: default or inherit
        hardwareReplacementsSubtab: default or inherit
        newFeaturesSubtab: default or inherit
        communitySubtab: default or inherit
        supportContactInfo: supportContactInfo
        apiDocsSubtab: default or inherit
        helpTab: default or inherit
        ciscoMerakiProductDocumentation: ciscoMerakiProductDocumentation
        dataProtectionRequestsSubtab: default or inherit
        getHelpSubtab: default or inherit
        casesSubtab: default or inherit
        smForums: default or inherit
        helpWidget: default or inherit
      properties:
        helpTab:
          description: |2
                  The Help tab, under which all support information resides. If this tab is hidden, no other 'Help' branding
                  customizations will be visible. Can be one of 'default or inherit', 'hide' or 'show'.
          enum:
          - default or inherit
          - hide
          - show
          type: string
        getHelpSubtab:
          description: |2
                  The 'Help -> Get Help' subtab on which Cisco Meraki KB, Product Manuals, and Support/Case Information are displayed. Note
                  that if this subtab is hidden, branding customizations for the KB on 'Get help', Cisco Meraki product documentation,
                  and support contact info will not be visible. Can be one of 'default or inherit', 'hide' or 'show'.
          enum:
          - default or inherit
          - hide
          - show
          type: string
        communitySubtab:
          description: |2
                  The 'Help -> Community' subtab which provides a link to Meraki Community. Can be one of 'default or inherit', 'hide' or 'show'.
          enum:
          - default or inherit
          - hide
          - show
          type: string
        casesSubtab:
          description: |2
                  The 'Help -> Cases' Dashboard subtab on which Cisco Meraki support cases for this organization can be managed. Can be one
                  of 'default or inherit', 'hide' or 'show'.
          enum:
          - default or inherit
          - hide
          - show
          type: string
        dataProtectionRequestsSubtab:
          description: |2
                  The 'Help -> Data protection requests' Dashboard subtab on which requests to delete, restrict, or export end-user data can
                  be audited. Can be one of 'default or inherit', 'hide' or 'show'.
          enum:
          - default or inherit
          - hide
          - show
          type: string
        getHelpSubtabKnowledgeBaseSearch:
          description: |2
                  The KB search box which appears on the Help page. Can be one of 'default or inherit', 'hide', 'show', or a replacement custom HTML string.
          type: string
        universalSearchKnowledgeBaseSearch:
          description: |2
                  The universal search box always visible on Dashboard will, by default, present results from the Meraki KB. This configures
                  whether these Meraki KB results should be returned. Can be one of 'default or inherit', 'hide' or 'show'.
          enum:
          - default or inherit
          - hide
          - show
          type: string
        ciscoMerakiProductDocumentation:
          description: |2
                  The 'Product Manuals' section of the 'Help -> Get Help' subtab. Can be one of 'default or inherit', 'hide', 'show', or a replacement custom HTML string.
          type: string
        supportContactInfo:
          description: |2
                  The 'Contact Meraki Support' section of the 'Help -> Get Help' subtab. Can be one of 'default or inherit', 'hide', 'show', or a replacement custom HTML string.
          type: string
        newFeaturesSubtab:
          description: |2
                  The 'Help -> New features' subtab where new Dashboard features are detailed. Can be one of 'default or inherit', 'hide' or 'show'.
          enum:
          - default or inherit
          - hide
          - show
          type: string
        firewallInfoSubtab:
          description: |2
                  The 'Help -> Firewall info' subtab where necessary upstream firewall rules for communication to the Cisco Meraki cloud are
                  listed. Can be one of 'default or inherit', 'hide' or 'show'.
          enum:
          - default or inherit
          - hide
          - show
          type: string
        apiDocsSubtab:
          description: |2
                  The 'Help -> API docs' subtab where a detailed description of the Dashboard API is listed. Can be one of
                  'default or inherit', 'hide' or 'show'.
          enum:
          - default or inherit
          - hide
          - show
          type: string
        hardwareReplacementsSubtab:
          description: |2
                  The 'Help -> Replacement info' subtab where important information regarding device replacements is detailed. Can be one of
                  'default or inherit', 'hide' or 'show'.
          enum:
          - default or inherit
          - hide
          - show
          type: string
        smForums:
          description: |2
                  The 'SM Forums' subtab which links to community-based support for Cisco Meraki Systems Manager. Only configurable for
                  organizations that contain Systems Manager networks. Can be one of 'default or inherit', 'hide' or 'show'.
          enum:
          - default or inherit
          - hide
          - show
          type: string
        helpWidget:
          description: |2
                  The 'Help Widget' is a support widget which provides access to live chat, documentation links, Sales contact info,
                  and other contact avenues to reach Meraki Support. Can be one of 'default or inherit', 'hide' or 'show'.
          enum:
          - default or inherit
          - hide
          - show
          type: string
      type: object
    _devices__serial__switch_routing_interfaces_ipv6_1:
      description: The IPv6 settings of the interface.
      properties:
        assignmentMode:
          description: The IPv6 assignment mode for the interface. Can be either 'eui-64'
            or 'static'.
          type: string
        prefix:
          description: The IPv6 prefix of the interface. Required if IPv6 object is
            included.
          type: string
        address:
          description: The IPv6 address of the interface. Required if assignmentMode
            is 'static'. Must not be included if           assignmentMode is 'eui-64'.
          type: string
        gateway:
          description: The IPv6 default gateway of the interface. Required if prefix
            is defined and this is the first           interface with IPv6 configured
            for the switch.
          type: string
      type: object
    _networks__networkId__sm_devices__deviceId__performanceHistory_diskUsage:
      description: An object containing disk usage details.
      example:
        c:
          used: 3
          space: 2
      properties:
        c:
          $ref: '#/components/schemas/_networks__networkId__sm_devices__deviceId__performanceHistory_diskUsage_c'
      type: object
    _devices__serial__switch_ports_statuses_usageInKb:
      description: A breakdown of how many kilobytes have passed through this port
        during the timespan.
      example:
        total: 0
        recv: 1
        sent: 6
      properties:
        total:
          description: The total amount of data sent and received (in kilobytes).
          type: integer
        sent:
          description: The amount of data sent (in kilobytes).
          type: integer
        recv:
          description: The amount of data received (in kilobytes).
          type: integer
      type: object
    _organizations__organizationId__appliance_vpn_thirdPartyVPNPeers_peers:
      properties:
        name:
          description: The name of the VPN peer
          type: string
        publicIp:
          description: '[optional] The public IP of the VPN peer'
          type: string
        privateSubnets:
          description: The list of the private subnets of the VPN peer
          items:
            type: string
          type: array
        localId:
          description: '[optional] The local ID is used to identify the MX to the
            peer. This will apply to all MXs this peer applies to.'
          type: string
        remoteId:
          description: '[optional] The remote ID is used to identify the connecting
            VPN peer. This can either be a valid IPv4 Address, FQDN or User FQDN.'
          type: string
        ipsecPolicies:
          $ref: '#/components/schemas/inline_response_200_94_ipsecPolicies'
        ipsecPoliciesPreset:
          description: 'One of the following available presets: ''default'', ''aws'',
            ''azure''. If this is provided, the ''ipsecPolicies'' parameter is ignored.'
          type: string
        secret:
          description: The shared secret with the VPN peer
          type: string
        ikeVersion:
          default: "1"
          description: '[optional] The IKE version to be used for the IPsec VPN peer
            configuration. Defaults to ''1'' when omitted.'
          enum:
          - "1"
          - "2"
          type: string
        networkTags:
          description: A list of network tags that will connect with this peer. Use
            ['all'] for all networks. Use ['none'] for no networks. If not included,
            the default is ['all'].
          items:
            type: string
          type: array
      required:
      - name
      - privateSubnets
      - secret
      type: object
    _networks__networkId__firmwareUpgrades_staged_events_products_switch:
      description: Version information for the switch network being upgraded
      properties:
        nextUpgrade:
          $ref: '#/components/schemas/_networks__networkId__firmwareUpgrades_staged_events_products_switch_nextUpgrade'
      type: object
    inline_response_200_108_counts_byStatus:
      description: byStatus
      example:
        offline: 1
        dormant: 5
        online: 0
        alerting: 6
      properties:
        online:
          description: online count
          type: integer
        alerting:
          description: alerting count
          type: integer
        offline:
          description: offline count
          type: integer
        dormant:
          description: dormant count
          type: integer
      type: object
    _networks__networkId__appliance_firewall_settings_spoofingProtection_ipSourceGuard:
      description: IP source address spoofing settings
      properties:
        mode:
          description: Mode of protection
          enum:
          - block
          - log
          type: string
      type: object
    inline_object_178:
      example:
        name: Miles Meraki
        email: miles@meraki.com
        orgAccess: none
        tags:
        - tag: west
          access: read-only
      properties:
        email:
          description: The email of the dashboard administrator. This attribute can
            not be updated.
          type: string
        name:
          description: The name of the dashboard administrator
          type: string
        orgAccess:
          description: The privilege of the dashboard administrator on the organization.
            Can be one of 'full', 'read-only', 'enterprise' or 'none'
          enum:
          - enterprise
          - full
          - none
          - read-only
          type: string
        tags:
          description: The list of tags that the dashboard administrator has privileges
            on
          items:
            $ref: '#/components/schemas/_organizations__organizationId__admins_tags'
          type: array
        networks:
          description: The list of networks that the dashboard administrator has privileges
            on
          items:
            $ref: '#/components/schemas/_organizations__organizationId__admins_networks'
          type: array
        authenticationMethod:
          description: The method of authentication the user will use to sign in to
            the Meraki dashboard. Can be one of 'Email' or 'Cisco SecureX Sign-On'.
            The default is Email authentication
          enum:
          - Cisco SecureX Sign-On
          - Email
          type: string
      required:
      - email
      - name
      - orgAccess
      type: object
    _organizations__organizationId__devices_uplinksLossAndLatency_timeSeries:
      example:
        lossPercent: 0.8008282
        latencyMs: 6.0274563
        ts: 2000-01-23T04:56:07.000+00:00
      properties:
        ts:
          description: Timestamp for this data point
          format: date-time
          type: string
        lossPercent:
          description: Loss percentage
          format: float
          type: number
        latencyMs:
          description: Latency in milliseconds
          format: float
          type: number
      type: object
    inline_object_179:
      example:
        name: Miles Meraki
        orgAccess: none
        tags:
        - tag: west
          access: read-only
      properties:
        name:
          description: The name of the dashboard administrator
          type: string
        orgAccess:
          description: The privilege of the dashboard administrator on the organization.
            Can be one of 'full', 'read-only', 'enterprise' or 'none'
          enum:
          - enterprise
          - full
          - none
          - read-only
          type: string
        tags:
          description: The list of tags that the dashboard administrator has privileges
            on
          items:
            $ref: '#/components/schemas/_organizations__organizationId__admins_tags'
          type: array
        networks:
          description: The list of networks that the dashboard administrator has privileges
            on
          items:
            $ref: '#/components/schemas/_organizations__organizationId__admins_networks'
          type: array
      type: object
    inline_object_176:
      example:
        sourceGroup:
          id: "222"
          name: IoT Devices
          sgt: 50
        destinationGroup:
          id: "333"
          name: IoT Servers
          sgt: 51
        acls:
        - id: "444"
          name: Block web
        lastEntryRule: allow
      properties:
        sourceGroup:
          $ref: '#/components/schemas/_organizations__organizationId__adaptivePolicy_policies_sourceGroup'
        destinationGroup:
          $ref: '#/components/schemas/_organizations__organizationId__adaptivePolicy_policies_destinationGroup'
        acls:
          description: An ordered array of adaptive policy ACLs (each requires one
            unique attribute) that apply to this policy
          items:
            $ref: '#/components/schemas/_organizations__organizationId__adaptivePolicy_policies_acls'
          type: array
        lastEntryRule:
          description: The rule to apply if there is no matching ACL
          enum:
          - allow
          - default
          - deny
          type: string
      type: object
    inline_response_200_125:
      example:
        resultingNetwork:
          organizationId: organizationId
          isBoundToConfigTemplate: true
          notes: notes
          name: name
          timeZone: timeZone
          productTypes:
          - productTypes
          - productTypes
          id: id
          enrollmentString: enrollmentString
          url: url
          tags:
          - tags
          - tags
      properties:
        resultingNetwork:
          $ref: '#/components/schemas/inline_response_200_125_resultingNetwork'
      type: object
    _networks__networkId__floorPlans_bottomRightCorner:
      description: The longitude and latitude of the bottom right corner of your floor
        plan.
      properties:
        lat:
          description: Latitude
          format: float
          type: number
        lng:
          description: Longitude
          format: float
          type: number
      type: object
    inline_object_177:
      example:
        enabledNetworks:
        - L_11111111
        - L_22222222
        - N_33333333
        - L_44444444
      properties:
        enabledNetworks:
          description: List of network IDs with adaptive policy enabled
          items:
            type: string
          type: array
      type: object
    inline_response_200_124:
      example:
        enforceStrongPasswords: true
        enforceLoginIpRanges: true
        loginIpRanges:
        - loginIpRanges
        - loginIpRanges
        accountLockoutAttempts: 1
        apiAuthentication:
          ipRestrictionsForKeys:
            ranges:
            - ranges
            - ranges
            enabled: true
        numDifferentPasswords: 6
        enforceDifferentPasswords: true
        idleTimeoutMinutes: 5
        enforceTwoFactorAuth: true
        enforcePasswordExpiration: true
        enforceIdleTimeout: true
        passwordExpirationDays: 0
        enforceAccountLockout: true
      properties:
        enforcePasswordExpiration:
          description: Boolean indicating whether users are forced to change their
            password every X number of days.
          type: boolean
        passwordExpirationDays:
          description: Number of days after which users will be forced to change their
            password.
          type: integer
        enforceDifferentPasswords:
          description: Boolean indicating whether users, when setting a new password,
            are forced to choose a new password that is different from any past passwords.
          type: boolean
        numDifferentPasswords:
          description: Number of recent passwords that new password must be distinct
            from.
          type: integer
        enforceStrongPasswords:
          description: 'Boolean indicating whether users will be forced to choose
            strong passwords for their accounts. Strong passwords are at least 8 characters
            that contain 3 of the following: number, uppercase letter, lowercase letter,
            and symbol'
          type: boolean
        enforceAccountLockout:
          description: Boolean indicating whether users' Dashboard accounts will be
            locked out after a specified number of consecutive failed login attempts.
          type: boolean
        accountLockoutAttempts:
          description: Number of consecutive failed login attempts after which users'
            accounts will be locked.
          type: integer
        enforceIdleTimeout:
          description: Boolean indicating whether users will be logged out after being
            idle for the specified number of minutes.
          type: boolean
        idleTimeoutMinutes:
          description: Number of minutes users can remain idle before being logged
            out of their accounts.
          type: integer
        enforceTwoFactorAuth:
          description: Boolean indicating whether users in this organization will
            be required to use an extra verification code when logging in to Dashboard.
            This code will be sent to their mobile phone via SMS, or can be generated
            by the authenticator application.
          type: boolean
        enforceLoginIpRanges:
          description: Boolean indicating whether organization will restrict access
            to Dashboard (including the API) from certain IP addresses.
          type: boolean
        loginIpRanges:
          description: List of acceptable IP ranges. Entries can be single IP addresses,
            IP address ranges, and CIDR subnets.
          items:
            type: string
          type: array
        apiAuthentication:
          $ref: '#/components/schemas/inline_response_200_124_apiAuthentication'
      type: object
    inline_object_174:
      example:
        name: Employee Group
        sgt: 1000
        description: Group of XYZ Corp Employees
        policyObjects:
        - id: "2345"
          name: Example Policy Object
        isDefaultGroup: false
        requiredIpMappings: []
      properties:
        name:
          description: Name of the group
          type: string
        sgt:
          description: SGT value of the group
          type: integer
        description:
          description: Description of the group
          type: string
        policyObjects:
          description: The policy objects that belong to this group; traffic from
            addresses specified by these policy objects will be tagged with this group's
            SGT value if no other tagging scheme is being used (each requires one
            unique attribute)
          items:
            $ref: '#/components/schemas/_organizations__organizationId__adaptivePolicy_groups_policyObjects'
          type: array
      type: object
    inline_response_200_123:
      example:
        remainderLicenses:
        - organizationId: organizationId
          duration: 0
          mode: addDevices
          claimedAt: 2000-01-23T04:56:07.000+00:00
          expired: true
          editions:
          - edition: edition
            productType: productType
          - edition: edition
            productType: productType
          counts:
          - count: 6
            model: model
          - count: 6
            model: model
          startedAt: 2000-01-23T04:56:07.000+00:00
          invalidated: true
          key: key
          invalidatedAt: 2000-01-23T04:56:07.000+00:00
        - organizationId: organizationId
          duration: 0
          mode: addDevices
          claimedAt: 2000-01-23T04:56:07.000+00:00
          expired: true
          editions:
          - edition: edition
            productType: productType
          - edition: edition
            productType: productType
          counts:
          - count: 6
            model: model
          - count: 6
            model: model
          startedAt: 2000-01-23T04:56:07.000+00:00
          invalidated: true
          key: key
          invalidatedAt: 2000-01-23T04:56:07.000+00:00
        movedLicenses:
        - organizationId: organizationId
          duration: 0
          mode: addDevices
          claimedAt: 2000-01-23T04:56:07.000+00:00
          expired: true
          editions:
          - edition: edition
            productType: productType
          - edition: edition
            productType: productType
          counts:
          - count: 6
            model: model
          - count: 6
            model: model
          startedAt: 2000-01-23T04:56:07.000+00:00
          invalidated: true
          key: key
          invalidatedAt: 2000-01-23T04:56:07.000+00:00
        - organizationId: organizationId
          duration: 0
          mode: addDevices
          claimedAt: 2000-01-23T04:56:07.000+00:00
          expired: true
          editions:
          - edition: edition
            productType: productType
          - edition: edition
            productType: productType
          counts:
          - count: 6
            model: model
          - count: 6
            model: model
          startedAt: 2000-01-23T04:56:07.000+00:00
          invalidated: true
          key: key
          invalidatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        remainderLicenses:
          description: Remainder licenses created in the source organization as a
            result of moving a subset of the counts of a license
          items:
            $ref: '#/components/schemas/inline_response_200_122'
          type: array
        movedLicenses:
          description: Newly moved licenses created in the destination organization
            of the license move operation
          items:
            $ref: '#/components/schemas/inline_response_200_122'
          type: array
      type: object
    inline_object_175:
      example:
        sourceGroup:
          id: "222"
          name: IoT Devices
          sgt: 50
        destinationGroup:
          id: "333"
          name: IoT Servers
          sgt: 51
        acls:
        - id: "444"
          name: Block web
        lastEntryRule: allow
      properties:
        sourceGroup:
          $ref: '#/components/schemas/_organizations__organizationId__adaptivePolicy_policies_sourceGroup'
        destinationGroup:
          $ref: '#/components/schemas/_organizations__organizationId__adaptivePolicy_policies_destinationGroup'
        acls:
          description: 'An ordered array of adaptive policy ACLs (each requires one
            unique attribute) that apply to this policy (default: [])'
          items:
            $ref: '#/components/schemas/_organizations__organizationId__adaptivePolicy_policies_acls'
          type: array
        lastEntryRule:
          description: 'The rule to apply if there is no matching ACL (default: "default")'
          enum:
          - allow
          - default
          - deny
          type: string
      required:
      - destinationGroup
      - sourceGroup
      type: object
    inline_response_200_122:
      example:
        organizationId: organizationId
        duration: 0
        mode: addDevices
        claimedAt: 2000-01-23T04:56:07.000+00:00
        expired: true
        editions:
        - edition: edition
          productType: productType
        - edition: edition
          productType: productType
        counts:
        - count: 6
          model: model
        - count: 6
          model: model
        startedAt: 2000-01-23T04:56:07.000+00:00
        invalidated: true
        key: key
        invalidatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        key:
          description: The key of the license
          type: string
        organizationId:
          description: The ID of the organization that the license is claimed in
          type: string
        duration:
          description: The duration (term length) of the license, measured in days
          type: integer
        mode:
          description: The operation mode of the license when it was claimed
          enum:
          - addDevices
          - renew
          type: string
        startedAt:
          description: When the license's term began (approximately the date when
            the license was created)
          format: date-time
          type: string
        claimedAt:
          description: When the license was claimed into the organization
          format: date-time
          type: string
        invalidated:
          description: Flag to indicated that the license is invalidated
          type: boolean
        invalidatedAt:
          description: When the license was invalidated. Will be null for active licenses
          format: date-time
          type: string
        expired:
          description: Flag to indicate if the license is expired
          type: boolean
        editions:
          description: The editions of the license for each relevant product type
          items:
            $ref: '#/components/schemas/_organizations__organizationId__licensing_coterm_licenses_editions'
          type: array
        counts:
          description: The counts of the license by model type
          items:
            $ref: '#/components/schemas/_organizations__organizationId__licensing_coterm_licenses_counts'
          type: array
      type: object
    inline_object_172:
      example:
        name: Block sensitive web traffic
        description: Blocks sensitive web traffic
        rules:
        - policy: deny
          protocol: tcp
          srcPort: 1,33
          dstPort: 22-30
        ipVersion: ipv6
      properties:
        name:
          description: Name of the adaptive policy ACL
          type: string
        description:
          description: Description of the adaptive policy ACL
          type: string
        rules:
          description: An ordered array of the adaptive policy ACL rules. An empty
            array will clear the rules.
          items:
            $ref: '#/components/schemas/_organizations__organizationId__adaptivePolicy_acls_rules_1'
          type: array
        ipVersion:
          description: 'IP version of adpative policy ACL. One of: ''any'', ''ipv4''
            or ''ipv6'''
          enum:
          - any
          - ipv4
          - ipv6
          type: string
      type: object
    inline_response_200_121:
      example:
        destOrganizationId: destOrganizationId
        licenseId: licenseId
        seatCount: 0
      properties:
        destOrganizationId:
          description: The ID of the organization to move the SM seats to
          type: string
        licenseId:
          description: The ID of the SM license to move the seats from
          type: string
        seatCount:
          description: The number of seats to move to the new organization. Must be
            less than or equal to the total number of seats of the license
          type: integer
      type: object
    inline_object_173:
      example:
        name: Employee Group
        sgt: 1000
        description: Group of XYZ Corp Employees
        policyObjects:
        - id: "2345"
          name: Example Policy Object
        isDefaultGroup: false
        requiredIpMappings: []
      properties:
        name:
          description: Name of the group
          type: string
        sgt:
          description: SGT value of the group
          type: integer
        description:
          description: 'Description of the group (default: "")'
          type: string
        policyObjects:
          description: 'The policy objects that belong to this group; traffic from
            addresses specified by these policy objects will be tagged with this group''s
            SGT value if no other tagging scheme is being used (each requires one
            unique attribute) (default: [])'
          items:
            $ref: '#/components/schemas/_organizations__organizationId__adaptivePolicy_groups_policyObjects'
          type: array
      required:
      - name
      - sgt
      type: object
    inline_response_200_120:
      example:
        destOrganizationId: destOrganizationId
        licenseIds:
        - licenseIds
        - licenseIds
      properties:
        destOrganizationId:
          description: The ID of the organization to move the licenses to
          type: string
        licenseIds:
          description: A list of IDs of licenses to move to the new organization
          items:
            type: string
          type: array
      type: object
    inline_object_170:
      example:
        confirmed: true
        synchronous: false
      properties:
        confirmed:
          description: A boolean representing whether or not the batch has been confirmed.
            This property cannot be unset once it is true.
          type: boolean
        synchronous:
          description: Set to true to force the batch to run synchronous. There can
            be at most 20 actions in synchronous batch.
          type: boolean
      type: object
    inline_object_171:
      example:
        name: Block sensitive web traffic
        description: Blocks sensitive web traffic
        rules:
        - policy: deny
          protocol: tcp
          srcPort: 1,33
          dstPort: 22-30
        ipVersion: ipv6
      properties:
        name:
          description: Name of the adaptive policy ACL
          type: string
        description:
          default: ""
          description: Description of the adaptive policy ACL
          type: string
        rules:
          description: An ordered array of the adaptive policy ACL rules.
          items:
            $ref: '#/components/schemas/_organizations__organizationId__adaptivePolicy_acls_rules_1'
          type: array
        ipVersion:
          description: 'IP version of adpative policy ACL. One of: ''any'', ''ipv4''
            or ''ipv6'''
          enum:
          - any
          - ipv4
          - ipv6
          type: string
      required:
      - ipVersion
      - name
      - rules
      type: object
    inline_response_200_129:
      example:
        tvoc:
          concentration: 9
        door:
          open: true
        battery:
          percentage: 0
        water:
          present: true
        network:
          name: name
          id: id
        button:
          pressType: long
        pm25:
          concentration: 5
        serial: serial
        metric: battery
        noise:
          ambient:
            level: 5
        temperature:
          celsius: 7.0614014
          fahrenheit: 2.302136
        humidity:
          relativePercentage: 6
        indoorAirQuality:
          score: 1
        ts: ts
      properties:
        serial:
          description: Serial number of the sensor that took the reading.
          type: string
        network:
          $ref: '#/components/schemas/_organizations__organizationId__sensor_readings_history_network'
        ts:
          description: Time at which the reading occurred, in ISO8601 format.
          type: string
        metric:
          description: Type of sensor reading.
          enum:
          - battery
          - button
          - door
          - humidity
          - indoorAirQuality
          - noise
          - pm25
          - temperature
          - tvoc
          - water
          type: string
        battery:
          $ref: '#/components/schemas/_organizations__organizationId__sensor_readings_history_battery'
        button:
          $ref: '#/components/schemas/_organizations__organizationId__sensor_readings_history_button'
        door:
          $ref: '#/components/schemas/_organizations__organizationId__sensor_readings_history_door'
        humidity:
          $ref: '#/components/schemas/_organizations__organizationId__sensor_readings_history_humidity'
        indoorAirQuality:
          $ref: '#/components/schemas/_organizations__organizationId__sensor_readings_history_indoorAirQuality'
        noise:
          $ref: '#/components/schemas/_organizations__organizationId__sensor_readings_history_noise'
        pm25:
          $ref: '#/components/schemas/_organizations__organizationId__sensor_readings_history_pm25'
        temperature:
          $ref: '#/components/schemas/_organizations__organizationId__sensor_readings_history_temperature'
        tvoc:
          $ref: '#/components/schemas/_organizations__organizationId__sensor_readings_history_tvoc'
        water:
          $ref: '#/components/schemas/_organizations__organizationId__sensor_readings_history_water'
      type: object
    inline_response_200_128:
      example:
        role: role
        orgAccess: orgAccess
        id: id
        networks:
        - access: access
          id: id
        - access: access
          id: id
        tags:
        - access: access
          tag: tag
        - access: access
          tag: tag
      properties:
        id:
          description: ID associated with the SAML role
          type: string
        role:
          description: The role of the SAML administrator
          type: string
        orgAccess:
          description: The privilege of the SAML administrator on the organization
          type: string
        networks:
          description: The list of networks that the SAML administrator has privileges
            on
          items:
            $ref: '#/components/schemas/inline_response_200_128_networks'
          type: array
        tags:
          description: The list of tags that the SAML administrator has privleges
            on
          items:
            $ref: '#/components/schemas/inline_response_200_128_tags'
          type: array
      type: object
    inline_response_200_127:
      example:
        idpId: idpId
        sloLogoutUrl: sloLogoutUrl
        x509certSha1Fingerprint: x509certSha1Fingerprint
        consumerUrl: consumerUrl
      properties:
        idpId:
          description: ID associated with the SAML Identity Provider (IdP)
          type: string
        consumerUrl:
          description: URL that is consuming SAML Identity Provider (IdP)
          type: string
        x509certSha1Fingerprint:
          description: Fingerprint (SHA1) of the SAML certificate provided by your
            Identity Provider (IdP). This will be used for encryption / validation.
          type: string
        sloLogoutUrl:
          description: Dashboard will redirect users to this URL when they sign out.
          type: string
      type: object
    inline_response_200_126:
      example:
        enabled: true
      properties:
        enabled:
          description: Toggle depicting if SAML SSO settings are enabled
          type: boolean
      type: object
    _organizations__organizationId__inventory_onboarding_cloudMonitoring_prepare_devices:
      properties:
        sudi:
          description: Device SUDI certificate
          type: string
        tunnel:
          $ref: '#/components/schemas/_organizations__organizationId__inventory_onboarding_cloudMonitoring_prepare_tunnel'
        user:
          $ref: '#/components/schemas/_organizations__organizationId__inventory_onboarding_cloudMonitoring_prepare_user'
        vty:
          $ref: '#/components/schemas/_organizations__organizationId__inventory_onboarding_cloudMonitoring_prepare_vty'
      required:
      - sudi
      type: object
    _networks__networkId__camera_qualityRetentionProfiles_videoSettings_MV12WE:
      description: Quality and resolution for MV12WE camera models.
      properties:
        quality:
          description: Quality of the camera. Can be one of 'Standard', 'Enhanced'
            or 'High'.
          enum:
          - Enhanced
          - High
          - Standard
          type: string
        resolution:
          description: Resolution of the camera. Can be one of '1280x720' or '1920x1080'.
          enum:
          - 1280x720
          - 1920x1080
          type: string
      required:
      - quality
      - resolution
      type: object
    _organizations__organizationId__sensor_readings_history_temperature:
      description: Reading for the 'temperature' metric. This will only be present
        if the 'metric' property equals 'temperature'.
      example:
        celsius: 7.0614014
        fahrenheit: 2.302136
      properties:
        fahrenheit:
          description: Temperature reading in degrees Fahrenheit.
          format: float
          type: number
        celsius:
          description: Temperature reading in degrees Celsius.
          format: float
          type: number
      type: object
    _networks__networkId__alerts_history_destinations_webhook:
      description: webhook destinations for this alert
      example:
        sentAt: sentAt
      properties:
        sentAt:
          description: time when the alert was sent to the user(s) for this channel
          type: string
      type: object
    _networks__networkId__wireless_ssids__number__splash_settings_sentryEnrollment:
      description: Systems Manager sentry enrollment splash settings.
      properties:
        systemsManagerNetwork:
          $ref: '#/components/schemas/_networks__networkId__wireless_ssids__number__splash_settings_sentryEnrollment_systemsManagerNetwork'
        strength:
          description: 'The strength of the enforcement of selected system types.
            Must be one of: ''focused'', ''click-through'', and ''strict''.'
          enum:
          - click-through
          - focused
          - strict
          type: string
        enforcedSystems:
          description: 'The system types that the Sentry enforces. Must be included
            in: ''iOS, ''Android'', ''macOS'', and ''Windows''.'
          items:
            type: string
          type: array
      type: object
    inline_response_200_24_clientVpnConnections:
      example:
        remoteIp: remoteIp
        connectedAt: 1
        disconnectedAt: 5
      properties:
        remoteIp:
          description: The IP address of the VPN the client last connected to
          type: string
        connectedAt:
          description: The time the client last connected to the VPN
          type: integer
        disconnectedAt:
          description: The time the client last disconnectd from the VPN
          type: integer
      type: object
    inline_object_169:
      example:
        confirmed: true
        synchronous: true
        actions:
        - resource: /devices/QXXX-XXXX-XXXX/switch/ports/3
          operation: create
      properties:
        confirmed:
          description: Set to true for immediate execution. Set to false if the action
            should be previewed before executing. This property cannot be unset once
            it is true. Defaults to false.
          type: boolean
        synchronous:
          description: Set to true to force the batch to run synchronous. There can
            be at most 20 actions in synchronous batch. Defaults to false.
          type: boolean
        actions:
          description: A set of changes to make as part of this action (<a href='https://developer.cisco.com/meraki/api/#/rest/guides/action-batches/'>more
            details</a>)
          items:
            $ref: '#/components/schemas/_organizations__organizationId__actionBatches_actions'
          type: array
      required:
      - actions
      type: object
    inline_object_167:
      example:
        name: My organization
        management:
          details:
          - name: MSP ID
            value: "123456"
      properties:
        name:
          description: The name of the organization
          type: string
        management:
          $ref: '#/components/schemas/_organizations_management'
      required:
      - name
      type: object
    inline_object_168:
      example:
        name: My organization
        management:
          details:
          - name: MSP ID
            value: "123456"
        api:
          enabled: true
      properties:
        name:
          description: The name of the organization
          type: string
        management:
          $ref: '#/components/schemas/_organizations_management'
        api:
          $ref: '#/components/schemas/_organizations__organizationId__api'
      type: object
    _networks__networkId__wireless_ssids__number__hotspot20_methods:
      properties:
        id:
          description: ID of method
          type: string
        authenticationTypes:
          description: 'The authentication types for the method. These should be formatted
            as an object with the EAP method category in camelcase as the key and
            the list of types as the value (nonEapInnerAuthentication: Reserved, PAP,
            CHAP, MSCHAP, MSCHAPV2; eapInnerAuthentication: EAP-TLS, EAP-SIM, EAP-AKA,
            EAP-TTLS with MSCHAPv2; credentials: SIM, USIM, NFC Secure Element, Hardware
            Token, Softoken, Certificate, username/password, none, Reserved, Vendor
            Specific; tunneledEapMethodCredentials: SIM, USIM, NFC Secure Element,
            Hardware Token, Softoken, Certificate, username/password, Reserved, Anonymous,
            Vendor Specific)'
          properties: {}
          type: object
      type: object
    inline_object_165:
      example:
        trafficShapingEnabled: true
        defaultRulesEnabled: true
        rules:
        - definitions:
          - type: host
            value: google.com
          - type: port
            value: "9090"
          - type: ipRange
            value: 192.1.0.0
          - type: ipRange
            value: 192.1.0.0/16
          - type: ipRange
            value: 10.1.0.0/16:80
          - type: localNet
            value: 192.168.0.0/16
          perClientBandwidthLimits:
            settings: custom
            bandwidthLimits:
              limitUp: 1000000
              limitDown: 1000000
          dscpTagValue: 0
          pcpTagValue: 0
      properties:
        trafficShapingEnabled:
          description: Whether traffic shaping rules are applied to clients on your
            SSID.
          type: boolean
        defaultRulesEnabled:
          description: Whether default traffic shaping rules are enabled (true) or
            disabled (false). There are 4 default rules, which can be seen on your
            network's traffic shaping page. Note that default rules count against
            the rule limit of 8.
          type: boolean
        rules:
          description: |2
                An array of traffic shaping rules. Rules are applied in the order that
                they are specified in. An empty list (or null) means no rules. Note that
                you are allowed a maximum of 8 rules.
          items:
            $ref: '#/components/schemas/_networks__networkId__wireless_ssids__number__trafficShaping_rules_rules'
          type: array
      type: object
    inline_response_200_136:
      example:
        clients:
          counts:
            total: 0
        serial: serial
        usage:
          total: 0.8008282
          percentage: 6.0274563
        name: name
        model: model
        mac: mac
        productType: productType
        network:
          name: name
          id: id
      properties:
        name:
          description: Name of the device
          type: string
        model:
          description: Model of the device
          type: string
        serial:
          description: Serial number of the device
          type: string
        mac:
          description: Mac address of the device
          type: string
        productType:
          description: Product type of the device
          type: string
        network:
          $ref: '#/components/schemas/_organizations__organizationId__summary_top_appliances_byUtilization_network'
        usage:
          $ref: '#/components/schemas/_organizations__organizationId__summary_top_devices_byUsage_usage'
        clients:
          $ref: '#/components/schemas/_organizations__organizationId__summary_top_devices_byUsage_clients'
      type: object
    inline_object_166:
      example:
        concentrator:
          networkId: N_123
          vlanId: 44
          name: some concentrator name
        failover:
          requestIp: 1.1.1.1
          heartbeatInterval: 10
          idleTimeout: 30
        splitTunnel:
          enabled: true
          rules:
          - protocol: Any
            destCidr: 1.1.1.1/32
            destPort: any
            policy: allow
            comment: split tunnel rule 1
          - destCidr: foo.com
            destPort: any
            policy: deny
            comment: split tunnel rule 2
      properties:
        concentrator:
          $ref: '#/components/schemas/_networks__networkId__wireless_ssids__number__vpn_concentrator'
        splitTunnel:
          $ref: '#/components/schemas/_networks__networkId__wireless_ssids__number__vpn_splitTunnel'
        failover:
          $ref: '#/components/schemas/_networks__networkId__wireless_ssids__number__vpn_failover'
      type: object
    inline_response_200_135:
      example:
        clients:
          counts:
            total: 0
        usage:
          total: 6.0274563
          upstream: 1.4658129
          downstream: 5.962134
        name: name
      properties:
        name:
          description: Name of the manufacturer
          type: string
        clients:
          $ref: '#/components/schemas/_organizations__organizationId__summary_top_clients_manufacturers_byUsage_clients'
        usage:
          $ref: '#/components/schemas/_organizations__organizationId__summary_top_clients_manufacturers_byUsage_usage'
      type: object
    inline_object_163:
      example:
        enabled: true
        ranges:
        - startDay: Tuesday
          startTime: 01:00
          endDay: Tuesday
          endTime: 05:00
        - startDay: Fri
          startTime: 19:00
          endDay: monday
          endTime: 05:00
      properties:
        enabled:
          description: If true, the SSID outage schedule is enabled.
          type: boolean
        ranges:
          description: List of outage ranges. Has a start date and time, and end date
            and time. If this parameter is passed in along with rangesInSeconds parameter,
            this will take precedence.
          items:
            $ref: '#/components/schemas/_networks__networkId__wireless_ssids__number__schedules_ranges'
          type: array
        rangesInSeconds:
          description: List of outage ranges in seconds since Sunday at Midnight.
            Has a start and end. If this parameter is passed in along with the ranges
            parameter, ranges will take precedence.
          items:
            $ref: '#/components/schemas/_networks__networkId__wireless_ssids__number__schedules_rangesInSeconds'
          type: array
      type: object
    inline_response_200_134:
      example:
        usage:
          total: 0.8008282
          upstream: 6.0274563
          percentage: 5.962134
          downstream: 1.4658129
        name: name
        id: id
        mac: mac
        network:
          name: name
          id: id
      properties:
        name:
          description: Name of client
          type: string
        mac:
          description: MAC address of client
          type: string
        id:
          description: ID of client
          type: string
        network:
          $ref: '#/components/schemas/_organizations__organizationId__summary_top_clients_byUsage_network'
        usage:
          $ref: '#/components/schemas/_organizations__organizationId__summary_top_clients_byUsage_usage'
      type: object
    inline_object_164:
      example:
        splashUrl: https://www.custom_splash_url.com
        useSplashUrl: true
        splashTimeout: 1440
        redirectUrl: https://example.com
        useRedirectUrl: true
        welcomeMessage: Welcome!
        splashLogo:
          md5: abcd1234
          extension: jpg
          image:
            format: jpg
            contents: Q2lzY28gTWVyYWtp
        splashImage:
          md5: 542cccac8d7dedee0f185311d154d194
          extension: jpg
          image:
            format: jpg
            contents: Q2lzY28gTWVyYWtp
        splashPrepaidFront:
          md5: 542cccac8d7dedee0f185311d154d194
          extension: jpg
          image:
            format: jpg
            contents: Q2lzY28gTWVyYWtp
        blockAllTrafficBeforeSignOn: false
        controllerDisconnectionBehavior: default
        allowSimultaneousLogins: false
        guestSponsorship:
          durationInMinutes: 30
          guestCanRequestTimeframe: false
        billing:
          freeAccess:
            enabled: true
            durationInMinutes: 120
          prepaidAccessFastLoginEnabled: true
          replyToEmailAddress: user@email.com
        sentryEnrollment:
          systemsManagerNetwork:
            id: N_1234
          strength: focused
          enforcedSystems:
          - iOS
      properties:
        splashUrl:
          description: '[optional] The custom splash URL of the click-through splash
            page. Note that the URL can be configured without necessarily being used.
            In order to enable the custom URL, see ''useSplashUrl'''
          type: string
        useSplashUrl:
          description: '[optional] Boolean indicating whether the users will be redirected
            to the custom splash url. A custom splash URL must be set if this is true.
            Note that depending on your SSID''s access control settings, it may not
            be possible to use the custom splash URL.'
          type: boolean
        splashTimeout:
          description: Splash timeout in minutes. This will determine how often users
            will see the splash page.
          type: integer
        redirectUrl:
          description: The custom redirect URL where the users will go after the splash
            page.
          type: string
        useRedirectUrl:
          description: The Boolean indicating whether the the user will be redirected
            to the custom redirect URL after the splash page. A custom redirect URL
            must be set if this is true.
          type: boolean
        welcomeMessage:
          description: The welcome message for the users on the splash page.
          type: string
        splashLogo:
          $ref: '#/components/schemas/_networks__networkId__wireless_ssids__number__splash_settings_splashLogo'
        splashImage:
          $ref: '#/components/schemas/_networks__networkId__wireless_ssids__number__splash_settings_splashImage'
        splashPrepaidFront:
          $ref: '#/components/schemas/_networks__networkId__wireless_ssids__number__splash_settings_splashPrepaidFront'
        blockAllTrafficBeforeSignOn:
          description: How restricted allowing traffic should be. If true, all traffic
            types are blocked until the splash page is acknowledged. If false, all
            non-HTTP traffic is allowed before the splash page is acknowledged.
          type: boolean
        controllerDisconnectionBehavior:
          description: How login attempts should be handled when the controller is
            unreachable. Can be either 'open', 'restricted', or 'default'.
          enum:
          - default
          - open
          - restricted
          type: string
        allowSimultaneousLogins:
          description: Whether or not to allow simultaneous logins from different
            devices.
          type: boolean
        guestSponsorship:
          $ref: '#/components/schemas/_networks__networkId__wireless_ssids__number__splash_settings_guestSponsorship'
        billing:
          $ref: '#/components/schemas/_networks__networkId__wireless_ssids__number__splash_settings_billing'
        sentryEnrollment:
          $ref: '#/components/schemas/_networks__networkId__wireless_ssids__number__splash_settings_sentryEnrollment'
      type: object
    inline_response_200_133:
      example:
        serial: serial
        name: name
        model: model
        utilization:
          average:
            percentage: 0.8008282
        mac: mac
        network:
          name: name
          id: id
      properties:
        network:
          $ref: '#/components/schemas/_organizations__organizationId__summary_top_appliances_byUtilization_network'
        name:
          description: Name of the appliance
          type: string
        mac:
          description: Mac address of the appliance
          type: string
        serial:
          description: Serial number of the appliance
          type: string
        model:
          description: Model of the appliance
          type: string
        utilization:
          $ref: '#/components/schemas/_organizations__organizationId__summary_top_appliances_byUtilization_utilization'
      type: object
    _networks__networkId__appliance_firewall_oneToOneNatRules_rules:
      properties:
        name:
          description: A descriptive name for the rule
          type: string
        publicIp:
          description: The IP address that will be used to access the internal resource
            from the WAN
          type: string
        lanIp:
          description: The IP address of the server or device that hosts the internal
            resource that you wish to make available on the WAN
          type: string
        uplink:
          description: The physical WAN interface on which the traffic will arrive
            ('internet1' or, if available, 'internet2')
          enum:
          - internet1
          - internet2
          type: string
        allowedInbound:
          description: The ports this mapping will provide access on, and the remote
            IPs that will be allowed access to the resource
          items:
            $ref: '#/components/schemas/_networks__networkId__appliance_firewall_oneToOneNatRules_allowedInbound'
          type: array
      required:
      - lanIp
      type: object
    inline_object_161:
      example:
        id: "1284392014819"
        name: Sample Identity PSK
        passphrase: secret
        groupPolicyId: "101"
        expiresAt: 2018-02-11T00:00:00.090210Z
      properties:
        name:
          description: The name of the Identity PSK
          type: string
        passphrase:
          description: The passphrase for client authentication. If left blank, one
            will be auto-generated.
          type: string
        groupPolicyId:
          description: The group policy to be applied to clients
          type: string
        expiresAt:
          description: Timestamp for when the Identity PSK expires. Will not expire
            if left blank.
          format: date-time
          type: string
      required:
      - groupPolicyId
      - name
      type: object
    inline_response_200_100_usage:
      description: Usage information of all clients across organization
      example:
        average: 5.962134
        overall:
          total: 0.8008282
          upstream: 1.4658129
          downstream: 6.0274563
      properties:
        overall:
          $ref: '#/components/schemas/inline_response_200_100_usage_overall'
        average:
          description: Average data usage (in kb) of each client in organization
          format: float
          type: number
      type: object
    inline_response_200_132:
      example:
        vppServiceToken: vppServiceToken
        id: id
      properties:
        id:
          description: The id of the VPP Account
          type: string
        vppServiceToken:
          description: The VPP Account's Service Token
          type: string
      type: object
    inline_object_162:
      example:
        id: "1284392014819"
        name: Sample Identity PSK
        passphrase: secret
        groupPolicyId: "101"
        expiresAt: 2018-02-11T00:00:00.090210Z
      properties:
        name:
          description: The name of the Identity PSK
          type: string
        passphrase:
          description: The passphrase for client authentication
          type: string
        groupPolicyId:
          description: The group policy to be applied to clients
          type: string
        expiresAt:
          description: Timestamp for when the Identity PSK expires, or 'null' to never
            expire
          format: date-time
          type: string
      type: object
    inline_response_200_131:
      example:
        certificate: certificate
      properties:
        certificate:
          description: Organization APNS Certificate used by devices to communication
            with Apple
          type: string
      type: object
    inline_response_200_130:
      example:
        readings:
        - button:
            pressType: long
          tvoc:
            concentration: 9
          door:
            open: true
          pm25:
            concentration: 5
          metric: battery
          noise:
            ambient:
              level: 5
          temperature:
            celsius: 7.0614014
            fahrenheit: 2.302136
          humidity:
            relativePercentage: 6
          indoorAirQuality:
            score: 1
          battery:
            percentage: 0
          water:
            present: true
          ts: ts
        - button:
            pressType: long
          tvoc:
            concentration: 9
          door:
            open: true
          pm25:
            concentration: 5
          metric: battery
          noise:
            ambient:
              level: 5
          temperature:
            celsius: 7.0614014
            fahrenheit: 2.302136
          humidity:
            relativePercentage: 6
          indoorAirQuality:
            score: 1
          battery:
            percentage: 0
          water:
            present: true
          ts: ts
        serial: serial
        network:
          name: name
          id: id
      properties:
        serial:
          description: Serial number of the sensor that took the readings.
          type: string
        network:
          $ref: '#/components/schemas/_organizations__organizationId__sensor_readings_history_network'
        readings:
          description: Array of latest readings from the sensor. Each object represents
            a single reading for a single metric.
          items:
            $ref: '#/components/schemas/_organizations__organizationId__sensor_readings_latest_readings'
          type: array
      type: object
    inline_object_160:
      example:
        enabled: true
        operator:
          name: Meraki Product Management
        venue:
          name: SF Branch
          type: Unspecified Assembly
        networkAccessType: Private network
        domains:
        - meraki.local
        - domain2.com
        roamConsortOis:
        - ABC123
        - 456EFG
        mccMncs:
        - mcc: "123"
          mnc: "456"
        - mcc: "563"
          mnc: "232"
        naiRealms:
        - format: "1"
          name: Realm 1
          methods:
          - id: "1"
            authenticationTypes:
              nonEapInnerAuthentication:
              - MSCHAP
              eapInnerAuthentication:
              - EAP-TTLS with MSCHAPv2
              credentials: []
              tunneledEapMethodCredentials: []
      properties:
        enabled:
          description: Whether or not Hotspot 2.0 for this SSID is enabled
          type: boolean
        operator:
          $ref: '#/components/schemas/_networks__networkId__wireless_ssids__number__hotspot20_operator'
        venue:
          $ref: '#/components/schemas/_networks__networkId__wireless_ssids__number__hotspot20_venue'
        networkAccessType:
          description: The network type of this SSID ('Private network', 'Private
            network with guest access', 'Chargeable public network', 'Free public
            network', 'Personal device network', 'Emergency services only network',
            'Test or experimental', 'Wildcard')
          enum:
          - Chargeable public network
          - Emergency services only network
          - Free public network
          - Personal device network
          - Private network
          - Private network with guest access
          - Test or experimental
          - Wildcard
          type: string
        domains:
          description: An array of domain names
          items:
            type: string
          type: array
        roamConsortOis:
          description: An array of roaming consortium OIs (hexadecimal number 3-5
            octets in length)
          items:
            type: string
          type: array
        mccMncs:
          description: An array of MCC/MNC pairs
          items:
            $ref: '#/components/schemas/_networks__networkId__wireless_ssids__number__hotspot20_mccMncs'
          type: array
        naiRealms:
          description: An array of NAI realms
          items:
            $ref: '#/components/schemas/_networks__networkId__wireless_ssids__number__hotspot20_naiRealms'
          type: array
      type: object
    _devices__serial__cellularGateway_lan_reservedIpRanges:
      properties:
        start:
          description: Starting IP included in the reserved range of IPs
          type: string
        end:
          description: Ending IP included in the reserved range of IPs
          type: string
        comment:
          description: Comment explaining the reserved IP range
          type: string
      required:
      - comment
      - end
      - start
      type: object
    _organizations__organizationId__samlRoles_tags:
      properties:
        tag:
          description: The name of the tag
          type: string
        access:
          description: The privilege of the SAML administrator on the tag. Can be
            one of 'full', 'read-only', 'guest-ambassador' or 'monitor-only'
          enum:
          - full
          - guest-ambassador
          - monitor-only
          - read-only
          type: string
      required:
      - access
      - tag
      type: object
    inline_response_200_139:
      example:
        usage:
          total: 0.8008282
        name: name
        model: model
        mac: mac
        network:
          name: name
          id: id
      properties:
        network:
          $ref: '#/components/schemas/_organizations__organizationId__summary_top_appliances_byUtilization_network'
        name:
          description: Name of the switch
          type: string
        mac:
          description: Mac address of the switch
          type: string
        model:
          description: Model of the switch
          type: string
        usage:
          $ref: '#/components/schemas/_organizations__organizationId__summary_top_switches_byEnergyUsage_usage'
      type: object
    inline_response_200_138:
      example:
        clients:
          counts:
            total: 5
        usage:
          total: 0.8008282
          upstream: 1.4658129
          percentage: 5.962134
          downstream: 6.0274563
        name: name
      properties:
        name:
          description: Name of the SSID
          type: string
        usage:
          $ref: '#/components/schemas/_organizations__organizationId__summary_top_ssids_byUsage_usage'
        clients:
          $ref: '#/components/schemas/_organizations__organizationId__summary_top_ssids_byUsage_clients'
      type: object
    inline_response_200_137:
      example:
        usage:
          average: 1.4658129
          total: 6.0274563
        count: 0
        model: model
      properties:
        model:
          description: The device model
          type: string
        count:
          description: Total number of devices per model
          type: integer
        usage:
          $ref: '#/components/schemas/_organizations__organizationId__summary_top_devices_models_byUsage_usage'
      type: object
    inline_response_200_108_counts:
      description: counts
      example:
        byStatus:
          offline: 1
          dormant: 5
          online: 0
          alerting: 6
      properties:
        byStatus:
          $ref: '#/components/schemas/inline_response_200_108_counts_byStatus'
      type: object
    _networks__networkId__groupPolicies_bandwidth:
      description: |2
            The bandwidth settings for clients bound to your group policy.
      properties:
        settings:
          description: How bandwidth limits are enforced. Can be 'network default',
            'ignore' or 'custom'.
          enum:
          - custom
          - ignore
          - network default
          type: string
        bandwidthLimits:
          $ref: '#/components/schemas/_networks__networkId__groupPolicies_bandwidth_bandwidthLimits'
      type: object
    _organizations__organizationId__api:
      description: API-specific settings
      properties:
        enabled:
          description: If true, enable the access to the Cisco Meraki Dashboard API
          type: boolean
      type: object
    _networks__networkId__switch_accessPolicies_radiusServers:
      example:
        port: 0
        host: host
      properties:
        host:
          description: Public IP address of the RADIUS server
          type: string
        port:
          description: UDP port that the RADIUS server listens on for access requests
          type: integer
      type: object
    inline_object_198:
      example:
        name: Sample VoIP Provider
        address: 123.123.123.1
        bestEffortMonitoringEnabled: true
      properties:
        name:
          description: The name of the VoIP provider
          type: string
        address:
          description: The IP address (IPv4 only) or hostname of the media server
            to monitor
          type: string
        bestEffortMonitoringEnabled:
          description: Indicates that if the media server doesn't respond to ICMP
            pings, the nearest hop will be used in its stead.
          type: boolean
      type: object
    inline_object_199:
      example:
        orders:
        - 4CXXXXXXX
        serials:
        - Q234-ABCD-5678
        licenses:
        - key: Z2XXXXXXXXXX
          mode: addDevices
      properties:
        orders:
          description: The numbers of the orders that should be claimed
          items:
            type: string
          type: array
        serials:
          description: The serials of the devices that should be claimed
          items:
            type: string
          type: array
        licenses:
          description: The licenses that should be claimed
          items:
            $ref: '#/components/schemas/_organizations__organizationId__inventory_claim_licenses'
          type: array
      type: object
    _networks__networkId__firmwareUpgrades_staged_groups_assignedDevices_1:
      description: The devices and Switch Stacks assigned to the Group
      properties:
        devices:
          description: Data Array of Devices containing the name and serial
          items:
            $ref: '#/components/schemas/_networks__networkId__firmwareUpgrades_staged_groups_assignedDevices_1_devices'
          type: array
        switchStacks:
          description: Data Array of Switch Stacks containing the name and id
          items:
            $ref: '#/components/schemas/_networks__networkId__firmwareUpgrades_staged_groups_assignedDevices_1_switchStacks'
          type: array
      type: object
    _networks__networkId__mqttBrokers_security_security:
      description: TLS settings of the MQTT broker.
      properties:
        caCertificate:
          description: CA Certificate of the MQTT broker.
          type: string
        verifyHostnames:
          description: Whether the TLS hostname verification is enabled for the MQTT
            broker.
          type: boolean
      type: object
    _networks__networkId__sensor_alerts_profiles_threshold_noise:
      description: Noise threshold. 'ambient' must be provided.
      example:
        ambient:
          level: 2
          quality: fair
      properties:
        ambient:
          $ref: '#/components/schemas/_networks__networkId__sensor_alerts_profiles_threshold_noise_ambient'
      required:
      - ambient
      type: object
    inline_object_196:
      example:
        limitScopeToNetworks:
        - N_12345
      properties:
        limitScopeToNetworks:
          description: A list of network IDs to apply the opt-in to
          items:
            type: string
          type: array
      type: object
    _organizations__organizationId__firmware_upgrades_byDevice_upgrade_staged:
      description: Staged upgrade
      example:
        group:
          id: id
      properties:
        group:
          $ref: '#/components/schemas/_organizations__organizationId__firmware_upgrades_byDevice_upgrade_staged_group'
      type: object
    inline_object_197:
      example:
        name: Sample VoIP Provider
        address: 123.123.123.1
        bestEffortMonitoringEnabled: true
      properties:
        name:
          description: The name of the VoIP provider
          type: string
        address:
          description: The IP address (IPv4 only) or hostname of the media server
            to monitor
          type: string
        bestEffortMonitoringEnabled:
          description: Indicates that if the media server doesn't respond to ICMP
            pings, the nearest hop will be used in its stead.
          type: boolean
      required:
      - address
      - name
      type: object
    inline_object_194:
      example:
        name: My switch port
        tags:
        - tag1
        - tag2
        enabled: true
        poeEnabled: true
        type: access
        vlan: 10
        voiceVlan: 20
        allowedVlans: 1,3,5-10
        isolationEnabled: false
        rstpEnabled: true
        stpGuard: disabled
        linkNegotiation: Auto negotiate
        portScheduleId: "1234"
        udld: Alert only
        accessPolicyType: Sticky MAC allow list
        accessPolicyNumber: 2
        macAllowList:
        - 34:56:fe:ce:8e:b0
        - 34:56:fe:ce:8e:b1
        stickyMacAllowList:
        - 34:56:fe:ce:8e:b0
        - 34:56:fe:ce:8e:b1
        stickyMacAllowListLimit: 5
        stormControlEnabled: true
        flexibleStackingEnabled: true
        daiTrusted: false
        profile:
          enabled: false
          id: "1284392014819"
          iname: iname
      properties:
        name:
          description: The name of the switch profile port.
          type: string
        tags:
          description: The list of tags of the switch profile port.
          items:
            type: string
          type: array
        enabled:
          description: The status of the switch profile port.
          type: boolean
        poeEnabled:
          description: The PoE status of the switch profile port.
          type: boolean
        type:
          description: The type of the switch profile port ('trunk' or 'access').
          enum:
          - access
          - trunk
          type: string
        vlan:
          description: The VLAN of the switch profile port. A null value will clear
            the value set for trunk ports.
          type: integer
        voiceVlan:
          description: The voice VLAN of the switch profile port. Only applicable
            to access ports.
          type: integer
        allowedVlans:
          description: The VLANs allowed on the switch profile port. Only applicable
            to trunk ports.
          type: string
        isolationEnabled:
          description: The isolation status of the switch profile port.
          type: boolean
        rstpEnabled:
          description: The rapid spanning tree protocol status.
          type: boolean
        stpGuard:
          description: The state of the STP guard ('disabled', 'root guard', 'bpdu
            guard' or 'loop guard').
          enum:
          - bpdu guard
          - disabled
          - loop guard
          - root guard
          type: string
        linkNegotiation:
          description: The link speed for the switch profile port.
          type: string
        portScheduleId:
          description: The ID of the port schedule. A value of null will clear the
            port schedule.
          type: string
        udld:
          description: The action to take when Unidirectional Link is detected (Alert
            only, Enforce). Default configuration is Alert only.
          enum:
          - Alert only
          - Enforce
          type: string
        accessPolicyType:
          description: The type of the access policy of the switch profile port. Only
            applicable to access ports. Can be one of 'Open', 'Custom access policy',
            'MAC allow list' or 'Sticky MAC allow list'.
          enum:
          - Custom access policy
          - MAC allow list
          - Open
          - Sticky MAC allow list
          type: string
        accessPolicyNumber:
          description: The number of a custom access policy to configure on the switch
            profile port. Only applicable when 'accessPolicyType' is 'Custom access
            policy'.
          type: integer
        macAllowList:
          description: Only devices with MAC addresses specified in this list will
            have access to this port. Up to 20 MAC addresses can be defined. Only
            applicable when 'accessPolicyType' is 'MAC allow list'.
          items:
            type: string
          type: array
        stickyMacAllowList:
          description: The initial list of MAC addresses for sticky Mac allow list.
            Only applicable when 'accessPolicyType' is 'Sticky MAC allow list'.
          items:
            type: string
          type: array
        stickyMacAllowListLimit:
          description: The maximum number of MAC addresses for sticky MAC allow list.
            Only applicable when 'accessPolicyType' is 'Sticky MAC allow list'.
          type: integer
        stormControlEnabled:
          description: The storm control status of the switch profile port.
          type: boolean
        flexibleStackingEnabled:
          description: For supported switches (e.g. MS420/MS425), whether or not the
            port has flexible stacking enabled.
          type: boolean
        daiTrusted:
          description: If true, ARP packets for this port will be considered trusted,
            and Dynamic ARP Inspection will allow the traffic.
          type: boolean
        profile:
          $ref: '#/components/schemas/_devices__serial__switch_ports_profile'
      type: object
    inline_response_200_143:
      example:
        serial: serial
        name: name
        aggregation:
          enabled: true
          speed: 6
        power:
          mode: mode
          ac:
            isConnected: true
          poe:
            isConnected: true
        ports:
        - linkNegotiation:
            duplex: duplex
            speed: 0
          poe:
            standard: standard
          name: name
        - linkNegotiation:
            duplex: duplex
            speed: 0
          poe:
            standard: standard
          name: name
        network:
          id: id
      properties:
        serial:
          description: The serial number of the AP
          type: string
        name:
          description: The name of the AP
          type: string
        network:
          $ref: '#/components/schemas/_organizations__organizationId__wireless_devices_ethernet_statuses_network'
        power:
          $ref: '#/components/schemas/_organizations__organizationId__wireless_devices_ethernet_statuses_power'
        ports:
          description: List of port details
          items:
            $ref: '#/components/schemas/_organizations__organizationId__wireless_devices_ethernet_statuses_ports'
          type: array
        aggregation:
          $ref: '#/components/schemas/_organizations__organizationId__wireless_devices_ethernet_statuses_aggregation'
      type: object
    inline_object_195:
      example:
        shortName: has_magnetic_beta
        limitScopeToNetworks:
        - N_12345
      properties:
        shortName:
          description: Short name of the early access feature
          type: string
        limitScopeToNetworks:
          description: A list of network IDs to apply the opt-in to
          items:
            type: string
          type: array
      required:
      - shortName
      type: object
    inline_response_200_142:
      example:
        organizationId: organizationId
        alertType: alertType
        responseDuration: 6
        loggedAt: 2000-01-23T04:56:07.000+00:00
        networkId: networkId
        sentAt: 2000-01-23T04:56:07.000+00:00
        url: url
        responseCode: 0
      properties:
        alertType:
          description: Type of alert that the webhook is delivering
          type: string
        loggedAt:
          description: When the webhook log was created, in ISO8601 format
          format: date-time
          type: string
        networkId:
          description: Network ID for the webhook log
          type: string
        organizationId:
          description: ID for the webhook log's organization
          type: string
        responseCode:
          description: Response code from the webhook
          type: integer
        responseDuration:
          description: Duration of the response, in milliseconds
          type: integer
        sentAt:
          description: When the webhook was sent, in ISO8601 format
          format: date-time
          type: string
        url:
          description: URL where the webhook was sent
          type: string
      type: object
    inline_object_192:
      example:
        name: My config template
        timeZone: America/Los_Angeles
      properties:
        name:
          description: The name of the configuration template
          type: string
        timeZone:
          description: The timezone of the configuration template. For a list of allowed
            timezones, please see the 'TZ' column in the table in <a target='_blank'
            href='https://en.wikipedia.org/wiki/List_of_tz_database_time_zones'>this
            article</a>. Not applicable if copying from existing network or template
          type: string
        copyFromNetworkId:
          description: The ID of the network or config template to copy configuration
            from
          type: string
      required:
      - name
      type: object
    inline_response_200_141:
      example:
        lastReportedAt: 2000-01-23T04:56:07.000+00:00
        serial: serial
        uplinks:
        - primaryDns: primaryDns
          dns2: dns2
          ip: ip
          dns1: dns1
          ipAssignedBy: ipAssignedBy
          signalStat:
            rsrq: rsrq
            rsrp: rsrp
          publicIp: publicIp
          interface: cellular
          connectionType: connectionType
          iccid: iccid
          provider: provider
          signalType: signalType
          secondaryDns: secondaryDns
          gateway: gateway
          apn: apn
          status: active
        - primaryDns: primaryDns
          dns2: dns2
          ip: ip
          dns1: dns1
          ipAssignedBy: ipAssignedBy
          signalStat:
            rsrq: rsrq
            rsrp: rsrp
          publicIp: publicIp
          interface: cellular
          connectionType: connectionType
          iccid: iccid
          provider: provider
          signalType: signalType
          secondaryDns: secondaryDns
          gateway: gateway
          apn: apn
          status: active
        networkId: networkId
        model: model
      properties:
        networkId:
          description: Network identifier
          type: string
        serial:
          description: The uplink serial
          type: string
        model:
          description: The uplink model
          type: string
        lastReportedAt:
          description: Last reported time for the device
          format: date-time
          type: string
        uplinks:
          description: Uplinks
          items:
            $ref: '#/components/schemas/_organizations__organizationId__uplinks_statuses_uplinks'
          type: array
      type: object
    inline_object_193:
      example:
        name: My config template
        timeZone: America/Los_Angeles
      properties:
        name:
          description: The name of the configuration template
          type: string
        timeZone:
          description: The timezone of the configuration template. For a list of allowed
            timezones, please see the 'TZ' column in the table in <a target='_blank'
            href='https://en.wikipedia.org/wiki/List_of_tz_database_time_zones'>this
            article.</a>
          type: string
      type: object
    inline_response_200_140:
      example:
        serial: serial
        name: name
        model: model
        ports:
        - stpGuard: bpdu guard
          rstpEnabled: true
          stickyMacAllowList:
          - stickyMacAllowList
          - stickyMacAllowList
          portId: portId
          type: access
          enabled: true
          tags:
          - tags
          - tags
          allowedVlans: allowedVlans
          stickyMacAllowListLimit: 1
          linkNegotiation: linkNegotiation
          vlan: 0
          voiceVlan: 6
          poeEnabled: true
          name: name
          accessPolicyType: Custom access policy
        - stpGuard: bpdu guard
          rstpEnabled: true
          stickyMacAllowList:
          - stickyMacAllowList
          - stickyMacAllowList
          portId: portId
          type: access
          enabled: true
          tags:
          - tags
          - tags
          allowedVlans: allowedVlans
          stickyMacAllowListLimit: 1
          linkNegotiation: linkNegotiation
          vlan: 0
          voiceVlan: 6
          poeEnabled: true
          name: name
          accessPolicyType: Custom access policy
        mac: mac
        network:
          name: name
          id: id
      properties:
        name:
          description: The name of the switch.
          type: string
        serial:
          description: The serial number of the switch.
          type: string
        mac:
          description: The MAC address of the switch.
          type: string
        network:
          $ref: '#/components/schemas/_organizations__organizationId__switch_ports_bySwitch_network'
        model:
          description: The model of the switch.
          type: string
        ports:
          description: Ports belonging to the switch
          items:
            $ref: '#/components/schemas/_organizations__organizationId__switch_ports_bySwitch_ports'
          type: array
      type: object
    inline_object_190:
      example:
        orders:
        - 4CXXXXXXX
        serials:
        - Q234-ABCD-5678
        licenses:
        - key: Z2XXXXXXXXXX
          mode: addDevices
      properties:
        orders:
          description: The numbers of the orders that should be claimed
          items:
            type: string
          type: array
        serials:
          description: The serials of the devices that should be claimed
          items:
            type: string
          type: array
        licenses:
          description: The licenses that should be claimed
          items:
            $ref: '#/components/schemas/_organizations__organizationId__claim_licenses'
          type: array
      type: object
    inline_object_191:
      example:
        name: My organization
      properties:
        name:
          description: The name of the new organization
          type: string
      required:
      - name
      type: object
    _organizations__organizationId__brandingPolicies_customLogo_1_image:
      description: Properties for setting the image.
      properties:
        contents:
          description: The file contents (a base 64 encoded string) of your new logo.
          format: byte
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
        format:
          description: The format of the encoded contents.  Supported formats are
            'png', 'gif', and jpg'.
          enum:
          - gif
          - jpg
          - png
          type: string
      type: object
    _networks__networkId__wireless_ssids__number__localRadius:
      description: The current setting for Local Authentication, a built-in RADIUS
        server on the access point. Only valid if authMode is '8021x-localradius'.
      properties:
        cacheTimeout:
          description: The duration (in seconds) for which LDAP and OCSP lookups are
            cached.
          type: integer
        passwordAuthentication:
          $ref: '#/components/schemas/_networks__networkId__wireless_ssids__number__localRadius_passwordAuthentication'
        certificateAuthentication:
          $ref: '#/components/schemas/_networks__networkId__wireless_ssids__number__localRadius_certificateAuthentication'
      type: object
    _networks__networkId__switch_dhcp_v4_servers_seen_lastPacket_fields_options:
      example:
        name: name
        value: value
      properties:
        name:
          description: Option name.
          type: string
        value:
          description: Option value.
          type: string
      type: object
    _organizations__organizationId__switch_ports_bySwitch_ports:
      example:
        stpGuard: bpdu guard
        rstpEnabled: true
        stickyMacAllowList:
        - stickyMacAllowList
        - stickyMacAllowList
        portId: portId
        type: access
        enabled: true
        tags:
        - tags
        - tags
        allowedVlans: allowedVlans
        stickyMacAllowListLimit: 1
        linkNegotiation: linkNegotiation
        vlan: 0
        voiceVlan: 6
        poeEnabled: true
        name: name
        accessPolicyType: Custom access policy
      properties:
        portId:
          description: The identifier of the switch port.
          type: string
        name:
          description: The name of the switch port.
          type: string
        tags:
          description: The list of tags of the switch port.
          items:
            type: string
          type: array
        enabled:
          description: The status of the switch port.
          type: boolean
        poeEnabled:
          description: The PoE status of the switch port.
          type: boolean
        type:
          description: The type of the switch port ('trunk' or 'access').
          enum:
          - access
          - trunk
          type: string
        vlan:
          description: The VLAN of the switch port. A null value will clear the value
            set for trunk ports.
          type: integer
        voiceVlan:
          description: The voice VLAN of the switch port. Only applicable to access
            ports.
          type: integer
        allowedVlans:
          description: The VLANs allowed on the switch port. Only applicable to trunk
            ports.
          type: string
        rstpEnabled:
          description: The rapid spanning tree protocol status.
          type: boolean
        stpGuard:
          description: The state of the STP guard ('disabled', 'root guard', 'bpdu
            guard' or 'loop guard').
          enum:
          - bpdu guard
          - disabled
          - loop guard
          - root guard
          type: string
        linkNegotiation:
          description: The link speed for the switch port.
          type: string
        accessPolicyType:
          description: The type of the access policy of the switch port. Only applicable
            to access ports. Can be one of 'Open', 'Custom access policy', 'MAC allow
            list' or 'Sticky MAC allow list'.
          enum:
          - Custom access policy
          - MAC allow list
          - Open
          - Sticky MAC allow list
          type: string
        stickyMacAllowList:
          description: The initial list of MAC addresses for sticky Mac allow list.
            Only applicable when 'accessPolicyType' is 'Sticky MAC allow list'.
          items:
            type: string
          type: array
        stickyMacAllowListLimit:
          description: The maximum number of MAC addresses for sticky MAC allow list.
            Only applicable when 'accessPolicyType' is 'Sticky MAC allow list'.
          type: integer
      type: object
    inline_response_201_5_status_createdResources:
      example:
        id: id
        uri: uri
      properties:
        id:
          description: ID of the created resource
          type: string
        uri:
          description: URI, not including base, of the created resource
          type: string
      type: object
    _networks__networkId__appliance_connectivityMonitoringDestinations_destinations:
      properties:
        ip:
          description: The IP address to test connectivity with
          type: string
        description:
          description: Description of the testing destination. Optional, defaults
            to null
          type: string
        default:
          description: Boolean indicating whether this is the default testing destination
            (true) or not (false). Defaults to false. Only one default is allowed
          type: boolean
      required:
      - ip
      type: object
    inline_object_189:
      example: {}
      properties:
        serial:
          description: Serial of camera
          type: string
        wirelessCredentialsSent:
          description: Note whether credentials were sent successfully
          type: boolean
      type: object
    inline_object_187:
      example:
        name: My Branding Policy
        enabled: true
        adminSettings:
          appliesTo: All admins of networks...
          values:
          - N_1234
          - L_5678
        helpSettings:
          helpTab: show
          getHelpSubtab: default or inherit
          communitySubtab: show
          casesSubtab: hide
          dataProtectionRequestsSubtab: default or inherit
          getHelpSubtabKnowledgeBaseSearch: <h1>Some custom HTML content</h1>
          universalSearchKnowledgeBaseSearch: hide
          ciscoMerakiProductDocumentation: show
          supportContactInfo: show
          newFeaturesSubtab: show
          firewallInfoSubtab: hide
          apiDocsSubtab: default or inherit
          hardwareReplacementsSubtab: hide
          smForums: hide
          helpWidget: hide
        customLogo:
          enabled: true
          image:
            contents: Hyperg26C8F4h8CvcoUqpA==
            format: jpg
      properties:
        name:
          description: Name of the Dashboard branding policy.
          type: string
        enabled:
          description: Boolean indicating whether this policy is enabled.
          type: boolean
        adminSettings:
          $ref: '#/components/schemas/_organizations__organizationId__brandingPolicies_adminSettings'
        helpSettings:
          $ref: '#/components/schemas/_organizations__organizationId__brandingPolicies_helpSettings'
        customLogo:
          $ref: '#/components/schemas/_organizations__organizationId__brandingPolicies_customLogo_1'
      type: object
    _networks__networkId__appliance_vpn_siteToSiteVpn_hubs:
      properties:
        hubId:
          description: The network ID of the hub.
          type: string
        useDefaultRoute:
          description: Only valid in 'spoke' mode. Indicates whether default route
            traffic should be sent to this hub.
          type: boolean
      required:
      - hubId
      type: object
    inline_object_188:
      example:
        name: example
      properties:
        name:
          description: Unique name of the artifact
          type: string
      type: object
    inline_object_185:
      example:
        name: My Branding Policy
        enabled: true
        adminSettings:
          appliesTo: All admins of networks...
          values:
          - N_1234
          - L_5678
        helpSettings:
          helpTab: show
          getHelpSubtab: default or inherit
          communitySubtab: show
          casesSubtab: hide
          dataProtectionRequestsSubtab: default or inherit
          getHelpSubtabKnowledgeBaseSearch: <h1>Some custom HTML content</h1>
          universalSearchKnowledgeBaseSearch: hide
          ciscoMerakiProductDocumentation: show
          supportContactInfo: show
          newFeaturesSubtab: show
          firewallInfoSubtab: hide
          apiDocsSubtab: default or inherit
          hardwareReplacementsSubtab: hide
          smForums: hide
          helpWidget: hide
        customLogo:
          enabled: true
          image:
            contents: Hyperg26C8F4h8CvcoUqpA==
            format: jpg
      properties:
        name:
          description: Name of the Dashboard branding policy.
          type: string
        enabled:
          description: Boolean indicating whether this policy is enabled.
          type: boolean
        adminSettings:
          $ref: '#/components/schemas/_organizations__organizationId__brandingPolicies_adminSettings'
        helpSettings:
          $ref: '#/components/schemas/_organizations__organizationId__brandingPolicies_helpSettings_1'
        customLogo:
          $ref: '#/components/schemas/_organizations__organizationId__brandingPolicies_customLogo_1'
      type: object
    _networks__networkId__sensor_alerts_profiles_threshold_humidity:
      description: Humidity threshold. One of 'relativePercentage' or 'quality' must
        be provided.
      example:
        relativePercentage: 1
        quality: fair
      properties:
        relativePercentage:
          description: Alerting threshold in %RH.
          type: integer
        quality:
          description: Alerting threshold as a qualitative humidity level.
          enum:
          - fair
          - good
          - inadequate
          - poor
          type: string
      type: object
    inline_object_186:
      example:
        brandingPolicyIds:
        - "123"
        - "456"
        - "789"
      properties:
        brandingPolicyIds:
          description: |2
                  An ordered list of branding policy IDs that determines the priority order of how to apply the policies
          items:
            type: string
          type: array
      type: object
    inline_object_183:
      example:
        peers:
        - name: Peer Name
          publicIp: 123.123.123.1
          privateSubnets:
          - 192.168.1.0/24
          - 192.168.128.0/24
          localId: myMXId@meraki.com
          remoteId: miles@meraki.com
          ipsecPolicies:
            ikeCipherAlgo:
            - tripledes
            ikeAuthAlgo:
            - sha1
            ikePrfAlgo:
            - prfsha1
            ikeDiffieHellmanGroup:
            - group2
            ikeLifetime: 28800
            childCipherAlgo:
            - aes128
            childAuthAlgo:
            - sha1
            childPfsGroup:
            - disabled
            childLifetime: 28800
          ipsecPoliciesPreset: default
          secret: Sample Password
          ikeVersion: "2"
          networkTags:
          - none
      properties:
        peers:
          description: The list of VPN peers
          items:
            $ref: '#/components/schemas/_organizations__organizationId__appliance_vpn_thirdPartyVPNPeers_peers'
          type: array
      required:
      - peers
      type: object
    inline_object_184:
      example:
        rules:
        - comment: Allow TCP traffic to subnet with HTTP servers.
          policy: allow
          protocol: tcp
          srcPort: Any
          srcCidr: Any
          destPort: "443"
          destCidr: 192.168.1.0/24
          syslogEnabled: false
        syslogDefaultRule: false
      properties:
        rules:
          description: An ordered array of the firewall rules (not including the default
            rule)
          items:
            $ref: '#/components/schemas/_organizations__organizationId__appliance_vpn_vpnFirewallRules_rules'
          type: array
        syslogDefaultRule:
          description: Log the special default rule (boolean value - enable only if
            you've configured a syslog server) (optional)
          type: boolean
      type: object
    inline_object_181:
      example:
        enabled: true
      properties:
        enabled:
          description: Is the alert config enabled
          type: boolean
        type:
          description: The alert type
          enum:
          - appOutage
          - voipJitter
          - voipMos
          - voipPacketLoss
          - wanLatency
          - wanPacketLoss
          - wanStatus
          - wanUtilization
          type: string
        alertCondition:
          $ref: '#/components/schemas/_organizations__organizationId__alerts_profiles_alertCondition'
        recipients:
          $ref: '#/components/schemas/_organizations__organizationId__alerts_profiles_recipients'
        networkTags:
          description: Networks with these tags will be monitored for the alert
          items:
            type: string
          type: array
        description:
          description: User supplied description of the alert
          type: string
      type: object
    inline_object_182:
      example:
        allowedRules:
        - ruleId: meraki:intrusion/snort/GID/01/SID/688
          message: SQL sa login failed
        - ruleId: meraki:intrusion/snort/GID/01/SID/5805
          message: MALWARE-OTHER Trackware myway speedbar runtime detection - switch
            engines
      properties:
        allowedRules:
          description: Sets a list of specific SNORT signatures to allow
          items:
            $ref: '#/components/schemas/_organizations__organizationId__appliance_security_intrusion_allowedRules'
          type: array
      required:
      - allowedRules
      type: object
    inline_object_180:
      example:
        type: wanUtilization
        enabled: true
        alertCondition:
          duration: 60
          window: 600
          bit_rate_bps: 10000
          interface: wan1
        recipients:
          emails:
          - admin@example.org
          httpServerIds:
          - aHR0cHM6Ly93d3cuZXhhbXBsZS5jb20vcGF0aA==
        networkTags:
        - tag1
        - tag2
        description: WAN 1 high utilization
      properties:
        type:
          description: The alert type
          enum:
          - appOutage
          - voipJitter
          - voipMos
          - voipPacketLoss
          - wanLatency
          - wanPacketLoss
          - wanStatus
          - wanUtilization
          type: string
        alertCondition:
          $ref: '#/components/schemas/_organizations__organizationId__alerts_profiles_alertCondition'
        recipients:
          $ref: '#/components/schemas/_organizations__organizationId__alerts_profiles_recipients'
        networkTags:
          description: Networks with these tags will be monitored for the alert
          items:
            type: string
          type: array
        description:
          description: User supplied description of the alert
          type: string
      required:
      - alertCondition
      - networkTags
      - recipients
      - type
      type: object
    inline_response_200_27_products_wireless_lastUpgrade_toVersion:
      description: Details of the version the device upgraded to
      example:
        releaseDate: 2000-01-23T04:56:07.000+00:00
        releaseType: releaseType
        id: id
        shortName: shortName
        firmware: firmware
      properties:
        id:
          description: Firmware version identifier
          type: string
        firmware:
          description: Name of the firmware version
          type: string
        shortName:
          description: Firmware version short name
          type: string
        releaseType:
          description: Release type of the firmware version
          type: string
        releaseDate:
          description: Release date of the firmware version
          format: date-time
          type: string
      type: object
    _networks__networkId__groupPolicies_firewallAndTrafficShaping_l3FirewallRules:
      properties:
        comment:
          description: Description of the rule (optional)
          type: string
        policy:
          description: '''allow'' or ''deny'' traffic specified by this rule'
          type: string
        protocol:
          description: The type of protocol (must be 'tcp', 'udp', 'icmp', 'icmp6'
            or 'any')
          type: string
        destPort:
          description: Destination port (integer in the range 1-65535), a port range
            (e.g. 8080-9090), or 'any'
          type: string
        destCidr:
          description: Destination IP address (in IP or CIDR notation), a fully-qualified
            domain name (FQDN, if your network supports it) or 'any'.
          type: string
      required:
      - destCidr
      - policy
      - protocol
      type: object
    _networks__networkId__sm_userAccessDevices_trustedAccessConnections:
      example:
        trustedAccessConfigId: trustedAccessConfigId
        scepCompletedAt: 2000-01-23T04:56:07.000+00:00
        downloadedAt: downloadedAt
        lastConnectedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        trustedAccessConfigId:
          description: config id
          type: string
        downloadedAt:
          description: time that config was downloaded
          type: string
        scepCompletedAt:
          description: time that SCEP completed
          format: date-time
          type: string
        lastConnectedAt:
          description: time of last connection
          format: date-time
          type: string
      type: object
  securitySchemes:
    meraki_api_key:
      in: header
      name: X-Cisco-Meraki-API-Key
      type: apiKey
x-batchable-actions:
- group: Adaptive policy
  summary: Add an Adaptive Policy
  resource: /organizations/{organizationId}/adaptivePolicy/policies
  operation: create
- group: Adaptive policy
  summary: Delete an Adaptive Policy
  resource: /organizations/{organizationId}/adaptivePolicy/policies/{id}
  operation: destroy
- group: Adaptive policy
  summary: Update an Adaptive Policy
  resource: /organizations/{organizationId}/adaptivePolicy/policies/{id}
  operation: update
- group: Adaptive policy group
  summary: Creates a new adaptive policy group
  resource: /organizations/{organizationId}/adaptivePolicy/groups
  operation: create
- group: Adaptive policy group
  summary: Deletes the specified adaptive policy group and any associated policies
    and references
  resource: /organizations/{organizationId}/adaptivePolicy/groups/{id}
  operation: destroy
- group: Adaptive policy group
  summary: Updates an adaptive policy group. If updating "Infrastructure", only the
    SGT is allowed. Cannot update "Unknown".
  resource: /organizations/{organizationId}/adaptivePolicy/groups/{id}
  operation: update
- group: Adaptive policy settings
  summary: Update global adaptive policy settings
  resource: /organizations/{organizationId}/adaptivePolicy/settings
  operation: update
- group: Alternate management interface
  summary: Update the switch alternate management interface for the network
  resource: /networks/{networkId}/switch/alternateManagementInterface
  operation: update
- group: Api/v1/adaptive policy/acls controller/shim adaptive policy acl
  summary: Creates new adaptive policy ACL
  resource: /organizations/{organizationId}/adaptivePolicy/acls
  operation: create
- group: Api/v1/adaptive policy/acls controller/shim adaptive policy acl
  summary: Deletes the specified adaptive policy ACL. Note this adaptive policy ACL
    will also be removed from policies using it.
  resource: /organizations/{organizationId}/adaptivePolicy/acls/{aclId}
  operation: destroy
- group: Api/v1/adaptive policy/acls controller/shim adaptive policy acl
  summary: Updates an adaptive policy ACL
  resource: /organizations/{organizationId}/adaptivePolicy/acls/{aclId}
  operation: update
- group: Appliance ssid
  summary: Update the attributes of an MX SSID
  resource: /networks/{networkId}/appliance/ssids/{number}
  operation: update
- group: Bgp setting
  summary: Update a Hub BGP Configuration
  resource: /networks/{networkId}/appliance/vpn/bgp
  operation: update
- group: Billing
  summary: Update the billing settings
  resource: /networks/{networkId}/wireless/billing
  operation: update
- group: Bluetooth device setting
  summary: Update the bluetooth settings for a wireless device
  resource: /devices/{serial}/wireless/bluetooth/settings
  operation: update
- group: Camera custom analytics settings
  summary: Update custom analytics settings for a camera
  resource: /devices/{serial}/camera/customAnalytics
  operation: update
- group: Camera video settings
  summary: Update video settings for the given camera
  resource: /devices/{serial}/camera/video/settings
  operation: update
- group: Camera wireless profile settings
  summary: Assign wireless profiles to the given camera. Incremental updates are not
    supported, all profile assignment need to be supplied at once.
  resource: /devices/{serial}/camera/wirelessProfiles
  operation: update
- group: Cellular gateway connectivity monitoring destination
  summary: Update the connectivity testing destinations for an MG network
  resource: /networks/{networkId}/cellularGateway/connectivityMonitoringDestinations
  operation: update
- group: Cellular gateway device lan
  summary: Update the LAN Settings for a single MG.
  resource: /devices/{serial}/cellularGateway/lan
  operation: update
- group: Cellular gateway dhcp setting
  summary: Update common DHCP settings of MGs
  resource: /networks/{networkId}/cellularGateway/dhcp
  operation: update
- group: Cellular gateway port forwarding rules
  summary: Updates the port forwarding rules for a single MG.
  resource: /devices/{serial}/cellularGateway/portForwardingRules
  operation: update
- group: Cellular gateway subnet pool
  summary: Update the subnet pool and mask configuration for MGs in the network.
  resource: /networks/{networkId}/cellularGateway/subnetPool
  operation: update
- group: Cellular gateway uplink setting
  summary: Updates the uplink settings for your MG network.
  resource: /networks/{networkId}/cellularGateway/uplink
  operation: update
- group: Client
  summary: Provisions a client with a name and policy. Clients can be provisioned
    before they associate to the network.
  resource: /networks/{networkId}/clients
  operation: provision
- group: Config template
  summary: Create a new configuration template
  resource: /organizations/{organizationId}/configTemplates
  operation: create
- group: Config template
  summary: Update a configuration template
  resource: /organizations/{organizationId}/configTemplates/{configTemplateId}
  operation: update
- group: Custom performance class
  summary: Add a custom performance class for an MX network
  resource: /networks/{networkId}/appliance/trafficShaping/customPerformanceClasses
  operation: create
- group: Custom performance class
  summary: Delete a custom performance class from an MX network
  resource: /networks/{networkId}/appliance/trafficShaping/customPerformanceClasses/{customPerformanceClassId}
  operation: destroy
- group: Custom performance class
  summary: Update a custom performance class for an MX network
  resource: /networks/{networkId}/appliance/trafficShaping/customPerformanceClasses/{customPerformanceClassId}
  operation: update
- group: Dai trusted server
  summary: Add a server to be trusted by Dynamic ARP Inspection on this network
  resource: /networks/{networkId}/switch/dhcpServerPolicy/arpInspection/trustedServers
  operation: create
- group: Dai trusted server
  summary: Remove a server from being trusted by Dynamic ARP Inspection on this network
  resource: /networks/{networkId}/switch/dhcpServerPolicy/arpInspection/trustedServers/{trustedServerId}
  operation: destroy
- group: Dai trusted server
  summary: Update a server that is trusted by Dynamic ARP Inspection on this network
  resource: /networks/{networkId}/switch/dhcpServerPolicy/arpInspection/trustedServers/{trustedServerId}
  operation: update
- group: Dash xl/dashboard branding policy
  summary: Add a new branding policy to an organization
  resource: /organizations/{organizationId}/brandingPolicies
  operation: create
- group: Dash xl/dashboard branding policy
  summary: Delete a branding policy
  resource: /organizations/{organizationId}/brandingPolicies/{brandingPolicyId}
  operation: destroy
- group: Dash xl/dashboard branding policy
  summary: Update a branding policy
  resource: /organizations/{organizationId}/brandingPolicies/{brandingPolicyId}
  operation: update
- group: Dash xl/dashboard branding policy priorities
  summary: Update the priority ordering of an organization's branding policies.
  resource: /organizations/{organizationId}/brandingPolicies/priorities
  operation: update
- group: Device
  summary: Update the attributes of a device
  resource: /devices/{serial}
  operation: update
- group: Device
  summary: 'Claim devices into a network. (Note: for recently claimed devices, it
    may take a few minutes for API requsts against that device to succeed)'
  resource: /networks/{networkId}/devices
  operation: claim
- group: Device
  summary: Remove a single device
  resource: /networks/{networkId}/devices
  operation: remove
- group: Dhcp server policy
  summary: Update the DHCP server settings. Blocked/allowed servers are only applied
    when default policy is allow/block, respectively
  resource: /networks/{networkId}/switch/dhcpServerPolicy
  operation: update
- group: Dscp cos mapping
  summary: Update the DSCP to CoS mappings
  resource: /networks/{networkId}/switch/dscpToCosMappings
  operation: update
- group: Eap override
  summary: Update the EAP overridden parameters for an SSID.
  resource: /networks/{networkId}/wireless/ssids/{number}/eapOverride
  operation: update
- group: End user
  summary: Delete a user and all of its authentication methods.
  resource: /organizations/{organizationId}/users/{userId}
  operation: destroy
- group: Feature opt in
  summary: Update an early access feature opt-in for an organization
  resource: /organizations/{organizationId}/earlyAccess/features/optIns/{optInId}
  operation: update
- group: Firmware upgrade rollback
  summary: Rollback a Firmware Upgrade For A Network
  resource: /networks/{networkId}/firmwareUpgrades/rollbacks
  operation: create
- group: Firmware upgrades update
  summary: Update firmware upgrade information for a network
  resource: /networks/{networkId}/firmwareUpgrades
  operation: update
- group: Floor plan
  summary: Destroy a floor plan
  resource: /networks/{networkId}/floorPlans/{floorPlanId}
  operation: destroy
- group: Floor plan
  summary: Update a floor plan's geolocation and other meta data
  resource: /networks/{networkId}/floorPlans/{floorPlanId}
  operation: update
- group: Group policy
  summary: Create a group policy
  resource: /networks/{networkId}/groupPolicies
  operation: create
- group: Group policy
  summary: Delete a group policy
  resource: /networks/{networkId}/groupPolicies/{groupPolicyId}
  operation: destroy
- group: Group policy
  summary: Update a group policy
  resource: /networks/{networkId}/groupPolicies/{groupPolicyId}
  operation: update
- group: Hotspot20
  summary: Update the Hotspot 2.0 settings of an SSID
  resource: /networks/{networkId}/wireless/ssids/{number}/hotspot20
  operation: update
- group: L3 firewall
  summary: Update the L3 firewall rules of an SSID on an MR network
  resource: /networks/{networkId}/wireless/ssids/{number}/firewall/l3FirewallRules
  operation: update
- group: L3 interface
  summary: Create a layer 3 interface for a switch
  resource: /devices/{serial}/switch/routing/interfaces
  operation: create
- group: L3 interface
  summary: Delete a layer 3 interface from the switch
  resource: /devices/{serial}/switch/routing/interfaces/{interfaceId}
  operation: destroy
- group: L3 interface
  summary: Update a layer 3 interface for a switch
  resource: /devices/{serial}/switch/routing/interfaces/{interfaceId}
  operation: update
- group: L3 interface dhcp
  summary: Update a layer 3 interface DHCP configuration for a switch
  resource: /devices/{serial}/switch/routing/interfaces/{interfaceId}/dhcp
  operation: update
- group: L3 static route
  summary: Create a layer 3 static route for a switch
  resource: /devices/{serial}/switch/routing/staticRoutes
  operation: create
- group: L3 static route
  summary: Delete a layer 3 static route for a switch
  resource: /devices/{serial}/switch/routing/staticRoutes/{staticRouteId}
  operation: destroy
- group: L3 static route
  summary: Update a layer 3 static route for a switch
  resource: /devices/{serial}/switch/routing/staticRoutes/{staticRouteId}
  operation: update
- group: License
  summary: Assign SM seats to a network. This will increase the managed SM device
    limit of the network
  resource: /organizations/{organizationId}/licenses
  operation: assignSeats
- group: License
  summary: Move licenses to another organization. This will also move any devices
    that the licenses are assigned to
  resource: /organizations/{organizationId}/licenses
  operation: move
- group: License
  summary: Move SM seats to another organization
  resource: /organizations/{organizationId}/licenses
  operation: moveSeats
- group: License
  summary: Renew SM seats of a license. This will extend the license expiration date
    of managed SM devices covered by this license
  resource: /organizations/{organizationId}/licenses
  operation: renewSeats
- group: License
  summary: Update a license
  resource: /organizations/{organizationId}/licenses/{licenseId}
  operation: update
- group: Link aggregation
  summary: Create a link aggregation group
  resource: /networks/{networkId}/switch/linkAggregations
  operation: create
- group: Link aggregation
  summary: Split a link aggregation group into separate ports
  resource: /networks/{networkId}/switch/linkAggregations/{linkAggregationId}
  operation: destroy
- group: Link aggregation
  summary: Update a link aggregation group
  resource: /networks/{networkId}/switch/linkAggregations/{linkAggregationId}
  operation: update
- group: MTU configuration
  summary: Update the MTU configuration
  resource: /networks/{networkId}/switch/mtu
  operation: update
- group: MX VLAN settings
  summary: Enable/Disable VLANs for the given network
  resource: /networks/{networkId}/appliance/vlans/settings
  operation: update
- group: MX connectivity monitoring destination
  summary: Update the connectivity testing destinations for an MX network
  resource: /networks/{networkId}/appliance/connectivityMonitoringDestinations
  operation: update
- group: MX l7 firewall
  summary: Update the MX L7 firewall rules for an MX network
  resource: /networks/{networkId}/appliance/firewall/l7FirewallRules
  operation: update
- group: MX port
  summary: Update the per-port VLAN settings for a single MX port.
  resource: /networks/{networkId}/appliance/ports/{portId}
  operation: update
- group: MX uplink setting
  summary: Updates the uplink bandwidth settings for your MX network.
  resource: /networks/{networkId}/appliance/trafficShaping/uplinkBandwidth
  operation: update
- group: Management interface settings
  summary: Update the management interface settings for a device
  resource: /devices/{serial}/managementInterface
  operation: update
- group: Meraki auth user
  summary: Authorize a user configured with Meraki Authentication for a network (currently
    supports 802.1X, splash guest, and client VPN users, and currently, organizations
    have a 50,000 user cap)
  resource: /networks/{networkId}/merakiAuthUsers
  operation: create
- group: Meraki auth user
  summary: Deauthorize a user. To reauthorize a user after deauthorizing them, POST
    to this endpoint. (Currently, 802.1X RADIUS, splash guest, and client VPN users
    can be deauthorized.)
  resource: /networks/{networkId}/merakiAuthUsers/{merakiAuthUserId}
  operation: destroy
- group: Meraki auth user
  summary: Update a user configured with Meraki Authentication (currently, 802.1X
    RADIUS, splash guest, and client VPN users can be updated)
  resource: /networks/{networkId}/merakiAuthUsers/{merakiAuthUserId}
  operation: update
- group: Monitored media server
  summary: Add a media server to be monitored for this organization. Only valid for
    organizations with Meraki Insight.
  resource: /organizations/{organizationId}/insight/monitoredMediaServers
  operation: create
- group: Monitored media server
  summary: Delete a monitored media server from this organization. Only valid for
    organizations with Meraki Insight.
  resource: /organizations/{organizationId}/insight/monitoredMediaServers/{monitoredMediaServerId}
  operation: destroy
- group: Monitored media server
  summary: Update a monitored media server for this organization. Only valid for organizations
    with Meraki Insight.
  resource: /organizations/{organizationId}/insight/monitoredMediaServers/{monitoredMediaServerId}
  operation: update
- group: Mqtt broker
  summary: Add an MQTT broker
  resource: /networks/{networkId}/mqttBrokers
  operation: create
- group: Mqtt broker
  summary: Delete an MQTT broker
  resource: /networks/{networkId}/mqttBrokers/{mqttBrokerId}
  operation: destroy
- group: Mqtt broker
  summary: Update an MQTT broker
  resource: /networks/{networkId}/mqttBrokers/{mqttBrokerId}
  operation: update
- group: Ms/actions/switch
  summary: Update switch network settings
  resource: /networks/{networkId}/switch/settings
  operation: settings/update
- group: Mt/api/actions/alert profiles
  summary: Creates a sensor alert profile for a network.
  resource: /networks/{networkId}/sensor/alerts/profiles
  operation: create
- group: Mt/api/actions/alert profiles
  summary: Deletes a sensor alert profile from a network.
  resource: /networks/{networkId}/sensor/alerts/profiles/{id}
  operation: destroy
- group: Mt/api/actions/alert profiles
  summary: Updates a sensor alert profile for a network.
  resource: /networks/{networkId}/sensor/alerts/profiles/{id}
  operation: update
- group: Mt/api/actions/sensor mqtt broker
  summary: Update the sensor settings of an MQTT broker. To update the broker itself,
    use /networks/{networkId}/mqttBrokers/{mqttBrokerId}.
  resource: /networks/{networkId}/sensor/mqttBrokers/{mqttBrokerId}
  operation: update
- group: Multicast
  summary: Update multicast settings for a network
  resource: /networks/{networkId}/switch/routing/multicast
  operation: update
- group: Network
  summary: Bind a network to a template.
  resource: /networks/{networkId}
  operation: bind
- group: Network
  summary: Delete a network
  resource: /networks/{networkId}
  operation: destroy
- group: Network
  summary: Split a combined network into individual networks for each type of device
  resource: /networks/{networkId}
  operation: split
- group: Network
  summary: Unbind a network from a template.
  resource: /networks/{networkId}
  operation: unbind
- group: Network
  summary: Update a network
  resource: /networks/{networkId}
  operation: update
- group: Network
  summary: Combine multiple networks into a single network
  resource: /organizations/{organizationId}/networks
  operation: combine
- group: Network
  summary: Create a network
  resource: /organizations/{organizationId}/networks
  operation: create
- group: Network appliance settings
  summary: Update the appliance settings for a network
  resource: /networks/{networkId}/appliance/settings
  operation: update
- group: Network settings
  summary: Update the settings for a network
  resource: /networks/{networkId}/settings
  operation: update
- group: Org wide alerts/alert config
  summary: Create an organization-wide alert configuration
  resource: /organizations/{organizationId}/alerts/profiles
  operation: create
- group: Org wide alerts/alert config
  summary: Removes an organization-wide alert config
  resource: /organizations/{organizationId}/alerts/profiles/{alertConfigId}
  operation: destroy
- group: Org wide alerts/alert config
  summary: Update an organization-wide alert config
  resource: /organizations/{organizationId}/alerts/profiles/{alertConfigId}
  operation: update
- group: Organization SAML IdP
  summary: Create a SAML IdP for your organization.
  resource: /organizations/{organizationId}/saml/idps
  operation: create
- group: Organization SAML IdP
  summary: Remove a SAML IdP in your organization.
  resource: /organizations/{organizationId}/saml/idps/{idpId}
  operation: destroy
- group: Organization SAML IdP
  summary: Update a SAML IdP in your organization
  resource: /organizations/{organizationId}/saml/idps/{idpId}
  operation: update
- group: Organization login security settings
  summary: Update the login security settings for an organization
  resource: /organizations/{organizationId}/loginSecurity
  operation: update
- group: Ospf routing
  summary: Update layer 3 OSPF routing configuration
  resource: /networks/{networkId}/switch/routing/ospf
  operation: update
- group: Policy object
  summary: Creates a new Policy Object.
  resource: /organizations/{organizationId}/policyObjects
  operation: create
- group: Policy object
  summary: Deletes a Policy Object.
  resource: /organizations/{organizationId}/policyObjects/{policyObjectId}
  operation: destroy
- group: Policy object
  summary: Updates a Policy Object.
  resource: /organizations/{organizationId}/policyObjects/{policyObjectId}
  operation: update
- group: Policy object group
  summary: Creates a new Policy Object Group.
  resource: /organizations/{organizationId}/policyObjects/groups
  operation: create
- group: Policy object group
  summary: Deletes a Policy Object Group.
  resource: /organizations/{organizationId}/policyObjects/groups/{policyObjectGroupId}
  operation: destroy
- group: Policy object group
  summary: Updates a Policy Object Group.
  resource: /organizations/{organizationId}/policyObjects/groups/{policyObjectGroupId}
  operation: update
- group: Psk group
  summary: Create an Identity PSK
  resource: /networks/{networkId}/wireless/ssids/{number}/identityPsks
  operation: create
- group: Psk group
  summary: Delete an Identity PSK
  resource: /networks/{networkId}/wireless/ssids/{number}/identityPsks/{identityPskId}
  operation: destroy
- group: Psk group
  summary: Update an Identity PSK
  resource: /networks/{networkId}/wireless/ssids/{number}/identityPsks/{identityPskId}
  operation: update
- group: Qos rule
  summary: Add a quality of service rule
  resource: /networks/{networkId}/switch/qosRules
  operation: create
- group: Qos rule
  summary: Update the order in which the rules should be processed by the switch
  resource: /networks/{networkId}/switch/qosRules/order
  operation: update_order
- group: Qos rule
  summary: Delete a quality of service rule
  resource: /networks/{networkId}/switch/qosRules/{qosRuleId}
  operation: destroy
- group: Qos rule
  summary: Update a quality of service rule
  resource: /networks/{networkId}/switch/qosRules/{qosRuleId}
  operation: update
- group: Quality and retention setting
  summary: Update quality and retention settings for the given camera
  resource: /devices/{serial}/camera/qualityAndRetention
  operation: update
- group: RF profile
  summary: Creates new RF profile for this network
  resource: /networks/{networkId}/wireless/rfProfiles
  operation: create
- group: RF profile
  summary: Delete a RF Profile
  resource: /networks/{networkId}/wireless/rfProfiles/{rfProfileId}
  operation: destroy
- group: RF profile
  summary: Updates specified RF profile for this network
  resource: /networks/{networkId}/wireless/rfProfiles/{rfProfileId}
  operation: update
- group: Radio settings
  summary: Update the radio settings of a device
  resource: /devices/{serial}/wireless/radio/settings
  operation: update
- group: Rendezvous point
  summary: Create a multicast rendezvous point
  resource: /networks/{networkId}/switch/routing/multicast/rendezvousPoints
  operation: create
- group: Rendezvous point
  summary: Delete a multicast rendezvous point
  resource: /networks/{networkId}/switch/routing/multicast/rendezvousPoints/{rendezvousPointId}
  operation: destroy
- group: Rendezvous point
  summary: Update a multicast rendezvous point
  resource: /networks/{networkId}/switch/routing/multicast/rendezvousPoints/{rendezvousPointId}
  operation: update
- group: STP configuration
  summary: Updates STP settings
  resource: /networks/{networkId}/switch/stp
  operation: update
- group: Sense setting
  summary: Update sense settings for the given camera
  resource: /devices/{serial}/camera/sense
  operation: update
- group: Sensor gateway role
  summary: Assign one or more sensor roles to a given sensor or camera device.
  resource: /devices/{serial}/sensor/relationships
  operation: update
- group: Single lan
  summary: Update single LAN configuration
  resource: /networks/{networkId}/appliance/singleLan
  operation: update
- group: Site to site vpn
  summary: Update the site-to-site VPN settings of a network. Only valid for MX networks
    in NAT mode.
  resource: /networks/{networkId}/appliance/vpn/siteToSiteVpn
  operation: update
- group: Ssid
  summary: Update the attributes of an MR SSID
  resource: /networks/{networkId}/wireless/ssids/{number}
  operation: update
- group: Ssid bonjour forwarding
  summary: Update the bonjour forwarding setting and rules for the SSID
  resource: /networks/{networkId}/wireless/ssids/{number}/bonjourForwarding
  operation: update
- group: Ssid device type group policies
  summary: Update the device type group policies for the SSID
  resource: /networks/{networkId}/wireless/ssids/{number}/deviceTypeGroupPolicies
  operation: update
- group: Ssid outage schedule
  summary: Update the outage schedule for the SSID
  resource: /networks/{networkId}/wireless/ssids/{number}/schedules
  operation: update
- group: Ssid splash settings
  summary: Modify the splash page settings for the given SSID
  resource: /networks/{networkId}/wireless/ssids/{number}/splash/settings
  operation: update
- group: Ssid vpn
  summary: Update the VPN settings for the SSID
  resource: /networks/{networkId}/wireless/ssids/{number}/vpn
  operation: update
- group: Staged upgrade/group
  summary: Create a Staged Upgrade Group for a network
  resource: /networks/{networkId}/firmwareUpgrades/staged/groups
  operation: create
- group: Staged upgrade/group
  summary: Delete a Staged Upgrade Group
  resource: /networks/{networkId}/firmwareUpgrades/staged/groups/{groupId}
  operation: destroy
- group: Static delegated prefix
  summary: Add a static delegated prefix from a network
  resource: /networks/{networkId}/appliance/prefixes/delegated/statics
  operation: create
- group: Static delegated prefix
  summary: Delete a static delegated prefix from a network
  resource: /networks/{networkId}/appliance/prefixes/delegated/statics/{staticDelegatedPrefixId}
  operation: destroy
- group: Static delegated prefix
  summary: Update a static delegated prefix from a network
  resource: /networks/{networkId}/appliance/prefixes/delegated/statics/{staticDelegatedPrefixId}
  operation: update
- group: Storm control
  summary: Update the storm control configuration for a switch network
  resource: /networks/{networkId}/switch/stormControl
  operation: update
- group: Switch
  summary: 'Clone port-level and some switch-level configuration settings from a source
    switch to one or more target switches. Cloned settings include: Aggregation Groups,
    Power Settings, Multicast Settings, MTU Configuration, STP Bridge priority, Port
    Mirroring'
  resource: /organizations/{organizationId}/switch/devices
  operation: clone
- group: Switch access policy
  summary: Create an access policy for a switch network. If you would like to enable
    Meraki Authentication, set radiusServers to empty array.
  resource: /networks/{networkId}/switch/accessPolicies
  operation: create
- group: Switch access policy
  summary: Delete an access policy for a switch network
  resource: /networks/{networkId}/switch/accessPolicies/{accessPolicyNumber}
  operation: destroy
- group: Switch access policy
  summary: Update an access policy for a switch network. If you would like to enable
    Meraki Authentication, set radiusServers to empty array.
  resource: /networks/{networkId}/switch/accessPolicies/{accessPolicyNumber}
  operation: update
- group: Switch port
  summary: Cycle a set of switch ports
  resource: /devices/{serial}/switch/ports
  operation: cycle
- group: Switch port
  summary: Update a switch port
  resource: /devices/{serial}/switch/ports/{portId}
  operation: update
- group: Switch port schedule
  summary: Update a switch port schedule
  resource: /networks/{networkId}/switch/portSchedules/{portScheduleId}
  operation: update
- group: Switch profile port
  summary: Update a switch profile port
  resource: /organizations/{organizationId}/configTemplates/{configTemplateId}/switch/profiles/{profileId}/ports/{portId}
  operation: update
- group: Switch stacks l3 interface
  summary: Create a layer 3 interface for a switch stack
  resource: /networks/{networkId}/switch/stacks/{switchStackId}/routing/interfaces
  operation: create
- group: Switch stacks l3 interface
  summary: Delete a layer 3 interface from a switch stack
  resource: /networks/{networkId}/switch/stacks/{switchStackId}/routing/interfaces/{interfaceId}
  operation: destroy
- group: Switch stacks l3 interface
  summary: Update a layer 3 interface for a switch stack
  resource: /networks/{networkId}/switch/stacks/{switchStackId}/routing/interfaces/{interfaceId}
  operation: update
- group: Switch stacks l3 interface dhcp
  summary: Update a layer 3 interface DHCP configuration for a switch stack
  resource: /networks/{networkId}/switch/stacks/{switchStackId}/routing/interfaces/{interfaceId}/dhcp
  operation: update
- group: Switch stacks l3 static route
  summary: Create a layer 3 static route for a switch stack
  resource: /networks/{networkId}/switch/stacks/{switchStackId}/routing/staticRoutes
  operation: create
- group: Switch stacks l3 static route
  summary: Delete a layer 3 static route for a switch stack
  resource: /networks/{networkId}/switch/stacks/{switchStackId}/routing/staticRoutes/{staticRouteId}
  operation: destroy
- group: Switch stacks l3 static route
  summary: Update a layer 3 static route for a switch stack
  resource: /networks/{networkId}/switch/stacks/{switchStackId}/routing/staticRoutes/{staticRouteId}
  operation: update
- group: Switch warm spare settings
  summary: Update warm spare configuration for a switch. The spare will use the same
    L3 configuration as the primary. Note that this will irreversibly destroy any
    existing L3 configuration on the spare.
  resource: /devices/{serial}/switch/warmSpare
  operation: update
- group: Traffic shaping settings
  summary: Update the traffic shaping settings rules for an MX network
  resource: /networks/{networkId}/appliance/trafficShaping/rules
  operation: update
- group: Traffic shaping settings
  summary: Update the traffic shaping settings for an SSID on an MR network
  resource: /networks/{networkId}/wireless/ssids/{number}/trafficShaping/rules
  operation: update
- group: Uplink selection settings
  summary: Update uplink selection settings for an MX network
  resource: /networks/{networkId}/appliance/trafficShaping/uplinkSelection
  operation: update
- group: User access device
  summary: Delete a User Access Device
  resource: /networks/{networkId}/sm/userAccessDevices/{userAccessDeviceId}
  operation: destroy
- group: VLAN
  summary: Add a VLAN
  resource: /networks/{networkId}/appliance/vlans
  operation: create
- group: VLAN
  summary: Delete a VLAN from a network
  resource: /networks/{networkId}/appliance/vlans/{vlanId}
  operation: destroy
- group: VLAN
  summary: Update a VLAN
  resource: /networks/{networkId}/appliance/vlans/{vlanId}
  operation: update
- group: Vmx
  summary: Claim a vMX into a network
  resource: /networks/{networkId}/devices/claim
  operation: claim
- group: Vmx token
  summary: Generate a new vMX authentication token
  resource: /devices/{serial}/appliance/vmx/authenticationToken
  operation: create
- group: Warm spare
  summary: Swap MX primary and warm spare appliances
  resource: /networks/{networkId}/appliance/warmSpare
  operation: swap
- group: Warm spare
  summary: Update MX warm spare settings
  resource: /networks/{networkId}/appliance/warmSpare
  operation: update
- group: Webhook template
  summary: Create a webhook payload template for a network
  resource: /networks/{networkId}/webhooks/payloadTemplates
  operation: create
- group: Webhook template
  summary: Destroy a webhook payload template for a network. Does not work for included
    templates ('wpt_00001', 'wpt_00002', 'wpt_00003', 'wpt_00004', 'wpt_00005' or
    'wpt_00006')
  resource: /networks/{networkId}/webhooks/payloadTemplates/{payloadTemplateId}
  operation: destroy
- group: Webhook template
  summary: Update a webhook payload template for a network
  resource: /networks/{networkId}/webhooks/payloadTemplates/{payloadTemplateId}
  operation: update
- group: Wired/uplinks/settings
  summary: Update the uplink settings for an MX appliance
  resource: /devices/{serial}/appliance/uplinks/settings
  operation: update
- group: Wired/vpn/third party vpn peers
  summary: Update the third party VPN peers for an organization
  resource: /organizations/{organizationId}/appliance/vpn/thirdPartyVPNPeers
  operation: update
- group: Wireless alternate management interface
  summary: Update alternate management interface and device static IP
  resource: /networks/{networkId}/wireless/alternateManagementInterface
  operation: update
- group: Wireless l7 firewall
  summary: Update the L7 firewall rules of an SSID on an MR network
  resource: /networks/{networkId}/wireless/ssids/{number}/firewall/l7FirewallRules
  operation: update
- group: Wireless settings
  summary: Update the wireless settings for a network
  resource: /networks/{networkId}/wireless/settings
  operation: update
x-original-swagger-version: "2.0"
