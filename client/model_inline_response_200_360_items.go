/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 02 July, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.60.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200360Items struct for InlineResponse200360Items
type InlineResponse200360Items struct {
	// The ID of the Certificate Authority
	CertificateAuthorityId *string `json:"certificateAuthorityId,omitempty"`
	// The PEM encoded CRL for the Certificate Authority
	Crl *string `json:"crl,omitempty"`
}

// NewInlineResponse200360Items instantiates a new InlineResponse200360Items object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200360Items() *InlineResponse200360Items {
	this := InlineResponse200360Items{}
	return &this
}

// NewInlineResponse200360ItemsWithDefaults instantiates a new InlineResponse200360Items object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200360ItemsWithDefaults() *InlineResponse200360Items {
	this := InlineResponse200360Items{}
	return &this
}

// GetCertificateAuthorityId returns the CertificateAuthorityId field value if set, zero value otherwise.
func (o *InlineResponse200360Items) GetCertificateAuthorityId() string {
	if o == nil || isNil(o.CertificateAuthorityId) {
		var ret string
		return ret
	}
	return *o.CertificateAuthorityId
}

// GetCertificateAuthorityIdOk returns a tuple with the CertificateAuthorityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200360Items) GetCertificateAuthorityIdOk() (*string, bool) {
	if o == nil || isNil(o.CertificateAuthorityId) {
    return nil, false
	}
	return o.CertificateAuthorityId, true
}

// HasCertificateAuthorityId returns a boolean if a field has been set.
func (o *InlineResponse200360Items) HasCertificateAuthorityId() bool {
	if o != nil && !isNil(o.CertificateAuthorityId) {
		return true
	}

	return false
}

// SetCertificateAuthorityId gets a reference to the given string and assigns it to the CertificateAuthorityId field.
func (o *InlineResponse200360Items) SetCertificateAuthorityId(v string) {
	o.CertificateAuthorityId = &v
}

// GetCrl returns the Crl field value if set, zero value otherwise.
func (o *InlineResponse200360Items) GetCrl() string {
	if o == nil || isNil(o.Crl) {
		var ret string
		return ret
	}
	return *o.Crl
}

// GetCrlOk returns a tuple with the Crl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200360Items) GetCrlOk() (*string, bool) {
	if o == nil || isNil(o.Crl) {
    return nil, false
	}
	return o.Crl, true
}

// HasCrl returns a boolean if a field has been set.
func (o *InlineResponse200360Items) HasCrl() bool {
	if o != nil && !isNil(o.Crl) {
		return true
	}

	return false
}

// SetCrl gets a reference to the given string and assigns it to the Crl field.
func (o *InlineResponse200360Items) SetCrl(v string) {
	o.Crl = &v
}

func (o InlineResponse200360Items) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.CertificateAuthorityId) {
		toSerialize["certificateAuthorityId"] = o.CertificateAuthorityId
	}
	if !isNil(o.Crl) {
		toSerialize["crl"] = o.Crl
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200360Items struct {
	value *InlineResponse200360Items
	isSet bool
}

func (v NullableInlineResponse200360Items) Get() *InlineResponse200360Items {
	return v.value
}

func (v *NullableInlineResponse200360Items) Set(val *InlineResponse200360Items) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200360Items) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200360Items) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200360Items(val *InlineResponse200360Items) *NullableInlineResponse200360Items {
	return &NullableInlineResponse200360Items{value: val, isSet: true}
}

func (v NullableInlineResponse200360Items) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200360Items) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


