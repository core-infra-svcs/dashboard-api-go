/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 06 August, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.61.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse20048 struct for InlineResponse20048
type InlineResponse20048 struct {
	// Id to check the status of your enrollment
	EnrollmentId *string `json:"enrollmentId,omitempty"`
	// Url to check the status of your enrollment
	Url *string `json:"url,omitempty"`
	Request *InlineResponse2019Request `json:"request,omitempty"`
	// Status of the enrollment
	Status *string `json:"status,omitempty"`
	// Enrollment started at
	EnrollmentStartedAt *string `json:"enrollmentStartedAt,omitempty"`
	// Door locks
	DoorLocks []InlineResponse20048DoorLocks `json:"doorLocks,omitempty"`
}

// NewInlineResponse20048 instantiates a new InlineResponse20048 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20048() *InlineResponse20048 {
	this := InlineResponse20048{}
	return &this
}

// NewInlineResponse20048WithDefaults instantiates a new InlineResponse20048 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20048WithDefaults() *InlineResponse20048 {
	this := InlineResponse20048{}
	return &this
}

// GetEnrollmentId returns the EnrollmentId field value if set, zero value otherwise.
func (o *InlineResponse20048) GetEnrollmentId() string {
	if o == nil || isNil(o.EnrollmentId) {
		var ret string
		return ret
	}
	return *o.EnrollmentId
}

// GetEnrollmentIdOk returns a tuple with the EnrollmentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20048) GetEnrollmentIdOk() (*string, bool) {
	if o == nil || isNil(o.EnrollmentId) {
    return nil, false
	}
	return o.EnrollmentId, true
}

// HasEnrollmentId returns a boolean if a field has been set.
func (o *InlineResponse20048) HasEnrollmentId() bool {
	if o != nil && !isNil(o.EnrollmentId) {
		return true
	}

	return false
}

// SetEnrollmentId gets a reference to the given string and assigns it to the EnrollmentId field.
func (o *InlineResponse20048) SetEnrollmentId(v string) {
	o.EnrollmentId = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *InlineResponse20048) GetUrl() string {
	if o == nil || isNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20048) GetUrlOk() (*string, bool) {
	if o == nil || isNil(o.Url) {
    return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *InlineResponse20048) HasUrl() bool {
	if o != nil && !isNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *InlineResponse20048) SetUrl(v string) {
	o.Url = &v
}

// GetRequest returns the Request field value if set, zero value otherwise.
func (o *InlineResponse20048) GetRequest() InlineResponse2019Request {
	if o == nil || isNil(o.Request) {
		var ret InlineResponse2019Request
		return ret
	}
	return *o.Request
}

// GetRequestOk returns a tuple with the Request field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20048) GetRequestOk() (*InlineResponse2019Request, bool) {
	if o == nil || isNil(o.Request) {
    return nil, false
	}
	return o.Request, true
}

// HasRequest returns a boolean if a field has been set.
func (o *InlineResponse20048) HasRequest() bool {
	if o != nil && !isNil(o.Request) {
		return true
	}

	return false
}

// SetRequest gets a reference to the given InlineResponse2019Request and assigns it to the Request field.
func (o *InlineResponse20048) SetRequest(v InlineResponse2019Request) {
	o.Request = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *InlineResponse20048) GetStatus() string {
	if o == nil || isNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20048) GetStatusOk() (*string, bool) {
	if o == nil || isNil(o.Status) {
    return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *InlineResponse20048) HasStatus() bool {
	if o != nil && !isNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *InlineResponse20048) SetStatus(v string) {
	o.Status = &v
}

// GetEnrollmentStartedAt returns the EnrollmentStartedAt field value if set, zero value otherwise.
func (o *InlineResponse20048) GetEnrollmentStartedAt() string {
	if o == nil || isNil(o.EnrollmentStartedAt) {
		var ret string
		return ret
	}
	return *o.EnrollmentStartedAt
}

// GetEnrollmentStartedAtOk returns a tuple with the EnrollmentStartedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20048) GetEnrollmentStartedAtOk() (*string, bool) {
	if o == nil || isNil(o.EnrollmentStartedAt) {
    return nil, false
	}
	return o.EnrollmentStartedAt, true
}

// HasEnrollmentStartedAt returns a boolean if a field has been set.
func (o *InlineResponse20048) HasEnrollmentStartedAt() bool {
	if o != nil && !isNil(o.EnrollmentStartedAt) {
		return true
	}

	return false
}

// SetEnrollmentStartedAt gets a reference to the given string and assigns it to the EnrollmentStartedAt field.
func (o *InlineResponse20048) SetEnrollmentStartedAt(v string) {
	o.EnrollmentStartedAt = &v
}

// GetDoorLocks returns the DoorLocks field value if set, zero value otherwise.
func (o *InlineResponse20048) GetDoorLocks() []InlineResponse20048DoorLocks {
	if o == nil || isNil(o.DoorLocks) {
		var ret []InlineResponse20048DoorLocks
		return ret
	}
	return o.DoorLocks
}

// GetDoorLocksOk returns a tuple with the DoorLocks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20048) GetDoorLocksOk() ([]InlineResponse20048DoorLocks, bool) {
	if o == nil || isNil(o.DoorLocks) {
    return nil, false
	}
	return o.DoorLocks, true
}

// HasDoorLocks returns a boolean if a field has been set.
func (o *InlineResponse20048) HasDoorLocks() bool {
	if o != nil && !isNil(o.DoorLocks) {
		return true
	}

	return false
}

// SetDoorLocks gets a reference to the given []InlineResponse20048DoorLocks and assigns it to the DoorLocks field.
func (o *InlineResponse20048) SetDoorLocks(v []InlineResponse20048DoorLocks) {
	o.DoorLocks = v
}

func (o InlineResponse20048) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.EnrollmentId) {
		toSerialize["enrollmentId"] = o.EnrollmentId
	}
	if !isNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !isNil(o.Request) {
		toSerialize["request"] = o.Request
	}
	if !isNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !isNil(o.EnrollmentStartedAt) {
		toSerialize["enrollmentStartedAt"] = o.EnrollmentStartedAt
	}
	if !isNil(o.DoorLocks) {
		toSerialize["doorLocks"] = o.DoorLocks
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20048 struct {
	value *InlineResponse20048
	isSet bool
}

func (v NullableInlineResponse20048) Get() *InlineResponse20048 {
	return v.value
}

func (v *NullableInlineResponse20048) Set(val *InlineResponse20048) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20048) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20048) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20048(val *InlineResponse20048) *NullableInlineResponse20048 {
	return &NullableInlineResponse20048{value: val, isSet: true}
}

func (v NullableInlineResponse20048) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20048) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


