/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 07 August, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.49.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200308Radio Wireless access point radio identifier.
type InlineResponse200308Radio struct {
	// Frequency range used for wireless communication.
	Band *string `json:"band,omitempty"`
	// Frequency channel used for wireless communication.
	Channel *int32 `json:"channel,omitempty"`
	// Width of frequency channel used for wireless communication.
	ChannelWidth *int32 `json:"channelWidth,omitempty"`
	// Strength of wireless signal.
	Power *int32 `json:"power,omitempty"`
	// Indicates whether or not this radio is currently broadcasting.
	IsBroadcasting *bool `json:"isBroadcasting,omitempty"`
	// The radio index.
	Index *string `json:"index,omitempty"`
}

// NewInlineResponse200308Radio instantiates a new InlineResponse200308Radio object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200308Radio() *InlineResponse200308Radio {
	this := InlineResponse200308Radio{}
	return &this
}

// NewInlineResponse200308RadioWithDefaults instantiates a new InlineResponse200308Radio object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200308RadioWithDefaults() *InlineResponse200308Radio {
	this := InlineResponse200308Radio{}
	return &this
}

// GetBand returns the Band field value if set, zero value otherwise.
func (o *InlineResponse200308Radio) GetBand() string {
	if o == nil || isNil(o.Band) {
		var ret string
		return ret
	}
	return *o.Band
}

// GetBandOk returns a tuple with the Band field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200308Radio) GetBandOk() (*string, bool) {
	if o == nil || isNil(o.Band) {
    return nil, false
	}
	return o.Band, true
}

// HasBand returns a boolean if a field has been set.
func (o *InlineResponse200308Radio) HasBand() bool {
	if o != nil && !isNil(o.Band) {
		return true
	}

	return false
}

// SetBand gets a reference to the given string and assigns it to the Band field.
func (o *InlineResponse200308Radio) SetBand(v string) {
	o.Band = &v
}

// GetChannel returns the Channel field value if set, zero value otherwise.
func (o *InlineResponse200308Radio) GetChannel() int32 {
	if o == nil || isNil(o.Channel) {
		var ret int32
		return ret
	}
	return *o.Channel
}

// GetChannelOk returns a tuple with the Channel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200308Radio) GetChannelOk() (*int32, bool) {
	if o == nil || isNil(o.Channel) {
    return nil, false
	}
	return o.Channel, true
}

// HasChannel returns a boolean if a field has been set.
func (o *InlineResponse200308Radio) HasChannel() bool {
	if o != nil && !isNil(o.Channel) {
		return true
	}

	return false
}

// SetChannel gets a reference to the given int32 and assigns it to the Channel field.
func (o *InlineResponse200308Radio) SetChannel(v int32) {
	o.Channel = &v
}

// GetChannelWidth returns the ChannelWidth field value if set, zero value otherwise.
func (o *InlineResponse200308Radio) GetChannelWidth() int32 {
	if o == nil || isNil(o.ChannelWidth) {
		var ret int32
		return ret
	}
	return *o.ChannelWidth
}

// GetChannelWidthOk returns a tuple with the ChannelWidth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200308Radio) GetChannelWidthOk() (*int32, bool) {
	if o == nil || isNil(o.ChannelWidth) {
    return nil, false
	}
	return o.ChannelWidth, true
}

// HasChannelWidth returns a boolean if a field has been set.
func (o *InlineResponse200308Radio) HasChannelWidth() bool {
	if o != nil && !isNil(o.ChannelWidth) {
		return true
	}

	return false
}

// SetChannelWidth gets a reference to the given int32 and assigns it to the ChannelWidth field.
func (o *InlineResponse200308Radio) SetChannelWidth(v int32) {
	o.ChannelWidth = &v
}

// GetPower returns the Power field value if set, zero value otherwise.
func (o *InlineResponse200308Radio) GetPower() int32 {
	if o == nil || isNil(o.Power) {
		var ret int32
		return ret
	}
	return *o.Power
}

// GetPowerOk returns a tuple with the Power field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200308Radio) GetPowerOk() (*int32, bool) {
	if o == nil || isNil(o.Power) {
    return nil, false
	}
	return o.Power, true
}

// HasPower returns a boolean if a field has been set.
func (o *InlineResponse200308Radio) HasPower() bool {
	if o != nil && !isNil(o.Power) {
		return true
	}

	return false
}

// SetPower gets a reference to the given int32 and assigns it to the Power field.
func (o *InlineResponse200308Radio) SetPower(v int32) {
	o.Power = &v
}

// GetIsBroadcasting returns the IsBroadcasting field value if set, zero value otherwise.
func (o *InlineResponse200308Radio) GetIsBroadcasting() bool {
	if o == nil || isNil(o.IsBroadcasting) {
		var ret bool
		return ret
	}
	return *o.IsBroadcasting
}

// GetIsBroadcastingOk returns a tuple with the IsBroadcasting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200308Radio) GetIsBroadcastingOk() (*bool, bool) {
	if o == nil || isNil(o.IsBroadcasting) {
    return nil, false
	}
	return o.IsBroadcasting, true
}

// HasIsBroadcasting returns a boolean if a field has been set.
func (o *InlineResponse200308Radio) HasIsBroadcasting() bool {
	if o != nil && !isNil(o.IsBroadcasting) {
		return true
	}

	return false
}

// SetIsBroadcasting gets a reference to the given bool and assigns it to the IsBroadcasting field.
func (o *InlineResponse200308Radio) SetIsBroadcasting(v bool) {
	o.IsBroadcasting = &v
}

// GetIndex returns the Index field value if set, zero value otherwise.
func (o *InlineResponse200308Radio) GetIndex() string {
	if o == nil || isNil(o.Index) {
		var ret string
		return ret
	}
	return *o.Index
}

// GetIndexOk returns a tuple with the Index field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200308Radio) GetIndexOk() (*string, bool) {
	if o == nil || isNil(o.Index) {
    return nil, false
	}
	return o.Index, true
}

// HasIndex returns a boolean if a field has been set.
func (o *InlineResponse200308Radio) HasIndex() bool {
	if o != nil && !isNil(o.Index) {
		return true
	}

	return false
}

// SetIndex gets a reference to the given string and assigns it to the Index field.
func (o *InlineResponse200308Radio) SetIndex(v string) {
	o.Index = &v
}

func (o InlineResponse200308Radio) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Band) {
		toSerialize["band"] = o.Band
	}
	if !isNil(o.Channel) {
		toSerialize["channel"] = o.Channel
	}
	if !isNil(o.ChannelWidth) {
		toSerialize["channelWidth"] = o.ChannelWidth
	}
	if !isNil(o.Power) {
		toSerialize["power"] = o.Power
	}
	if !isNil(o.IsBroadcasting) {
		toSerialize["isBroadcasting"] = o.IsBroadcasting
	}
	if !isNil(o.Index) {
		toSerialize["index"] = o.Index
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200308Radio struct {
	value *InlineResponse200308Radio
	isSet bool
}

func (v NullableInlineResponse200308Radio) Get() *InlineResponse200308Radio {
	return v.value
}

func (v *NullableInlineResponse200308Radio) Set(val *InlineResponse200308Radio) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200308Radio) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200308Radio) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200308Radio(val *InlineResponse200308Radio) *NullableInlineResponse200308Radio {
	return &NullableInlineResponse200308Radio{value: val, isSet: true}
}

func (v NullableInlineResponse200308Radio) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200308Radio) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


