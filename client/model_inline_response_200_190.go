/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 01 May, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.46.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200190 struct for InlineResponse200190
type InlineResponse200190 struct {
	// If true, the SSID outage schedule is enabled.
	Enabled *bool `json:"enabled,omitempty"`
	// List of outage ranges. Has a start date and time, and end date and time. If this parameter is passed in along with rangesInSeconds parameter, this will take precedence.
	Ranges []InlineResponse200190Ranges `json:"ranges,omitempty"`
	// List of outage ranges in seconds since Sunday at Midnight. Has a start and end. If this parameter is passed in along with the ranges parameter, ranges will take precedence.
	RangesInSeconds []InlineResponse200190RangesInSeconds `json:"rangesInSeconds,omitempty"`
}

// NewInlineResponse200190 instantiates a new InlineResponse200190 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200190() *InlineResponse200190 {
	this := InlineResponse200190{}
	return &this
}

// NewInlineResponse200190WithDefaults instantiates a new InlineResponse200190 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200190WithDefaults() *InlineResponse200190 {
	this := InlineResponse200190{}
	return &this
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *InlineResponse200190) GetEnabled() bool {
	if o == nil || isNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200190) GetEnabledOk() (*bool, bool) {
	if o == nil || isNil(o.Enabled) {
    return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *InlineResponse200190) HasEnabled() bool {
	if o != nil && !isNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *InlineResponse200190) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetRanges returns the Ranges field value if set, zero value otherwise.
func (o *InlineResponse200190) GetRanges() []InlineResponse200190Ranges {
	if o == nil || isNil(o.Ranges) {
		var ret []InlineResponse200190Ranges
		return ret
	}
	return o.Ranges
}

// GetRangesOk returns a tuple with the Ranges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200190) GetRangesOk() ([]InlineResponse200190Ranges, bool) {
	if o == nil || isNil(o.Ranges) {
    return nil, false
	}
	return o.Ranges, true
}

// HasRanges returns a boolean if a field has been set.
func (o *InlineResponse200190) HasRanges() bool {
	if o != nil && !isNil(o.Ranges) {
		return true
	}

	return false
}

// SetRanges gets a reference to the given []InlineResponse200190Ranges and assigns it to the Ranges field.
func (o *InlineResponse200190) SetRanges(v []InlineResponse200190Ranges) {
	o.Ranges = v
}

// GetRangesInSeconds returns the RangesInSeconds field value if set, zero value otherwise.
func (o *InlineResponse200190) GetRangesInSeconds() []InlineResponse200190RangesInSeconds {
	if o == nil || isNil(o.RangesInSeconds) {
		var ret []InlineResponse200190RangesInSeconds
		return ret
	}
	return o.RangesInSeconds
}

// GetRangesInSecondsOk returns a tuple with the RangesInSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200190) GetRangesInSecondsOk() ([]InlineResponse200190RangesInSeconds, bool) {
	if o == nil || isNil(o.RangesInSeconds) {
    return nil, false
	}
	return o.RangesInSeconds, true
}

// HasRangesInSeconds returns a boolean if a field has been set.
func (o *InlineResponse200190) HasRangesInSeconds() bool {
	if o != nil && !isNil(o.RangesInSeconds) {
		return true
	}

	return false
}

// SetRangesInSeconds gets a reference to the given []InlineResponse200190RangesInSeconds and assigns it to the RangesInSeconds field.
func (o *InlineResponse200190) SetRangesInSeconds(v []InlineResponse200190RangesInSeconds) {
	o.RangesInSeconds = v
}

func (o InlineResponse200190) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !isNil(o.Ranges) {
		toSerialize["ranges"] = o.Ranges
	}
	if !isNil(o.RangesInSeconds) {
		toSerialize["rangesInSeconds"] = o.RangesInSeconds
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200190 struct {
	value *InlineResponse200190
	isSet bool
}

func (v NullableInlineResponse200190) Get() *InlineResponse200190 {
	return v.value
}

func (v *NullableInlineResponse200190) Set(val *InlineResponse200190) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200190) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200190) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200190(val *InlineResponse200190) *NullableInlineResponse200190 {
	return &NullableInlineResponse200190{value: val, isSet: true}
}

func (v NullableInlineResponse200190) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200190) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


