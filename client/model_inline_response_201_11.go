/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 06 August, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.61.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse20111 struct for InlineResponse20111
type InlineResponse20111 struct {
	// ID of the cluster
	ClusterId *string `json:"clusterId,omitempty"`
	// Name of the cluster
	Name *string `json:"name,omitempty"`
	// Uplink settings of the cluster
	Uplinks []InlineResponse20111Uplinks `json:"uplinks,omitempty"`
	// Tunnel settings of the cluster
	Tunnels []InlineResponse20111Tunnels `json:"tunnels,omitempty"`
	Nameservers *NetworksNetworkIdCampusGatewayClustersNameservers `json:"nameservers,omitempty"`
	// Port channel settings of the cluster
	PortChannels []InlineResponse20111PortChannels `json:"portChannels,omitempty"`
	// Devices in the cluster
	Devices []InlineResponse20111Devices `json:"devices,omitempty"`
	// Notes about cluster
	Notes *string `json:"notes,omitempty"`
	// URL to display cluster details
	Url *string `json:"url,omitempty"`
}

// NewInlineResponse20111 instantiates a new InlineResponse20111 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20111() *InlineResponse20111 {
	this := InlineResponse20111{}
	return &this
}

// NewInlineResponse20111WithDefaults instantiates a new InlineResponse20111 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20111WithDefaults() *InlineResponse20111 {
	this := InlineResponse20111{}
	return &this
}

// GetClusterId returns the ClusterId field value if set, zero value otherwise.
func (o *InlineResponse20111) GetClusterId() string {
	if o == nil || isNil(o.ClusterId) {
		var ret string
		return ret
	}
	return *o.ClusterId
}

// GetClusterIdOk returns a tuple with the ClusterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20111) GetClusterIdOk() (*string, bool) {
	if o == nil || isNil(o.ClusterId) {
    return nil, false
	}
	return o.ClusterId, true
}

// HasClusterId returns a boolean if a field has been set.
func (o *InlineResponse20111) HasClusterId() bool {
	if o != nil && !isNil(o.ClusterId) {
		return true
	}

	return false
}

// SetClusterId gets a reference to the given string and assigns it to the ClusterId field.
func (o *InlineResponse20111) SetClusterId(v string) {
	o.ClusterId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *InlineResponse20111) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20111) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
    return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *InlineResponse20111) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *InlineResponse20111) SetName(v string) {
	o.Name = &v
}

// GetUplinks returns the Uplinks field value if set, zero value otherwise.
func (o *InlineResponse20111) GetUplinks() []InlineResponse20111Uplinks {
	if o == nil || isNil(o.Uplinks) {
		var ret []InlineResponse20111Uplinks
		return ret
	}
	return o.Uplinks
}

// GetUplinksOk returns a tuple with the Uplinks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20111) GetUplinksOk() ([]InlineResponse20111Uplinks, bool) {
	if o == nil || isNil(o.Uplinks) {
    return nil, false
	}
	return o.Uplinks, true
}

// HasUplinks returns a boolean if a field has been set.
func (o *InlineResponse20111) HasUplinks() bool {
	if o != nil && !isNil(o.Uplinks) {
		return true
	}

	return false
}

// SetUplinks gets a reference to the given []InlineResponse20111Uplinks and assigns it to the Uplinks field.
func (o *InlineResponse20111) SetUplinks(v []InlineResponse20111Uplinks) {
	o.Uplinks = v
}

// GetTunnels returns the Tunnels field value if set, zero value otherwise.
func (o *InlineResponse20111) GetTunnels() []InlineResponse20111Tunnels {
	if o == nil || isNil(o.Tunnels) {
		var ret []InlineResponse20111Tunnels
		return ret
	}
	return o.Tunnels
}

// GetTunnelsOk returns a tuple with the Tunnels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20111) GetTunnelsOk() ([]InlineResponse20111Tunnels, bool) {
	if o == nil || isNil(o.Tunnels) {
    return nil, false
	}
	return o.Tunnels, true
}

// HasTunnels returns a boolean if a field has been set.
func (o *InlineResponse20111) HasTunnels() bool {
	if o != nil && !isNil(o.Tunnels) {
		return true
	}

	return false
}

// SetTunnels gets a reference to the given []InlineResponse20111Tunnels and assigns it to the Tunnels field.
func (o *InlineResponse20111) SetTunnels(v []InlineResponse20111Tunnels) {
	o.Tunnels = v
}

// GetNameservers returns the Nameservers field value if set, zero value otherwise.
func (o *InlineResponse20111) GetNameservers() NetworksNetworkIdCampusGatewayClustersNameservers {
	if o == nil || isNil(o.Nameservers) {
		var ret NetworksNetworkIdCampusGatewayClustersNameservers
		return ret
	}
	return *o.Nameservers
}

// GetNameserversOk returns a tuple with the Nameservers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20111) GetNameserversOk() (*NetworksNetworkIdCampusGatewayClustersNameservers, bool) {
	if o == nil || isNil(o.Nameservers) {
    return nil, false
	}
	return o.Nameservers, true
}

// HasNameservers returns a boolean if a field has been set.
func (o *InlineResponse20111) HasNameservers() bool {
	if o != nil && !isNil(o.Nameservers) {
		return true
	}

	return false
}

// SetNameservers gets a reference to the given NetworksNetworkIdCampusGatewayClustersNameservers and assigns it to the Nameservers field.
func (o *InlineResponse20111) SetNameservers(v NetworksNetworkIdCampusGatewayClustersNameservers) {
	o.Nameservers = &v
}

// GetPortChannels returns the PortChannels field value if set, zero value otherwise.
func (o *InlineResponse20111) GetPortChannels() []InlineResponse20111PortChannels {
	if o == nil || isNil(o.PortChannels) {
		var ret []InlineResponse20111PortChannels
		return ret
	}
	return o.PortChannels
}

// GetPortChannelsOk returns a tuple with the PortChannels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20111) GetPortChannelsOk() ([]InlineResponse20111PortChannels, bool) {
	if o == nil || isNil(o.PortChannels) {
    return nil, false
	}
	return o.PortChannels, true
}

// HasPortChannels returns a boolean if a field has been set.
func (o *InlineResponse20111) HasPortChannels() bool {
	if o != nil && !isNil(o.PortChannels) {
		return true
	}

	return false
}

// SetPortChannels gets a reference to the given []InlineResponse20111PortChannels and assigns it to the PortChannels field.
func (o *InlineResponse20111) SetPortChannels(v []InlineResponse20111PortChannels) {
	o.PortChannels = v
}

// GetDevices returns the Devices field value if set, zero value otherwise.
func (o *InlineResponse20111) GetDevices() []InlineResponse20111Devices {
	if o == nil || isNil(o.Devices) {
		var ret []InlineResponse20111Devices
		return ret
	}
	return o.Devices
}

// GetDevicesOk returns a tuple with the Devices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20111) GetDevicesOk() ([]InlineResponse20111Devices, bool) {
	if o == nil || isNil(o.Devices) {
    return nil, false
	}
	return o.Devices, true
}

// HasDevices returns a boolean if a field has been set.
func (o *InlineResponse20111) HasDevices() bool {
	if o != nil && !isNil(o.Devices) {
		return true
	}

	return false
}

// SetDevices gets a reference to the given []InlineResponse20111Devices and assigns it to the Devices field.
func (o *InlineResponse20111) SetDevices(v []InlineResponse20111Devices) {
	o.Devices = v
}

// GetNotes returns the Notes field value if set, zero value otherwise.
func (o *InlineResponse20111) GetNotes() string {
	if o == nil || isNil(o.Notes) {
		var ret string
		return ret
	}
	return *o.Notes
}

// GetNotesOk returns a tuple with the Notes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20111) GetNotesOk() (*string, bool) {
	if o == nil || isNil(o.Notes) {
    return nil, false
	}
	return o.Notes, true
}

// HasNotes returns a boolean if a field has been set.
func (o *InlineResponse20111) HasNotes() bool {
	if o != nil && !isNil(o.Notes) {
		return true
	}

	return false
}

// SetNotes gets a reference to the given string and assigns it to the Notes field.
func (o *InlineResponse20111) SetNotes(v string) {
	o.Notes = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *InlineResponse20111) GetUrl() string {
	if o == nil || isNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20111) GetUrlOk() (*string, bool) {
	if o == nil || isNil(o.Url) {
    return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *InlineResponse20111) HasUrl() bool {
	if o != nil && !isNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *InlineResponse20111) SetUrl(v string) {
	o.Url = &v
}

func (o InlineResponse20111) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.ClusterId) {
		toSerialize["clusterId"] = o.ClusterId
	}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.Uplinks) {
		toSerialize["uplinks"] = o.Uplinks
	}
	if !isNil(o.Tunnels) {
		toSerialize["tunnels"] = o.Tunnels
	}
	if !isNil(o.Nameservers) {
		toSerialize["nameservers"] = o.Nameservers
	}
	if !isNil(o.PortChannels) {
		toSerialize["portChannels"] = o.PortChannels
	}
	if !isNil(o.Devices) {
		toSerialize["devices"] = o.Devices
	}
	if !isNil(o.Notes) {
		toSerialize["notes"] = o.Notes
	}
	if !isNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20111 struct {
	value *InlineResponse20111
	isSet bool
}

func (v NullableInlineResponse20111) Get() *InlineResponse20111 {
	return v.value
}

func (v *NullableInlineResponse20111) Set(val *InlineResponse20111) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20111) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20111) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20111(val *InlineResponse20111) *NullableInlineResponse20111 {
	return &NullableInlineResponse20111{value: val, isSet: true}
}

func (v NullableInlineResponse20111) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20111) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


