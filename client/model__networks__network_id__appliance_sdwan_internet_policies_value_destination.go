/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 03 April, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.45.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// NetworksNetworkIdApplianceSdwanInternetPoliciesValueDestination Destination of 'custom' type traffic filter
type NetworksNetworkIdApplianceSdwanInternetPoliciesValueDestination struct {
	// E.g.: \"any\", \"0\" (also means \"any\"), \"8080\", \"1-1024\"
	Port *string `json:"port,omitempty"`
	// CIDR format address (e.g.\"192.168.10.1\", which is the same as \"192.168.10.1/32\"), or \"any\"
	Cidr *string `json:"cidr,omitempty"`
	// list of application objects (either majorApplication or nbar)
	Applications []NetworksNetworkIdApplianceSdwanInternetPoliciesValueDestinationApplications `json:"applications,omitempty"`
}

// NewNetworksNetworkIdApplianceSdwanInternetPoliciesValueDestination instantiates a new NetworksNetworkIdApplianceSdwanInternetPoliciesValueDestination object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworksNetworkIdApplianceSdwanInternetPoliciesValueDestination() *NetworksNetworkIdApplianceSdwanInternetPoliciesValueDestination {
	this := NetworksNetworkIdApplianceSdwanInternetPoliciesValueDestination{}
	return &this
}

// NewNetworksNetworkIdApplianceSdwanInternetPoliciesValueDestinationWithDefaults instantiates a new NetworksNetworkIdApplianceSdwanInternetPoliciesValueDestination object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworksNetworkIdApplianceSdwanInternetPoliciesValueDestinationWithDefaults() *NetworksNetworkIdApplianceSdwanInternetPoliciesValueDestination {
	this := NetworksNetworkIdApplianceSdwanInternetPoliciesValueDestination{}
	return &this
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *NetworksNetworkIdApplianceSdwanInternetPoliciesValueDestination) GetPort() string {
	if o == nil || isNil(o.Port) {
		var ret string
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworksNetworkIdApplianceSdwanInternetPoliciesValueDestination) GetPortOk() (*string, bool) {
	if o == nil || isNil(o.Port) {
    return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *NetworksNetworkIdApplianceSdwanInternetPoliciesValueDestination) HasPort() bool {
	if o != nil && !isNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given string and assigns it to the Port field.
func (o *NetworksNetworkIdApplianceSdwanInternetPoliciesValueDestination) SetPort(v string) {
	o.Port = &v
}

// GetCidr returns the Cidr field value if set, zero value otherwise.
func (o *NetworksNetworkIdApplianceSdwanInternetPoliciesValueDestination) GetCidr() string {
	if o == nil || isNil(o.Cidr) {
		var ret string
		return ret
	}
	return *o.Cidr
}

// GetCidrOk returns a tuple with the Cidr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworksNetworkIdApplianceSdwanInternetPoliciesValueDestination) GetCidrOk() (*string, bool) {
	if o == nil || isNil(o.Cidr) {
    return nil, false
	}
	return o.Cidr, true
}

// HasCidr returns a boolean if a field has been set.
func (o *NetworksNetworkIdApplianceSdwanInternetPoliciesValueDestination) HasCidr() bool {
	if o != nil && !isNil(o.Cidr) {
		return true
	}

	return false
}

// SetCidr gets a reference to the given string and assigns it to the Cidr field.
func (o *NetworksNetworkIdApplianceSdwanInternetPoliciesValueDestination) SetCidr(v string) {
	o.Cidr = &v
}

// GetApplications returns the Applications field value if set, zero value otherwise.
func (o *NetworksNetworkIdApplianceSdwanInternetPoliciesValueDestination) GetApplications() []NetworksNetworkIdApplianceSdwanInternetPoliciesValueDestinationApplications {
	if o == nil || isNil(o.Applications) {
		var ret []NetworksNetworkIdApplianceSdwanInternetPoliciesValueDestinationApplications
		return ret
	}
	return o.Applications
}

// GetApplicationsOk returns a tuple with the Applications field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworksNetworkIdApplianceSdwanInternetPoliciesValueDestination) GetApplicationsOk() ([]NetworksNetworkIdApplianceSdwanInternetPoliciesValueDestinationApplications, bool) {
	if o == nil || isNil(o.Applications) {
    return nil, false
	}
	return o.Applications, true
}

// HasApplications returns a boolean if a field has been set.
func (o *NetworksNetworkIdApplianceSdwanInternetPoliciesValueDestination) HasApplications() bool {
	if o != nil && !isNil(o.Applications) {
		return true
	}

	return false
}

// SetApplications gets a reference to the given []NetworksNetworkIdApplianceSdwanInternetPoliciesValueDestinationApplications and assigns it to the Applications field.
func (o *NetworksNetworkIdApplianceSdwanInternetPoliciesValueDestination) SetApplications(v []NetworksNetworkIdApplianceSdwanInternetPoliciesValueDestinationApplications) {
	o.Applications = v
}

func (o NetworksNetworkIdApplianceSdwanInternetPoliciesValueDestination) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Port) {
		toSerialize["port"] = o.Port
	}
	if !isNil(o.Cidr) {
		toSerialize["cidr"] = o.Cidr
	}
	if !isNil(o.Applications) {
		toSerialize["applications"] = o.Applications
	}
	return json.Marshal(toSerialize)
}

type NullableNetworksNetworkIdApplianceSdwanInternetPoliciesValueDestination struct {
	value *NetworksNetworkIdApplianceSdwanInternetPoliciesValueDestination
	isSet bool
}

func (v NullableNetworksNetworkIdApplianceSdwanInternetPoliciesValueDestination) Get() *NetworksNetworkIdApplianceSdwanInternetPoliciesValueDestination {
	return v.value
}

func (v *NullableNetworksNetworkIdApplianceSdwanInternetPoliciesValueDestination) Set(val *NetworksNetworkIdApplianceSdwanInternetPoliciesValueDestination) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworksNetworkIdApplianceSdwanInternetPoliciesValueDestination) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworksNetworkIdApplianceSdwanInternetPoliciesValueDestination) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworksNetworkIdApplianceSdwanInternetPoliciesValueDestination(val *NetworksNetworkIdApplianceSdwanInternetPoliciesValueDestination) *NullableNetworksNetworkIdApplianceSdwanInternetPoliciesValueDestination {
	return &NullableNetworksNetworkIdApplianceSdwanInternetPoliciesValueDestination{value: val, isSet: true}
}

func (v NullableNetworksNetworkIdApplianceSdwanInternetPoliciesValueDestination) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworksNetworkIdApplianceSdwanInternetPoliciesValueDestination) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


