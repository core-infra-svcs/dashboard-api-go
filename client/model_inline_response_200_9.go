/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 06 March, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.44.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse2009 struct for InlineResponse2009
type InlineResponse2009 struct {
	// Id of the ARP table request. Used to check the status of the request.
	ArpTableId *string `json:"arpTableId,omitempty"`
	// GET this url to check the status of your ARP table request.
	Url *string `json:"url,omitempty"`
	Request *InlineResponse2011Request `json:"request,omitempty"`
	// Status of the ARP table request.
	Status *string `json:"status,omitempty"`
	// The ARP table entries
	Entries []InlineResponse2009Entries `json:"entries,omitempty"`
	// An error message for a failed execution
	Error *string `json:"error,omitempty"`
}

// NewInlineResponse2009 instantiates a new InlineResponse2009 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse2009() *InlineResponse2009 {
	this := InlineResponse2009{}
	return &this
}

// NewInlineResponse2009WithDefaults instantiates a new InlineResponse2009 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse2009WithDefaults() *InlineResponse2009 {
	this := InlineResponse2009{}
	return &this
}

// GetArpTableId returns the ArpTableId field value if set, zero value otherwise.
func (o *InlineResponse2009) GetArpTableId() string {
	if o == nil || isNil(o.ArpTableId) {
		var ret string
		return ret
	}
	return *o.ArpTableId
}

// GetArpTableIdOk returns a tuple with the ArpTableId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2009) GetArpTableIdOk() (*string, bool) {
	if o == nil || isNil(o.ArpTableId) {
    return nil, false
	}
	return o.ArpTableId, true
}

// HasArpTableId returns a boolean if a field has been set.
func (o *InlineResponse2009) HasArpTableId() bool {
	if o != nil && !isNil(o.ArpTableId) {
		return true
	}

	return false
}

// SetArpTableId gets a reference to the given string and assigns it to the ArpTableId field.
func (o *InlineResponse2009) SetArpTableId(v string) {
	o.ArpTableId = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *InlineResponse2009) GetUrl() string {
	if o == nil || isNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2009) GetUrlOk() (*string, bool) {
	if o == nil || isNil(o.Url) {
    return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *InlineResponse2009) HasUrl() bool {
	if o != nil && !isNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *InlineResponse2009) SetUrl(v string) {
	o.Url = &v
}

// GetRequest returns the Request field value if set, zero value otherwise.
func (o *InlineResponse2009) GetRequest() InlineResponse2011Request {
	if o == nil || isNil(o.Request) {
		var ret InlineResponse2011Request
		return ret
	}
	return *o.Request
}

// GetRequestOk returns a tuple with the Request field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2009) GetRequestOk() (*InlineResponse2011Request, bool) {
	if o == nil || isNil(o.Request) {
    return nil, false
	}
	return o.Request, true
}

// HasRequest returns a boolean if a field has been set.
func (o *InlineResponse2009) HasRequest() bool {
	if o != nil && !isNil(o.Request) {
		return true
	}

	return false
}

// SetRequest gets a reference to the given InlineResponse2011Request and assigns it to the Request field.
func (o *InlineResponse2009) SetRequest(v InlineResponse2011Request) {
	o.Request = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *InlineResponse2009) GetStatus() string {
	if o == nil || isNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2009) GetStatusOk() (*string, bool) {
	if o == nil || isNil(o.Status) {
    return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *InlineResponse2009) HasStatus() bool {
	if o != nil && !isNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *InlineResponse2009) SetStatus(v string) {
	o.Status = &v
}

// GetEntries returns the Entries field value if set, zero value otherwise.
func (o *InlineResponse2009) GetEntries() []InlineResponse2009Entries {
	if o == nil || isNil(o.Entries) {
		var ret []InlineResponse2009Entries
		return ret
	}
	return o.Entries
}

// GetEntriesOk returns a tuple with the Entries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2009) GetEntriesOk() ([]InlineResponse2009Entries, bool) {
	if o == nil || isNil(o.Entries) {
    return nil, false
	}
	return o.Entries, true
}

// HasEntries returns a boolean if a field has been set.
func (o *InlineResponse2009) HasEntries() bool {
	if o != nil && !isNil(o.Entries) {
		return true
	}

	return false
}

// SetEntries gets a reference to the given []InlineResponse2009Entries and assigns it to the Entries field.
func (o *InlineResponse2009) SetEntries(v []InlineResponse2009Entries) {
	o.Entries = v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *InlineResponse2009) GetError() string {
	if o == nil || isNil(o.Error) {
		var ret string
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2009) GetErrorOk() (*string, bool) {
	if o == nil || isNil(o.Error) {
    return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *InlineResponse2009) HasError() bool {
	if o != nil && !isNil(o.Error) {
		return true
	}

	return false
}

// SetError gets a reference to the given string and assigns it to the Error field.
func (o *InlineResponse2009) SetError(v string) {
	o.Error = &v
}

func (o InlineResponse2009) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.ArpTableId) {
		toSerialize["arpTableId"] = o.ArpTableId
	}
	if !isNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !isNil(o.Request) {
		toSerialize["request"] = o.Request
	}
	if !isNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !isNil(o.Entries) {
		toSerialize["entries"] = o.Entries
	}
	if !isNil(o.Error) {
		toSerialize["error"] = o.Error
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse2009 struct {
	value *InlineResponse2009
	isSet bool
}

func (v NullableInlineResponse2009) Get() *InlineResponse2009 {
	return v.value
}

func (v *NullableInlineResponse2009) Set(val *InlineResponse2009) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse2009) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse2009) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse2009(val *InlineResponse2009) *NullableInlineResponse2009 {
	return &NullableInlineResponse2009{value: val, isSet: true}
}

func (v NullableInlineResponse2009) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse2009) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


