/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 06 August, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.61.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200371Client The client of allowlist
type InlineResponse200371Client struct {
	// L2 Isolation mac address
	Mac string `json:"mac"`
}

// NewInlineResponse200371Client instantiates a new InlineResponse200371Client object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200371Client(mac string) *InlineResponse200371Client {
	this := InlineResponse200371Client{}
	this.Mac = mac
	return &this
}

// NewInlineResponse200371ClientWithDefaults instantiates a new InlineResponse200371Client object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200371ClientWithDefaults() *InlineResponse200371Client {
	this := InlineResponse200371Client{}
	return &this
}

// GetMac returns the Mac field value
func (o *InlineResponse200371Client) GetMac() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Mac
}

// GetMacOk returns a tuple with the Mac field value
// and a boolean to check if the value has been set.
func (o *InlineResponse200371Client) GetMacOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Mac, true
}

// SetMac sets field value
func (o *InlineResponse200371Client) SetMac(v string) {
	o.Mac = v
}

func (o InlineResponse200371Client) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["mac"] = o.Mac
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200371Client struct {
	value *InlineResponse200371Client
	isSet bool
}

func (v NullableInlineResponse200371Client) Get() *InlineResponse200371Client {
	return v.value
}

func (v *NullableInlineResponse200371Client) Set(val *InlineResponse200371Client) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200371Client) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200371Client) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200371Client(val *InlineResponse200371Client) *NullableInlineResponse200371Client {
	return &NullableInlineResponse200371Client{value: val, isSet: true}
}

func (v NullableInlineResponse200371Client) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200371Client) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


