/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 04 June, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.59.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200102Errors struct for InlineResponse200102Errors
type InlineResponse200102Errors struct {
	// The step of the auto locate process when the error occurred. Possible values: 'gnss', 'ranging', 'positioning'
	Source *string `json:"source,omitempty"`
	// The type of error that occurred. Possible values: 'failure', 'no neighbors', 'missing anchors', 'wrong anchors', 'missing ranging data', 'calculation failure', 'scheduling failure'
	Type *string `json:"type,omitempty"`
}

// NewInlineResponse200102Errors instantiates a new InlineResponse200102Errors object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200102Errors() *InlineResponse200102Errors {
	this := InlineResponse200102Errors{}
	return &this
}

// NewInlineResponse200102ErrorsWithDefaults instantiates a new InlineResponse200102Errors object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200102ErrorsWithDefaults() *InlineResponse200102Errors {
	this := InlineResponse200102Errors{}
	return &this
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *InlineResponse200102Errors) GetSource() string {
	if o == nil || isNil(o.Source) {
		var ret string
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200102Errors) GetSourceOk() (*string, bool) {
	if o == nil || isNil(o.Source) {
    return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *InlineResponse200102Errors) HasSource() bool {
	if o != nil && !isNil(o.Source) {
		return true
	}

	return false
}

// SetSource gets a reference to the given string and assigns it to the Source field.
func (o *InlineResponse200102Errors) SetSource(v string) {
	o.Source = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *InlineResponse200102Errors) GetType() string {
	if o == nil || isNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200102Errors) GetTypeOk() (*string, bool) {
	if o == nil || isNil(o.Type) {
    return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *InlineResponse200102Errors) HasType() bool {
	if o != nil && !isNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *InlineResponse200102Errors) SetType(v string) {
	o.Type = &v
}

func (o InlineResponse200102Errors) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Source) {
		toSerialize["source"] = o.Source
	}
	if !isNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200102Errors struct {
	value *InlineResponse200102Errors
	isSet bool
}

func (v NullableInlineResponse200102Errors) Get() *InlineResponse200102Errors {
	return v.value
}

func (v *NullableInlineResponse200102Errors) Set(val *InlineResponse200102Errors) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200102Errors) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200102Errors) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200102Errors(val *InlineResponse200102Errors) *NullableInlineResponse200102Errors {
	return &NullableInlineResponse200102Errors{value: val, isSet: true}
}

func (v NullableInlineResponse200102Errors) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200102Errors) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


