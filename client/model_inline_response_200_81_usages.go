/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 06 November, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.52.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse20081Usages The average usage of the clients on a network over a given time range
type InlineResponse20081Usages struct {
	// The average usage of all clients on a network
	Average *int32 `json:"average,omitempty"`
	// The average usage of all clients with heavy usage on a network
	WithHeavyUsageAverage *int32 `json:"withHeavyUsageAverage,omitempty"`
}

// NewInlineResponse20081Usages instantiates a new InlineResponse20081Usages object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20081Usages() *InlineResponse20081Usages {
	this := InlineResponse20081Usages{}
	return &this
}

// NewInlineResponse20081UsagesWithDefaults instantiates a new InlineResponse20081Usages object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20081UsagesWithDefaults() *InlineResponse20081Usages {
	this := InlineResponse20081Usages{}
	return &this
}

// GetAverage returns the Average field value if set, zero value otherwise.
func (o *InlineResponse20081Usages) GetAverage() int32 {
	if o == nil || isNil(o.Average) {
		var ret int32
		return ret
	}
	return *o.Average
}

// GetAverageOk returns a tuple with the Average field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20081Usages) GetAverageOk() (*int32, bool) {
	if o == nil || isNil(o.Average) {
    return nil, false
	}
	return o.Average, true
}

// HasAverage returns a boolean if a field has been set.
func (o *InlineResponse20081Usages) HasAverage() bool {
	if o != nil && !isNil(o.Average) {
		return true
	}

	return false
}

// SetAverage gets a reference to the given int32 and assigns it to the Average field.
func (o *InlineResponse20081Usages) SetAverage(v int32) {
	o.Average = &v
}

// GetWithHeavyUsageAverage returns the WithHeavyUsageAverage field value if set, zero value otherwise.
func (o *InlineResponse20081Usages) GetWithHeavyUsageAverage() int32 {
	if o == nil || isNil(o.WithHeavyUsageAverage) {
		var ret int32
		return ret
	}
	return *o.WithHeavyUsageAverage
}

// GetWithHeavyUsageAverageOk returns a tuple with the WithHeavyUsageAverage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20081Usages) GetWithHeavyUsageAverageOk() (*int32, bool) {
	if o == nil || isNil(o.WithHeavyUsageAverage) {
    return nil, false
	}
	return o.WithHeavyUsageAverage, true
}

// HasWithHeavyUsageAverage returns a boolean if a field has been set.
func (o *InlineResponse20081Usages) HasWithHeavyUsageAverage() bool {
	if o != nil && !isNil(o.WithHeavyUsageAverage) {
		return true
	}

	return false
}

// SetWithHeavyUsageAverage gets a reference to the given int32 and assigns it to the WithHeavyUsageAverage field.
func (o *InlineResponse20081Usages) SetWithHeavyUsageAverage(v int32) {
	o.WithHeavyUsageAverage = &v
}

func (o InlineResponse20081Usages) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Average) {
		toSerialize["average"] = o.Average
	}
	if !isNil(o.WithHeavyUsageAverage) {
		toSerialize["withHeavyUsageAverage"] = o.WithHeavyUsageAverage
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20081Usages struct {
	value *InlineResponse20081Usages
	isSet bool
}

func (v NullableInlineResponse20081Usages) Get() *InlineResponse20081Usages {
	return v.value
}

func (v *NullableInlineResponse20081Usages) Set(val *InlineResponse20081Usages) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20081Usages) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20081Usages) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20081Usages(val *InlineResponse20081Usages) *NullableInlineResponse20081Usages {
	return &NullableInlineResponse20081Usages{value: val, isSet: true}
}

func (v NullableInlineResponse20081Usages) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20081Usages) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


