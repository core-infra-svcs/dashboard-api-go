/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 02 July, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.60.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// NetworksNetworkIdCampusGatewayClustersDevices struct for NetworksNetworkIdCampusGatewayClustersDevices
type NetworksNetworkIdCampusGatewayClustersDevices struct {
	// Serial of the device
	Serial string `json:"serial"`
	// Uplink settings of the device when uplink assignment mode of cluster is static
	Uplinks []NetworksNetworkIdCampusGatewayClustersUplinks1 `json:"uplinks,omitempty"`
	// Tunnel settings of the device when tunnel interface of cluster is specified
	Tunnels []NetworksNetworkIdCampusGatewayClustersTunnels1 `json:"tunnels,omitempty"`
}

// NewNetworksNetworkIdCampusGatewayClustersDevices instantiates a new NetworksNetworkIdCampusGatewayClustersDevices object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworksNetworkIdCampusGatewayClustersDevices(serial string) *NetworksNetworkIdCampusGatewayClustersDevices {
	this := NetworksNetworkIdCampusGatewayClustersDevices{}
	this.Serial = serial
	return &this
}

// NewNetworksNetworkIdCampusGatewayClustersDevicesWithDefaults instantiates a new NetworksNetworkIdCampusGatewayClustersDevices object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworksNetworkIdCampusGatewayClustersDevicesWithDefaults() *NetworksNetworkIdCampusGatewayClustersDevices {
	this := NetworksNetworkIdCampusGatewayClustersDevices{}
	return &this
}

// GetSerial returns the Serial field value
func (o *NetworksNetworkIdCampusGatewayClustersDevices) GetSerial() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Serial
}

// GetSerialOk returns a tuple with the Serial field value
// and a boolean to check if the value has been set.
func (o *NetworksNetworkIdCampusGatewayClustersDevices) GetSerialOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Serial, true
}

// SetSerial sets field value
func (o *NetworksNetworkIdCampusGatewayClustersDevices) SetSerial(v string) {
	o.Serial = v
}

// GetUplinks returns the Uplinks field value if set, zero value otherwise.
func (o *NetworksNetworkIdCampusGatewayClustersDevices) GetUplinks() []NetworksNetworkIdCampusGatewayClustersUplinks1 {
	if o == nil || isNil(o.Uplinks) {
		var ret []NetworksNetworkIdCampusGatewayClustersUplinks1
		return ret
	}
	return o.Uplinks
}

// GetUplinksOk returns a tuple with the Uplinks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworksNetworkIdCampusGatewayClustersDevices) GetUplinksOk() ([]NetworksNetworkIdCampusGatewayClustersUplinks1, bool) {
	if o == nil || isNil(o.Uplinks) {
    return nil, false
	}
	return o.Uplinks, true
}

// HasUplinks returns a boolean if a field has been set.
func (o *NetworksNetworkIdCampusGatewayClustersDevices) HasUplinks() bool {
	if o != nil && !isNil(o.Uplinks) {
		return true
	}

	return false
}

// SetUplinks gets a reference to the given []NetworksNetworkIdCampusGatewayClustersUplinks1 and assigns it to the Uplinks field.
func (o *NetworksNetworkIdCampusGatewayClustersDevices) SetUplinks(v []NetworksNetworkIdCampusGatewayClustersUplinks1) {
	o.Uplinks = v
}

// GetTunnels returns the Tunnels field value if set, zero value otherwise.
func (o *NetworksNetworkIdCampusGatewayClustersDevices) GetTunnels() []NetworksNetworkIdCampusGatewayClustersTunnels1 {
	if o == nil || isNil(o.Tunnels) {
		var ret []NetworksNetworkIdCampusGatewayClustersTunnels1
		return ret
	}
	return o.Tunnels
}

// GetTunnelsOk returns a tuple with the Tunnels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworksNetworkIdCampusGatewayClustersDevices) GetTunnelsOk() ([]NetworksNetworkIdCampusGatewayClustersTunnels1, bool) {
	if o == nil || isNil(o.Tunnels) {
    return nil, false
	}
	return o.Tunnels, true
}

// HasTunnels returns a boolean if a field has been set.
func (o *NetworksNetworkIdCampusGatewayClustersDevices) HasTunnels() bool {
	if o != nil && !isNil(o.Tunnels) {
		return true
	}

	return false
}

// SetTunnels gets a reference to the given []NetworksNetworkIdCampusGatewayClustersTunnels1 and assigns it to the Tunnels field.
func (o *NetworksNetworkIdCampusGatewayClustersDevices) SetTunnels(v []NetworksNetworkIdCampusGatewayClustersTunnels1) {
	o.Tunnels = v
}

func (o NetworksNetworkIdCampusGatewayClustersDevices) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["serial"] = o.Serial
	}
	if !isNil(o.Uplinks) {
		toSerialize["uplinks"] = o.Uplinks
	}
	if !isNil(o.Tunnels) {
		toSerialize["tunnels"] = o.Tunnels
	}
	return json.Marshal(toSerialize)
}

type NullableNetworksNetworkIdCampusGatewayClustersDevices struct {
	value *NetworksNetworkIdCampusGatewayClustersDevices
	isSet bool
}

func (v NullableNetworksNetworkIdCampusGatewayClustersDevices) Get() *NetworksNetworkIdCampusGatewayClustersDevices {
	return v.value
}

func (v *NullableNetworksNetworkIdCampusGatewayClustersDevices) Set(val *NetworksNetworkIdCampusGatewayClustersDevices) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworksNetworkIdCampusGatewayClustersDevices) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworksNetworkIdCampusGatewayClustersDevices) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworksNetworkIdCampusGatewayClustersDevices(val *NetworksNetworkIdCampusGatewayClustersDevices) *NullableNetworksNetworkIdCampusGatewayClustersDevices {
	return &NullableNetworksNetworkIdCampusGatewayClustersDevices{value: val, isSet: true}
}

func (v NullableNetworksNetworkIdCampusGatewayClustersDevices) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworksNetworkIdCampusGatewayClustersDevices) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


