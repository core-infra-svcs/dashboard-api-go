/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 06 August, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.61.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse20071TrafficFilters struct for InlineResponse20071TrafficFilters
type InlineResponse20071TrafficFilters struct {
	// Traffic filter type. Must be \"custom\"
	Type string `json:"type"`
	Value InlineResponse20071Value `json:"value"`
}

// NewInlineResponse20071TrafficFilters instantiates a new InlineResponse20071TrafficFilters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20071TrafficFilters(type_ string, value InlineResponse20071Value) *InlineResponse20071TrafficFilters {
	this := InlineResponse20071TrafficFilters{}
	this.Type = type_
	this.Value = value
	return &this
}

// NewInlineResponse20071TrafficFiltersWithDefaults instantiates a new InlineResponse20071TrafficFilters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20071TrafficFiltersWithDefaults() *InlineResponse20071TrafficFilters {
	this := InlineResponse20071TrafficFilters{}
	return &this
}

// GetType returns the Type field value
func (o *InlineResponse20071TrafficFilters) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20071TrafficFilters) GetTypeOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *InlineResponse20071TrafficFilters) SetType(v string) {
	o.Type = v
}

// GetValue returns the Value field value
func (o *InlineResponse20071TrafficFilters) GetValue() InlineResponse20071Value {
	if o == nil {
		var ret InlineResponse20071Value
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20071TrafficFilters) GetValueOk() (*InlineResponse20071Value, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *InlineResponse20071TrafficFilters) SetValue(v InlineResponse20071Value) {
	o.Value = v
}

func (o InlineResponse20071TrafficFilters) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20071TrafficFilters struct {
	value *InlineResponse20071TrafficFilters
	isSet bool
}

func (v NullableInlineResponse20071TrafficFilters) Get() *InlineResponse20071TrafficFilters {
	return v.value
}

func (v *NullableInlineResponse20071TrafficFilters) Set(val *InlineResponse20071TrafficFilters) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20071TrafficFilters) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20071TrafficFilters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20071TrafficFilters(val *InlineResponse20071TrafficFilters) *NullableInlineResponse20071TrafficFilters {
	return &NullableInlineResponse20071TrafficFilters{value: val, isSet: true}
}

func (v NullableInlineResponse20071TrafficFilters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20071TrafficFilters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


