/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 February, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.55.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200357Failover Wireless LAN controller failover information
type InlineResponse200357Failover struct {
	Last *InlineResponse200357FailoverLast `json:"last,omitempty"`
	Counts *InlineResponse200357FailoverCounts `json:"counts,omitempty"`
}

// NewInlineResponse200357Failover instantiates a new InlineResponse200357Failover object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200357Failover() *InlineResponse200357Failover {
	this := InlineResponse200357Failover{}
	return &this
}

// NewInlineResponse200357FailoverWithDefaults instantiates a new InlineResponse200357Failover object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200357FailoverWithDefaults() *InlineResponse200357Failover {
	this := InlineResponse200357Failover{}
	return &this
}

// GetLast returns the Last field value if set, zero value otherwise.
func (o *InlineResponse200357Failover) GetLast() InlineResponse200357FailoverLast {
	if o == nil || isNil(o.Last) {
		var ret InlineResponse200357FailoverLast
		return ret
	}
	return *o.Last
}

// GetLastOk returns a tuple with the Last field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200357Failover) GetLastOk() (*InlineResponse200357FailoverLast, bool) {
	if o == nil || isNil(o.Last) {
    return nil, false
	}
	return o.Last, true
}

// HasLast returns a boolean if a field has been set.
func (o *InlineResponse200357Failover) HasLast() bool {
	if o != nil && !isNil(o.Last) {
		return true
	}

	return false
}

// SetLast gets a reference to the given InlineResponse200357FailoverLast and assigns it to the Last field.
func (o *InlineResponse200357Failover) SetLast(v InlineResponse200357FailoverLast) {
	o.Last = &v
}

// GetCounts returns the Counts field value if set, zero value otherwise.
func (o *InlineResponse200357Failover) GetCounts() InlineResponse200357FailoverCounts {
	if o == nil || isNil(o.Counts) {
		var ret InlineResponse200357FailoverCounts
		return ret
	}
	return *o.Counts
}

// GetCountsOk returns a tuple with the Counts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200357Failover) GetCountsOk() (*InlineResponse200357FailoverCounts, bool) {
	if o == nil || isNil(o.Counts) {
    return nil, false
	}
	return o.Counts, true
}

// HasCounts returns a boolean if a field has been set.
func (o *InlineResponse200357Failover) HasCounts() bool {
	if o != nil && !isNil(o.Counts) {
		return true
	}

	return false
}

// SetCounts gets a reference to the given InlineResponse200357FailoverCounts and assigns it to the Counts field.
func (o *InlineResponse200357Failover) SetCounts(v InlineResponse200357FailoverCounts) {
	o.Counts = &v
}

func (o InlineResponse200357Failover) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Last) {
		toSerialize["last"] = o.Last
	}
	if !isNil(o.Counts) {
		toSerialize["counts"] = o.Counts
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200357Failover struct {
	value *InlineResponse200357Failover
	isSet bool
}

func (v NullableInlineResponse200357Failover) Get() *InlineResponse200357Failover {
	return v.value
}

func (v *NullableInlineResponse200357Failover) Set(val *InlineResponse200357Failover) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200357Failover) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200357Failover) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200357Failover(val *InlineResponse200357Failover) *NullableInlineResponse200357Failover {
	return &NullableInlineResponse200357Failover{value: val, isSet: true}
}

func (v NullableInlineResponse200357Failover) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200357Failover) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


