/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 06 November, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.52.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse20086Errors struct for InlineResponse20086Errors
type InlineResponse20086Errors struct {
	// The serial of the device
	Serial string `json:"serial"`
	// The errors for the device
	Errors []string `json:"errors"`
}

// NewInlineResponse20086Errors instantiates a new InlineResponse20086Errors object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20086Errors(serial string, errors []string) *InlineResponse20086Errors {
	this := InlineResponse20086Errors{}
	this.Serial = serial
	this.Errors = errors
	return &this
}

// NewInlineResponse20086ErrorsWithDefaults instantiates a new InlineResponse20086Errors object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20086ErrorsWithDefaults() *InlineResponse20086Errors {
	this := InlineResponse20086Errors{}
	return &this
}

// GetSerial returns the Serial field value
func (o *InlineResponse20086Errors) GetSerial() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Serial
}

// GetSerialOk returns a tuple with the Serial field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20086Errors) GetSerialOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Serial, true
}

// SetSerial sets field value
func (o *InlineResponse20086Errors) SetSerial(v string) {
	o.Serial = v
}

// GetErrors returns the Errors field value
func (o *InlineResponse20086Errors) GetErrors() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20086Errors) GetErrorsOk() ([]string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Errors, true
}

// SetErrors sets field value
func (o *InlineResponse20086Errors) SetErrors(v []string) {
	o.Errors = v
}

func (o InlineResponse20086Errors) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["serial"] = o.Serial
	}
	if true {
		toSerialize["errors"] = o.Errors
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20086Errors struct {
	value *InlineResponse20086Errors
	isSet bool
}

func (v NullableInlineResponse20086Errors) Get() *InlineResponse20086Errors {
	return v.value
}

func (v *NullableInlineResponse20086Errors) Set(val *InlineResponse20086Errors) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20086Errors) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20086Errors) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20086Errors(val *InlineResponse20086Errors) *NullableInlineResponse20086Errors {
	return &NullableInlineResponse20086Errors{value: val, isSet: true}
}

func (v NullableInlineResponse20086Errors) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20086Errors) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


