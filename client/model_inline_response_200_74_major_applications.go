/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 01 October, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.63.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse20074MajorApplications struct for InlineResponse20074MajorApplications
type InlineResponse20074MajorApplications struct {
	// Application's Meraki ID.
	Id string `json:"id"`
	// Application's name.
	Name string `json:"name"`
}

// NewInlineResponse20074MajorApplications instantiates a new InlineResponse20074MajorApplications object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20074MajorApplications(id string, name string) *InlineResponse20074MajorApplications {
	this := InlineResponse20074MajorApplications{}
	this.Id = id
	this.Name = name
	return &this
}

// NewInlineResponse20074MajorApplicationsWithDefaults instantiates a new InlineResponse20074MajorApplications object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20074MajorApplicationsWithDefaults() *InlineResponse20074MajorApplications {
	this := InlineResponse20074MajorApplications{}
	return &this
}

// GetId returns the Id field value
func (o *InlineResponse20074MajorApplications) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20074MajorApplications) GetIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *InlineResponse20074MajorApplications) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *InlineResponse20074MajorApplications) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *InlineResponse20074MajorApplications) GetNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *InlineResponse20074MajorApplications) SetName(v string) {
	o.Name = v
}

func (o InlineResponse20074MajorApplications) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20074MajorApplications struct {
	value *InlineResponse20074MajorApplications
	isSet bool
}

func (v NullableInlineResponse20074MajorApplications) Get() *InlineResponse20074MajorApplications {
	return v.value
}

func (v *NullableInlineResponse20074MajorApplications) Set(val *InlineResponse20074MajorApplications) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20074MajorApplications) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20074MajorApplications) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20074MajorApplications(val *InlineResponse20074MajorApplications) *NullableInlineResponse20074MajorApplications {
	return &NullableInlineResponse20074MajorApplications{value: val, isSet: true}
}

func (v NullableInlineResponse20074MajorApplications) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20074MajorApplications) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


