/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 03 September, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.62.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200241Network [optional] A list of network Names and IDs that will connect with this peer. Supported only for MX 19.1 and above.
type InlineResponse200241Network struct {
	// [optional] A list of network Names. Supported only for MX 19.1 and above. The order of items matches the order of IDs.
	Names []string `json:"names,omitempty"`
	// [optional] A list of network IDs.
	Ids []string `json:"ids,omitempty"`
}

// NewInlineResponse200241Network instantiates a new InlineResponse200241Network object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200241Network() *InlineResponse200241Network {
	this := InlineResponse200241Network{}
	return &this
}

// NewInlineResponse200241NetworkWithDefaults instantiates a new InlineResponse200241Network object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200241NetworkWithDefaults() *InlineResponse200241Network {
	this := InlineResponse200241Network{}
	return &this
}

// GetNames returns the Names field value if set, zero value otherwise.
func (o *InlineResponse200241Network) GetNames() []string {
	if o == nil || isNil(o.Names) {
		var ret []string
		return ret
	}
	return o.Names
}

// GetNamesOk returns a tuple with the Names field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200241Network) GetNamesOk() ([]string, bool) {
	if o == nil || isNil(o.Names) {
    return nil, false
	}
	return o.Names, true
}

// HasNames returns a boolean if a field has been set.
func (o *InlineResponse200241Network) HasNames() bool {
	if o != nil && !isNil(o.Names) {
		return true
	}

	return false
}

// SetNames gets a reference to the given []string and assigns it to the Names field.
func (o *InlineResponse200241Network) SetNames(v []string) {
	o.Names = v
}

// GetIds returns the Ids field value if set, zero value otherwise.
func (o *InlineResponse200241Network) GetIds() []string {
	if o == nil || isNil(o.Ids) {
		var ret []string
		return ret
	}
	return o.Ids
}

// GetIdsOk returns a tuple with the Ids field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200241Network) GetIdsOk() ([]string, bool) {
	if o == nil || isNil(o.Ids) {
    return nil, false
	}
	return o.Ids, true
}

// HasIds returns a boolean if a field has been set.
func (o *InlineResponse200241Network) HasIds() bool {
	if o != nil && !isNil(o.Ids) {
		return true
	}

	return false
}

// SetIds gets a reference to the given []string and assigns it to the Ids field.
func (o *InlineResponse200241Network) SetIds(v []string) {
	o.Ids = v
}

func (o InlineResponse200241Network) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Names) {
		toSerialize["names"] = o.Names
	}
	if !isNil(o.Ids) {
		toSerialize["ids"] = o.Ids
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200241Network struct {
	value *InlineResponse200241Network
	isSet bool
}

func (v NullableInlineResponse200241Network) Get() *InlineResponse200241Network {
	return v.value
}

func (v *NullableInlineResponse200241Network) Set(val *InlineResponse200241Network) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200241Network) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200241Network) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200241Network(val *InlineResponse200241Network) *NullableInlineResponse200241Network {
	return &NullableInlineResponse200241Network{value: val, isSet: true}
}

func (v NullableInlineResponse200241Network) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200241Network) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


