/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 01 November, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.39.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse20036Products The network devices to be updated
type InlineResponse20036Products struct {
	Wireless *InlineResponse20036ProductsWireless `json:"wireless,omitempty"`
	Appliance *InlineResponse20036ProductsWireless `json:"appliance,omitempty"`
	Switch *InlineResponse20036ProductsWireless `json:"switch,omitempty"`
	Camera *InlineResponse20036ProductsWireless `json:"camera,omitempty"`
	CellularGateway *InlineResponse20036ProductsWireless `json:"cellularGateway,omitempty"`
	Sensor *InlineResponse20036ProductsWireless `json:"sensor,omitempty"`
}

// NewInlineResponse20036Products instantiates a new InlineResponse20036Products object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20036Products() *InlineResponse20036Products {
	this := InlineResponse20036Products{}
	return &this
}

// NewInlineResponse20036ProductsWithDefaults instantiates a new InlineResponse20036Products object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20036ProductsWithDefaults() *InlineResponse20036Products {
	this := InlineResponse20036Products{}
	return &this
}

// GetWireless returns the Wireless field value if set, zero value otherwise.
func (o *InlineResponse20036Products) GetWireless() InlineResponse20036ProductsWireless {
	if o == nil || isNil(o.Wireless) {
		var ret InlineResponse20036ProductsWireless
		return ret
	}
	return *o.Wireless
}

// GetWirelessOk returns a tuple with the Wireless field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20036Products) GetWirelessOk() (*InlineResponse20036ProductsWireless, bool) {
	if o == nil || isNil(o.Wireless) {
    return nil, false
	}
	return o.Wireless, true
}

// HasWireless returns a boolean if a field has been set.
func (o *InlineResponse20036Products) HasWireless() bool {
	if o != nil && !isNil(o.Wireless) {
		return true
	}

	return false
}

// SetWireless gets a reference to the given InlineResponse20036ProductsWireless and assigns it to the Wireless field.
func (o *InlineResponse20036Products) SetWireless(v InlineResponse20036ProductsWireless) {
	o.Wireless = &v
}

// GetAppliance returns the Appliance field value if set, zero value otherwise.
func (o *InlineResponse20036Products) GetAppliance() InlineResponse20036ProductsWireless {
	if o == nil || isNil(o.Appliance) {
		var ret InlineResponse20036ProductsWireless
		return ret
	}
	return *o.Appliance
}

// GetApplianceOk returns a tuple with the Appliance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20036Products) GetApplianceOk() (*InlineResponse20036ProductsWireless, bool) {
	if o == nil || isNil(o.Appliance) {
    return nil, false
	}
	return o.Appliance, true
}

// HasAppliance returns a boolean if a field has been set.
func (o *InlineResponse20036Products) HasAppliance() bool {
	if o != nil && !isNil(o.Appliance) {
		return true
	}

	return false
}

// SetAppliance gets a reference to the given InlineResponse20036ProductsWireless and assigns it to the Appliance field.
func (o *InlineResponse20036Products) SetAppliance(v InlineResponse20036ProductsWireless) {
	o.Appliance = &v
}

// GetSwitch returns the Switch field value if set, zero value otherwise.
func (o *InlineResponse20036Products) GetSwitch() InlineResponse20036ProductsWireless {
	if o == nil || isNil(o.Switch) {
		var ret InlineResponse20036ProductsWireless
		return ret
	}
	return *o.Switch
}

// GetSwitchOk returns a tuple with the Switch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20036Products) GetSwitchOk() (*InlineResponse20036ProductsWireless, bool) {
	if o == nil || isNil(o.Switch) {
    return nil, false
	}
	return o.Switch, true
}

// HasSwitch returns a boolean if a field has been set.
func (o *InlineResponse20036Products) HasSwitch() bool {
	if o != nil && !isNil(o.Switch) {
		return true
	}

	return false
}

// SetSwitch gets a reference to the given InlineResponse20036ProductsWireless and assigns it to the Switch field.
func (o *InlineResponse20036Products) SetSwitch(v InlineResponse20036ProductsWireless) {
	o.Switch = &v
}

// GetCamera returns the Camera field value if set, zero value otherwise.
func (o *InlineResponse20036Products) GetCamera() InlineResponse20036ProductsWireless {
	if o == nil || isNil(o.Camera) {
		var ret InlineResponse20036ProductsWireless
		return ret
	}
	return *o.Camera
}

// GetCameraOk returns a tuple with the Camera field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20036Products) GetCameraOk() (*InlineResponse20036ProductsWireless, bool) {
	if o == nil || isNil(o.Camera) {
    return nil, false
	}
	return o.Camera, true
}

// HasCamera returns a boolean if a field has been set.
func (o *InlineResponse20036Products) HasCamera() bool {
	if o != nil && !isNil(o.Camera) {
		return true
	}

	return false
}

// SetCamera gets a reference to the given InlineResponse20036ProductsWireless and assigns it to the Camera field.
func (o *InlineResponse20036Products) SetCamera(v InlineResponse20036ProductsWireless) {
	o.Camera = &v
}

// GetCellularGateway returns the CellularGateway field value if set, zero value otherwise.
func (o *InlineResponse20036Products) GetCellularGateway() InlineResponse20036ProductsWireless {
	if o == nil || isNil(o.CellularGateway) {
		var ret InlineResponse20036ProductsWireless
		return ret
	}
	return *o.CellularGateway
}

// GetCellularGatewayOk returns a tuple with the CellularGateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20036Products) GetCellularGatewayOk() (*InlineResponse20036ProductsWireless, bool) {
	if o == nil || isNil(o.CellularGateway) {
    return nil, false
	}
	return o.CellularGateway, true
}

// HasCellularGateway returns a boolean if a field has been set.
func (o *InlineResponse20036Products) HasCellularGateway() bool {
	if o != nil && !isNil(o.CellularGateway) {
		return true
	}

	return false
}

// SetCellularGateway gets a reference to the given InlineResponse20036ProductsWireless and assigns it to the CellularGateway field.
func (o *InlineResponse20036Products) SetCellularGateway(v InlineResponse20036ProductsWireless) {
	o.CellularGateway = &v
}

// GetSensor returns the Sensor field value if set, zero value otherwise.
func (o *InlineResponse20036Products) GetSensor() InlineResponse20036ProductsWireless {
	if o == nil || isNil(o.Sensor) {
		var ret InlineResponse20036ProductsWireless
		return ret
	}
	return *o.Sensor
}

// GetSensorOk returns a tuple with the Sensor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20036Products) GetSensorOk() (*InlineResponse20036ProductsWireless, bool) {
	if o == nil || isNil(o.Sensor) {
    return nil, false
	}
	return o.Sensor, true
}

// HasSensor returns a boolean if a field has been set.
func (o *InlineResponse20036Products) HasSensor() bool {
	if o != nil && !isNil(o.Sensor) {
		return true
	}

	return false
}

// SetSensor gets a reference to the given InlineResponse20036ProductsWireless and assigns it to the Sensor field.
func (o *InlineResponse20036Products) SetSensor(v InlineResponse20036ProductsWireless) {
	o.Sensor = &v
}

func (o InlineResponse20036Products) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Wireless) {
		toSerialize["wireless"] = o.Wireless
	}
	if !isNil(o.Appliance) {
		toSerialize["appliance"] = o.Appliance
	}
	if !isNil(o.Switch) {
		toSerialize["switch"] = o.Switch
	}
	if !isNil(o.Camera) {
		toSerialize["camera"] = o.Camera
	}
	if !isNil(o.CellularGateway) {
		toSerialize["cellularGateway"] = o.CellularGateway
	}
	if !isNil(o.Sensor) {
		toSerialize["sensor"] = o.Sensor
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20036Products struct {
	value *InlineResponse20036Products
	isSet bool
}

func (v NullableInlineResponse20036Products) Get() *InlineResponse20036Products {
	return v.value
}

func (v *NullableInlineResponse20036Products) Set(val *InlineResponse20036Products) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20036Products) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20036Products) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20036Products(val *InlineResponse20036Products) *NullableInlineResponse20036Products {
	return &NullableInlineResponse20036Products{value: val, isSet: true}
}

func (v NullableInlineResponse20036Products) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20036Products) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


