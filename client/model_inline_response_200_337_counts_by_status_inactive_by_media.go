/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 04 June, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.59.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200337CountsByStatusInactiveByMedia The inactive count data, indexed by media type (RJ45 or SFP)
type InlineResponse200337CountsByStatusInactiveByMedia struct {
	Rj45 *InlineResponse200337CountsByStatusInactiveByMediaRj45 `json:"rj45,omitempty"`
	Sfp *InlineResponse200337CountsByStatusInactiveByMediaSfp `json:"sfp,omitempty"`
}

// NewInlineResponse200337CountsByStatusInactiveByMedia instantiates a new InlineResponse200337CountsByStatusInactiveByMedia object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200337CountsByStatusInactiveByMedia() *InlineResponse200337CountsByStatusInactiveByMedia {
	this := InlineResponse200337CountsByStatusInactiveByMedia{}
	return &this
}

// NewInlineResponse200337CountsByStatusInactiveByMediaWithDefaults instantiates a new InlineResponse200337CountsByStatusInactiveByMedia object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200337CountsByStatusInactiveByMediaWithDefaults() *InlineResponse200337CountsByStatusInactiveByMedia {
	this := InlineResponse200337CountsByStatusInactiveByMedia{}
	return &this
}

// GetRj45 returns the Rj45 field value if set, zero value otherwise.
func (o *InlineResponse200337CountsByStatusInactiveByMedia) GetRj45() InlineResponse200337CountsByStatusInactiveByMediaRj45 {
	if o == nil || isNil(o.Rj45) {
		var ret InlineResponse200337CountsByStatusInactiveByMediaRj45
		return ret
	}
	return *o.Rj45
}

// GetRj45Ok returns a tuple with the Rj45 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200337CountsByStatusInactiveByMedia) GetRj45Ok() (*InlineResponse200337CountsByStatusInactiveByMediaRj45, bool) {
	if o == nil || isNil(o.Rj45) {
    return nil, false
	}
	return o.Rj45, true
}

// HasRj45 returns a boolean if a field has been set.
func (o *InlineResponse200337CountsByStatusInactiveByMedia) HasRj45() bool {
	if o != nil && !isNil(o.Rj45) {
		return true
	}

	return false
}

// SetRj45 gets a reference to the given InlineResponse200337CountsByStatusInactiveByMediaRj45 and assigns it to the Rj45 field.
func (o *InlineResponse200337CountsByStatusInactiveByMedia) SetRj45(v InlineResponse200337CountsByStatusInactiveByMediaRj45) {
	o.Rj45 = &v
}

// GetSfp returns the Sfp field value if set, zero value otherwise.
func (o *InlineResponse200337CountsByStatusInactiveByMedia) GetSfp() InlineResponse200337CountsByStatusInactiveByMediaSfp {
	if o == nil || isNil(o.Sfp) {
		var ret InlineResponse200337CountsByStatusInactiveByMediaSfp
		return ret
	}
	return *o.Sfp
}

// GetSfpOk returns a tuple with the Sfp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200337CountsByStatusInactiveByMedia) GetSfpOk() (*InlineResponse200337CountsByStatusInactiveByMediaSfp, bool) {
	if o == nil || isNil(o.Sfp) {
    return nil, false
	}
	return o.Sfp, true
}

// HasSfp returns a boolean if a field has been set.
func (o *InlineResponse200337CountsByStatusInactiveByMedia) HasSfp() bool {
	if o != nil && !isNil(o.Sfp) {
		return true
	}

	return false
}

// SetSfp gets a reference to the given InlineResponse200337CountsByStatusInactiveByMediaSfp and assigns it to the Sfp field.
func (o *InlineResponse200337CountsByStatusInactiveByMedia) SetSfp(v InlineResponse200337CountsByStatusInactiveByMediaSfp) {
	o.Sfp = &v
}

func (o InlineResponse200337CountsByStatusInactiveByMedia) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Rj45) {
		toSerialize["rj45"] = o.Rj45
	}
	if !isNil(o.Sfp) {
		toSerialize["sfp"] = o.Sfp
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200337CountsByStatusInactiveByMedia struct {
	value *InlineResponse200337CountsByStatusInactiveByMedia
	isSet bool
}

func (v NullableInlineResponse200337CountsByStatusInactiveByMedia) Get() *InlineResponse200337CountsByStatusInactiveByMedia {
	return v.value
}

func (v *NullableInlineResponse200337CountsByStatusInactiveByMedia) Set(val *InlineResponse200337CountsByStatusInactiveByMedia) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200337CountsByStatusInactiveByMedia) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200337CountsByStatusInactiveByMedia) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200337CountsByStatusInactiveByMedia(val *InlineResponse200337CountsByStatusInactiveByMedia) *NullableInlineResponse200337CountsByStatusInactiveByMedia {
	return &NullableInlineResponse200337CountsByStatusInactiveByMedia{value: val, isSet: true}
}

func (v NullableInlineResponse200337CountsByStatusInactiveByMedia) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200337CountsByStatusInactiveByMedia) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


