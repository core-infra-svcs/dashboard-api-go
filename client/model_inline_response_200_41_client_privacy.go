/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 03 May, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.33.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"time"
)

// InlineResponse20041ClientPrivacy Privacy settings
type InlineResponse20041ClientPrivacy struct {
	// The number of days, weeks, or months in Epoch time to expire the data before
	ExpireDataOlderThan *int32 `json:"expireDataOlderThan,omitempty"`
	// The date to expire the data before
	ExpireDataBefore *time.Time `json:"expireDataBefore,omitempty"`
}

// NewInlineResponse20041ClientPrivacy instantiates a new InlineResponse20041ClientPrivacy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20041ClientPrivacy() *InlineResponse20041ClientPrivacy {
	this := InlineResponse20041ClientPrivacy{}
	return &this
}

// NewInlineResponse20041ClientPrivacyWithDefaults instantiates a new InlineResponse20041ClientPrivacy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20041ClientPrivacyWithDefaults() *InlineResponse20041ClientPrivacy {
	this := InlineResponse20041ClientPrivacy{}
	return &this
}

// GetExpireDataOlderThan returns the ExpireDataOlderThan field value if set, zero value otherwise.
func (o *InlineResponse20041ClientPrivacy) GetExpireDataOlderThan() int32 {
	if o == nil || isNil(o.ExpireDataOlderThan) {
		var ret int32
		return ret
	}
	return *o.ExpireDataOlderThan
}

// GetExpireDataOlderThanOk returns a tuple with the ExpireDataOlderThan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20041ClientPrivacy) GetExpireDataOlderThanOk() (*int32, bool) {
	if o == nil || isNil(o.ExpireDataOlderThan) {
    return nil, false
	}
	return o.ExpireDataOlderThan, true
}

// HasExpireDataOlderThan returns a boolean if a field has been set.
func (o *InlineResponse20041ClientPrivacy) HasExpireDataOlderThan() bool {
	if o != nil && !isNil(o.ExpireDataOlderThan) {
		return true
	}

	return false
}

// SetExpireDataOlderThan gets a reference to the given int32 and assigns it to the ExpireDataOlderThan field.
func (o *InlineResponse20041ClientPrivacy) SetExpireDataOlderThan(v int32) {
	o.ExpireDataOlderThan = &v
}

// GetExpireDataBefore returns the ExpireDataBefore field value if set, zero value otherwise.
func (o *InlineResponse20041ClientPrivacy) GetExpireDataBefore() time.Time {
	if o == nil || isNil(o.ExpireDataBefore) {
		var ret time.Time
		return ret
	}
	return *o.ExpireDataBefore
}

// GetExpireDataBeforeOk returns a tuple with the ExpireDataBefore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20041ClientPrivacy) GetExpireDataBeforeOk() (*time.Time, bool) {
	if o == nil || isNil(o.ExpireDataBefore) {
    return nil, false
	}
	return o.ExpireDataBefore, true
}

// HasExpireDataBefore returns a boolean if a field has been set.
func (o *InlineResponse20041ClientPrivacy) HasExpireDataBefore() bool {
	if o != nil && !isNil(o.ExpireDataBefore) {
		return true
	}

	return false
}

// SetExpireDataBefore gets a reference to the given time.Time and assigns it to the ExpireDataBefore field.
func (o *InlineResponse20041ClientPrivacy) SetExpireDataBefore(v time.Time) {
	o.ExpireDataBefore = &v
}

func (o InlineResponse20041ClientPrivacy) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.ExpireDataOlderThan) {
		toSerialize["expireDataOlderThan"] = o.ExpireDataOlderThan
	}
	if !isNil(o.ExpireDataBefore) {
		toSerialize["expireDataBefore"] = o.ExpireDataBefore
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20041ClientPrivacy struct {
	value *InlineResponse20041ClientPrivacy
	isSet bool
}

func (v NullableInlineResponse20041ClientPrivacy) Get() *InlineResponse20041ClientPrivacy {
	return v.value
}

func (v *NullableInlineResponse20041ClientPrivacy) Set(val *InlineResponse20041ClientPrivacy) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20041ClientPrivacy) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20041ClientPrivacy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20041ClientPrivacy(val *InlineResponse20041ClientPrivacy) *NullableInlineResponse20041ClientPrivacy {
	return &NullableInlineResponse20041ClientPrivacy{value: val, isSet: true}
}

func (v NullableInlineResponse20041ClientPrivacy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20041ClientPrivacy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


