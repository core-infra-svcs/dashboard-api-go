/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 06 August, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.61.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200158 struct for InlineResponse200158
type InlineResponse200158 struct {
	// An array of DSCP to CoS mappings. An empty array will reset the mappings to default.
	Mappings []InlineResponse200158Mappings `json:"mappings,omitempty"`
}

// NewInlineResponse200158 instantiates a new InlineResponse200158 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200158() *InlineResponse200158 {
	this := InlineResponse200158{}
	return &this
}

// NewInlineResponse200158WithDefaults instantiates a new InlineResponse200158 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200158WithDefaults() *InlineResponse200158 {
	this := InlineResponse200158{}
	return &this
}

// GetMappings returns the Mappings field value if set, zero value otherwise.
func (o *InlineResponse200158) GetMappings() []InlineResponse200158Mappings {
	if o == nil || isNil(o.Mappings) {
		var ret []InlineResponse200158Mappings
		return ret
	}
	return o.Mappings
}

// GetMappingsOk returns a tuple with the Mappings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200158) GetMappingsOk() ([]InlineResponse200158Mappings, bool) {
	if o == nil || isNil(o.Mappings) {
    return nil, false
	}
	return o.Mappings, true
}

// HasMappings returns a boolean if a field has been set.
func (o *InlineResponse200158) HasMappings() bool {
	if o != nil && !isNil(o.Mappings) {
		return true
	}

	return false
}

// SetMappings gets a reference to the given []InlineResponse200158Mappings and assigns it to the Mappings field.
func (o *InlineResponse200158) SetMappings(v []InlineResponse200158Mappings) {
	o.Mappings = v
}

func (o InlineResponse200158) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Mappings) {
		toSerialize["mappings"] = o.Mappings
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200158 struct {
	value *InlineResponse200158
	isSet bool
}

func (v NullableInlineResponse200158) Get() *InlineResponse200158 {
	return v.value
}

func (v *NullableInlineResponse200158) Set(val *InlineResponse200158) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200158) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200158) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200158(val *InlineResponse200158) *NullableInlineResponse200158 {
	return &NullableInlineResponse200158{value: val, isSet: true}
}

func (v NullableInlineResponse200158) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200158) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


