/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 04 May, 2022 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.21.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// NetworksNetworkIdApplianceVlansVlanIdDhcpOptions struct for NetworksNetworkIdApplianceVlansVlanIdDhcpOptions
type NetworksNetworkIdApplianceVlansVlanIdDhcpOptions struct {
	// The code for the DHCP option. This should be an integer between 2 and 254.
	Code string `json:"code"`
	// The type for the DHCP option. One of: 'text', 'ip', 'hex' or 'integer'
	Type string `json:"type"`
	// The value for the DHCP option
	Value string `json:"value"`
}

// NewNetworksNetworkIdApplianceVlansVlanIdDhcpOptions instantiates a new NetworksNetworkIdApplianceVlansVlanIdDhcpOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworksNetworkIdApplianceVlansVlanIdDhcpOptions(code string, type_ string, value string) *NetworksNetworkIdApplianceVlansVlanIdDhcpOptions {
	this := NetworksNetworkIdApplianceVlansVlanIdDhcpOptions{}
	this.Code = code
	this.Type = type_
	this.Value = value
	return &this
}

// NewNetworksNetworkIdApplianceVlansVlanIdDhcpOptionsWithDefaults instantiates a new NetworksNetworkIdApplianceVlansVlanIdDhcpOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworksNetworkIdApplianceVlansVlanIdDhcpOptionsWithDefaults() *NetworksNetworkIdApplianceVlansVlanIdDhcpOptions {
	this := NetworksNetworkIdApplianceVlansVlanIdDhcpOptions{}
	return &this
}

// GetCode returns the Code field value
func (o *NetworksNetworkIdApplianceVlansVlanIdDhcpOptions) GetCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Code
}

// GetCodeOk returns a tuple with the Code field value
// and a boolean to check if the value has been set.
func (o *NetworksNetworkIdApplianceVlansVlanIdDhcpOptions) GetCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Code, true
}

// SetCode sets field value
func (o *NetworksNetworkIdApplianceVlansVlanIdDhcpOptions) SetCode(v string) {
	o.Code = v
}

// GetType returns the Type field value
func (o *NetworksNetworkIdApplianceVlansVlanIdDhcpOptions) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *NetworksNetworkIdApplianceVlansVlanIdDhcpOptions) GetTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *NetworksNetworkIdApplianceVlansVlanIdDhcpOptions) SetType(v string) {
	o.Type = v
}

// GetValue returns the Value field value
func (o *NetworksNetworkIdApplianceVlansVlanIdDhcpOptions) GetValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *NetworksNetworkIdApplianceVlansVlanIdDhcpOptions) GetValueOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *NetworksNetworkIdApplianceVlansVlanIdDhcpOptions) SetValue(v string) {
	o.Value = v
}

func (o NetworksNetworkIdApplianceVlansVlanIdDhcpOptions) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["code"] = o.Code
	}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableNetworksNetworkIdApplianceVlansVlanIdDhcpOptions struct {
	value *NetworksNetworkIdApplianceVlansVlanIdDhcpOptions
	isSet bool
}

func (v NullableNetworksNetworkIdApplianceVlansVlanIdDhcpOptions) Get() *NetworksNetworkIdApplianceVlansVlanIdDhcpOptions {
	return v.value
}

func (v *NullableNetworksNetworkIdApplianceVlansVlanIdDhcpOptions) Set(val *NetworksNetworkIdApplianceVlansVlanIdDhcpOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworksNetworkIdApplianceVlansVlanIdDhcpOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworksNetworkIdApplianceVlansVlanIdDhcpOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworksNetworkIdApplianceVlansVlanIdDhcpOptions(val *NetworksNetworkIdApplianceVlansVlanIdDhcpOptions) *NullableNetworksNetworkIdApplianceVlansVlanIdDhcpOptions {
	return &NullableNetworksNetworkIdApplianceVlansVlanIdDhcpOptions{value: val, isSet: true}
}

func (v NullableNetworksNetworkIdApplianceVlansVlanIdDhcpOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworksNetworkIdApplianceVlansVlanIdDhcpOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


