/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 03 September, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.62.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse20079SubnetNat Configuration of NAT for subnets
type InlineResponse20079SubnetNat struct {
	// If enabled, VPN subnet translation can be used to translate any local subnets that are allowed to use the VPN into a new subnet with the same number of addresses.
	IsAllowed *bool `json:"isAllowed,omitempty"`
}

// NewInlineResponse20079SubnetNat instantiates a new InlineResponse20079SubnetNat object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20079SubnetNat() *InlineResponse20079SubnetNat {
	this := InlineResponse20079SubnetNat{}
	return &this
}

// NewInlineResponse20079SubnetNatWithDefaults instantiates a new InlineResponse20079SubnetNat object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20079SubnetNatWithDefaults() *InlineResponse20079SubnetNat {
	this := InlineResponse20079SubnetNat{}
	return &this
}

// GetIsAllowed returns the IsAllowed field value if set, zero value otherwise.
func (o *InlineResponse20079SubnetNat) GetIsAllowed() bool {
	if o == nil || isNil(o.IsAllowed) {
		var ret bool
		return ret
	}
	return *o.IsAllowed
}

// GetIsAllowedOk returns a tuple with the IsAllowed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20079SubnetNat) GetIsAllowedOk() (*bool, bool) {
	if o == nil || isNil(o.IsAllowed) {
    return nil, false
	}
	return o.IsAllowed, true
}

// HasIsAllowed returns a boolean if a field has been set.
func (o *InlineResponse20079SubnetNat) HasIsAllowed() bool {
	if o != nil && !isNil(o.IsAllowed) {
		return true
	}

	return false
}

// SetIsAllowed gets a reference to the given bool and assigns it to the IsAllowed field.
func (o *InlineResponse20079SubnetNat) SetIsAllowed(v bool) {
	o.IsAllowed = &v
}

func (o InlineResponse20079SubnetNat) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.IsAllowed) {
		toSerialize["isAllowed"] = o.IsAllowed
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20079SubnetNat struct {
	value *InlineResponse20079SubnetNat
	isSet bool
}

func (v NullableInlineResponse20079SubnetNat) Get() *InlineResponse20079SubnetNat {
	return v.value
}

func (v *NullableInlineResponse20079SubnetNat) Set(val *InlineResponse20079SubnetNat) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20079SubnetNat) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20079SubnetNat) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20079SubnetNat(val *InlineResponse20079SubnetNat) *NullableInlineResponse20079SubnetNat {
	return &NullableInlineResponse20079SubnetNat{value: val, isSet: true}
}

func (v NullableInlineResponse20079SubnetNat) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20079SubnetNat) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


