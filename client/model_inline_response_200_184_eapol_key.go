/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 03 April, 2024 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.45.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200184EapolKey EAPOL Key settings.
type InlineResponse200184EapolKey struct {
	// Maximum number of EAPOL key retries.
	Retries *int32 `json:"retries,omitempty"`
	// EAPOL Key timeout in milliseconds.
	TimeoutInMs *int32 `json:"timeoutInMs,omitempty"`
}

// NewInlineResponse200184EapolKey instantiates a new InlineResponse200184EapolKey object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200184EapolKey() *InlineResponse200184EapolKey {
	this := InlineResponse200184EapolKey{}
	return &this
}

// NewInlineResponse200184EapolKeyWithDefaults instantiates a new InlineResponse200184EapolKey object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200184EapolKeyWithDefaults() *InlineResponse200184EapolKey {
	this := InlineResponse200184EapolKey{}
	return &this
}

// GetRetries returns the Retries field value if set, zero value otherwise.
func (o *InlineResponse200184EapolKey) GetRetries() int32 {
	if o == nil || isNil(o.Retries) {
		var ret int32
		return ret
	}
	return *o.Retries
}

// GetRetriesOk returns a tuple with the Retries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200184EapolKey) GetRetriesOk() (*int32, bool) {
	if o == nil || isNil(o.Retries) {
    return nil, false
	}
	return o.Retries, true
}

// HasRetries returns a boolean if a field has been set.
func (o *InlineResponse200184EapolKey) HasRetries() bool {
	if o != nil && !isNil(o.Retries) {
		return true
	}

	return false
}

// SetRetries gets a reference to the given int32 and assigns it to the Retries field.
func (o *InlineResponse200184EapolKey) SetRetries(v int32) {
	o.Retries = &v
}

// GetTimeoutInMs returns the TimeoutInMs field value if set, zero value otherwise.
func (o *InlineResponse200184EapolKey) GetTimeoutInMs() int32 {
	if o == nil || isNil(o.TimeoutInMs) {
		var ret int32
		return ret
	}
	return *o.TimeoutInMs
}

// GetTimeoutInMsOk returns a tuple with the TimeoutInMs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200184EapolKey) GetTimeoutInMsOk() (*int32, bool) {
	if o == nil || isNil(o.TimeoutInMs) {
    return nil, false
	}
	return o.TimeoutInMs, true
}

// HasTimeoutInMs returns a boolean if a field has been set.
func (o *InlineResponse200184EapolKey) HasTimeoutInMs() bool {
	if o != nil && !isNil(o.TimeoutInMs) {
		return true
	}

	return false
}

// SetTimeoutInMs gets a reference to the given int32 and assigns it to the TimeoutInMs field.
func (o *InlineResponse200184EapolKey) SetTimeoutInMs(v int32) {
	o.TimeoutInMs = &v
}

func (o InlineResponse200184EapolKey) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Retries) {
		toSerialize["retries"] = o.Retries
	}
	if !isNil(o.TimeoutInMs) {
		toSerialize["timeoutInMs"] = o.TimeoutInMs
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200184EapolKey struct {
	value *InlineResponse200184EapolKey
	isSet bool
}

func (v NullableInlineResponse200184EapolKey) Get() *InlineResponse200184EapolKey {
	return v.value
}

func (v *NullableInlineResponse200184EapolKey) Set(val *InlineResponse200184EapolKey) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200184EapolKey) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200184EapolKey) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200184EapolKey(val *InlineResponse200184EapolKey) *NullableInlineResponse200184EapolKey {
	return &NullableInlineResponse200184EapolKey{value: val, isSet: true}
}

func (v NullableInlineResponse200184EapolKey) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200184EapolKey) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


