/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 01 October, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.63.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// OrganizationsOrganizationIdIntegrationsXdrNetworksEnableNetworks struct for OrganizationsOrganizationIdIntegrationsXdrNetworksEnableNetworks
type OrganizationsOrganizationIdIntegrationsXdrNetworksEnableNetworks struct {
	// Network ID
	NetworkId string `json:"networkId"`
	// List of products for which to enable XDR
	ProductTypes []string `json:"productTypes"`
}

// NewOrganizationsOrganizationIdIntegrationsXdrNetworksEnableNetworks instantiates a new OrganizationsOrganizationIdIntegrationsXdrNetworksEnableNetworks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationsOrganizationIdIntegrationsXdrNetworksEnableNetworks(networkId string, productTypes []string) *OrganizationsOrganizationIdIntegrationsXdrNetworksEnableNetworks {
	this := OrganizationsOrganizationIdIntegrationsXdrNetworksEnableNetworks{}
	this.NetworkId = networkId
	this.ProductTypes = productTypes
	return &this
}

// NewOrganizationsOrganizationIdIntegrationsXdrNetworksEnableNetworksWithDefaults instantiates a new OrganizationsOrganizationIdIntegrationsXdrNetworksEnableNetworks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationsOrganizationIdIntegrationsXdrNetworksEnableNetworksWithDefaults() *OrganizationsOrganizationIdIntegrationsXdrNetworksEnableNetworks {
	this := OrganizationsOrganizationIdIntegrationsXdrNetworksEnableNetworks{}
	return &this
}

// GetNetworkId returns the NetworkId field value
func (o *OrganizationsOrganizationIdIntegrationsXdrNetworksEnableNetworks) GetNetworkId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NetworkId
}

// GetNetworkIdOk returns a tuple with the NetworkId field value
// and a boolean to check if the value has been set.
func (o *OrganizationsOrganizationIdIntegrationsXdrNetworksEnableNetworks) GetNetworkIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.NetworkId, true
}

// SetNetworkId sets field value
func (o *OrganizationsOrganizationIdIntegrationsXdrNetworksEnableNetworks) SetNetworkId(v string) {
	o.NetworkId = v
}

// GetProductTypes returns the ProductTypes field value
func (o *OrganizationsOrganizationIdIntegrationsXdrNetworksEnableNetworks) GetProductTypes() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.ProductTypes
}

// GetProductTypesOk returns a tuple with the ProductTypes field value
// and a boolean to check if the value has been set.
func (o *OrganizationsOrganizationIdIntegrationsXdrNetworksEnableNetworks) GetProductTypesOk() ([]string, bool) {
	if o == nil {
    return nil, false
	}
	return o.ProductTypes, true
}

// SetProductTypes sets field value
func (o *OrganizationsOrganizationIdIntegrationsXdrNetworksEnableNetworks) SetProductTypes(v []string) {
	o.ProductTypes = v
}

func (o OrganizationsOrganizationIdIntegrationsXdrNetworksEnableNetworks) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["networkId"] = o.NetworkId
	}
	if true {
		toSerialize["productTypes"] = o.ProductTypes
	}
	return json.Marshal(toSerialize)
}

type NullableOrganizationsOrganizationIdIntegrationsXdrNetworksEnableNetworks struct {
	value *OrganizationsOrganizationIdIntegrationsXdrNetworksEnableNetworks
	isSet bool
}

func (v NullableOrganizationsOrganizationIdIntegrationsXdrNetworksEnableNetworks) Get() *OrganizationsOrganizationIdIntegrationsXdrNetworksEnableNetworks {
	return v.value
}

func (v *NullableOrganizationsOrganizationIdIntegrationsXdrNetworksEnableNetworks) Set(val *OrganizationsOrganizationIdIntegrationsXdrNetworksEnableNetworks) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationsOrganizationIdIntegrationsXdrNetworksEnableNetworks) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationsOrganizationIdIntegrationsXdrNetworksEnableNetworks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationsOrganizationIdIntegrationsXdrNetworksEnableNetworks(val *OrganizationsOrganizationIdIntegrationsXdrNetworksEnableNetworks) *NullableOrganizationsOrganizationIdIntegrationsXdrNetworksEnableNetworks {
	return &NullableOrganizationsOrganizationIdIntegrationsXdrNetworksEnableNetworks{value: val, isSet: true}
}

func (v NullableOrganizationsOrganizationIdIntegrationsXdrNetworksEnableNetworks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationsOrganizationIdIntegrationsXdrNetworksEnableNetworks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


