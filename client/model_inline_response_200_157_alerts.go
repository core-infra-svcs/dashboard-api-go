/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 01 October, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.63.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200157Alerts Email alert settings for DHCP servers
type InlineResponse200157Alerts struct {
	Email *InlineResponse200157AlertsEmail `json:"email,omitempty"`
}

// NewInlineResponse200157Alerts instantiates a new InlineResponse200157Alerts object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200157Alerts() *InlineResponse200157Alerts {
	this := InlineResponse200157Alerts{}
	return &this
}

// NewInlineResponse200157AlertsWithDefaults instantiates a new InlineResponse200157Alerts object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200157AlertsWithDefaults() *InlineResponse200157Alerts {
	this := InlineResponse200157Alerts{}
	return &this
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *InlineResponse200157Alerts) GetEmail() InlineResponse200157AlertsEmail {
	if o == nil || isNil(o.Email) {
		var ret InlineResponse200157AlertsEmail
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200157Alerts) GetEmailOk() (*InlineResponse200157AlertsEmail, bool) {
	if o == nil || isNil(o.Email) {
    return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *InlineResponse200157Alerts) HasEmail() bool {
	if o != nil && !isNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given InlineResponse200157AlertsEmail and assigns it to the Email field.
func (o *InlineResponse200157Alerts) SetEmail(v InlineResponse200157AlertsEmail) {
	o.Email = &v
}

func (o InlineResponse200157Alerts) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200157Alerts struct {
	value *InlineResponse200157Alerts
	isSet bool
}

func (v NullableInlineResponse200157Alerts) Get() *InlineResponse200157Alerts {
	return v.value
}

func (v *NullableInlineResponse200157Alerts) Set(val *InlineResponse200157Alerts) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200157Alerts) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200157Alerts) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200157Alerts(val *InlineResponse200157Alerts) *NullableInlineResponse200157Alerts {
	return &NullableInlineResponse200157Alerts{value: val, isSet: true}
}

func (v NullableInlineResponse200157Alerts) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200157Alerts) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


