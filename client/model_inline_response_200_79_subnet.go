/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 03 September, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.62.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse20079Subnet Configuration of subnet features
type InlineResponse20079Subnet struct {
	Nat *InlineResponse20079SubnetNat `json:"nat,omitempty"`
}

// NewInlineResponse20079Subnet instantiates a new InlineResponse20079Subnet object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20079Subnet() *InlineResponse20079Subnet {
	this := InlineResponse20079Subnet{}
	return &this
}

// NewInlineResponse20079SubnetWithDefaults instantiates a new InlineResponse20079Subnet object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20079SubnetWithDefaults() *InlineResponse20079Subnet {
	this := InlineResponse20079Subnet{}
	return &this
}

// GetNat returns the Nat field value if set, zero value otherwise.
func (o *InlineResponse20079Subnet) GetNat() InlineResponse20079SubnetNat {
	if o == nil || isNil(o.Nat) {
		var ret InlineResponse20079SubnetNat
		return ret
	}
	return *o.Nat
}

// GetNatOk returns a tuple with the Nat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20079Subnet) GetNatOk() (*InlineResponse20079SubnetNat, bool) {
	if o == nil || isNil(o.Nat) {
    return nil, false
	}
	return o.Nat, true
}

// HasNat returns a boolean if a field has been set.
func (o *InlineResponse20079Subnet) HasNat() bool {
	if o != nil && !isNil(o.Nat) {
		return true
	}

	return false
}

// SetNat gets a reference to the given InlineResponse20079SubnetNat and assigns it to the Nat field.
func (o *InlineResponse20079Subnet) SetNat(v InlineResponse20079SubnetNat) {
	o.Nat = &v
}

func (o InlineResponse20079Subnet) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Nat) {
		toSerialize["nat"] = o.Nat
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20079Subnet struct {
	value *InlineResponse20079Subnet
	isSet bool
}

func (v NullableInlineResponse20079Subnet) Get() *InlineResponse20079Subnet {
	return v.value
}

func (v *NullableInlineResponse20079Subnet) Set(val *InlineResponse20079Subnet) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20079Subnet) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20079Subnet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20079Subnet(val *InlineResponse20079Subnet) *NullableInlineResponse20079Subnet {
	return &NullableInlineResponse20079Subnet{value: val, isSet: true}
}

func (v NullableInlineResponse20079Subnet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20079Subnet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


