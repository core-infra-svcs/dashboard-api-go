/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 06 August, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.61.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200168 struct for InlineResponse200168
type InlineResponse200168 struct {
	// ID of the Switch stack
	Id *string `json:"id,omitempty"`
	// Name of the Switch stack
	Name *string `json:"name,omitempty"`
	// Serials of the switches in the switch stack
	Serials []string `json:"serials,omitempty"`
	// Tells if stack is Monitored Stack.
	IsMonitorOnly *bool `json:"isMonitorOnly,omitempty"`
	// Members of the Stack
	Members []NetworksNetworkIdSwitchStacksMembers `json:"members,omitempty"`
}

// NewInlineResponse200168 instantiates a new InlineResponse200168 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200168() *InlineResponse200168 {
	this := InlineResponse200168{}
	return &this
}

// NewInlineResponse200168WithDefaults instantiates a new InlineResponse200168 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200168WithDefaults() *InlineResponse200168 {
	this := InlineResponse200168{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *InlineResponse200168) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200168) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *InlineResponse200168) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *InlineResponse200168) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *InlineResponse200168) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200168) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
    return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *InlineResponse200168) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *InlineResponse200168) SetName(v string) {
	o.Name = &v
}

// GetSerials returns the Serials field value if set, zero value otherwise.
func (o *InlineResponse200168) GetSerials() []string {
	if o == nil || isNil(o.Serials) {
		var ret []string
		return ret
	}
	return o.Serials
}

// GetSerialsOk returns a tuple with the Serials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200168) GetSerialsOk() ([]string, bool) {
	if o == nil || isNil(o.Serials) {
    return nil, false
	}
	return o.Serials, true
}

// HasSerials returns a boolean if a field has been set.
func (o *InlineResponse200168) HasSerials() bool {
	if o != nil && !isNil(o.Serials) {
		return true
	}

	return false
}

// SetSerials gets a reference to the given []string and assigns it to the Serials field.
func (o *InlineResponse200168) SetSerials(v []string) {
	o.Serials = v
}

// GetIsMonitorOnly returns the IsMonitorOnly field value if set, zero value otherwise.
func (o *InlineResponse200168) GetIsMonitorOnly() bool {
	if o == nil || isNil(o.IsMonitorOnly) {
		var ret bool
		return ret
	}
	return *o.IsMonitorOnly
}

// GetIsMonitorOnlyOk returns a tuple with the IsMonitorOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200168) GetIsMonitorOnlyOk() (*bool, bool) {
	if o == nil || isNil(o.IsMonitorOnly) {
    return nil, false
	}
	return o.IsMonitorOnly, true
}

// HasIsMonitorOnly returns a boolean if a field has been set.
func (o *InlineResponse200168) HasIsMonitorOnly() bool {
	if o != nil && !isNil(o.IsMonitorOnly) {
		return true
	}

	return false
}

// SetIsMonitorOnly gets a reference to the given bool and assigns it to the IsMonitorOnly field.
func (o *InlineResponse200168) SetIsMonitorOnly(v bool) {
	o.IsMonitorOnly = &v
}

// GetMembers returns the Members field value if set, zero value otherwise.
func (o *InlineResponse200168) GetMembers() []NetworksNetworkIdSwitchStacksMembers {
	if o == nil || isNil(o.Members) {
		var ret []NetworksNetworkIdSwitchStacksMembers
		return ret
	}
	return o.Members
}

// GetMembersOk returns a tuple with the Members field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200168) GetMembersOk() ([]NetworksNetworkIdSwitchStacksMembers, bool) {
	if o == nil || isNil(o.Members) {
    return nil, false
	}
	return o.Members, true
}

// HasMembers returns a boolean if a field has been set.
func (o *InlineResponse200168) HasMembers() bool {
	if o != nil && !isNil(o.Members) {
		return true
	}

	return false
}

// SetMembers gets a reference to the given []NetworksNetworkIdSwitchStacksMembers and assigns it to the Members field.
func (o *InlineResponse200168) SetMembers(v []NetworksNetworkIdSwitchStacksMembers) {
	o.Members = v
}

func (o InlineResponse200168) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.Serials) {
		toSerialize["serials"] = o.Serials
	}
	if !isNil(o.IsMonitorOnly) {
		toSerialize["isMonitorOnly"] = o.IsMonitorOnly
	}
	if !isNil(o.Members) {
		toSerialize["members"] = o.Members
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200168 struct {
	value *InlineResponse200168
	isSet bool
}

func (v NullableInlineResponse200168) Get() *InlineResponse200168 {
	return v.value
}

func (v *NullableInlineResponse200168) Set(val *InlineResponse200168) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200168) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200168) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200168(val *InlineResponse200168) *NullableInlineResponse200168 {
	return &NullableInlineResponse200168{value: val, isSet: true}
}

func (v NullableInlineResponse200168) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200168) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


