/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 06 August, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.61.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200266 struct for InlineResponse200266
type InlineResponse200266 struct {
	// The ID of the client
	ClientId *string `json:"clientId,omitempty"`
	// The MAC address of the client
	Mac *string `json:"mac,omitempty"`
	// Manufacturer of the client
	Manufacturer *string `json:"manufacturer,omitempty"`
	// The clients that appear on any networks within an organization
	Records []InlineResponse200266Records `json:"records,omitempty"`
}

// NewInlineResponse200266 instantiates a new InlineResponse200266 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200266() *InlineResponse200266 {
	this := InlineResponse200266{}
	return &this
}

// NewInlineResponse200266WithDefaults instantiates a new InlineResponse200266 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200266WithDefaults() *InlineResponse200266 {
	this := InlineResponse200266{}
	return &this
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *InlineResponse200266) GetClientId() string {
	if o == nil || isNil(o.ClientId) {
		var ret string
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200266) GetClientIdOk() (*string, bool) {
	if o == nil || isNil(o.ClientId) {
    return nil, false
	}
	return o.ClientId, true
}

// HasClientId returns a boolean if a field has been set.
func (o *InlineResponse200266) HasClientId() bool {
	if o != nil && !isNil(o.ClientId) {
		return true
	}

	return false
}

// SetClientId gets a reference to the given string and assigns it to the ClientId field.
func (o *InlineResponse200266) SetClientId(v string) {
	o.ClientId = &v
}

// GetMac returns the Mac field value if set, zero value otherwise.
func (o *InlineResponse200266) GetMac() string {
	if o == nil || isNil(o.Mac) {
		var ret string
		return ret
	}
	return *o.Mac
}

// GetMacOk returns a tuple with the Mac field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200266) GetMacOk() (*string, bool) {
	if o == nil || isNil(o.Mac) {
    return nil, false
	}
	return o.Mac, true
}

// HasMac returns a boolean if a field has been set.
func (o *InlineResponse200266) HasMac() bool {
	if o != nil && !isNil(o.Mac) {
		return true
	}

	return false
}

// SetMac gets a reference to the given string and assigns it to the Mac field.
func (o *InlineResponse200266) SetMac(v string) {
	o.Mac = &v
}

// GetManufacturer returns the Manufacturer field value if set, zero value otherwise.
func (o *InlineResponse200266) GetManufacturer() string {
	if o == nil || isNil(o.Manufacturer) {
		var ret string
		return ret
	}
	return *o.Manufacturer
}

// GetManufacturerOk returns a tuple with the Manufacturer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200266) GetManufacturerOk() (*string, bool) {
	if o == nil || isNil(o.Manufacturer) {
    return nil, false
	}
	return o.Manufacturer, true
}

// HasManufacturer returns a boolean if a field has been set.
func (o *InlineResponse200266) HasManufacturer() bool {
	if o != nil && !isNil(o.Manufacturer) {
		return true
	}

	return false
}

// SetManufacturer gets a reference to the given string and assigns it to the Manufacturer field.
func (o *InlineResponse200266) SetManufacturer(v string) {
	o.Manufacturer = &v
}

// GetRecords returns the Records field value if set, zero value otherwise.
func (o *InlineResponse200266) GetRecords() []InlineResponse200266Records {
	if o == nil || isNil(o.Records) {
		var ret []InlineResponse200266Records
		return ret
	}
	return o.Records
}

// GetRecordsOk returns a tuple with the Records field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200266) GetRecordsOk() ([]InlineResponse200266Records, bool) {
	if o == nil || isNil(o.Records) {
    return nil, false
	}
	return o.Records, true
}

// HasRecords returns a boolean if a field has been set.
func (o *InlineResponse200266) HasRecords() bool {
	if o != nil && !isNil(o.Records) {
		return true
	}

	return false
}

// SetRecords gets a reference to the given []InlineResponse200266Records and assigns it to the Records field.
func (o *InlineResponse200266) SetRecords(v []InlineResponse200266Records) {
	o.Records = v
}

func (o InlineResponse200266) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.ClientId) {
		toSerialize["clientId"] = o.ClientId
	}
	if !isNil(o.Mac) {
		toSerialize["mac"] = o.Mac
	}
	if !isNil(o.Manufacturer) {
		toSerialize["manufacturer"] = o.Manufacturer
	}
	if !isNil(o.Records) {
		toSerialize["records"] = o.Records
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200266 struct {
	value *InlineResponse200266
	isSet bool
}

func (v NullableInlineResponse200266) Get() *InlineResponse200266 {
	return v.value
}

func (v *NullableInlineResponse200266) Set(val *InlineResponse200266) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200266) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200266) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200266(val *InlineResponse200266) *NullableInlineResponse200266 {
	return &NullableInlineResponse200266{value: val, isSet: true}
}

func (v NullableInlineResponse200266) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200266) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


