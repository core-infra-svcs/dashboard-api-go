/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 02 April, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.57.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200281Meta Metadata relevant to the paginated dataset
type InlineResponse200281Meta struct {
	Counts *InlineResponse200281MetaCounts `json:"counts,omitempty"`
}

// NewInlineResponse200281Meta instantiates a new InlineResponse200281Meta object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200281Meta() *InlineResponse200281Meta {
	this := InlineResponse200281Meta{}
	return &this
}

// NewInlineResponse200281MetaWithDefaults instantiates a new InlineResponse200281Meta object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200281MetaWithDefaults() *InlineResponse200281Meta {
	this := InlineResponse200281Meta{}
	return &this
}

// GetCounts returns the Counts field value if set, zero value otherwise.
func (o *InlineResponse200281Meta) GetCounts() InlineResponse200281MetaCounts {
	if o == nil || isNil(o.Counts) {
		var ret InlineResponse200281MetaCounts
		return ret
	}
	return *o.Counts
}

// GetCountsOk returns a tuple with the Counts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200281Meta) GetCountsOk() (*InlineResponse200281MetaCounts, bool) {
	if o == nil || isNil(o.Counts) {
    return nil, false
	}
	return o.Counts, true
}

// HasCounts returns a boolean if a field has been set.
func (o *InlineResponse200281Meta) HasCounts() bool {
	if o != nil && !isNil(o.Counts) {
		return true
	}

	return false
}

// SetCounts gets a reference to the given InlineResponse200281MetaCounts and assigns it to the Counts field.
func (o *InlineResponse200281Meta) SetCounts(v InlineResponse200281MetaCounts) {
	o.Counts = &v
}

func (o InlineResponse200281Meta) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Counts) {
		toSerialize["counts"] = o.Counts
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200281Meta struct {
	value *InlineResponse200281Meta
	isSet bool
}

func (v NullableInlineResponse200281Meta) Get() *InlineResponse200281Meta {
	return v.value
}

func (v *NullableInlineResponse200281Meta) Set(val *InlineResponse200281Meta) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200281Meta) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200281Meta) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200281Meta(val *InlineResponse200281Meta) *NullableInlineResponse200281Meta {
	return &NullableInlineResponse200281Meta{value: val, isSet: true}
}

func (v NullableInlineResponse200281Meta) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200281Meta) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


