/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 04 June, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.59.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200252UplinkAddresses struct for InlineResponse200252UplinkAddresses
type InlineResponse200252UplinkAddresses struct {
	// Assignment mode of the interface
	AssignmentMode *string `json:"assignmentMode,omitempty"`
	// Protocol of the interface
	Protocol *string `json:"protocol,omitempty"`
	// Gateway of the interface
	Gateway *string `json:"gateway,omitempty"`
	// Subnet mask of the interface
	SubnetMask *string `json:"subnetMask,omitempty"`
	// IP address of the interface
	Address *string `json:"address,omitempty"`
}

// NewInlineResponse200252UplinkAddresses instantiates a new InlineResponse200252UplinkAddresses object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200252UplinkAddresses() *InlineResponse200252UplinkAddresses {
	this := InlineResponse200252UplinkAddresses{}
	return &this
}

// NewInlineResponse200252UplinkAddressesWithDefaults instantiates a new InlineResponse200252UplinkAddresses object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200252UplinkAddressesWithDefaults() *InlineResponse200252UplinkAddresses {
	this := InlineResponse200252UplinkAddresses{}
	return &this
}

// GetAssignmentMode returns the AssignmentMode field value if set, zero value otherwise.
func (o *InlineResponse200252UplinkAddresses) GetAssignmentMode() string {
	if o == nil || isNil(o.AssignmentMode) {
		var ret string
		return ret
	}
	return *o.AssignmentMode
}

// GetAssignmentModeOk returns a tuple with the AssignmentMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200252UplinkAddresses) GetAssignmentModeOk() (*string, bool) {
	if o == nil || isNil(o.AssignmentMode) {
    return nil, false
	}
	return o.AssignmentMode, true
}

// HasAssignmentMode returns a boolean if a field has been set.
func (o *InlineResponse200252UplinkAddresses) HasAssignmentMode() bool {
	if o != nil && !isNil(o.AssignmentMode) {
		return true
	}

	return false
}

// SetAssignmentMode gets a reference to the given string and assigns it to the AssignmentMode field.
func (o *InlineResponse200252UplinkAddresses) SetAssignmentMode(v string) {
	o.AssignmentMode = &v
}

// GetProtocol returns the Protocol field value if set, zero value otherwise.
func (o *InlineResponse200252UplinkAddresses) GetProtocol() string {
	if o == nil || isNil(o.Protocol) {
		var ret string
		return ret
	}
	return *o.Protocol
}

// GetProtocolOk returns a tuple with the Protocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200252UplinkAddresses) GetProtocolOk() (*string, bool) {
	if o == nil || isNil(o.Protocol) {
    return nil, false
	}
	return o.Protocol, true
}

// HasProtocol returns a boolean if a field has been set.
func (o *InlineResponse200252UplinkAddresses) HasProtocol() bool {
	if o != nil && !isNil(o.Protocol) {
		return true
	}

	return false
}

// SetProtocol gets a reference to the given string and assigns it to the Protocol field.
func (o *InlineResponse200252UplinkAddresses) SetProtocol(v string) {
	o.Protocol = &v
}

// GetGateway returns the Gateway field value if set, zero value otherwise.
func (o *InlineResponse200252UplinkAddresses) GetGateway() string {
	if o == nil || isNil(o.Gateway) {
		var ret string
		return ret
	}
	return *o.Gateway
}

// GetGatewayOk returns a tuple with the Gateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200252UplinkAddresses) GetGatewayOk() (*string, bool) {
	if o == nil || isNil(o.Gateway) {
    return nil, false
	}
	return o.Gateway, true
}

// HasGateway returns a boolean if a field has been set.
func (o *InlineResponse200252UplinkAddresses) HasGateway() bool {
	if o != nil && !isNil(o.Gateway) {
		return true
	}

	return false
}

// SetGateway gets a reference to the given string and assigns it to the Gateway field.
func (o *InlineResponse200252UplinkAddresses) SetGateway(v string) {
	o.Gateway = &v
}

// GetSubnetMask returns the SubnetMask field value if set, zero value otherwise.
func (o *InlineResponse200252UplinkAddresses) GetSubnetMask() string {
	if o == nil || isNil(o.SubnetMask) {
		var ret string
		return ret
	}
	return *o.SubnetMask
}

// GetSubnetMaskOk returns a tuple with the SubnetMask field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200252UplinkAddresses) GetSubnetMaskOk() (*string, bool) {
	if o == nil || isNil(o.SubnetMask) {
    return nil, false
	}
	return o.SubnetMask, true
}

// HasSubnetMask returns a boolean if a field has been set.
func (o *InlineResponse200252UplinkAddresses) HasSubnetMask() bool {
	if o != nil && !isNil(o.SubnetMask) {
		return true
	}

	return false
}

// SetSubnetMask gets a reference to the given string and assigns it to the SubnetMask field.
func (o *InlineResponse200252UplinkAddresses) SetSubnetMask(v string) {
	o.SubnetMask = &v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *InlineResponse200252UplinkAddresses) GetAddress() string {
	if o == nil || isNil(o.Address) {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200252UplinkAddresses) GetAddressOk() (*string, bool) {
	if o == nil || isNil(o.Address) {
    return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *InlineResponse200252UplinkAddresses) HasAddress() bool {
	if o != nil && !isNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *InlineResponse200252UplinkAddresses) SetAddress(v string) {
	o.Address = &v
}

func (o InlineResponse200252UplinkAddresses) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.AssignmentMode) {
		toSerialize["assignmentMode"] = o.AssignmentMode
	}
	if !isNil(o.Protocol) {
		toSerialize["protocol"] = o.Protocol
	}
	if !isNil(o.Gateway) {
		toSerialize["gateway"] = o.Gateway
	}
	if !isNil(o.SubnetMask) {
		toSerialize["subnetMask"] = o.SubnetMask
	}
	if !isNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200252UplinkAddresses struct {
	value *InlineResponse200252UplinkAddresses
	isSet bool
}

func (v NullableInlineResponse200252UplinkAddresses) Get() *InlineResponse200252UplinkAddresses {
	return v.value
}

func (v *NullableInlineResponse200252UplinkAddresses) Set(val *InlineResponse200252UplinkAddresses) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200252UplinkAddresses) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200252UplinkAddresses) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200252UplinkAddresses(val *InlineResponse200252UplinkAddresses) *NullableInlineResponse200252UplinkAddresses {
	return &NullableInlineResponse200252UplinkAddresses{value: val, isSet: true}
}

func (v NullableInlineResponse200252UplinkAddresses) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200252UplinkAddresses) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


