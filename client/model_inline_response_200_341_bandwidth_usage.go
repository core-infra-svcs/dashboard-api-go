/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 02 July, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.60.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200341BandwidthUsage Bandwidth usage data for the given interval.
type InlineResponse200341BandwidthUsage struct {
	// The average speed of the data sent and received (in kilobits-per-second).
	Total *float32 `json:"total,omitempty"`
	// The average speed of the data sent (in kilobits-per-second).
	Upstream *float32 `json:"upstream,omitempty"`
	// The average speed of the data received (in kilobits-per-second).
	Downstream *float32 `json:"downstream,omitempty"`
}

// NewInlineResponse200341BandwidthUsage instantiates a new InlineResponse200341BandwidthUsage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200341BandwidthUsage() *InlineResponse200341BandwidthUsage {
	this := InlineResponse200341BandwidthUsage{}
	return &this
}

// NewInlineResponse200341BandwidthUsageWithDefaults instantiates a new InlineResponse200341BandwidthUsage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200341BandwidthUsageWithDefaults() *InlineResponse200341BandwidthUsage {
	this := InlineResponse200341BandwidthUsage{}
	return &this
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *InlineResponse200341BandwidthUsage) GetTotal() float32 {
	if o == nil || isNil(o.Total) {
		var ret float32
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200341BandwidthUsage) GetTotalOk() (*float32, bool) {
	if o == nil || isNil(o.Total) {
    return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *InlineResponse200341BandwidthUsage) HasTotal() bool {
	if o != nil && !isNil(o.Total) {
		return true
	}

	return false
}

// SetTotal gets a reference to the given float32 and assigns it to the Total field.
func (o *InlineResponse200341BandwidthUsage) SetTotal(v float32) {
	o.Total = &v
}

// GetUpstream returns the Upstream field value if set, zero value otherwise.
func (o *InlineResponse200341BandwidthUsage) GetUpstream() float32 {
	if o == nil || isNil(o.Upstream) {
		var ret float32
		return ret
	}
	return *o.Upstream
}

// GetUpstreamOk returns a tuple with the Upstream field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200341BandwidthUsage) GetUpstreamOk() (*float32, bool) {
	if o == nil || isNil(o.Upstream) {
    return nil, false
	}
	return o.Upstream, true
}

// HasUpstream returns a boolean if a field has been set.
func (o *InlineResponse200341BandwidthUsage) HasUpstream() bool {
	if o != nil && !isNil(o.Upstream) {
		return true
	}

	return false
}

// SetUpstream gets a reference to the given float32 and assigns it to the Upstream field.
func (o *InlineResponse200341BandwidthUsage) SetUpstream(v float32) {
	o.Upstream = &v
}

// GetDownstream returns the Downstream field value if set, zero value otherwise.
func (o *InlineResponse200341BandwidthUsage) GetDownstream() float32 {
	if o == nil || isNil(o.Downstream) {
		var ret float32
		return ret
	}
	return *o.Downstream
}

// GetDownstreamOk returns a tuple with the Downstream field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200341BandwidthUsage) GetDownstreamOk() (*float32, bool) {
	if o == nil || isNil(o.Downstream) {
    return nil, false
	}
	return o.Downstream, true
}

// HasDownstream returns a boolean if a field has been set.
func (o *InlineResponse200341BandwidthUsage) HasDownstream() bool {
	if o != nil && !isNil(o.Downstream) {
		return true
	}

	return false
}

// SetDownstream gets a reference to the given float32 and assigns it to the Downstream field.
func (o *InlineResponse200341BandwidthUsage) SetDownstream(v float32) {
	o.Downstream = &v
}

func (o InlineResponse200341BandwidthUsage) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Total) {
		toSerialize["total"] = o.Total
	}
	if !isNil(o.Upstream) {
		toSerialize["upstream"] = o.Upstream
	}
	if !isNil(o.Downstream) {
		toSerialize["downstream"] = o.Downstream
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200341BandwidthUsage struct {
	value *InlineResponse200341BandwidthUsage
	isSet bool
}

func (v NullableInlineResponse200341BandwidthUsage) Get() *InlineResponse200341BandwidthUsage {
	return v.value
}

func (v *NullableInlineResponse200341BandwidthUsage) Set(val *InlineResponse200341BandwidthUsage) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200341BandwidthUsage) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200341BandwidthUsage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200341BandwidthUsage(val *InlineResponse200341BandwidthUsage) *NullableInlineResponse200341BandwidthUsage {
	return &NullableInlineResponse200341BandwidthUsage{value: val, isSet: true}
}

func (v NullableInlineResponse200341BandwidthUsage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200341BandwidthUsage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


