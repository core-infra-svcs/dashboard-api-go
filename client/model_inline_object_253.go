/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 01 January, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.54.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineObject253 struct for InlineObject253
type InlineObject253 struct {
	// The ID of the SM license to renew. This license must already be assigned to an SM network
	LicenseIdToRenew string `json:"licenseIdToRenew"`
	// The SM license to use to renew the seats on 'licenseIdToRenew'. This license must have at least as many seats available as there are seats on 'licenseIdToRenew'
	UnusedLicenseId string `json:"unusedLicenseId"`
}

// NewInlineObject253 instantiates a new InlineObject253 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject253(licenseIdToRenew string, unusedLicenseId string) *InlineObject253 {
	this := InlineObject253{}
	this.LicenseIdToRenew = licenseIdToRenew
	this.UnusedLicenseId = unusedLicenseId
	return &this
}

// NewInlineObject253WithDefaults instantiates a new InlineObject253 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject253WithDefaults() *InlineObject253 {
	this := InlineObject253{}
	return &this
}

// GetLicenseIdToRenew returns the LicenseIdToRenew field value
func (o *InlineObject253) GetLicenseIdToRenew() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LicenseIdToRenew
}

// GetLicenseIdToRenewOk returns a tuple with the LicenseIdToRenew field value
// and a boolean to check if the value has been set.
func (o *InlineObject253) GetLicenseIdToRenewOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.LicenseIdToRenew, true
}

// SetLicenseIdToRenew sets field value
func (o *InlineObject253) SetLicenseIdToRenew(v string) {
	o.LicenseIdToRenew = v
}

// GetUnusedLicenseId returns the UnusedLicenseId field value
func (o *InlineObject253) GetUnusedLicenseId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UnusedLicenseId
}

// GetUnusedLicenseIdOk returns a tuple with the UnusedLicenseId field value
// and a boolean to check if the value has been set.
func (o *InlineObject253) GetUnusedLicenseIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.UnusedLicenseId, true
}

// SetUnusedLicenseId sets field value
func (o *InlineObject253) SetUnusedLicenseId(v string) {
	o.UnusedLicenseId = v
}

func (o InlineObject253) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["licenseIdToRenew"] = o.LicenseIdToRenew
	}
	if true {
		toSerialize["unusedLicenseId"] = o.UnusedLicenseId
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject253 struct {
	value *InlineObject253
	isSet bool
}

func (v NullableInlineObject253) Get() *InlineObject253 {
	return v.value
}

func (v *NullableInlineObject253) Set(val *InlineObject253) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject253) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject253) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject253(val *InlineObject253) *NullableInlineObject253 {
	return &NullableInlineObject253{value: val, isSet: true}
}

func (v NullableInlineObject253) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject253) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


