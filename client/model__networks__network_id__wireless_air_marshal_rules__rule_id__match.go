/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 01 October, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.63.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// NetworksNetworkIdWirelessAirMarshalRulesRuleIdMatch Object describing the rule specification.
type NetworksNetworkIdWirelessAirMarshalRulesRuleIdMatch struct {
	// The type of match.
	Type *string `json:"type,omitempty"`
	// The string used to match.
	String *string `json:"string,omitempty"`
}

// NewNetworksNetworkIdWirelessAirMarshalRulesRuleIdMatch instantiates a new NetworksNetworkIdWirelessAirMarshalRulesRuleIdMatch object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworksNetworkIdWirelessAirMarshalRulesRuleIdMatch() *NetworksNetworkIdWirelessAirMarshalRulesRuleIdMatch {
	this := NetworksNetworkIdWirelessAirMarshalRulesRuleIdMatch{}
	return &this
}

// NewNetworksNetworkIdWirelessAirMarshalRulesRuleIdMatchWithDefaults instantiates a new NetworksNetworkIdWirelessAirMarshalRulesRuleIdMatch object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworksNetworkIdWirelessAirMarshalRulesRuleIdMatchWithDefaults() *NetworksNetworkIdWirelessAirMarshalRulesRuleIdMatch {
	this := NetworksNetworkIdWirelessAirMarshalRulesRuleIdMatch{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *NetworksNetworkIdWirelessAirMarshalRulesRuleIdMatch) GetType() string {
	if o == nil || isNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworksNetworkIdWirelessAirMarshalRulesRuleIdMatch) GetTypeOk() (*string, bool) {
	if o == nil || isNil(o.Type) {
    return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *NetworksNetworkIdWirelessAirMarshalRulesRuleIdMatch) HasType() bool {
	if o != nil && !isNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *NetworksNetworkIdWirelessAirMarshalRulesRuleIdMatch) SetType(v string) {
	o.Type = &v
}

// GetString returns the String field value if set, zero value otherwise.
func (o *NetworksNetworkIdWirelessAirMarshalRulesRuleIdMatch) GetString() string {
	if o == nil || isNil(o.String) {
		var ret string
		return ret
	}
	return *o.String
}

// GetStringOk returns a tuple with the String field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworksNetworkIdWirelessAirMarshalRulesRuleIdMatch) GetStringOk() (*string, bool) {
	if o == nil || isNil(o.String) {
    return nil, false
	}
	return o.String, true
}

// HasString returns a boolean if a field has been set.
func (o *NetworksNetworkIdWirelessAirMarshalRulesRuleIdMatch) HasString() bool {
	if o != nil && !isNil(o.String) {
		return true
	}

	return false
}

// SetString gets a reference to the given string and assigns it to the String field.
func (o *NetworksNetworkIdWirelessAirMarshalRulesRuleIdMatch) SetString(v string) {
	o.String = &v
}

func (o NetworksNetworkIdWirelessAirMarshalRulesRuleIdMatch) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !isNil(o.String) {
		toSerialize["string"] = o.String
	}
	return json.Marshal(toSerialize)
}

type NullableNetworksNetworkIdWirelessAirMarshalRulesRuleIdMatch struct {
	value *NetworksNetworkIdWirelessAirMarshalRulesRuleIdMatch
	isSet bool
}

func (v NullableNetworksNetworkIdWirelessAirMarshalRulesRuleIdMatch) Get() *NetworksNetworkIdWirelessAirMarshalRulesRuleIdMatch {
	return v.value
}

func (v *NullableNetworksNetworkIdWirelessAirMarshalRulesRuleIdMatch) Set(val *NetworksNetworkIdWirelessAirMarshalRulesRuleIdMatch) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworksNetworkIdWirelessAirMarshalRulesRuleIdMatch) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworksNetworkIdWirelessAirMarshalRulesRuleIdMatch) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworksNetworkIdWirelessAirMarshalRulesRuleIdMatch(val *NetworksNetworkIdWirelessAirMarshalRulesRuleIdMatch) *NullableNetworksNetworkIdWirelessAirMarshalRulesRuleIdMatch {
	return &NullableNetworksNetworkIdWirelessAirMarshalRulesRuleIdMatch{value: val, isSet: true}
}

func (v NullableNetworksNetworkIdWirelessAirMarshalRulesRuleIdMatch) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworksNetworkIdWirelessAirMarshalRulesRuleIdMatch) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


