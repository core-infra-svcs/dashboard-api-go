/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 01 October, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.63.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineObject303 struct for InlineObject303
type InlineObject303 struct {
	// The \"status\" to update the Certificate Authority to. Only valid option is \"trusted\".
	Status *string `json:"status,omitempty"`
	// The ID of the Certificate Authority to update.
	CertificateAuthorityId *string `json:"certificateAuthorityId,omitempty"`
}

// NewInlineObject303 instantiates a new InlineObject303 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject303() *InlineObject303 {
	this := InlineObject303{}
	return &this
}

// NewInlineObject303WithDefaults instantiates a new InlineObject303 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject303WithDefaults() *InlineObject303 {
	this := InlineObject303{}
	return &this
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *InlineObject303) GetStatus() string {
	if o == nil || isNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject303) GetStatusOk() (*string, bool) {
	if o == nil || isNil(o.Status) {
    return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *InlineObject303) HasStatus() bool {
	if o != nil && !isNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *InlineObject303) SetStatus(v string) {
	o.Status = &v
}

// GetCertificateAuthorityId returns the CertificateAuthorityId field value if set, zero value otherwise.
func (o *InlineObject303) GetCertificateAuthorityId() string {
	if o == nil || isNil(o.CertificateAuthorityId) {
		var ret string
		return ret
	}
	return *o.CertificateAuthorityId
}

// GetCertificateAuthorityIdOk returns a tuple with the CertificateAuthorityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject303) GetCertificateAuthorityIdOk() (*string, bool) {
	if o == nil || isNil(o.CertificateAuthorityId) {
    return nil, false
	}
	return o.CertificateAuthorityId, true
}

// HasCertificateAuthorityId returns a boolean if a field has been set.
func (o *InlineObject303) HasCertificateAuthorityId() bool {
	if o != nil && !isNil(o.CertificateAuthorityId) {
		return true
	}

	return false
}

// SetCertificateAuthorityId gets a reference to the given string and assigns it to the CertificateAuthorityId field.
func (o *InlineObject303) SetCertificateAuthorityId(v string) {
	o.CertificateAuthorityId = &v
}

func (o InlineObject303) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !isNil(o.CertificateAuthorityId) {
		toSerialize["certificateAuthorityId"] = o.CertificateAuthorityId
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject303 struct {
	value *InlineObject303
	isSet bool
}

func (v NullableInlineObject303) Get() *InlineObject303 {
	return v.value
}

func (v *NullableInlineObject303) Set(val *InlineObject303) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject303) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject303) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject303(val *InlineObject303) *NullableInlineObject303 {
	return &NullableInlineObject303{value: val, isSet: true}
}

func (v NullableInlineObject303) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject303) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


