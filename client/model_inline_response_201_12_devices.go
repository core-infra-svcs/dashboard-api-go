/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 03 September, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.62.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse20112Devices struct for InlineResponse20112Devices
type InlineResponse20112Devices struct {
	// Serial of the device
	Serial *string `json:"serial,omitempty"`
	// Member number assigned to the device within cluster - This is a read only attribute and cannot be altered using post/put operations
	MemberId *string `json:"memberId,omitempty"`
	// Uplink settings of the device
	Uplinks []InlineResponse20112Uplinks1 `json:"uplinks,omitempty"`
	// Tunnel settings of the device
	Tunnels []InlineResponse20112Tunnels1 `json:"tunnels,omitempty"`
}

// NewInlineResponse20112Devices instantiates a new InlineResponse20112Devices object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20112Devices() *InlineResponse20112Devices {
	this := InlineResponse20112Devices{}
	return &this
}

// NewInlineResponse20112DevicesWithDefaults instantiates a new InlineResponse20112Devices object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20112DevicesWithDefaults() *InlineResponse20112Devices {
	this := InlineResponse20112Devices{}
	return &this
}

// GetSerial returns the Serial field value if set, zero value otherwise.
func (o *InlineResponse20112Devices) GetSerial() string {
	if o == nil || isNil(o.Serial) {
		var ret string
		return ret
	}
	return *o.Serial
}

// GetSerialOk returns a tuple with the Serial field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20112Devices) GetSerialOk() (*string, bool) {
	if o == nil || isNil(o.Serial) {
    return nil, false
	}
	return o.Serial, true
}

// HasSerial returns a boolean if a field has been set.
func (o *InlineResponse20112Devices) HasSerial() bool {
	if o != nil && !isNil(o.Serial) {
		return true
	}

	return false
}

// SetSerial gets a reference to the given string and assigns it to the Serial field.
func (o *InlineResponse20112Devices) SetSerial(v string) {
	o.Serial = &v
}

// GetMemberId returns the MemberId field value if set, zero value otherwise.
func (o *InlineResponse20112Devices) GetMemberId() string {
	if o == nil || isNil(o.MemberId) {
		var ret string
		return ret
	}
	return *o.MemberId
}

// GetMemberIdOk returns a tuple with the MemberId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20112Devices) GetMemberIdOk() (*string, bool) {
	if o == nil || isNil(o.MemberId) {
    return nil, false
	}
	return o.MemberId, true
}

// HasMemberId returns a boolean if a field has been set.
func (o *InlineResponse20112Devices) HasMemberId() bool {
	if o != nil && !isNil(o.MemberId) {
		return true
	}

	return false
}

// SetMemberId gets a reference to the given string and assigns it to the MemberId field.
func (o *InlineResponse20112Devices) SetMemberId(v string) {
	o.MemberId = &v
}

// GetUplinks returns the Uplinks field value if set, zero value otherwise.
func (o *InlineResponse20112Devices) GetUplinks() []InlineResponse20112Uplinks1 {
	if o == nil || isNil(o.Uplinks) {
		var ret []InlineResponse20112Uplinks1
		return ret
	}
	return o.Uplinks
}

// GetUplinksOk returns a tuple with the Uplinks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20112Devices) GetUplinksOk() ([]InlineResponse20112Uplinks1, bool) {
	if o == nil || isNil(o.Uplinks) {
    return nil, false
	}
	return o.Uplinks, true
}

// HasUplinks returns a boolean if a field has been set.
func (o *InlineResponse20112Devices) HasUplinks() bool {
	if o != nil && !isNil(o.Uplinks) {
		return true
	}

	return false
}

// SetUplinks gets a reference to the given []InlineResponse20112Uplinks1 and assigns it to the Uplinks field.
func (o *InlineResponse20112Devices) SetUplinks(v []InlineResponse20112Uplinks1) {
	o.Uplinks = v
}

// GetTunnels returns the Tunnels field value if set, zero value otherwise.
func (o *InlineResponse20112Devices) GetTunnels() []InlineResponse20112Tunnels1 {
	if o == nil || isNil(o.Tunnels) {
		var ret []InlineResponse20112Tunnels1
		return ret
	}
	return o.Tunnels
}

// GetTunnelsOk returns a tuple with the Tunnels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20112Devices) GetTunnelsOk() ([]InlineResponse20112Tunnels1, bool) {
	if o == nil || isNil(o.Tunnels) {
    return nil, false
	}
	return o.Tunnels, true
}

// HasTunnels returns a boolean if a field has been set.
func (o *InlineResponse20112Devices) HasTunnels() bool {
	if o != nil && !isNil(o.Tunnels) {
		return true
	}

	return false
}

// SetTunnels gets a reference to the given []InlineResponse20112Tunnels1 and assigns it to the Tunnels field.
func (o *InlineResponse20112Devices) SetTunnels(v []InlineResponse20112Tunnels1) {
	o.Tunnels = v
}

func (o InlineResponse20112Devices) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Serial) {
		toSerialize["serial"] = o.Serial
	}
	if !isNil(o.MemberId) {
		toSerialize["memberId"] = o.MemberId
	}
	if !isNil(o.Uplinks) {
		toSerialize["uplinks"] = o.Uplinks
	}
	if !isNil(o.Tunnels) {
		toSerialize["tunnels"] = o.Tunnels
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20112Devices struct {
	value *InlineResponse20112Devices
	isSet bool
}

func (v NullableInlineResponse20112Devices) Get() *InlineResponse20112Devices {
	return v.value
}

func (v *NullableInlineResponse20112Devices) Set(val *InlineResponse20112Devices) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20112Devices) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20112Devices) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20112Devices(val *InlineResponse20112Devices) *NullableInlineResponse20112Devices {
	return &NullableInlineResponse20112Devices{value: val, isSet: true}
}

func (v NullableInlineResponse20112Devices) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20112Devices) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


