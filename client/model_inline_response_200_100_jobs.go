/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 February, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.55.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"time"
)

// InlineResponse200100Jobs struct for InlineResponse200100Jobs
type InlineResponse200100Jobs struct {
	// Auto locate job ID
	Id *string `json:"id,omitempty"`
	// Network ID
	NetworkId *string `json:"networkId,omitempty"`
	// Floor plan ID
	FloorPlanId *string `json:"floorPlanId,omitempty"`
	// Auto locate job status. Possible values: 'scheduled', 'in progress', 'canceling', 'error', 'finished', 'published', 'canceled'
	Status *string `json:"status,omitempty"`
	// Scheduled start time for auto locate job
	ScheduledAt *time.Time `json:"scheduledAt,omitempty"`
	Completed *InlineResponse200100Completed `json:"completed,omitempty"`
	Ranging *InlineResponse200100Ranging `json:"ranging,omitempty"`
	Gnss *InlineResponse200100Gnss `json:"gnss,omitempty"`
	// List of errors that occurred during a failed run of auto locate
	Errors []InlineResponse200100Errors `json:"errors,omitempty"`
}

// NewInlineResponse200100Jobs instantiates a new InlineResponse200100Jobs object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200100Jobs() *InlineResponse200100Jobs {
	this := InlineResponse200100Jobs{}
	return &this
}

// NewInlineResponse200100JobsWithDefaults instantiates a new InlineResponse200100Jobs object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200100JobsWithDefaults() *InlineResponse200100Jobs {
	this := InlineResponse200100Jobs{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *InlineResponse200100Jobs) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200100Jobs) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *InlineResponse200100Jobs) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *InlineResponse200100Jobs) SetId(v string) {
	o.Id = &v
}

// GetNetworkId returns the NetworkId field value if set, zero value otherwise.
func (o *InlineResponse200100Jobs) GetNetworkId() string {
	if o == nil || isNil(o.NetworkId) {
		var ret string
		return ret
	}
	return *o.NetworkId
}

// GetNetworkIdOk returns a tuple with the NetworkId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200100Jobs) GetNetworkIdOk() (*string, bool) {
	if o == nil || isNil(o.NetworkId) {
    return nil, false
	}
	return o.NetworkId, true
}

// HasNetworkId returns a boolean if a field has been set.
func (o *InlineResponse200100Jobs) HasNetworkId() bool {
	if o != nil && !isNil(o.NetworkId) {
		return true
	}

	return false
}

// SetNetworkId gets a reference to the given string and assigns it to the NetworkId field.
func (o *InlineResponse200100Jobs) SetNetworkId(v string) {
	o.NetworkId = &v
}

// GetFloorPlanId returns the FloorPlanId field value if set, zero value otherwise.
func (o *InlineResponse200100Jobs) GetFloorPlanId() string {
	if o == nil || isNil(o.FloorPlanId) {
		var ret string
		return ret
	}
	return *o.FloorPlanId
}

// GetFloorPlanIdOk returns a tuple with the FloorPlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200100Jobs) GetFloorPlanIdOk() (*string, bool) {
	if o == nil || isNil(o.FloorPlanId) {
    return nil, false
	}
	return o.FloorPlanId, true
}

// HasFloorPlanId returns a boolean if a field has been set.
func (o *InlineResponse200100Jobs) HasFloorPlanId() bool {
	if o != nil && !isNil(o.FloorPlanId) {
		return true
	}

	return false
}

// SetFloorPlanId gets a reference to the given string and assigns it to the FloorPlanId field.
func (o *InlineResponse200100Jobs) SetFloorPlanId(v string) {
	o.FloorPlanId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *InlineResponse200100Jobs) GetStatus() string {
	if o == nil || isNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200100Jobs) GetStatusOk() (*string, bool) {
	if o == nil || isNil(o.Status) {
    return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *InlineResponse200100Jobs) HasStatus() bool {
	if o != nil && !isNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *InlineResponse200100Jobs) SetStatus(v string) {
	o.Status = &v
}

// GetScheduledAt returns the ScheduledAt field value if set, zero value otherwise.
func (o *InlineResponse200100Jobs) GetScheduledAt() time.Time {
	if o == nil || isNil(o.ScheduledAt) {
		var ret time.Time
		return ret
	}
	return *o.ScheduledAt
}

// GetScheduledAtOk returns a tuple with the ScheduledAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200100Jobs) GetScheduledAtOk() (*time.Time, bool) {
	if o == nil || isNil(o.ScheduledAt) {
    return nil, false
	}
	return o.ScheduledAt, true
}

// HasScheduledAt returns a boolean if a field has been set.
func (o *InlineResponse200100Jobs) HasScheduledAt() bool {
	if o != nil && !isNil(o.ScheduledAt) {
		return true
	}

	return false
}

// SetScheduledAt gets a reference to the given time.Time and assigns it to the ScheduledAt field.
func (o *InlineResponse200100Jobs) SetScheduledAt(v time.Time) {
	o.ScheduledAt = &v
}

// GetCompleted returns the Completed field value if set, zero value otherwise.
func (o *InlineResponse200100Jobs) GetCompleted() InlineResponse200100Completed {
	if o == nil || isNil(o.Completed) {
		var ret InlineResponse200100Completed
		return ret
	}
	return *o.Completed
}

// GetCompletedOk returns a tuple with the Completed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200100Jobs) GetCompletedOk() (*InlineResponse200100Completed, bool) {
	if o == nil || isNil(o.Completed) {
    return nil, false
	}
	return o.Completed, true
}

// HasCompleted returns a boolean if a field has been set.
func (o *InlineResponse200100Jobs) HasCompleted() bool {
	if o != nil && !isNil(o.Completed) {
		return true
	}

	return false
}

// SetCompleted gets a reference to the given InlineResponse200100Completed and assigns it to the Completed field.
func (o *InlineResponse200100Jobs) SetCompleted(v InlineResponse200100Completed) {
	o.Completed = &v
}

// GetRanging returns the Ranging field value if set, zero value otherwise.
func (o *InlineResponse200100Jobs) GetRanging() InlineResponse200100Ranging {
	if o == nil || isNil(o.Ranging) {
		var ret InlineResponse200100Ranging
		return ret
	}
	return *o.Ranging
}

// GetRangingOk returns a tuple with the Ranging field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200100Jobs) GetRangingOk() (*InlineResponse200100Ranging, bool) {
	if o == nil || isNil(o.Ranging) {
    return nil, false
	}
	return o.Ranging, true
}

// HasRanging returns a boolean if a field has been set.
func (o *InlineResponse200100Jobs) HasRanging() bool {
	if o != nil && !isNil(o.Ranging) {
		return true
	}

	return false
}

// SetRanging gets a reference to the given InlineResponse200100Ranging and assigns it to the Ranging field.
func (o *InlineResponse200100Jobs) SetRanging(v InlineResponse200100Ranging) {
	o.Ranging = &v
}

// GetGnss returns the Gnss field value if set, zero value otherwise.
func (o *InlineResponse200100Jobs) GetGnss() InlineResponse200100Gnss {
	if o == nil || isNil(o.Gnss) {
		var ret InlineResponse200100Gnss
		return ret
	}
	return *o.Gnss
}

// GetGnssOk returns a tuple with the Gnss field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200100Jobs) GetGnssOk() (*InlineResponse200100Gnss, bool) {
	if o == nil || isNil(o.Gnss) {
    return nil, false
	}
	return o.Gnss, true
}

// HasGnss returns a boolean if a field has been set.
func (o *InlineResponse200100Jobs) HasGnss() bool {
	if o != nil && !isNil(o.Gnss) {
		return true
	}

	return false
}

// SetGnss gets a reference to the given InlineResponse200100Gnss and assigns it to the Gnss field.
func (o *InlineResponse200100Jobs) SetGnss(v InlineResponse200100Gnss) {
	o.Gnss = &v
}

// GetErrors returns the Errors field value if set, zero value otherwise.
func (o *InlineResponse200100Jobs) GetErrors() []InlineResponse200100Errors {
	if o == nil || isNil(o.Errors) {
		var ret []InlineResponse200100Errors
		return ret
	}
	return o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200100Jobs) GetErrorsOk() ([]InlineResponse200100Errors, bool) {
	if o == nil || isNil(o.Errors) {
    return nil, false
	}
	return o.Errors, true
}

// HasErrors returns a boolean if a field has been set.
func (o *InlineResponse200100Jobs) HasErrors() bool {
	if o != nil && !isNil(o.Errors) {
		return true
	}

	return false
}

// SetErrors gets a reference to the given []InlineResponse200100Errors and assigns it to the Errors field.
func (o *InlineResponse200100Jobs) SetErrors(v []InlineResponse200100Errors) {
	o.Errors = v
}

func (o InlineResponse200100Jobs) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.NetworkId) {
		toSerialize["networkId"] = o.NetworkId
	}
	if !isNil(o.FloorPlanId) {
		toSerialize["floorPlanId"] = o.FloorPlanId
	}
	if !isNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !isNil(o.ScheduledAt) {
		toSerialize["scheduledAt"] = o.ScheduledAt
	}
	if !isNil(o.Completed) {
		toSerialize["completed"] = o.Completed
	}
	if !isNil(o.Ranging) {
		toSerialize["ranging"] = o.Ranging
	}
	if !isNil(o.Gnss) {
		toSerialize["gnss"] = o.Gnss
	}
	if !isNil(o.Errors) {
		toSerialize["errors"] = o.Errors
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200100Jobs struct {
	value *InlineResponse200100Jobs
	isSet bool
}

func (v NullableInlineResponse200100Jobs) Get() *InlineResponse200100Jobs {
	return v.value
}

func (v *NullableInlineResponse200100Jobs) Set(val *InlineResponse200100Jobs) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200100Jobs) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200100Jobs) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200100Jobs(val *InlineResponse200100Jobs) *NullableInlineResponse200100Jobs {
	return &NullableInlineResponse200100Jobs{value: val, isSet: true}
}

func (v NullableInlineResponse200100Jobs) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200100Jobs) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


