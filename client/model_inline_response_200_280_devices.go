/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 01 October, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.63.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200280Devices struct for InlineResponse200280Devices
type InlineResponse200280Devices struct {
	Device *InlineResponse200280Device `json:"device,omitempty"`
}

// NewInlineResponse200280Devices instantiates a new InlineResponse200280Devices object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200280Devices() *InlineResponse200280Devices {
	this := InlineResponse200280Devices{}
	return &this
}

// NewInlineResponse200280DevicesWithDefaults instantiates a new InlineResponse200280Devices object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200280DevicesWithDefaults() *InlineResponse200280Devices {
	this := InlineResponse200280Devices{}
	return &this
}

// GetDevice returns the Device field value if set, zero value otherwise.
func (o *InlineResponse200280Devices) GetDevice() InlineResponse200280Device {
	if o == nil || isNil(o.Device) {
		var ret InlineResponse200280Device
		return ret
	}
	return *o.Device
}

// GetDeviceOk returns a tuple with the Device field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200280Devices) GetDeviceOk() (*InlineResponse200280Device, bool) {
	if o == nil || isNil(o.Device) {
    return nil, false
	}
	return o.Device, true
}

// HasDevice returns a boolean if a field has been set.
func (o *InlineResponse200280Devices) HasDevice() bool {
	if o != nil && !isNil(o.Device) {
		return true
	}

	return false
}

// SetDevice gets a reference to the given InlineResponse200280Device and assigns it to the Device field.
func (o *InlineResponse200280Devices) SetDevice(v InlineResponse200280Device) {
	o.Device = &v
}

func (o InlineResponse200280Devices) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Device) {
		toSerialize["device"] = o.Device
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200280Devices struct {
	value *InlineResponse200280Devices
	isSet bool
}

func (v NullableInlineResponse200280Devices) Get() *InlineResponse200280Devices {
	return v.value
}

func (v *NullableInlineResponse200280Devices) Set(val *InlineResponse200280Devices) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200280Devices) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200280Devices) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200280Devices(val *InlineResponse200280Devices) *NullableInlineResponse200280Devices {
	return &NullableInlineResponse200280Devices{value: val, isSet: true}
}

func (v NullableInlineResponse200280Devices) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200280Devices) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


