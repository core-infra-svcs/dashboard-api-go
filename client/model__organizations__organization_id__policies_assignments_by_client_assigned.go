/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 01 October, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.63.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// OrganizationsOrganizationIdPoliciesAssignmentsByClientAssigned struct for OrganizationsOrganizationIdPoliciesAssignmentsByClientAssigned
type OrganizationsOrganizationIdPoliciesAssignmentsByClientAssigned struct {
	// name of policy
	Name *string `json:"name,omitempty"`
	// type of policy
	Type *string `json:"type,omitempty"`
	// id of policy
	Id *string `json:"id,omitempty"`
	// policy limits
	LimitTo []OrganizationsOrganizationIdPoliciesAssignmentsByClientLimitTo `json:"limitTo,omitempty"`
}

// NewOrganizationsOrganizationIdPoliciesAssignmentsByClientAssigned instantiates a new OrganizationsOrganizationIdPoliciesAssignmentsByClientAssigned object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationsOrganizationIdPoliciesAssignmentsByClientAssigned() *OrganizationsOrganizationIdPoliciesAssignmentsByClientAssigned {
	this := OrganizationsOrganizationIdPoliciesAssignmentsByClientAssigned{}
	return &this
}

// NewOrganizationsOrganizationIdPoliciesAssignmentsByClientAssignedWithDefaults instantiates a new OrganizationsOrganizationIdPoliciesAssignmentsByClientAssigned object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationsOrganizationIdPoliciesAssignmentsByClientAssignedWithDefaults() *OrganizationsOrganizationIdPoliciesAssignmentsByClientAssigned {
	this := OrganizationsOrganizationIdPoliciesAssignmentsByClientAssigned{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *OrganizationsOrganizationIdPoliciesAssignmentsByClientAssigned) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationsOrganizationIdPoliciesAssignmentsByClientAssigned) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
    return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *OrganizationsOrganizationIdPoliciesAssignmentsByClientAssigned) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *OrganizationsOrganizationIdPoliciesAssignmentsByClientAssigned) SetName(v string) {
	o.Name = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *OrganizationsOrganizationIdPoliciesAssignmentsByClientAssigned) GetType() string {
	if o == nil || isNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationsOrganizationIdPoliciesAssignmentsByClientAssigned) GetTypeOk() (*string, bool) {
	if o == nil || isNil(o.Type) {
    return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *OrganizationsOrganizationIdPoliciesAssignmentsByClientAssigned) HasType() bool {
	if o != nil && !isNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *OrganizationsOrganizationIdPoliciesAssignmentsByClientAssigned) SetType(v string) {
	o.Type = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *OrganizationsOrganizationIdPoliciesAssignmentsByClientAssigned) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationsOrganizationIdPoliciesAssignmentsByClientAssigned) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *OrganizationsOrganizationIdPoliciesAssignmentsByClientAssigned) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *OrganizationsOrganizationIdPoliciesAssignmentsByClientAssigned) SetId(v string) {
	o.Id = &v
}

// GetLimitTo returns the LimitTo field value if set, zero value otherwise.
func (o *OrganizationsOrganizationIdPoliciesAssignmentsByClientAssigned) GetLimitTo() []OrganizationsOrganizationIdPoliciesAssignmentsByClientLimitTo {
	if o == nil || isNil(o.LimitTo) {
		var ret []OrganizationsOrganizationIdPoliciesAssignmentsByClientLimitTo
		return ret
	}
	return o.LimitTo
}

// GetLimitToOk returns a tuple with the LimitTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationsOrganizationIdPoliciesAssignmentsByClientAssigned) GetLimitToOk() ([]OrganizationsOrganizationIdPoliciesAssignmentsByClientLimitTo, bool) {
	if o == nil || isNil(o.LimitTo) {
    return nil, false
	}
	return o.LimitTo, true
}

// HasLimitTo returns a boolean if a field has been set.
func (o *OrganizationsOrganizationIdPoliciesAssignmentsByClientAssigned) HasLimitTo() bool {
	if o != nil && !isNil(o.LimitTo) {
		return true
	}

	return false
}

// SetLimitTo gets a reference to the given []OrganizationsOrganizationIdPoliciesAssignmentsByClientLimitTo and assigns it to the LimitTo field.
func (o *OrganizationsOrganizationIdPoliciesAssignmentsByClientAssigned) SetLimitTo(v []OrganizationsOrganizationIdPoliciesAssignmentsByClientLimitTo) {
	o.LimitTo = v
}

func (o OrganizationsOrganizationIdPoliciesAssignmentsByClientAssigned) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.LimitTo) {
		toSerialize["limitTo"] = o.LimitTo
	}
	return json.Marshal(toSerialize)
}

type NullableOrganizationsOrganizationIdPoliciesAssignmentsByClientAssigned struct {
	value *OrganizationsOrganizationIdPoliciesAssignmentsByClientAssigned
	isSet bool
}

func (v NullableOrganizationsOrganizationIdPoliciesAssignmentsByClientAssigned) Get() *OrganizationsOrganizationIdPoliciesAssignmentsByClientAssigned {
	return v.value
}

func (v *NullableOrganizationsOrganizationIdPoliciesAssignmentsByClientAssigned) Set(val *OrganizationsOrganizationIdPoliciesAssignmentsByClientAssigned) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationsOrganizationIdPoliciesAssignmentsByClientAssigned) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationsOrganizationIdPoliciesAssignmentsByClientAssigned) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationsOrganizationIdPoliciesAssignmentsByClientAssigned(val *OrganizationsOrganizationIdPoliciesAssignmentsByClientAssigned) *NullableOrganizationsOrganizationIdPoliciesAssignmentsByClientAssigned {
	return &NullableOrganizationsOrganizationIdPoliciesAssignmentsByClientAssigned{value: val, isSet: true}
}

func (v NullableOrganizationsOrganizationIdPoliciesAssignmentsByClientAssigned) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationsOrganizationIdPoliciesAssignmentsByClientAssigned) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


