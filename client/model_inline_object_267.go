/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 03 September, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.62.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineObject267 struct for InlineObject267
type InlineObject267 struct {
	// A list of network IDs to apply the opt-in to
	LimitScopeToNetworks []string `json:"limitScopeToNetworks,omitempty"`
}

// NewInlineObject267 instantiates a new InlineObject267 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject267() *InlineObject267 {
	this := InlineObject267{}
	return &this
}

// NewInlineObject267WithDefaults instantiates a new InlineObject267 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject267WithDefaults() *InlineObject267 {
	this := InlineObject267{}
	return &this
}

// GetLimitScopeToNetworks returns the LimitScopeToNetworks field value if set, zero value otherwise.
func (o *InlineObject267) GetLimitScopeToNetworks() []string {
	if o == nil || isNil(o.LimitScopeToNetworks) {
		var ret []string
		return ret
	}
	return o.LimitScopeToNetworks
}

// GetLimitScopeToNetworksOk returns a tuple with the LimitScopeToNetworks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject267) GetLimitScopeToNetworksOk() ([]string, bool) {
	if o == nil || isNil(o.LimitScopeToNetworks) {
    return nil, false
	}
	return o.LimitScopeToNetworks, true
}

// HasLimitScopeToNetworks returns a boolean if a field has been set.
func (o *InlineObject267) HasLimitScopeToNetworks() bool {
	if o != nil && !isNil(o.LimitScopeToNetworks) {
		return true
	}

	return false
}

// SetLimitScopeToNetworks gets a reference to the given []string and assigns it to the LimitScopeToNetworks field.
func (o *InlineObject267) SetLimitScopeToNetworks(v []string) {
	o.LimitScopeToNetworks = v
}

func (o InlineObject267) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.LimitScopeToNetworks) {
		toSerialize["limitScopeToNetworks"] = o.LimitScopeToNetworks
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject267 struct {
	value *InlineObject267
	isSet bool
}

func (v NullableInlineObject267) Get() *InlineObject267 {
	return v.value
}

func (v *NullableInlineObject267) Set(val *InlineObject267) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject267) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject267) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject267(val *InlineObject267) *NullableInlineObject267 {
	return &NullableInlineObject267{value: val, isSet: true}
}

func (v NullableInlineObject267) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject267) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


