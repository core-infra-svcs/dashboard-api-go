/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 01 October, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.63.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200278Counts Object containing counts
type InlineResponse200278Counts struct {
	Packets *InlineResponse200278CountsPackets `json:"packets,omitempty"`
}

// NewInlineResponse200278Counts instantiates a new InlineResponse200278Counts object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200278Counts() *InlineResponse200278Counts {
	this := InlineResponse200278Counts{}
	return &this
}

// NewInlineResponse200278CountsWithDefaults instantiates a new InlineResponse200278Counts object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200278CountsWithDefaults() *InlineResponse200278Counts {
	this := InlineResponse200278Counts{}
	return &this
}

// GetPackets returns the Packets field value if set, zero value otherwise.
func (o *InlineResponse200278Counts) GetPackets() InlineResponse200278CountsPackets {
	if o == nil || isNil(o.Packets) {
		var ret InlineResponse200278CountsPackets
		return ret
	}
	return *o.Packets
}

// GetPacketsOk returns a tuple with the Packets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200278Counts) GetPacketsOk() (*InlineResponse200278CountsPackets, bool) {
	if o == nil || isNil(o.Packets) {
    return nil, false
	}
	return o.Packets, true
}

// HasPackets returns a boolean if a field has been set.
func (o *InlineResponse200278Counts) HasPackets() bool {
	if o != nil && !isNil(o.Packets) {
		return true
	}

	return false
}

// SetPackets gets a reference to the given InlineResponse200278CountsPackets and assigns it to the Packets field.
func (o *InlineResponse200278Counts) SetPackets(v InlineResponse200278CountsPackets) {
	o.Packets = &v
}

func (o InlineResponse200278Counts) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Packets) {
		toSerialize["packets"] = o.Packets
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200278Counts struct {
	value *InlineResponse200278Counts
	isSet bool
}

func (v NullableInlineResponse200278Counts) Get() *InlineResponse200278Counts {
	return v.value
}

func (v *NullableInlineResponse200278Counts) Set(val *InlineResponse200278Counts) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200278Counts) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200278Counts) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200278Counts(val *InlineResponse200278Counts) *NullableInlineResponse200278Counts {
	return &NullableInlineResponse200278Counts{value: val, isSet: true}
}

func (v NullableInlineResponse200278Counts) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200278Counts) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


