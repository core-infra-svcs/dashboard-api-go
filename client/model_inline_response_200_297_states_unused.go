/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 07 May, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.58.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200297StatesUnused Data for unused licenses
type InlineResponse200297StatesUnused struct {
	// The number of unused licenses
	Count *int32 `json:"count,omitempty"`
	SoonestActivation *InlineResponse200297StatesUnusedSoonestActivation `json:"soonestActivation,omitempty"`
}

// NewInlineResponse200297StatesUnused instantiates a new InlineResponse200297StatesUnused object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200297StatesUnused() *InlineResponse200297StatesUnused {
	this := InlineResponse200297StatesUnused{}
	return &this
}

// NewInlineResponse200297StatesUnusedWithDefaults instantiates a new InlineResponse200297StatesUnused object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200297StatesUnusedWithDefaults() *InlineResponse200297StatesUnused {
	this := InlineResponse200297StatesUnused{}
	return &this
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *InlineResponse200297StatesUnused) GetCount() int32 {
	if o == nil || isNil(o.Count) {
		var ret int32
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200297StatesUnused) GetCountOk() (*int32, bool) {
	if o == nil || isNil(o.Count) {
    return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *InlineResponse200297StatesUnused) HasCount() bool {
	if o != nil && !isNil(o.Count) {
		return true
	}

	return false
}

// SetCount gets a reference to the given int32 and assigns it to the Count field.
func (o *InlineResponse200297StatesUnused) SetCount(v int32) {
	o.Count = &v
}

// GetSoonestActivation returns the SoonestActivation field value if set, zero value otherwise.
func (o *InlineResponse200297StatesUnused) GetSoonestActivation() InlineResponse200297StatesUnusedSoonestActivation {
	if o == nil || isNil(o.SoonestActivation) {
		var ret InlineResponse200297StatesUnusedSoonestActivation
		return ret
	}
	return *o.SoonestActivation
}

// GetSoonestActivationOk returns a tuple with the SoonestActivation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200297StatesUnused) GetSoonestActivationOk() (*InlineResponse200297StatesUnusedSoonestActivation, bool) {
	if o == nil || isNil(o.SoonestActivation) {
    return nil, false
	}
	return o.SoonestActivation, true
}

// HasSoonestActivation returns a boolean if a field has been set.
func (o *InlineResponse200297StatesUnused) HasSoonestActivation() bool {
	if o != nil && !isNil(o.SoonestActivation) {
		return true
	}

	return false
}

// SetSoonestActivation gets a reference to the given InlineResponse200297StatesUnusedSoonestActivation and assigns it to the SoonestActivation field.
func (o *InlineResponse200297StatesUnused) SetSoonestActivation(v InlineResponse200297StatesUnusedSoonestActivation) {
	o.SoonestActivation = &v
}

func (o InlineResponse200297StatesUnused) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Count) {
		toSerialize["count"] = o.Count
	}
	if !isNil(o.SoonestActivation) {
		toSerialize["soonestActivation"] = o.SoonestActivation
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200297StatesUnused struct {
	value *InlineResponse200297StatesUnused
	isSet bool
}

func (v NullableInlineResponse200297StatesUnused) Get() *InlineResponse200297StatesUnused {
	return v.value
}

func (v *NullableInlineResponse200297StatesUnused) Set(val *InlineResponse200297StatesUnused) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200297StatesUnused) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200297StatesUnused) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200297StatesUnused(val *InlineResponse200297StatesUnused) *NullableInlineResponse200297StatesUnused {
	return &NullableInlineResponse200297StatesUnused{value: val, isSet: true}
}

func (v NullableInlineResponse200297StatesUnused) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200297StatesUnused) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


