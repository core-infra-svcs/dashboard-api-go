/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 October, 2022 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.26.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse20086 struct for InlineResponse20086
type InlineResponse20086 struct {
	// ID associated with the SAML role
	Id *string `json:"id,omitempty"`
	// The role of the SAML administrator
	Role *string `json:"role,omitempty"`
	// The privilege of the SAML administrator on the organization
	OrgAccess *string `json:"orgAccess,omitempty"`
	// The list of networks that the SAML administrator has privileges on
	Networks *[]InlineResponse20086Networks `json:"networks,omitempty"`
	// The list of tags that the SAML administrator has privleges on
	Tags *[]InlineResponse20086Tags `json:"tags,omitempty"`
}

// NewInlineResponse20086 instantiates a new InlineResponse20086 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20086() *InlineResponse20086 {
	this := InlineResponse20086{}
	return &this
}

// NewInlineResponse20086WithDefaults instantiates a new InlineResponse20086 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20086WithDefaults() *InlineResponse20086 {
	this := InlineResponse20086{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *InlineResponse20086) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20086) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *InlineResponse20086) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *InlineResponse20086) SetId(v string) {
	o.Id = &v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *InlineResponse20086) GetRole() string {
	if o == nil || o.Role == nil {
		var ret string
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20086) GetRoleOk() (*string, bool) {
	if o == nil || o.Role == nil {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *InlineResponse20086) HasRole() bool {
	if o != nil && o.Role != nil {
		return true
	}

	return false
}

// SetRole gets a reference to the given string and assigns it to the Role field.
func (o *InlineResponse20086) SetRole(v string) {
	o.Role = &v
}

// GetOrgAccess returns the OrgAccess field value if set, zero value otherwise.
func (o *InlineResponse20086) GetOrgAccess() string {
	if o == nil || o.OrgAccess == nil {
		var ret string
		return ret
	}
	return *o.OrgAccess
}

// GetOrgAccessOk returns a tuple with the OrgAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20086) GetOrgAccessOk() (*string, bool) {
	if o == nil || o.OrgAccess == nil {
		return nil, false
	}
	return o.OrgAccess, true
}

// HasOrgAccess returns a boolean if a field has been set.
func (o *InlineResponse20086) HasOrgAccess() bool {
	if o != nil && o.OrgAccess != nil {
		return true
	}

	return false
}

// SetOrgAccess gets a reference to the given string and assigns it to the OrgAccess field.
func (o *InlineResponse20086) SetOrgAccess(v string) {
	o.OrgAccess = &v
}

// GetNetworks returns the Networks field value if set, zero value otherwise.
func (o *InlineResponse20086) GetNetworks() []InlineResponse20086Networks {
	if o == nil || o.Networks == nil {
		var ret []InlineResponse20086Networks
		return ret
	}
	return *o.Networks
}

// GetNetworksOk returns a tuple with the Networks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20086) GetNetworksOk() (*[]InlineResponse20086Networks, bool) {
	if o == nil || o.Networks == nil {
		return nil, false
	}
	return o.Networks, true
}

// HasNetworks returns a boolean if a field has been set.
func (o *InlineResponse20086) HasNetworks() bool {
	if o != nil && o.Networks != nil {
		return true
	}

	return false
}

// SetNetworks gets a reference to the given []InlineResponse20086Networks and assigns it to the Networks field.
func (o *InlineResponse20086) SetNetworks(v []InlineResponse20086Networks) {
	o.Networks = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *InlineResponse20086) GetTags() []InlineResponse20086Tags {
	if o == nil || o.Tags == nil {
		var ret []InlineResponse20086Tags
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20086) GetTagsOk() (*[]InlineResponse20086Tags, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *InlineResponse20086) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []InlineResponse20086Tags and assigns it to the Tags field.
func (o *InlineResponse20086) SetTags(v []InlineResponse20086Tags) {
	o.Tags = &v
}

func (o InlineResponse20086) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Role != nil {
		toSerialize["role"] = o.Role
	}
	if o.OrgAccess != nil {
		toSerialize["orgAccess"] = o.OrgAccess
	}
	if o.Networks != nil {
		toSerialize["networks"] = o.Networks
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20086 struct {
	value *InlineResponse20086
	isSet bool
}

func (v NullableInlineResponse20086) Get() *InlineResponse20086 {
	return v.value
}

func (v *NullableInlineResponse20086) Set(val *InlineResponse20086) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20086) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20086) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20086(val *InlineResponse20086) *NullableInlineResponse20086 {
	return &NullableInlineResponse20086{value: val, isSet: true}
}

func (v NullableInlineResponse20086) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20086) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


