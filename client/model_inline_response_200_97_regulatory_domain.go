/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 02 August, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.36.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse20097RegulatoryDomain Regulatory domain information for this network.
type InlineResponse20097RegulatoryDomain struct {
	// The name of the regulatory domain for this network.
	Name *string `json:"name,omitempty"`
	// Whether or not the regulatory domain for this network permits Wifi 6E.
	Permits6e *bool `json:"permits6e,omitempty"`
}

// NewInlineResponse20097RegulatoryDomain instantiates a new InlineResponse20097RegulatoryDomain object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20097RegulatoryDomain() *InlineResponse20097RegulatoryDomain {
	this := InlineResponse20097RegulatoryDomain{}
	return &this
}

// NewInlineResponse20097RegulatoryDomainWithDefaults instantiates a new InlineResponse20097RegulatoryDomain object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20097RegulatoryDomainWithDefaults() *InlineResponse20097RegulatoryDomain {
	this := InlineResponse20097RegulatoryDomain{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *InlineResponse20097RegulatoryDomain) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20097RegulatoryDomain) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
    return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *InlineResponse20097RegulatoryDomain) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *InlineResponse20097RegulatoryDomain) SetName(v string) {
	o.Name = &v
}

// GetPermits6e returns the Permits6e field value if set, zero value otherwise.
func (o *InlineResponse20097RegulatoryDomain) GetPermits6e() bool {
	if o == nil || isNil(o.Permits6e) {
		var ret bool
		return ret
	}
	return *o.Permits6e
}

// GetPermits6eOk returns a tuple with the Permits6e field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20097RegulatoryDomain) GetPermits6eOk() (*bool, bool) {
	if o == nil || isNil(o.Permits6e) {
    return nil, false
	}
	return o.Permits6e, true
}

// HasPermits6e returns a boolean if a field has been set.
func (o *InlineResponse20097RegulatoryDomain) HasPermits6e() bool {
	if o != nil && !isNil(o.Permits6e) {
		return true
	}

	return false
}

// SetPermits6e gets a reference to the given bool and assigns it to the Permits6e field.
func (o *InlineResponse20097RegulatoryDomain) SetPermits6e(v bool) {
	o.Permits6e = &v
}

func (o InlineResponse20097RegulatoryDomain) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.Permits6e) {
		toSerialize["permits6e"] = o.Permits6e
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20097RegulatoryDomain struct {
	value *InlineResponse20097RegulatoryDomain
	isSet bool
}

func (v NullableInlineResponse20097RegulatoryDomain) Get() *InlineResponse20097RegulatoryDomain {
	return v.value
}

func (v *NullableInlineResponse20097RegulatoryDomain) Set(val *InlineResponse20097RegulatoryDomain) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20097RegulatoryDomain) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20097RegulatoryDomain) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20097RegulatoryDomain(val *InlineResponse20097RegulatoryDomain) *NullableInlineResponse20097RegulatoryDomain {
	return &NullableInlineResponse20097RegulatoryDomain{value: val, isSet: true}
}

func (v NullableInlineResponse20097RegulatoryDomain) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20097RegulatoryDomain) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


