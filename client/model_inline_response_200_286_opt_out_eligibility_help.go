/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 02 July, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.60.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200286OptOutEligibilityHelp Additional help information
type InlineResponse200286OptOutEligibilityHelp struct {
	// Help link label
	Label *string `json:"label,omitempty"`
	// Help link url
	Url *string `json:"url,omitempty"`
}

// NewInlineResponse200286OptOutEligibilityHelp instantiates a new InlineResponse200286OptOutEligibilityHelp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200286OptOutEligibilityHelp() *InlineResponse200286OptOutEligibilityHelp {
	this := InlineResponse200286OptOutEligibilityHelp{}
	return &this
}

// NewInlineResponse200286OptOutEligibilityHelpWithDefaults instantiates a new InlineResponse200286OptOutEligibilityHelp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200286OptOutEligibilityHelpWithDefaults() *InlineResponse200286OptOutEligibilityHelp {
	this := InlineResponse200286OptOutEligibilityHelp{}
	return &this
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *InlineResponse200286OptOutEligibilityHelp) GetLabel() string {
	if o == nil || isNil(o.Label) {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200286OptOutEligibilityHelp) GetLabelOk() (*string, bool) {
	if o == nil || isNil(o.Label) {
    return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *InlineResponse200286OptOutEligibilityHelp) HasLabel() bool {
	if o != nil && !isNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *InlineResponse200286OptOutEligibilityHelp) SetLabel(v string) {
	o.Label = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *InlineResponse200286OptOutEligibilityHelp) GetUrl() string {
	if o == nil || isNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200286OptOutEligibilityHelp) GetUrlOk() (*string, bool) {
	if o == nil || isNil(o.Url) {
    return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *InlineResponse200286OptOutEligibilityHelp) HasUrl() bool {
	if o != nil && !isNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *InlineResponse200286OptOutEligibilityHelp) SetUrl(v string) {
	o.Url = &v
}

func (o InlineResponse200286OptOutEligibilityHelp) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Label) {
		toSerialize["label"] = o.Label
	}
	if !isNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200286OptOutEligibilityHelp struct {
	value *InlineResponse200286OptOutEligibilityHelp
	isSet bool
}

func (v NullableInlineResponse200286OptOutEligibilityHelp) Get() *InlineResponse200286OptOutEligibilityHelp {
	return v.value
}

func (v *NullableInlineResponse200286OptOutEligibilityHelp) Set(val *InlineResponse200286OptOutEligibilityHelp) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200286OptOutEligibilityHelp) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200286OptOutEligibilityHelp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200286OptOutEligibilityHelp(val *InlineResponse200286OptOutEligibilityHelp) *NullableInlineResponse200286OptOutEligibilityHelp {
	return &NullableInlineResponse200286OptOutEligibilityHelp{value: val, isSet: true}
}

func (v NullableInlineResponse200286OptOutEligibilityHelp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200286OptOutEligibilityHelp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


