/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 February, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.55.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200234Meta Metadata about the response
type InlineResponse200234Meta struct {
	Counts InlineResponse200234MetaCounts `json:"counts"`
}

// NewInlineResponse200234Meta instantiates a new InlineResponse200234Meta object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200234Meta(counts InlineResponse200234MetaCounts) *InlineResponse200234Meta {
	this := InlineResponse200234Meta{}
	this.Counts = counts
	return &this
}

// NewInlineResponse200234MetaWithDefaults instantiates a new InlineResponse200234Meta object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200234MetaWithDefaults() *InlineResponse200234Meta {
	this := InlineResponse200234Meta{}
	return &this
}

// GetCounts returns the Counts field value
func (o *InlineResponse200234Meta) GetCounts() InlineResponse200234MetaCounts {
	if o == nil {
		var ret InlineResponse200234MetaCounts
		return ret
	}

	return o.Counts
}

// GetCountsOk returns a tuple with the Counts field value
// and a boolean to check if the value has been set.
func (o *InlineResponse200234Meta) GetCountsOk() (*InlineResponse200234MetaCounts, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Counts, true
}

// SetCounts sets field value
func (o *InlineResponse200234Meta) SetCounts(v InlineResponse200234MetaCounts) {
	o.Counts = v
}

func (o InlineResponse200234Meta) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["counts"] = o.Counts
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200234Meta struct {
	value *InlineResponse200234Meta
	isSet bool
}

func (v NullableInlineResponse200234Meta) Get() *InlineResponse200234Meta {
	return v.value
}

func (v *NullableInlineResponse200234Meta) Set(val *InlineResponse200234Meta) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200234Meta) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200234Meta) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200234Meta(val *InlineResponse200234Meta) *NullableInlineResponse200234Meta {
	return &NullableInlineResponse200234Meta{value: val, isSet: true}
}

func (v NullableInlineResponse200234Meta) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200234Meta) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


