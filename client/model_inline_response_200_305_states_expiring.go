/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 06 August, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.61.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse200305StatesExpiring Data for expiring licenses
type InlineResponse200305StatesExpiring struct {
	// The number of expiring licenses
	Count *int32 `json:"count,omitempty"`
	Critical *InlineResponse200305StatesExpiringCritical `json:"critical,omitempty"`
	Warning *InlineResponse200305StatesExpiringWarning `json:"warning,omitempty"`
}

// NewInlineResponse200305StatesExpiring instantiates a new InlineResponse200305StatesExpiring object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200305StatesExpiring() *InlineResponse200305StatesExpiring {
	this := InlineResponse200305StatesExpiring{}
	return &this
}

// NewInlineResponse200305StatesExpiringWithDefaults instantiates a new InlineResponse200305StatesExpiring object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200305StatesExpiringWithDefaults() *InlineResponse200305StatesExpiring {
	this := InlineResponse200305StatesExpiring{}
	return &this
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *InlineResponse200305StatesExpiring) GetCount() int32 {
	if o == nil || isNil(o.Count) {
		var ret int32
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200305StatesExpiring) GetCountOk() (*int32, bool) {
	if o == nil || isNil(o.Count) {
    return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *InlineResponse200305StatesExpiring) HasCount() bool {
	if o != nil && !isNil(o.Count) {
		return true
	}

	return false
}

// SetCount gets a reference to the given int32 and assigns it to the Count field.
func (o *InlineResponse200305StatesExpiring) SetCount(v int32) {
	o.Count = &v
}

// GetCritical returns the Critical field value if set, zero value otherwise.
func (o *InlineResponse200305StatesExpiring) GetCritical() InlineResponse200305StatesExpiringCritical {
	if o == nil || isNil(o.Critical) {
		var ret InlineResponse200305StatesExpiringCritical
		return ret
	}
	return *o.Critical
}

// GetCriticalOk returns a tuple with the Critical field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200305StatesExpiring) GetCriticalOk() (*InlineResponse200305StatesExpiringCritical, bool) {
	if o == nil || isNil(o.Critical) {
    return nil, false
	}
	return o.Critical, true
}

// HasCritical returns a boolean if a field has been set.
func (o *InlineResponse200305StatesExpiring) HasCritical() bool {
	if o != nil && !isNil(o.Critical) {
		return true
	}

	return false
}

// SetCritical gets a reference to the given InlineResponse200305StatesExpiringCritical and assigns it to the Critical field.
func (o *InlineResponse200305StatesExpiring) SetCritical(v InlineResponse200305StatesExpiringCritical) {
	o.Critical = &v
}

// GetWarning returns the Warning field value if set, zero value otherwise.
func (o *InlineResponse200305StatesExpiring) GetWarning() InlineResponse200305StatesExpiringWarning {
	if o == nil || isNil(o.Warning) {
		var ret InlineResponse200305StatesExpiringWarning
		return ret
	}
	return *o.Warning
}

// GetWarningOk returns a tuple with the Warning field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200305StatesExpiring) GetWarningOk() (*InlineResponse200305StatesExpiringWarning, bool) {
	if o == nil || isNil(o.Warning) {
    return nil, false
	}
	return o.Warning, true
}

// HasWarning returns a boolean if a field has been set.
func (o *InlineResponse200305StatesExpiring) HasWarning() bool {
	if o != nil && !isNil(o.Warning) {
		return true
	}

	return false
}

// SetWarning gets a reference to the given InlineResponse200305StatesExpiringWarning and assigns it to the Warning field.
func (o *InlineResponse200305StatesExpiring) SetWarning(v InlineResponse200305StatesExpiringWarning) {
	o.Warning = &v
}

func (o InlineResponse200305StatesExpiring) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Count) {
		toSerialize["count"] = o.Count
	}
	if !isNil(o.Critical) {
		toSerialize["critical"] = o.Critical
	}
	if !isNil(o.Warning) {
		toSerialize["warning"] = o.Warning
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200305StatesExpiring struct {
	value *InlineResponse200305StatesExpiring
	isSet bool
}

func (v NullableInlineResponse200305StatesExpiring) Get() *InlineResponse200305StatesExpiring {
	return v.value
}

func (v *NullableInlineResponse200305StatesExpiring) Set(val *InlineResponse200305StatesExpiring) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200305StatesExpiring) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200305StatesExpiring) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200305StatesExpiring(val *InlineResponse200305StatesExpiring) *NullableInlineResponse200305StatesExpiring {
	return &NullableInlineResponse200305StatesExpiring{value: val, isSet: true}
}

func (v NullableInlineResponse200305StatesExpiring) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200305StatesExpiring) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


