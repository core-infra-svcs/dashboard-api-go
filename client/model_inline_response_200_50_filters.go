/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 07 May, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.58.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// InlineResponse20050Filters A hash of specific configuration data for the alert. Only filters specific to the alert will be updated.
type InlineResponse20050Filters struct {
	// Conditions
	Conditions []InlineResponse20050FiltersConditions `json:"conditions,omitempty"`
	// Failure Type
	FailureType *string `json:"failureType,omitempty"`
	// Loopback Window (in sec)
	LookbackWindow *int32 `json:"lookbackWindow,omitempty"`
	// Min Duration
	MinDuration *int32 `json:"minDuration,omitempty"`
	// Name
	Name *string `json:"name,omitempty"`
	// Period
	Period *int32 `json:"period,omitempty"`
	// Priority
	Priority *string `json:"priority,omitempty"`
	// Regex
	Regex *string `json:"regex,omitempty"`
	// Selector
	Selector *string `json:"selector,omitempty"`
	// Serials
	Serials []string `json:"serials,omitempty"`
	// SSID Number
	SsidNum *int32 `json:"ssidNum,omitempty"`
	// Tag
	Tag *string `json:"tag,omitempty"`
	// Threshold
	Threshold *int32 `json:"threshold,omitempty"`
	// Timeout
	Timeout *int32 `json:"timeout,omitempty"`
}

// NewInlineResponse20050Filters instantiates a new InlineResponse20050Filters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20050Filters() *InlineResponse20050Filters {
	this := InlineResponse20050Filters{}
	return &this
}

// NewInlineResponse20050FiltersWithDefaults instantiates a new InlineResponse20050Filters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20050FiltersWithDefaults() *InlineResponse20050Filters {
	this := InlineResponse20050Filters{}
	return &this
}

// GetConditions returns the Conditions field value if set, zero value otherwise.
func (o *InlineResponse20050Filters) GetConditions() []InlineResponse20050FiltersConditions {
	if o == nil || isNil(o.Conditions) {
		var ret []InlineResponse20050FiltersConditions
		return ret
	}
	return o.Conditions
}

// GetConditionsOk returns a tuple with the Conditions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20050Filters) GetConditionsOk() ([]InlineResponse20050FiltersConditions, bool) {
	if o == nil || isNil(o.Conditions) {
    return nil, false
	}
	return o.Conditions, true
}

// HasConditions returns a boolean if a field has been set.
func (o *InlineResponse20050Filters) HasConditions() bool {
	if o != nil && !isNil(o.Conditions) {
		return true
	}

	return false
}

// SetConditions gets a reference to the given []InlineResponse20050FiltersConditions and assigns it to the Conditions field.
func (o *InlineResponse20050Filters) SetConditions(v []InlineResponse20050FiltersConditions) {
	o.Conditions = v
}

// GetFailureType returns the FailureType field value if set, zero value otherwise.
func (o *InlineResponse20050Filters) GetFailureType() string {
	if o == nil || isNil(o.FailureType) {
		var ret string
		return ret
	}
	return *o.FailureType
}

// GetFailureTypeOk returns a tuple with the FailureType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20050Filters) GetFailureTypeOk() (*string, bool) {
	if o == nil || isNil(o.FailureType) {
    return nil, false
	}
	return o.FailureType, true
}

// HasFailureType returns a boolean if a field has been set.
func (o *InlineResponse20050Filters) HasFailureType() bool {
	if o != nil && !isNil(o.FailureType) {
		return true
	}

	return false
}

// SetFailureType gets a reference to the given string and assigns it to the FailureType field.
func (o *InlineResponse20050Filters) SetFailureType(v string) {
	o.FailureType = &v
}

// GetLookbackWindow returns the LookbackWindow field value if set, zero value otherwise.
func (o *InlineResponse20050Filters) GetLookbackWindow() int32 {
	if o == nil || isNil(o.LookbackWindow) {
		var ret int32
		return ret
	}
	return *o.LookbackWindow
}

// GetLookbackWindowOk returns a tuple with the LookbackWindow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20050Filters) GetLookbackWindowOk() (*int32, bool) {
	if o == nil || isNil(o.LookbackWindow) {
    return nil, false
	}
	return o.LookbackWindow, true
}

// HasLookbackWindow returns a boolean if a field has been set.
func (o *InlineResponse20050Filters) HasLookbackWindow() bool {
	if o != nil && !isNil(o.LookbackWindow) {
		return true
	}

	return false
}

// SetLookbackWindow gets a reference to the given int32 and assigns it to the LookbackWindow field.
func (o *InlineResponse20050Filters) SetLookbackWindow(v int32) {
	o.LookbackWindow = &v
}

// GetMinDuration returns the MinDuration field value if set, zero value otherwise.
func (o *InlineResponse20050Filters) GetMinDuration() int32 {
	if o == nil || isNil(o.MinDuration) {
		var ret int32
		return ret
	}
	return *o.MinDuration
}

// GetMinDurationOk returns a tuple with the MinDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20050Filters) GetMinDurationOk() (*int32, bool) {
	if o == nil || isNil(o.MinDuration) {
    return nil, false
	}
	return o.MinDuration, true
}

// HasMinDuration returns a boolean if a field has been set.
func (o *InlineResponse20050Filters) HasMinDuration() bool {
	if o != nil && !isNil(o.MinDuration) {
		return true
	}

	return false
}

// SetMinDuration gets a reference to the given int32 and assigns it to the MinDuration field.
func (o *InlineResponse20050Filters) SetMinDuration(v int32) {
	o.MinDuration = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *InlineResponse20050Filters) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20050Filters) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
    return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *InlineResponse20050Filters) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *InlineResponse20050Filters) SetName(v string) {
	o.Name = &v
}

// GetPeriod returns the Period field value if set, zero value otherwise.
func (o *InlineResponse20050Filters) GetPeriod() int32 {
	if o == nil || isNil(o.Period) {
		var ret int32
		return ret
	}
	return *o.Period
}

// GetPeriodOk returns a tuple with the Period field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20050Filters) GetPeriodOk() (*int32, bool) {
	if o == nil || isNil(o.Period) {
    return nil, false
	}
	return o.Period, true
}

// HasPeriod returns a boolean if a field has been set.
func (o *InlineResponse20050Filters) HasPeriod() bool {
	if o != nil && !isNil(o.Period) {
		return true
	}

	return false
}

// SetPeriod gets a reference to the given int32 and assigns it to the Period field.
func (o *InlineResponse20050Filters) SetPeriod(v int32) {
	o.Period = &v
}

// GetPriority returns the Priority field value if set, zero value otherwise.
func (o *InlineResponse20050Filters) GetPriority() string {
	if o == nil || isNil(o.Priority) {
		var ret string
		return ret
	}
	return *o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20050Filters) GetPriorityOk() (*string, bool) {
	if o == nil || isNil(o.Priority) {
    return nil, false
	}
	return o.Priority, true
}

// HasPriority returns a boolean if a field has been set.
func (o *InlineResponse20050Filters) HasPriority() bool {
	if o != nil && !isNil(o.Priority) {
		return true
	}

	return false
}

// SetPriority gets a reference to the given string and assigns it to the Priority field.
func (o *InlineResponse20050Filters) SetPriority(v string) {
	o.Priority = &v
}

// GetRegex returns the Regex field value if set, zero value otherwise.
func (o *InlineResponse20050Filters) GetRegex() string {
	if o == nil || isNil(o.Regex) {
		var ret string
		return ret
	}
	return *o.Regex
}

// GetRegexOk returns a tuple with the Regex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20050Filters) GetRegexOk() (*string, bool) {
	if o == nil || isNil(o.Regex) {
    return nil, false
	}
	return o.Regex, true
}

// HasRegex returns a boolean if a field has been set.
func (o *InlineResponse20050Filters) HasRegex() bool {
	if o != nil && !isNil(o.Regex) {
		return true
	}

	return false
}

// SetRegex gets a reference to the given string and assigns it to the Regex field.
func (o *InlineResponse20050Filters) SetRegex(v string) {
	o.Regex = &v
}

// GetSelector returns the Selector field value if set, zero value otherwise.
func (o *InlineResponse20050Filters) GetSelector() string {
	if o == nil || isNil(o.Selector) {
		var ret string
		return ret
	}
	return *o.Selector
}

// GetSelectorOk returns a tuple with the Selector field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20050Filters) GetSelectorOk() (*string, bool) {
	if o == nil || isNil(o.Selector) {
    return nil, false
	}
	return o.Selector, true
}

// HasSelector returns a boolean if a field has been set.
func (o *InlineResponse20050Filters) HasSelector() bool {
	if o != nil && !isNil(o.Selector) {
		return true
	}

	return false
}

// SetSelector gets a reference to the given string and assigns it to the Selector field.
func (o *InlineResponse20050Filters) SetSelector(v string) {
	o.Selector = &v
}

// GetSerials returns the Serials field value if set, zero value otherwise.
func (o *InlineResponse20050Filters) GetSerials() []string {
	if o == nil || isNil(o.Serials) {
		var ret []string
		return ret
	}
	return o.Serials
}

// GetSerialsOk returns a tuple with the Serials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20050Filters) GetSerialsOk() ([]string, bool) {
	if o == nil || isNil(o.Serials) {
    return nil, false
	}
	return o.Serials, true
}

// HasSerials returns a boolean if a field has been set.
func (o *InlineResponse20050Filters) HasSerials() bool {
	if o != nil && !isNil(o.Serials) {
		return true
	}

	return false
}

// SetSerials gets a reference to the given []string and assigns it to the Serials field.
func (o *InlineResponse20050Filters) SetSerials(v []string) {
	o.Serials = v
}

// GetSsidNum returns the SsidNum field value if set, zero value otherwise.
func (o *InlineResponse20050Filters) GetSsidNum() int32 {
	if o == nil || isNil(o.SsidNum) {
		var ret int32
		return ret
	}
	return *o.SsidNum
}

// GetSsidNumOk returns a tuple with the SsidNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20050Filters) GetSsidNumOk() (*int32, bool) {
	if o == nil || isNil(o.SsidNum) {
    return nil, false
	}
	return o.SsidNum, true
}

// HasSsidNum returns a boolean if a field has been set.
func (o *InlineResponse20050Filters) HasSsidNum() bool {
	if o != nil && !isNil(o.SsidNum) {
		return true
	}

	return false
}

// SetSsidNum gets a reference to the given int32 and assigns it to the SsidNum field.
func (o *InlineResponse20050Filters) SetSsidNum(v int32) {
	o.SsidNum = &v
}

// GetTag returns the Tag field value if set, zero value otherwise.
func (o *InlineResponse20050Filters) GetTag() string {
	if o == nil || isNil(o.Tag) {
		var ret string
		return ret
	}
	return *o.Tag
}

// GetTagOk returns a tuple with the Tag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20050Filters) GetTagOk() (*string, bool) {
	if o == nil || isNil(o.Tag) {
    return nil, false
	}
	return o.Tag, true
}

// HasTag returns a boolean if a field has been set.
func (o *InlineResponse20050Filters) HasTag() bool {
	if o != nil && !isNil(o.Tag) {
		return true
	}

	return false
}

// SetTag gets a reference to the given string and assigns it to the Tag field.
func (o *InlineResponse20050Filters) SetTag(v string) {
	o.Tag = &v
}

// GetThreshold returns the Threshold field value if set, zero value otherwise.
func (o *InlineResponse20050Filters) GetThreshold() int32 {
	if o == nil || isNil(o.Threshold) {
		var ret int32
		return ret
	}
	return *o.Threshold
}

// GetThresholdOk returns a tuple with the Threshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20050Filters) GetThresholdOk() (*int32, bool) {
	if o == nil || isNil(o.Threshold) {
    return nil, false
	}
	return o.Threshold, true
}

// HasThreshold returns a boolean if a field has been set.
func (o *InlineResponse20050Filters) HasThreshold() bool {
	if o != nil && !isNil(o.Threshold) {
		return true
	}

	return false
}

// SetThreshold gets a reference to the given int32 and assigns it to the Threshold field.
func (o *InlineResponse20050Filters) SetThreshold(v int32) {
	o.Threshold = &v
}

// GetTimeout returns the Timeout field value if set, zero value otherwise.
func (o *InlineResponse20050Filters) GetTimeout() int32 {
	if o == nil || isNil(o.Timeout) {
		var ret int32
		return ret
	}
	return *o.Timeout
}

// GetTimeoutOk returns a tuple with the Timeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20050Filters) GetTimeoutOk() (*int32, bool) {
	if o == nil || isNil(o.Timeout) {
    return nil, false
	}
	return o.Timeout, true
}

// HasTimeout returns a boolean if a field has been set.
func (o *InlineResponse20050Filters) HasTimeout() bool {
	if o != nil && !isNil(o.Timeout) {
		return true
	}

	return false
}

// SetTimeout gets a reference to the given int32 and assigns it to the Timeout field.
func (o *InlineResponse20050Filters) SetTimeout(v int32) {
	o.Timeout = &v
}

func (o InlineResponse20050Filters) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Conditions) {
		toSerialize["conditions"] = o.Conditions
	}
	if !isNil(o.FailureType) {
		toSerialize["failureType"] = o.FailureType
	}
	if !isNil(o.LookbackWindow) {
		toSerialize["lookbackWindow"] = o.LookbackWindow
	}
	if !isNil(o.MinDuration) {
		toSerialize["minDuration"] = o.MinDuration
	}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.Period) {
		toSerialize["period"] = o.Period
	}
	if !isNil(o.Priority) {
		toSerialize["priority"] = o.Priority
	}
	if !isNil(o.Regex) {
		toSerialize["regex"] = o.Regex
	}
	if !isNil(o.Selector) {
		toSerialize["selector"] = o.Selector
	}
	if !isNil(o.Serials) {
		toSerialize["serials"] = o.Serials
	}
	if !isNil(o.SsidNum) {
		toSerialize["ssidNum"] = o.SsidNum
	}
	if !isNil(o.Tag) {
		toSerialize["tag"] = o.Tag
	}
	if !isNil(o.Threshold) {
		toSerialize["threshold"] = o.Threshold
	}
	if !isNil(o.Timeout) {
		toSerialize["timeout"] = o.Timeout
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20050Filters struct {
	value *InlineResponse20050Filters
	isSet bool
}

func (v NullableInlineResponse20050Filters) Get() *InlineResponse20050Filters {
	return v.value
}

func (v *NullableInlineResponse20050Filters) Set(val *InlineResponse20050Filters) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20050Filters) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20050Filters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20050Filters(val *InlineResponse20050Filters) *NullableInlineResponse20050Filters {
	return &NullableInlineResponse20050Filters{value: val, isSet: true}
}

func (v NullableInlineResponse20050Filters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20050Filters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


